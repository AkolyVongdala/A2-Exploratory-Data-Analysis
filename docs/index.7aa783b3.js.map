{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/object-assign/index.js","./node_modules/react/cjs/react.production.min.js","./node_modules/scheduler/cjs/scheduler.production.min.js","./node_modules/react-dom/cjs/react-dom.production.min.js","./node_modules/react-dom/index.js","./node_modules/d3-dsv/src/dsv.js","./node_modules/d3-dsv/src/csv.js","./node_modules/d3-dsv/src/tsv.js","./node_modules/d3-fetch/src/text.js","./node_modules/d3-fetch/src/dsv.js","./src/hooks/useFetch.js","./node_modules/d3-array/src/ascending.js","./node_modules/d3-array/src/bisector.js","./node_modules/d3-array/src/number.js","./node_modules/d3-array/src/bisect.js","./node_modules/d3-array/src/extent.js","./node_modules/d3-array/src/fsum.js","./node_modules/d3-array/src/array.js","./node_modules/d3-array/src/constant.js","./node_modules/d3-array/src/identity.js","./node_modules/d3-array/src/ticks.js","./node_modules/d3-array/src/threshold/sturges.js","./node_modules/d3-array/src/count.js","./node_modules/d3-array/src/bin.js","./node_modules/d3-array/src/nice.js","./node_modules/d3-array/src/max.js","./node_modules/d3-array/src/min.js","./node_modules/d3-array/src/quickselect.js","./node_modules/d3-array/src/quantile.js","./node_modules/d3-array/src/median.js","./node_modules/d3-array/src/merge.js","./node_modules/d3-array/src/range.js","./node_modules/d3-array/src/sum.js","./node_modules/d3-color/src/define.js","./node_modules/d3-color/src/color.js","./node_modules/d3-color/src/math.js","./node_modules/d3-color/src/lab.js","./node_modules/d3-color/src/cubehelix.js","./node_modules/d3-interpolate/src/basis.js","./node_modules/d3-interpolate/src/basisClosed.js","./node_modules/d3-interpolate/src/constant.js","./node_modules/d3-interpolate/src/color.js","./node_modules/d3-interpolate/src/rgb.js","./node_modules/d3-interpolate/src/numberArray.js","./node_modules/d3-interpolate/src/array.js","./node_modules/d3-interpolate/src/date.js","./node_modules/d3-interpolate/src/number.js","./node_modules/d3-interpolate/src/object.js","./node_modules/d3-interpolate/src/string.js","./node_modules/d3-interpolate/src/transform/parse.js","./node_modules/d3-interpolate/src/value.js","./node_modules/d3-interpolate/src/discrete.js","./node_modules/d3-interpolate/src/hue.js","./node_modules/d3-interpolate/src/round.js","./node_modules/d3-interpolate/src/transform/decompose.js","./node_modules/d3-interpolate/src/transform/index.js","./node_modules/d3-interpolate/src/zoom.js","./node_modules/d3-interpolate/src/hsl.js","./node_modules/d3-interpolate/src/lab.js","./node_modules/d3-interpolate/src/hcl.js","./node_modules/d3-interpolate/src/cubehelix.js","./node_modules/d3-interpolate/src/piecewise.js","./node_modules/d3-interpolate/src/quantize.js","./node_modules/d3-scale/src/number.js","./node_modules/d3-scale/src/continuous.js","./node_modules/d3-scale/src/constant.js","./node_modules/d3-scale/src/init.js","./node_modules/d3-format/src/formatDecimal.js","./node_modules/d3-format/src/exponent.js","./node_modules/d3-format/src/formatSpecifier.js","./node_modules/d3-format/src/formatPrefixAuto.js","./node_modules/d3-format/src/defaultLocale.js","./node_modules/d3-format/src/formatRounded.js","./node_modules/d3-format/src/formatTypes.js","./node_modules/d3-format/src/identity.js","./node_modules/d3-format/src/locale.js","./node_modules/d3-format/src/formatGroup.js","./node_modules/d3-format/src/formatNumerals.js","./node_modules/d3-format/src/formatTrim.js","./node_modules/d3-format/src/precisionFixed.js","./node_modules/d3-format/src/precisionPrefix.js","./node_modules/d3-format/src/precisionRound.js","./node_modules/d3-scale/src/tickFormat.js","./node_modules/d3-scale/src/linear.js","./node_modules/d3-scale/src/nice.js","./node_modules/d3-scale/src/log.js","./node_modules/d3-scale/src/symlog.js","./node_modules/d3-scale/src/ordinal.js","./node_modules/d3-scale/src/pow.js","./node_modules/d3-time/src/interval.js","./node_modules/d3-time/src/millisecond.js","./node_modules/d3-time/src/duration.js","./node_modules/d3-time/src/second.js","./node_modules/d3-time/src/minute.js","./node_modules/d3-time/src/hour.js","./node_modules/d3-time/src/day.js","./node_modules/d3-time/src/week.js","./node_modules/d3-time/src/month.js","./node_modules/d3-time/src/year.js","./node_modules/d3-time/src/utcMinute.js","./node_modules/d3-time/src/utcHour.js","./node_modules/d3-time/src/utcDay.js","./node_modules/d3-time/src/utcWeek.js","./node_modules/d3-time/src/utcMonth.js","./node_modules/d3-time/src/utcYear.js","./node_modules/d3-time/src/ticks.js","./node_modules/d3-time-format/src/locale.js","./node_modules/d3-time-format/src/defaultLocale.js","./node_modules/d3-scale/src/time.js","./node_modules/d3-scale/src/sequential.js","./node_modules/d3-scale/src/diverging.js","./node_modules/vega-util/build/vega-util.module.js","./node_modules/vega-loader/src/loader.js","./node_modules/vega-loader/src/type.js","./node_modules/vega-loader/src/formats/dsv.js","./node_modules/base64-js/index.js","./node_modules/ieee754/index.js","./node_modules/buffer/index.js","./node_modules/vega-loader/src/formats/json.js","./node_modules/topojson-client/src/identity.js","./node_modules/topojson-client/src/transform.js","./node_modules/topojson-client/src/feature.js","./node_modules/topojson-client/src/reverse.js","./node_modules/topojson-client/src/stitch.js","./node_modules/topojson-client/src/mesh.js","./node_modules/vega-loader/src/formats/topojson.js","./node_modules/vega-loader/src/formats/index.js","./node_modules/vega-time/build/vega-time.module.js","./node_modules/vega-format/build/vega-format.module.js","./node_modules/vega-loader/src/read.js","./node_modules/vega-loader/index.browser.js","./node_modules/vega-dataflow/build/vega-dataflow.module.js","./node_modules/vega-statistics/build/vega-statistics.module.js","./node_modules/d3-array/src/deviation.js","./node_modules/d3-array/src/variance.js","./node_modules/vega-transforms/build/vega-transforms.module.js","./node_modules/d3-array/src/mean.js","./node_modules/d3-path/src/path.js","./node_modules/d3-shape/src/constant.js","./node_modules/d3-shape/src/math.js","./node_modules/d3-shape/src/arc.js","./node_modules/d3-shape/src/array.js","./node_modules/d3-shape/src/curve/linear.js","./node_modules/d3-shape/src/point.js","./node_modules/d3-shape/src/line.js","./node_modules/d3-shape/src/area.js","./node_modules/d3-shape/src/symbol/circle.js","./node_modules/d3-shape/src/symbol/star.js","./node_modules/d3-shape/src/symbol/diamond.js","./node_modules/d3-shape/src/symbol/triangle.js","./node_modules/d3-shape/src/symbol/wye.js","./node_modules/d3-shape/src/noop.js","./node_modules/d3-shape/src/curve/basis.js","./node_modules/d3-shape/src/curve/basisClosed.js","./node_modules/d3-shape/src/curve/basisOpen.js","./node_modules/d3-shape/src/curve/bundle.js","./node_modules/d3-shape/src/curve/cardinal.js","./node_modules/d3-shape/src/curve/cardinalClosed.js","./node_modules/d3-shape/src/curve/cardinalOpen.js","./node_modules/d3-shape/src/curve/catmullRom.js","./node_modules/d3-shape/src/curve/catmullRomClosed.js","./node_modules/d3-shape/src/curve/catmullRomOpen.js","./node_modules/d3-shape/src/curve/linearClosed.js","./node_modules/d3-shape/src/curve/monotone.js","./node_modules/d3-shape/src/curve/natural.js","./node_modules/d3-shape/src/curve/step.js","./node_modules/vega-canvas/src/domCanvas.js","./node_modules/vega-scale/build/vega-scale.module.js","./node_modules/d3-scale/src/identity.js","./node_modules/d3-scale/src/utcTime.js","./node_modules/d3-scale/src/quantile.js","./node_modules/d3-scale/src/quantize.js","./node_modules/d3-scale/src/threshold.js","./node_modules/vega-scenegraph/build/vega-scenegraph.module.js","./node_modules/d3-shape/src/symbol.js","./node_modules/vega-view-transforms/build/vega-view-transforms.module.js","./node_modules/vega-encode/build/vega-encode.module.js","./node_modules/d3-geo/src/math.js","./node_modules/d3-geo/src/noop.js","./node_modules/d3-geo/src/stream.js","./node_modules/d3-geo/src/area.js","./node_modules/d3-geo/src/bounds.js","./node_modules/d3-geo/src/cartesian.js","./node_modules/d3-geo/src/centroid.js","./node_modules/d3-geo/src/graticule.js","./node_modules/d3-geo/src/path/area.js","./node_modules/d3-geo/src/identity.js","./node_modules/d3-geo/src/path/bounds.js","./node_modules/d3-geo/src/path/centroid.js","./node_modules/d3-geo/src/path/context.js","./node_modules/d3-geo/src/path/measure.js","./node_modules/d3-geo/src/path/string.js","./node_modules/d3-geo/src/path/index.js","./node_modules/d3-geo/src/clip/buffer.js","./node_modules/d3-geo/src/pointEqual.js","./node_modules/d3-geo/src/clip/rejoin.js","./node_modules/d3-geo/src/polygonContains.js","./node_modules/d3-geo/src/clip/index.js","./node_modules/d3-geo/src/clip/antimeridian.js","./node_modules/d3-geo/src/compose.js","./node_modules/d3-geo/src/rotation.js","./node_modules/d3-geo/src/circle.js","./node_modules/d3-geo/src/clip/circle.js","./node_modules/d3-geo/src/clip/rectangle.js","./node_modules/d3-geo/src/clip/line.js","./node_modules/d3-geo/src/transform.js","./node_modules/d3-geo/src/projection/fit.js","./node_modules/d3-geo/src/projection/resample.js","./node_modules/d3-geo/src/projection/index.js","./node_modules/d3-geo/src/projection/conic.js","./node_modules/d3-geo/src/projection/conicEqualArea.js","./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","./node_modules/d3-geo/src/projection/albers.js","./node_modules/d3-geo/src/projection/azimuthal.js","./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","./node_modules/d3-geo/src/projection/mercator.js","./node_modules/d3-geo/src/projection/conicConformal.js","./node_modules/d3-geo/src/projection/equirectangular.js","./node_modules/d3-geo/src/projection/conicEquidistant.js","./node_modules/d3-geo/src/projection/equalEarth.js","./node_modules/d3-geo/src/projection/gnomonic.js","./node_modules/d3-geo/src/projection/naturalEarth1.js","./node_modules/d3-geo/src/projection/orthographic.js","./node_modules/d3-geo/src/projection/stereographic.js","./node_modules/d3-geo/src/projection/transverseMercator.js","./node_modules/d3-geo-projection/src/math.js","./node_modules/d3-geo-projection/src/mollweide.js","./node_modules/vega-projection/build/vega-projection.module.js","./node_modules/d3-geo/src/projection/albersUsa.js","./node_modules/d3-geo/src/projection/identity.js","./node_modules/vega-geo/build/vega-geo.module.js","./node_modules/d3-quadtree/src/add.js","./node_modules/d3-quadtree/src/quad.js","./node_modules/d3-quadtree/src/x.js","./node_modules/d3-quadtree/src/y.js","./node_modules/d3-quadtree/src/quadtree.js","./node_modules/d3-quadtree/src/cover.js","./node_modules/d3-quadtree/src/data.js","./node_modules/d3-quadtree/src/extent.js","./node_modules/d3-quadtree/src/find.js","./node_modules/d3-quadtree/src/remove.js","./node_modules/d3-quadtree/src/root.js","./node_modules/d3-quadtree/src/size.js","./node_modules/d3-quadtree/src/visit.js","./node_modules/d3-quadtree/src/visitAfter.js","./node_modules/d3-force/src/constant.js","./node_modules/d3-force/src/jiggle.js","./node_modules/d3-force/src/collide.js","./node_modules/d3-force/src/link.js","./node_modules/d3-dispatch/src/dispatch.js","./node_modules/d3-timer/src/timer.js","./node_modules/d3-force/src/lcg.js","./node_modules/d3-force/src/simulation.js","./node_modules/vega-force/build/vega-force.module.js","./node_modules/d3-force/src/center.js","./node_modules/d3-force/src/manyBody.js","./node_modules/d3-force/src/x.js","./node_modules/d3-force/src/y.js","./node_modules/d3-hierarchy/src/cluster.js","./node_modules/d3-hierarchy/src/hierarchy/count.js","./node_modules/d3-hierarchy/src/hierarchy/index.js","./node_modules/d3-hierarchy/src/hierarchy/each.js","./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","./node_modules/d3-hierarchy/src/hierarchy/find.js","./node_modules/d3-hierarchy/src/hierarchy/sum.js","./node_modules/d3-hierarchy/src/hierarchy/sort.js","./node_modules/d3-hierarchy/src/hierarchy/path.js","./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","./node_modules/d3-hierarchy/src/hierarchy/descendants.js","./node_modules/d3-hierarchy/src/hierarchy/leaves.js","./node_modules/d3-hierarchy/src/hierarchy/links.js","./node_modules/d3-hierarchy/src/hierarchy/iterator.js","./node_modules/d3-hierarchy/src/pack/enclose.js","./node_modules/d3-hierarchy/src/array.js","./node_modules/d3-hierarchy/src/pack/siblings.js","./node_modules/d3-hierarchy/src/accessors.js","./node_modules/d3-hierarchy/src/constant.js","./node_modules/d3-hierarchy/src/pack/index.js","./node_modules/d3-hierarchy/src/treemap/round.js","./node_modules/d3-hierarchy/src/treemap/dice.js","./node_modules/d3-hierarchy/src/stratify.js","./node_modules/d3-hierarchy/src/tree.js","./node_modules/d3-hierarchy/src/treemap/slice.js","./node_modules/d3-hierarchy/src/treemap/squarify.js","./node_modules/d3-hierarchy/src/treemap/resquarify.js","./node_modules/vega-hierarchy/build/vega-hierarchy.module.js","./node_modules/d3-hierarchy/src/partition.js","./node_modules/d3-hierarchy/src/treemap/binary.js","./node_modules/d3-hierarchy/src/treemap/sliceDice.js","./node_modules/d3-hierarchy/src/treemap/index.js","./node_modules/vega-label/build/vega-label.module.js","./node_modules/vega-regression/build/vega-regression.module.js","./node_modules/delaunator/index.js","./node_modules/d3-delaunay/src/path.js","./node_modules/d3-delaunay/src/polygon.js","./node_modules/d3-delaunay/src/voronoi.js","./node_modules/d3-delaunay/src/delaunay.js","./node_modules/vega-voronoi/build/vega-voronoi.module.js","./node_modules/vega-wordcloud/build/vega-wordcloud.module.js","./node_modules/vega-crossfilter/build/vega-crossfilter.module.js","./node_modules/d3-array/src/permute.js","./node_modules/vega-expression/build/vega-expression.module.js","./node_modules/vega-selections/build/vega-selection.module.js","./node_modules/vega-functions/build/vega-functions.module.js","./node_modules/vega-runtime/build/vega-runtime.module.js","./node_modules/vega-view/build/vega-view.module.js","./node_modules/d3-timer/src/interval.js","./node_modules/vega-event-selector/build/vega-event-selector.module.js","./node_modules/vega-parser/build/vega-parser.module.js","./land-50m.json","./src/App.js","./src/index.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","// hooks.js\nimport { csv } from \"d3-fetch\";\nimport { useState, useEffect } from \"react\";\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  async function fetchUrl() {\n    const response = await csv(url);\n    setData(response);\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n};\nexport { useFetch };","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks, {tickIncrement} from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain’s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don’t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import {tickIncrement} from \"./ticks.js\";\n\nexport default function nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color.js\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","export default function nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export const durationSecond = 1000;\nexport const durationMinute = durationSecond * 60;\nexport const durationHour = durationMinute * 60;\nexport const durationDay = durationHour * 24;\nexport const durationWeek = durationDay * 7;\nexport const durationMonth = durationDay * 30;\nexport const durationYear = durationDay * 365;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {bisector, tickStep} from \"d3-array\";\nimport {durationDay, durationHour, durationMinute, durationMonth, durationSecond, durationWeek, durationYear} from \"./duration.js\";\nimport millisecond from \"./millisecond.js\";\nimport second from \"./second.js\";\nimport minute from \"./minute.js\";\nimport hour from \"./hour.js\";\nimport day from \"./day.js\";\nimport {sunday as week} from \"./week.js\";\nimport month from \"./month.js\";\nimport year from \"./year.js\";\nimport utcMinute from \"./utcMinute.js\";\nimport utcHour from \"./utcHour.js\";\nimport utcDay from \"./utcDay.js\";\nimport {utcSunday as utcWeek} from \"./utcWeek.js\";\nimport utcMonth from \"./utcMonth.js\";\nimport utcYear from \"./utcYear.js\";\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, week, day, hour, minute);\n\nexport {utcTicks, utcTickInterval, timeTicks, timeTickInterval};\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeTicks, timeTickInterval} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nexport default function time() {\n  return initRange.apply(calendar(timeTicks, timeTickInterval, timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","function accessor (fn, fields, name) {\n  fn.fields = fields || [];\n  fn.fname = name;\n  return fn;\n}\nfunction accessorName(fn) {\n  return fn == null ? null : fn.fname;\n}\nfunction accessorFields(fn) {\n  return fn == null ? null : fn.fields;\n}\n\nfunction getter (path) {\n  return path.length === 1 ? get1(path[0]) : getN(path);\n}\n\nconst get1 = field => function (obj) {\n  return obj[field];\n};\n\nconst getN = path => {\n  const len = path.length;\n  return function (obj) {\n    for (let i = 0; i < len; ++i) {\n      obj = obj[path[i]];\n    }\n\n    return obj;\n  };\n};\n\nfunction error (message) {\n  throw Error(message);\n}\n\nfunction splitAccessPath (p) {\n  const path = [],\n        n = p.length;\n  let q = null,\n      b = 0,\n      s = '',\n      i,\n      j,\n      c;\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i = j = 0; j < n; ++j) {\n    c = p[j];\n\n    if (c === '\\\\') {\n      s += p.substring(i, j);\n      s += p.substring(++j, ++j);\n      i = j;\n    } else if (c === q) {\n      push();\n      q = null;\n      b = -1;\n    } else if (q) {\n      continue;\n    } else if (i === b && c === '\"') {\n      i = j + 1;\n      q = c;\n    } else if (i === b && c === \"'\") {\n      i = j + 1;\n      q = c;\n    } else if (c === '.' && !b) {\n      if (j > i) {\n        push();\n      } else {\n        i = j + 1;\n      }\n    } else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    } else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n\n  if (j > i) {\n    j++;\n    push();\n  }\n\n  return path;\n}\n\nfunction field (field, name, opt) {\n  const path = splitAccessPath(field);\n  field = path.length === 1 ? path[0] : field;\n  return accessor((opt && opt.get || getter)(path), [field], name || field);\n}\n\nconst id = field('id');\nconst identity = accessor(_ => _, [], 'identity');\nconst zero = accessor(() => 0, [], 'zero');\nconst one = accessor(() => 1, [], 'one');\nconst truthy = accessor(() => true, [], 'true');\nconst falsy = accessor(() => false, [], 'false');\n\nfunction log$1(method, level, input) {\n  const args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nconst None = 0;\nconst Error$1 = 1;\nconst Warn = 2;\nconst Info = 3;\nconst Debug = 4;\nfunction logger (_, method) {\n  let level = _ || None;\n  return {\n    level(_) {\n      if (arguments.length) {\n        level = +_;\n        return this;\n      } else {\n        return level;\n      }\n    },\n\n    error() {\n      if (level >= Error$1) log$1(method || 'error', 'ERROR', arguments);\n      return this;\n    },\n\n    warn() {\n      if (level >= Warn) log$1(method || 'warn', 'WARN', arguments);\n      return this;\n    },\n\n    info() {\n      if (level >= Info) log$1(method || 'log', 'INFO', arguments);\n      return this;\n    },\n\n    debug() {\n      if (level >= Debug) log$1(method || 'log', 'DEBUG', arguments);\n      return this;\n    }\n\n  };\n}\n\nvar isArray = Array.isArray;\n\nfunction isObject (_) {\n  return _ === Object(_);\n}\n\nconst isLegalKey = key => key !== '__proto__';\n\nfunction mergeConfig(...configs) {\n  return configs.reduce((out, source) => {\n    for (const key in source) {\n      if (key === 'signals') {\n        // for signals, we merge the signals arrays\n        // source signals take precedence over\n        // existing signals with the same name\n        out.signals = mergeNamed(out.signals, source.signals);\n      } else {\n        // otherwise, merge objects subject to recursion constraints\n        // for legend block, recurse for the layout entry only\n        // for style block, recurse for all properties\n        // otherwise, no recursion: objects overwrite, no merging\n        const r = key === 'legend' ? {\n          layout: 1\n        } : key === 'style' ? true : null;\n        writeConfig(out, key, source[key], r);\n      }\n    }\n\n    return out;\n  }, {});\n}\nfunction writeConfig(output, key, value, recurse) {\n  if (!isLegalKey(key)) return;\n  let k, o;\n\n  if (isObject(value) && !isArray(value)) {\n    o = isObject(output[key]) ? output[key] : output[key] = {};\n\n    for (k in value) {\n      if (recurse && (recurse === true || recurse[k])) {\n        writeConfig(o, k, value[k]);\n      } else if (isLegalKey(k)) {\n        o[k] = value[k];\n      }\n    }\n  } else {\n    output[key] = value;\n  }\n}\n\nfunction mergeNamed(a, b) {\n  if (a == null) return b;\n  const map = {},\n        out = [];\n\n  function add(_) {\n    if (!map[_.name]) {\n      map[_.name] = 1;\n      out.push(_);\n    }\n  }\n\n  b.forEach(add);\n  a.forEach(add);\n  return out;\n}\n\nfunction peek (array) {\n  return array[array.length - 1];\n}\n\nfunction toNumber (_) {\n  return _ == null || _ === '' ? null : +_;\n}\n\nconst exp = sign => x => sign * Math.exp(x);\n\nconst log = sign => x => Math.log(sign * x);\n\nconst symlog = c => x => Math.sign(x) * Math.log1p(Math.abs(x / c));\n\nconst symexp = c => x => Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n\nconst pow = exponent => x => x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\nfunction pan(domain, delta, lift, ground) {\n  const d0 = lift(domain[0]),\n        d1 = lift(peek(domain)),\n        dd = (d1 - d0) * delta;\n  return [ground(d0 - dd), ground(d1 - dd)];\n}\n\nfunction panLinear(domain, delta) {\n  return pan(domain, delta, toNumber, identity);\n}\nfunction panLog(domain, delta) {\n  var sign = Math.sign(domain[0]);\n  return pan(domain, delta, log(sign), exp(sign));\n}\nfunction panPow(domain, delta, exponent) {\n  return pan(domain, delta, pow(exponent), pow(1 / exponent));\n}\nfunction panSymlog(domain, delta, constant) {\n  return pan(domain, delta, symlog(constant), symexp(constant));\n}\n\nfunction zoom(domain, anchor, scale, lift, ground) {\n  const d0 = lift(domain[0]),\n        d1 = lift(peek(domain)),\n        da = anchor != null ? lift(anchor) : (d0 + d1) / 2;\n  return [ground(da + (d0 - da) * scale), ground(da + (d1 - da) * scale)];\n}\n\nfunction zoomLinear(domain, anchor, scale) {\n  return zoom(domain, anchor, scale, toNumber, identity);\n}\nfunction zoomLog(domain, anchor, scale) {\n  const sign = Math.sign(domain[0]);\n  return zoom(domain, anchor, scale, log(sign), exp(sign));\n}\nfunction zoomPow(domain, anchor, scale, exponent) {\n  return zoom(domain, anchor, scale, pow(exponent), pow(1 / exponent));\n}\nfunction zoomSymlog(domain, anchor, scale, constant) {\n  return zoom(domain, anchor, scale, symlog(constant), symexp(constant));\n}\n\nfunction quarter(date) {\n  return 1 + ~~(new Date(date).getMonth() / 3);\n}\nfunction utcquarter(date) {\n  return 1 + ~~(new Date(date).getUTCMonth() / 3);\n}\n\nfunction array (_) {\n  return _ != null ? isArray(_) ? _ : [_] : [];\n}\n\n/**\n * Span-preserving range clamp. If the span of the input range is less\n * than (max - min) and an endpoint exceeds either the min or max value,\n * the range is translated such that the span is preserved and one\n * endpoint touches the boundary of the min/max range.\n * If the span exceeds (max - min), the range [min, max] is returned.\n */\nfunction clampRange (range, min, max) {\n  let lo = range[0],\n      hi = range[1],\n      span;\n\n  if (hi < lo) {\n    span = hi;\n    hi = lo;\n    lo = span;\n  }\n\n  span = hi - lo;\n  return span >= max - min ? [min, max] : [lo = Math.min(Math.max(lo, min), max - span), lo + span];\n}\n\nfunction isFunction (_) {\n  return typeof _ === 'function';\n}\n\nconst DESCENDING = 'descending';\nfunction compare (fields, orders, opt) {\n  opt = opt || {};\n  orders = array(orders) || [];\n  const ord = [],\n        get = [],\n        fmap = {},\n        gen = opt.comparator || comparator;\n  array(fields).forEach((f, i) => {\n    if (f == null) return;\n    ord.push(orders[i] === DESCENDING ? -1 : 1);\n    get.push(f = isFunction(f) ? f : field(f, null, opt));\n    (accessorFields(f) || []).forEach(_ => fmap[_] = 1);\n  });\n  return get.length === 0 ? null : accessor(gen(get, ord), Object.keys(fmap));\n}\nconst ascending = (u, v) => (u < v || u == null) && v != null ? -1 : (u > v || v == null) && u != null ? 1 : (v = v instanceof Date ? +v : v, u = u instanceof Date ? +u : u) !== u && v === v ? -1 : v !== v && u === u ? 1 : 0;\n\nconst comparator = (fields, orders) => fields.length === 1 ? compare1(fields[0], orders[0]) : compareN(fields, orders, fields.length);\n\nconst compare1 = (field, order) => function (a, b) {\n  return ascending(field(a), field(b)) * order;\n};\n\nconst compareN = (fields, orders, n) => {\n  orders.push(0); // pad zero for convenient lookup\n\n  return function (a, b) {\n    let f,\n        c = 0,\n        i = -1;\n\n    while (c === 0 && ++i < n) {\n      f = fields[i];\n      c = ascending(f(a), f(b));\n    }\n\n    return c * orders[i];\n  };\n};\n\nfunction constant (_) {\n  return isFunction(_) ? _ : () => _;\n}\n\nfunction debounce (delay, handler) {\n  let tid;\n  return e => {\n    if (tid) clearTimeout(tid);\n    tid = setTimeout(() => (handler(e), tid = null), delay);\n  };\n}\n\nfunction extend (_) {\n  for (let x, k, i = 1, len = arguments.length; i < len; ++i) {\n    x = arguments[i];\n\n    for (k in x) {\n      _[k] = x[k];\n    }\n  }\n\n  return _;\n}\n\n/**\n * Return an array with minimum and maximum values, in the\n * form [min, max]. Ignores null, undefined, and NaN values.\n */\nfunction extent (array, f) {\n  let i = 0,\n      n,\n      v,\n      min,\n      max;\n\n  if (array && (n = array.length)) {\n    if (f == null) {\n      // find first valid value\n      for (v = array[i]; i < n && (v == null || v !== v); v = array[++i]);\n\n      min = max = v; // visit all other values\n\n      for (; i < n; ++i) {\n        v = array[i]; // skip null/undefined; NaN will fail all comparisons\n\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    } else {\n      // find first valid value\n      for (v = f(array[i]); i < n && (v == null || v !== v); v = f(array[++i]));\n\n      min = max = v; // visit all other values\n\n      for (; i < n; ++i) {\n        v = f(array[i]); // skip null/undefined; NaN will fail all comparisons\n\n        if (v != null) {\n          if (v < min) min = v;\n          if (v > max) max = v;\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n\nfunction extentIndex (array, f) {\n  const n = array.length;\n  let i = -1,\n      a,\n      b,\n      c,\n      u,\n      v;\n\n  if (f == null) {\n    while (++i < n) {\n      b = array[i];\n\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n\n    if (i === n) return [-1, -1];\n    u = v = i;\n\n    while (++i < n) {\n      b = array[i];\n\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  } else {\n    while (++i < n) {\n      b = f(array[i], i, array);\n\n      if (b != null && b >= b) {\n        a = c = b;\n        break;\n      }\n    }\n\n    if (i === n) return [-1, -1];\n    u = v = i;\n\n    while (++i < n) {\n      b = f(array[i], i, array);\n\n      if (b != null) {\n        if (a > b) {\n          a = b;\n          u = i;\n        }\n\n        if (c < b) {\n          c = b;\n          v = i;\n        }\n      }\n    }\n  }\n\n  return [u, v];\n}\n\nconst hop = Object.prototype.hasOwnProperty;\nfunction has (object, property) {\n  return hop.call(object, property);\n}\n\nconst NULL = {};\nfunction fastmap (input) {\n  let obj = {},\n      test;\n\n  function has$1(key) {\n    return has(obj, key) && obj[key] !== NULL;\n  }\n\n  const map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has$1,\n\n    get(key) {\n      return has$1(key) ? obj[key] : undefined;\n    },\n\n    set(key, value) {\n      if (!has$1(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n\n      obj[key] = value;\n      return this;\n    },\n\n    delete(key) {\n      if (has$1(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n\n      return this;\n    },\n\n    clear() {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n\n    test(_) {\n      if (arguments.length) {\n        test = _;\n        return map;\n      } else {\n        return test;\n      }\n    },\n\n    clean() {\n      const next = {};\n      let size = 0;\n\n      for (const key in obj) {\n        const value = obj[key];\n\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n\n      map.size = size;\n      map.empty = 0;\n      map.object = obj = next;\n    }\n\n  };\n  if (input) Object.keys(input).forEach(key => {\n    map.set(key, input[key]);\n  });\n  return map;\n}\n\nfunction flush (range, value, threshold, left, right, center) {\n  if (!threshold && threshold !== 0) return center;\n  const t = +threshold;\n  let a = range[0],\n      b = peek(range),\n      l; // swap endpoints if range is reversed\n\n  if (b < a) {\n    l = a;\n    a = b;\n    b = l;\n  } // compare value to endpoints\n\n\n  l = Math.abs(value - a);\n  const r = Math.abs(b - value); // adjust if value is within threshold distance of endpoint\n\n  return l < r && l <= t ? left : r <= t ? right : center;\n}\n\nfunction inherits (child, parent, members) {\n  const proto = child.prototype = Object.create(parent.prototype);\n  Object.defineProperty(proto, 'constructor', {\n    value: child,\n    writable: true,\n    enumerable: true,\n    configurable: true\n  });\n  return extend(proto, members);\n}\n\n/**\n * Predicate that returns true if the value lies within the span\n * of the given range. The left and right flags control the use\n * of inclusive (true) or exclusive (false) comparisons.\n */\nfunction inrange (value, range, left, right) {\n  let r0 = range[0],\n      r1 = range[range.length - 1],\n      t;\n\n  if (r0 > r1) {\n    t = r0;\n    r0 = r1;\n    r1 = t;\n  }\n\n  left = left === undefined || left;\n  right = right === undefined || right;\n  return (left ? r0 <= value : r0 < value) && (right ? value <= r1 : value < r1);\n}\n\nfunction isBoolean (_) {\n  return typeof _ === 'boolean';\n}\n\nfunction isDate (_) {\n  return Object.prototype.toString.call(_) === '[object Date]';\n}\n\nfunction isIterable (_) {\n  return _ && isFunction(_[Symbol.iterator]);\n}\n\nfunction isNumber (_) {\n  return typeof _ === 'number';\n}\n\nfunction isRegExp (_) {\n  return Object.prototype.toString.call(_) === '[object RegExp]';\n}\n\nfunction isString (_) {\n  return typeof _ === 'string';\n}\n\nfunction key (fields, flat, opt) {\n  if (fields) {\n    fields = flat ? array(fields).map(f => f.replace(/\\\\(.)/g, '$1')) : array(fields);\n  }\n\n  const len = fields && fields.length,\n        gen = opt && opt.get || getter,\n        map = f => gen(flat ? [f] : splitAccessPath(f));\n\n  let fn;\n\n  if (!len) {\n    fn = function () {\n      return '';\n    };\n  } else if (len === 1) {\n    const get = map(fields[0]);\n\n    fn = function (_) {\n      return '' + get(_);\n    };\n  } else {\n    const get = fields.map(map);\n\n    fn = function (_) {\n      let s = '' + get[0](_),\n          i = 0;\n\n      while (++i < len) s += '|' + get[i](_);\n\n      return s;\n    };\n  }\n\n  return accessor(fn, fields, 'key');\n}\n\nfunction lerp (array, frac) {\n  const lo = array[0],\n        hi = peek(array),\n        f = +frac;\n  return !f ? lo : f === 1 ? hi : lo + f * (hi - lo);\n}\n\nconst DEFAULT_MAX_SIZE = 10000; // adapted from https://github.com/dominictarr/hashlru/ (MIT License)\n\nfunction lruCache (maxsize) {\n  maxsize = +maxsize || DEFAULT_MAX_SIZE;\n  let curr, prev, size;\n\n  const clear = () => {\n    curr = {};\n    prev = {};\n    size = 0;\n  };\n\n  const update = (key, value) => {\n    if (++size > maxsize) {\n      prev = curr;\n      curr = {};\n      size = 1;\n    }\n\n    return curr[key] = value;\n  };\n\n  clear();\n  return {\n    clear,\n    has: key => has(curr, key) || has(prev, key),\n    get: key => has(curr, key) ? curr[key] : has(prev, key) ? update(key, prev[key]) : undefined,\n    set: (key, value) => has(curr, key) ? curr[key] = value : update(key, value)\n  };\n}\n\nfunction merge (compare, array0, array1, output) {\n  const n0 = array0.length,\n        n1 = array1.length;\n  if (!n1) return array0;\n  if (!n0) return array1;\n  const merged = output || new array0.constructor(n0 + n1);\n  let i0 = 0,\n      i1 = 0,\n      i = 0;\n\n  for (; i0 < n0 && i1 < n1; ++i) {\n    merged[i] = compare(array0[i0], array1[i1]) > 0 ? array1[i1++] : array0[i0++];\n  }\n\n  for (; i0 < n0; ++i0, ++i) {\n    merged[i] = array0[i0];\n  }\n\n  for (; i1 < n1; ++i1, ++i) {\n    merged[i] = array1[i1];\n  }\n\n  return merged;\n}\n\nfunction repeat (str, reps) {\n  let s = '';\n\n  while (--reps >= 0) s += str;\n\n  return s;\n}\n\nfunction pad (str, length, padchar, align) {\n  const c = padchar || ' ',\n        s = str + '',\n        n = length - s.length;\n  return n <= 0 ? s : align === 'left' ? repeat(c, n) + s : align === 'center' ? repeat(c, ~~(n / 2)) + s + repeat(c, Math.ceil(n / 2)) : s + repeat(c, n);\n}\n\n/**\n * Return the numerical span of an array: the difference between\n * the last and first values.\n */\n\nfunction span (array) {\n  return array && peek(array) - array[0] || 0;\n}\n\nfunction $(x) {\n  return isArray(x) ? '[' + x.map($) + ']' : isObject(x) || isString(x) ? // Output valid JSON and JS source strings.\n  // See http://timelessrepo.com/json-isnt-a-javascript-subset\n  JSON.stringify(x).replace('\\u2028', '\\\\u2028').replace('\\u2029', '\\\\u2029') : x;\n}\n\nfunction toBoolean (_) {\n  return _ == null || _ === '' ? null : !_ || _ === 'false' || _ === '0' ? false : !!_;\n}\n\nconst defaultParser = _ => isNumber(_) ? _ : isDate(_) ? _ : Date.parse(_);\n\nfunction toDate (_, parser) {\n  parser = parser || defaultParser;\n  return _ == null || _ === '' ? null : parser(_);\n}\n\nfunction toString (_) {\n  return _ == null || _ === '' ? null : _ + '';\n}\n\nfunction toSet (_) {\n  const s = {},\n        n = _.length;\n\n  for (let i = 0; i < n; ++i) s[_[i]] = true;\n\n  return s;\n}\n\nfunction truncate (str, length, align, ellipsis) {\n  const e = ellipsis != null ? ellipsis : '\\u2026',\n        s = str + '',\n        n = s.length,\n        l = Math.max(0, length - e.length);\n  return n <= length ? s : align === 'left' ? e + s.slice(n - l) : align === 'center' ? s.slice(0, Math.ceil(l / 2)) + e + s.slice(n - ~~(l / 2)) : s.slice(0, l) + e;\n}\n\nfunction visitArray (array, filter, visitor) {\n  if (array) {\n    if (filter) {\n      const n = array.length;\n\n      for (let i = 0; i < n; ++i) {\n        const t = filter(array[i]);\n        if (t) visitor(t, i, array);\n      }\n    } else {\n      array.forEach(visitor);\n    }\n  }\n}\n\nexport { Debug, Error$1 as Error, Info, None, Warn, accessor, accessorFields, accessorName, array, ascending, clampRange, compare, constant, debounce, error, extend, extent, extentIndex, falsy, fastmap, field, flush, has as hasOwnProperty, id, identity, inherits, inrange, isArray, isBoolean, isDate, isFunction, isIterable, isNumber, isObject, isRegExp, isString, key, lerp, logger, lruCache, merge, mergeConfig, one, pad, panLinear, panLog, panPow, panSymlog, peek, quarter, repeat, span, splitAccessPath, $ as stringValue, toBoolean, toDate, toNumber, toSet, toString, truncate, truthy, utcquarter, visitArray, writeConfig, zero, zoomLinear, zoomLog, zoomPow, zoomSymlog };\n","import {error, extend, isFunction, stringValue} from 'vega-util';\n\n// Matches absolute URLs with optional protocol\n//   https://...    file://...    //...\nconst protocol_re = /^([A-Za-z]+:)?\\/\\//;\n\n// Matches allowed URIs. From https://github.com/cure53/DOMPurify/blob/master/src/regexp.js with added file://\nconst allowed_re = /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp|file|data):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i; // eslint-disable-line no-useless-escape\nconst whitespace_re = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\n\n// Special treatment in node.js for the file: protocol\nconst fileProtocol = 'file://';\n\n/**\n * Factory for a loader constructor that provides methods for requesting\n * files from either the network or disk, and for sanitizing request URIs.\n * @param {function} fetch - The Fetch API for HTTP network requests.\n *   If null or undefined, HTTP loading will be disabled.\n * @param {object} fs - The file system interface for file loading.\n *   If null or undefined, local file loading will be disabled.\n * @return {function} A loader constructor with the following signature:\n *   param {object} [options] - Optional default loading options to use.\n *   return {object} - A new loader instance.\n */\nexport default function(fetch, fs) {\n  return options => ({\n    options: options || {},\n    sanitize: sanitize,\n    load: load,\n    fileAccess: !!fs,\n    file: fileLoader(fs),\n    http: httpLoader(fetch)\n  });\n}\n\n/**\n * Load an external resource, typically either from the web or from the local\n * filesystem. This function uses {@link sanitize} to first sanitize the uri,\n * then calls either {@link http} (for web requests) or {@link file} (for\n * filesystem loading).\n * @param {string} uri - The resource indicator (e.g., URL or filename).\n * @param {object} [options] - Optional loading options. These options will\n *   override any existing default options.\n * @return {Promise} - A promise that resolves to the loaded content.\n */\nasync function load(uri, options) {\n  const opt = await this.sanitize(uri, options),\n        url = opt.href;\n\n  return opt.localFile\n    ? this.file(url)\n    : this.http(url, options);\n}\n\n/**\n * URI sanitizer function.\n * @param {string} uri - The uri (url or filename) to sanity check.\n * @param {object} options - An options hash.\n * @return {Promise} - A promise that resolves to an object containing\n *  sanitized uri data, or rejects it the input uri is deemed invalid.\n *  The properties of the resolved object are assumed to be\n *  valid attributes for an HTML 'a' tag. The sanitized uri *must* be\n *  provided by the 'href' property of the returned object.\n */\nasync function sanitize(uri, options) {\n  options = extend({}, this.options, options);\n\n  const fileAccess = this.fileAccess,\n        result = {href: null};\n\n  let isFile, loadFile, base;\n\n  const isAllowed = allowed_re.test(uri.replace(whitespace_re, ''));\n\n  if (uri == null || typeof uri !== 'string' || !isAllowed) {\n    error('Sanitize failure, invalid URI: ' + stringValue(uri));\n  }\n\n  const hasProtocol = protocol_re.test(uri);\n\n  // if relative url (no protocol/host), prepend baseURL\n  if ((base = options.baseURL) && !hasProtocol) {\n    // Ensure that there is a slash between the baseURL (e.g. hostname) and url\n    if (!uri.startsWith('/') && base[base.length-1] !== '/') {\n      uri = '/' + uri;\n    }\n    uri = base + uri;\n  }\n\n  // should we load from file system?\n  loadFile = (isFile = uri.startsWith(fileProtocol))\n    || options.mode === 'file'\n    || options.mode !== 'http' && !hasProtocol && fileAccess;\n\n  if (isFile) {\n    // strip file protocol\n    uri = uri.slice(fileProtocol.length);\n  } else if (uri.startsWith('//')) {\n    if (options.defaultProtocol === 'file') {\n      // if is file, strip protocol and set loadFile flag\n      uri = uri.slice(2);\n      loadFile = true;\n    } else {\n      // if relative protocol (starts with '//'), prepend default protocol\n      uri = (options.defaultProtocol || 'http') + ':' + uri;\n    }\n  }\n\n  // set non-enumerable mode flag to indicate local file load\n  Object.defineProperty(result, 'localFile', {value: !!loadFile});\n\n  // set uri\n  result.href = uri;\n\n  // set default result target, if specified\n  if (options.target) {\n    result.target = options.target + '';\n  }\n\n  // set default result rel, if specified (#1542)\n  if (options.rel) {\n    result.rel = options.rel + '';\n  }\n\n  // provide control over cross-origin image handling (#2238)\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n  if (options.context === 'image' && options.crossOrigin) {\n    result.crossOrigin = options.crossOrigin + '';\n  }\n\n  // return\n  return result;\n}\n\n/**\n * File system loader factory.\n * @param {object} fs - The file system interface.\n * @return {function} - A file loader with the following signature:\n *   param {string} filename - The file system path to load.\n *   param {string} filename - The file system path to load.\n *   return {Promise} A promise that resolves to the file contents.\n */\nfunction fileLoader(fs) {\n  return fs\n    ? filename => new Promise((accept, reject) => {\n        fs.readFile(filename, (error, data) => {\n          if (error) reject(error);\n          else accept(data);\n        });\n      })\n    : fileReject;\n}\n\n/**\n * Default file system loader that simply rejects.\n */\nasync function fileReject() {\n  error('No file system access.');\n}\n\n/**\n * HTTP request handler factory.\n * @param {function} fetch - The Fetch API method.\n * @return {function} - An http loader with the following signature:\n *   param {string} url - The url to request.\n *   param {object} options - An options hash.\n *   return {Promise} - A promise that resolves to the file contents.\n */\nfunction httpLoader(fetch) {\n  return fetch\n    ? async function(url, options) {\n        const opt = extend({}, this.options.http, options),\n              type = options && options.response,\n              response = await fetch(url, opt);\n\n        return !response.ok\n          ? error(response.status + '' + response.statusText)\n          : isFunction(response[type]) ? response[type]()\n          : response.text();\n      }\n    : httpReject;\n}\n\n/**\n * Default http request handler that simply rejects.\n */\nasync function httpReject() {\n  error('No HTTP fetch method available.');\n}\n","import {identity, toBoolean, toDate, toNumber, toString} from 'vega-util';\n\nconst isValid = _ => _ != null && _ === _;\n\nconst isBoolean = _ => _ === 'true'\n  || _ === 'false'\n  || _ === true\n  || _ === false;\n\nconst isDate = _ => !Number.isNaN(Date.parse(_));\n\nconst isNumber = _ => !Number.isNaN(+_) && !(_ instanceof Date);\n\nconst isInteger = _ => isNumber(_) && Number.isInteger(+_);\n\nexport const typeParsers = {\n  boolean: toBoolean,\n  integer: toNumber,\n  number:  toNumber,\n  date:    toDate,\n  string:  toString,\n  unknown: identity\n};\n\nconst typeTests = [\n  isBoolean,\n  isInteger,\n  isNumber,\n  isDate\n];\n\nconst typeList = [\n  'boolean',\n  'integer',\n  'number',\n  'date'\n];\n\nexport function inferType(values, field) {\n  if (!values || !values.length) return 'unknown';\n\n  const n = values.length,\n        m = typeTests.length,\n        a = typeTests.map((_, i) => i + 1);\n\n  for (let i = 0, t = 0, j, value; i < n; ++i) {\n    value = field ? values[i][field] : values[i];\n    for (j = 0; j < m; ++j) {\n      if (a[j] && isValid(value) && !typeTests[j](value)) {\n        a[j] = 0;\n        ++t;\n        if (t === typeTests.length) return 'string';\n      }\n    }\n  }\n\n  return typeList[\n    a.reduce((u, v) => u === 0 ? v : u, 0) - 1\n  ];\n}\n\nexport function inferTypes(data, fields) {\n  return fields.reduce((types, field) => {\n    types[field] = inferType(data, field);\n    return types;\n  }, {});\n}\n","import {dsvFormat} from 'd3-dsv';\nimport {extend, stringValue} from 'vega-util';\n\nexport function delimitedFormat(delimiter) {\n  const parse = function(data, format) {\n    const delim = {delimiter: delimiter};\n    return dsv(data, format ? extend(format, delim) : delim);\n  };\n\n  parse.responseType = 'text';\n\n  return parse;\n}\n\nexport default function dsv(data, format) {\n  if (format.header) {\n    data = format.header\n      .map(stringValue)\n      .join(format.delimiter) + '\\n' + data;\n  }\n  return dsvFormat(format.delimiter).parse(data + '');\n}\n\ndsv.responseType = 'text';\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","import {\n  field, identity, isArray, isFunction, isIterable, isObject\n} from 'vega-util';\n\nfunction isBuffer(_) {\n  return (typeof Buffer === 'function' && isFunction(Buffer.isBuffer))\n    ? Buffer.isBuffer(_) : false;\n}\n\nexport default function json(data, format) {\n  const prop = (format && format.property) ? field(format.property) : identity;\n  return isObject(data) && !isBuffer(data)\n    ? parseJSON(prop(data), format)\n    : prop(JSON.parse(data));\n}\n\njson.responseType = 'json';\n\nfunction parseJSON(data, format) {\n  if (!isArray(data) && isIterable(data)) {\n    data = [...data];\n  }\n  return (format && format.copy)\n    ? JSON.parse(JSON.stringify(data))\n    : data;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","import {object} from \"./feature.js\";\nimport stitch from \"./stitch.js\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n","import json from './json';\nimport {feature, mesh} from 'topojson-client';\nimport {error} from 'vega-util';\n\nconst filters = {\n  interior: (a, b) => a !== b,\n  exterior: (a, b) => a === b\n};\n\nexport default function topojson(data, format) {\n  let method, object, property, filter;\n  data = json(data, format);\n\n  if (format && format.feature) {\n    method = feature;\n    property = format.feature;\n  } else if (format && format.mesh) {\n    method = mesh;\n    property = format.mesh;\n    filter = filters[format.filter];\n  } else {\n    error('Missing TopoJSON feature or mesh parameter.');\n  }\n\n  object = (object = data.objects[property])\n    ? method(data, object, filter)\n    : error('Invalid TopoJSON object: ' + property);\n\n  return object && object.features || [object];\n}\n\ntopojson.responseType = 'json';\n","import {delimitedFormat, default as dsv} from './dsv';\nimport json from './json';\nimport topojson from './topojson';\nimport {hasOwnProperty} from 'vega-util';\n\nexport const format = {\n  dsv: dsv,\n  csv: delimitedFormat(','),\n  tsv: delimitedFormat('\\t'),\n  json: json,\n  topojson: topojson\n};\n\nexport function formats(name, reader) {\n  if (arguments.length > 1) {\n    format[name] = reader;\n    return this;\n  } else {\n    return hasOwnProperty(format, name) ? format[name] : null;\n  }\n}\n\nexport function responseType(type) {\n  const f = formats(type);\n  return f && f.responseType || 'text';\n}\n","import { array, error, hasOwnProperty, extend, peek, toSet, constant, zero, one, span } from 'vega-util';\nimport { timeDay, timeWeek, utcDay, utcWeek, timeYear, timeMonth, timeHour, timeMinute, timeSecond, timeMillisecond, utcYear, utcMonth, utcHour, utcMinute, utcSecond, utcMillisecond } from 'd3-time';\nimport { bisector, tickStep } from 'd3-array';\n\nconst YEAR = 'year';\nconst QUARTER = 'quarter';\nconst MONTH = 'month';\nconst WEEK = 'week';\nconst DATE = 'date';\nconst DAY = 'day';\nconst DAYOFYEAR = 'dayofyear';\nconst HOURS = 'hours';\nconst MINUTES = 'minutes';\nconst SECONDS = 'seconds';\nconst MILLISECONDS = 'milliseconds';\nconst TIME_UNITS = [YEAR, QUARTER, MONTH, WEEK, DATE, DAY, DAYOFYEAR, HOURS, MINUTES, SECONDS, MILLISECONDS];\nconst UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\nfunction timeUnits(units) {\n  const u = array(units).slice(),\n        m = {}; // check validity\n\n  if (!u.length) error('Missing time unit.');\n  u.forEach(unit => {\n    if (hasOwnProperty(UNITS, unit)) {\n      m[unit] = 1;\n    } else {\n      error(\"Invalid time unit: \".concat(unit, \".\"));\n    }\n  });\n  const numTypes = (m[WEEK] || m[DAY] ? 1 : 0) + (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) + (m[DAYOFYEAR] ? 1 : 0);\n\n  if (numTypes > 1) {\n    error(\"Incompatible time units: \".concat(units));\n  } // ensure proper sort order\n\n\n  u.sort((a, b) => UNITS[a] - UNITS[b]);\n  return u;\n}\nconst defaultSpecifiers = {\n  [YEAR]: '%Y ',\n  [QUARTER]: 'Q%q ',\n  [MONTH]: '%b ',\n  [DATE]: '%d ',\n  [WEEK]: 'W%U ',\n  [DAY]: '%a ',\n  [DAYOFYEAR]: '%j ',\n  [HOURS]: '%H:00',\n  [MINUTES]: '00:%M',\n  [SECONDS]: ':%S',\n  [MILLISECONDS]: '.%L',\n  [\"\".concat(YEAR, \"-\").concat(MONTH)]: '%Y-%m ',\n  [\"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DATE)]: '%Y-%m-%d ',\n  [\"\".concat(HOURS, \"-\").concat(MINUTES)]: '%H:%M'\n};\nfunction timeUnitSpecifier(units, specifiers) {\n  const s = extend({}, defaultSpecifiers, specifiers),\n        u = timeUnits(units),\n        n = u.length;\n  let fmt = '',\n      start = 0,\n      end,\n      key;\n\n  for (start = 0; start < n;) {\n    for (end = u.length; end > start; --end) {\n      key = u.slice(start, end).join('-');\n\n      if (s[key] != null) {\n        fmt += s[key];\n        start = end;\n        break;\n      }\n    }\n  }\n\n  return fmt.trim();\n}\n\nconst t0 = new Date();\n\nfunction localYear(y) {\n  t0.setFullYear(y);\n  t0.setMonth(0);\n  t0.setDate(1);\n  t0.setHours(0, 0, 0, 0);\n  return t0;\n}\n\nfunction dayofyear(d) {\n  return localDayOfYear(new Date(d));\n}\nfunction week(d) {\n  return localWeekNum(new Date(d));\n}\nfunction localDayOfYear(d) {\n  return timeDay.count(localYear(d.getFullYear()) - 1, d);\n}\nfunction localWeekNum(d) {\n  return timeWeek.count(localYear(d.getFullYear()) - 1, d);\n}\nfunction localFirst(y) {\n  return localYear(y).getDay();\n}\nfunction localDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(-1, m, d, H, M, S, L);\n    date.setFullYear(y);\n    return date;\n  }\n\n  return new Date(y, m, d, H, M, S, L);\n}\nfunction utcdayofyear(d) {\n  return utcDayOfYear(new Date(d));\n}\nfunction utcweek(d) {\n  return utcWeekNum(new Date(d));\n}\nfunction utcDayOfYear(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcDay.count(y - 1, d);\n}\nfunction utcWeekNum(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcWeek.count(y - 1, d);\n}\nfunction utcFirst(y) {\n  t0.setTime(Date.UTC(y, 0, 1));\n  return t0.getUTCDay();\n}\nfunction utcDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(y, m, d, H, M, S, L));\n}\n\nfunction floor(units, step, get, inv, newDate) {\n  const s = step || 1,\n        b = peek(units),\n        _ = (unit, p, key) => {\n    key = key || unit;\n    return getUnit(get[key], inv[key], unit === b && s, p);\n  };\n\n  const t = new Date(),\n        u = toSet(units),\n        y = u[YEAR] ? _(YEAR) : constant(2012),\n        m = u[MONTH] ? _(MONTH) : u[QUARTER] ? _(QUARTER) : zero,\n        d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY) : u[WEEK] ? _(WEEK, 1) : u[DAY] ? _(DAY, 1) : u[DATE] ? _(DATE, 1) : u[DAYOFYEAR] ? _(DAYOFYEAR, 1) : one,\n        H = u[HOURS] ? _(HOURS) : zero,\n        M = u[MINUTES] ? _(MINUTES) : zero,\n        S = u[SECONDS] ? _(SECONDS) : zero,\n        L = u[MILLISECONDS] ? _(MILLISECONDS) : zero;\n  return function (v) {\n    t.setTime(+v);\n    const year = y(t);\n    return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\n  };\n}\n\nfunction getUnit(f, inv, step, phase) {\n  const u = step <= 1 ? f : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step) : (d, y) => step * Math.floor(f(d, y) / step);\n  return inv ? (d, y) => inv(u(d, y), y) : u;\n} // returns the day of the year based on week number, day of week,\n// and the day of the week for the first day of the year\n\n\nfunction weekday(week, day, firstDay) {\n  return day + week * 7 - (firstDay + 6) % 7;\n} // -- LOCAL TIME --\n\n\nconst localGet = {\n  [YEAR]: d => d.getFullYear(),\n  [QUARTER]: d => Math.floor(d.getMonth() / 3),\n  [MONTH]: d => d.getMonth(),\n  [DATE]: d => d.getDate(),\n  [HOURS]: d => d.getHours(),\n  [MINUTES]: d => d.getMinutes(),\n  [SECONDS]: d => d.getSeconds(),\n  [MILLISECONDS]: d => d.getMilliseconds(),\n  [DAYOFYEAR]: d => localDayOfYear(d),\n  [WEEK]: d => localWeekNum(d),\n  [WEEK + DAY]: (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\n  [DAY]: (d, y) => weekday(1, d.getDay(), localFirst(y))\n};\nconst localInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, localFirst(y))\n};\nfunction timeFloor(units, step) {\n  return floor(units, step || 1, localGet, localInv, localDate);\n} // -- UTC TIME --\n\nconst utcGet = {\n  [YEAR]: d => d.getUTCFullYear(),\n  [QUARTER]: d => Math.floor(d.getUTCMonth() / 3),\n  [MONTH]: d => d.getUTCMonth(),\n  [DATE]: d => d.getUTCDate(),\n  [HOURS]: d => d.getUTCHours(),\n  [MINUTES]: d => d.getUTCMinutes(),\n  [SECONDS]: d => d.getUTCSeconds(),\n  [MILLISECONDS]: d => d.getUTCMilliseconds(),\n  [DAYOFYEAR]: d => utcDayOfYear(d),\n  [WEEK]: d => utcWeekNum(d),\n  [DAY]: (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\n  [WEEK + DAY]: (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\n};\nconst utcInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, utcFirst(y))\n};\nfunction utcFloor(units, step) {\n  return floor(units, step || 1, utcGet, utcInv, utcDate);\n}\n\nconst timeIntervals = {\n  [YEAR]: timeYear,\n  [QUARTER]: timeMonth.every(3),\n  [MONTH]: timeMonth,\n  [WEEK]: timeWeek,\n  [DATE]: timeDay,\n  [DAY]: timeDay,\n  [DAYOFYEAR]: timeDay,\n  [HOURS]: timeHour,\n  [MINUTES]: timeMinute,\n  [SECONDS]: timeSecond,\n  [MILLISECONDS]: timeMillisecond\n};\nconst utcIntervals = {\n  [YEAR]: utcYear,\n  [QUARTER]: utcMonth.every(3),\n  [MONTH]: utcMonth,\n  [WEEK]: utcWeek,\n  [DATE]: utcDay,\n  [DAY]: utcDay,\n  [DAYOFYEAR]: utcDay,\n  [HOURS]: utcHour,\n  [MINUTES]: utcMinute,\n  [SECONDS]: utcSecond,\n  [MILLISECONDS]: utcMillisecond\n};\nfunction timeInterval(unit) {\n  return timeIntervals[unit];\n}\nfunction utcInterval(unit) {\n  return utcIntervals[unit];\n}\n\nfunction offset(ival, date, step) {\n  return ival ? ival.offset(date, step) : undefined;\n}\n\nfunction timeOffset(unit, date, step) {\n  return offset(timeInterval(unit), date, step);\n}\nfunction utcOffset(unit, date, step) {\n  return offset(utcInterval(unit), date, step);\n}\n\nfunction sequence(ival, start, stop, step) {\n  return ival ? ival.range(start, stop, step) : undefined;\n}\n\nfunction timeSequence(unit, start, stop, step) {\n  return sequence(timeInterval(unit), start, stop, step);\n}\nfunction utcSequence(unit, start, stop, step) {\n  return sequence(utcInterval(unit), start, stop, step);\n}\n\nconst durationSecond = 1000,\n      durationMinute = durationSecond * 60,\n      durationHour = durationMinute * 60,\n      durationDay = durationHour * 24,\n      durationWeek = durationDay * 7,\n      durationMonth = durationDay * 30,\n      durationYear = durationDay * 365;\nconst Milli = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\n      Seconds = Milli.slice(0, -1),\n      Minutes = Seconds.slice(0, -1),\n      Hours = Minutes.slice(0, -1),\n      Day = Hours.slice(0, -1),\n      Week = [YEAR, WEEK],\n      Month = [YEAR, MONTH],\n      Year = [YEAR];\nconst intervals = [[Seconds, 1, durationSecond], [Seconds, 5, 5 * durationSecond], [Seconds, 15, 15 * durationSecond], [Seconds, 30, 30 * durationSecond], [Minutes, 1, durationMinute], [Minutes, 5, 5 * durationMinute], [Minutes, 15, 15 * durationMinute], [Minutes, 30, 30 * durationMinute], [Hours, 1, durationHour], [Hours, 3, 3 * durationHour], [Hours, 6, 6 * durationHour], [Hours, 12, 12 * durationHour], [Day, 1, durationDay], [Week, 1, durationWeek], [Month, 1, durationMonth], [Month, 3, 3 * durationMonth], [Year, 1, durationYear]];\nfunction bin (opt) {\n  const ext = opt.extent,\n        max = opt.maxbins || 40,\n        target = Math.abs(span(ext)) / max;\n  let i = bisector(i => i[2]).right(intervals, target),\n      units,\n      step;\n\n  if (i === intervals.length) {\n    units = Year, step = tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\n  } else if (i) {\n    i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\n    units = i[0];\n    step = i[1];\n  } else {\n    units = Milli;\n    step = Math.max(tickStep(ext[0], ext[1], max), 1);\n  }\n\n  return {\n    units,\n    step\n  };\n}\n\nexport { DATE, DAY, DAYOFYEAR, HOURS, MILLISECONDS, MINUTES, MONTH, QUARTER, SECONDS, TIME_UNITS, WEEK, YEAR, dayofyear, bin as timeBin, timeFloor, timeInterval, timeOffset, timeSequence, timeUnitSpecifier, timeUnits, utcFloor, utcInterval, utcOffset, utcSequence, utcdayofyear, utcweek, week };\n","import { tickStep } from 'd3-array';\nimport { formatSpecifier, precisionFixed, precisionRound, precisionPrefix, formatLocale, format, formatPrefix } from 'd3-format';\nimport { SECONDS, MINUTES, HOURS, DATE, WEEK, MONTH, QUARTER, YEAR, MILLISECONDS, DAY, timeInterval, utcInterval } from 'vega-time';\nimport { isString, isObject, error, extend } from 'vega-util';\nimport { timeFormat, timeParse, utcFormat, utcParse, timeFormatLocale as timeFormatLocale$1 } from 'd3-time-format';\n\nfunction memoize (method) {\n  const cache = {};\n  return spec => cache[spec] || (cache[spec] = method(spec));\n}\n\nfunction trimZeroes(numberFormat, decimalChar) {\n  return x => {\n    const str = numberFormat(x),\n          dec = str.indexOf(decimalChar);\n    if (dec < 0) return str;\n    let idx = rightmostDigit(str, dec);\n    const end = idx < str.length ? str.slice(idx) : '';\n\n    while (--idx > dec) if (str[idx] !== '0') {\n      ++idx;\n      break;\n    }\n\n    return str.slice(0, idx) + end;\n  };\n}\n\nfunction rightmostDigit(str, dec) {\n  let i = str.lastIndexOf('e'),\n      c;\n  if (i > 0) return i;\n\n  for (i = str.length; --i > dec;) {\n    c = str.charCodeAt(i);\n    if (c >= 48 && c <= 57) return i + 1; // is digit\n  }\n}\n\nfunction numberLocale(locale) {\n  const format = memoize(locale.format),\n        formatPrefix = locale.formatPrefix;\n  return {\n    format,\n    formatPrefix,\n\n    formatFloat(spec) {\n      const s = formatSpecifier(spec || ',');\n\n      if (s.precision == null) {\n        s.precision = 12;\n\n        switch (s.type) {\n          case '%':\n            s.precision -= 2;\n            break;\n\n          case 'e':\n            s.precision -= 1;\n            break;\n        }\n\n        return trimZeroes(format(s), // number format\n        format('.1f')(1)[1] // decimal point character\n        );\n      } else {\n        return format(s);\n      }\n    },\n\n    formatSpan(start, stop, count, specifier) {\n      specifier = formatSpecifier(specifier == null ? ',f' : specifier);\n      const step = tickStep(start, stop, count),\n            value = Math.max(Math.abs(start), Math.abs(stop));\n      let precision;\n\n      if (specifier.precision == null) {\n        switch (specifier.type) {\n          case 's':\n            {\n              if (!isNaN(precision = precisionPrefix(step, value))) {\n                specifier.precision = precision;\n              }\n\n              return formatPrefix(specifier, value);\n            }\n\n          case '':\n          case 'e':\n          case 'g':\n          case 'p':\n          case 'r':\n            {\n              if (!isNaN(precision = precisionRound(step, value))) {\n                specifier.precision = precision - (specifier.type === 'e');\n              }\n\n              break;\n            }\n\n          case 'f':\n          case '%':\n            {\n              if (!isNaN(precision = precisionFixed(step))) {\n                specifier.precision = precision - (specifier.type === '%') * 2;\n              }\n\n              break;\n            }\n        }\n      }\n\n      return format(specifier);\n    }\n\n  };\n}\n\nlet defaultNumberLocale;\nresetNumberFormatDefaultLocale();\nfunction resetNumberFormatDefaultLocale() {\n  return defaultNumberLocale = numberLocale({\n    format: format,\n    formatPrefix: formatPrefix\n  });\n}\nfunction numberFormatLocale(definition) {\n  return numberLocale(formatLocale(definition));\n}\nfunction numberFormatDefaultLocale(definition) {\n  return arguments.length ? defaultNumberLocale = numberFormatLocale(definition) : defaultNumberLocale;\n}\n\nfunction timeMultiFormat(format, interval, spec) {\n  spec = spec || {};\n\n  if (!isObject(spec)) {\n    error(\"Invalid time multi-format specifier: \".concat(spec));\n  }\n\n  const second = interval(SECONDS),\n        minute = interval(MINUTES),\n        hour = interval(HOURS),\n        day = interval(DATE),\n        week = interval(WEEK),\n        month = interval(MONTH),\n        quarter = interval(QUARTER),\n        year = interval(YEAR),\n        L = format(spec[MILLISECONDS] || '.%L'),\n        S = format(spec[SECONDS] || ':%S'),\n        M = format(spec[MINUTES] || '%I:%M'),\n        H = format(spec[HOURS] || '%I %p'),\n        d = format(spec[DATE] || spec[DAY] || '%a %d'),\n        w = format(spec[WEEK] || '%b %d'),\n        m = format(spec[MONTH] || '%B'),\n        q = format(spec[QUARTER] || '%B'),\n        y = format(spec[YEAR] || '%Y');\n  return date => (second(date) < date ? L : minute(date) < date ? S : hour(date) < date ? M : day(date) < date ? H : month(date) < date ? week(date) < date ? d : w : year(date) < date ? quarter(date) < date ? m : q : y)(date);\n}\n\nfunction timeLocale(locale) {\n  const timeFormat = memoize(locale.format),\n        utcFormat = memoize(locale.utcFormat);\n  return {\n    timeFormat: spec => isString(spec) ? timeFormat(spec) : timeMultiFormat(timeFormat, timeInterval, spec),\n    utcFormat: spec => isString(spec) ? utcFormat(spec) : timeMultiFormat(utcFormat, utcInterval, spec),\n    timeParse: memoize(locale.parse),\n    utcParse: memoize(locale.utcParse)\n  };\n}\n\nlet defaultTimeLocale;\nresetTimeFormatDefaultLocale();\nfunction resetTimeFormatDefaultLocale() {\n  return defaultTimeLocale = timeLocale({\n    format: timeFormat,\n    parse: timeParse,\n    utcFormat: utcFormat,\n    utcParse: utcParse\n  });\n}\nfunction timeFormatLocale(definition) {\n  return timeLocale(timeFormatLocale$1(definition));\n}\nfunction timeFormatDefaultLocale(definition) {\n  return arguments.length ? defaultTimeLocale = timeFormatLocale(definition) : defaultTimeLocale;\n}\n\nconst createLocale = (number, time) => extend({}, number, time);\n\nfunction locale(numberSpec, timeSpec) {\n  const number = numberSpec ? numberFormatLocale(numberSpec) : numberFormatDefaultLocale();\n  const time = timeSpec ? timeFormatLocale(timeSpec) : timeFormatDefaultLocale();\n  return createLocale(number, time);\n}\nfunction defaultLocale(numberSpec, timeSpec) {\n  const args = arguments.length;\n\n  if (args && args !== 2) {\n    error('defaultLocale expects either zero or two arguments.');\n  }\n\n  return args ? createLocale(numberFormatDefaultLocale(numberSpec), timeFormatDefaultLocale(timeSpec)) : createLocale(numberFormatDefaultLocale(), timeFormatDefaultLocale());\n}\nfunction resetDefaultLocale() {\n  resetNumberFormatDefaultLocale();\n  resetTimeFormatDefaultLocale();\n  return defaultLocale();\n}\n\nexport { defaultLocale, locale, numberFormatDefaultLocale, numberFormatLocale, resetDefaultLocale, resetNumberFormatDefaultLocale, resetTimeFormatDefaultLocale, timeFormatDefaultLocale, timeFormatLocale };\n","import {inferTypes, typeParsers} from './type';\nimport {formats} from './formats/index';\nimport {timeFormatDefaultLocale} from 'vega-format';\nimport {error, hasOwnProperty} from 'vega-util';\n\nexport default function(data, schema, timeParser, utcParser) {\n  schema = schema || {};\n\n  const reader = formats(schema.type || 'json');\n  if (!reader) error('Unknown data format type: ' + schema.type);\n\n  data = reader(data, schema);\n  if (schema.parse) parse(data, schema.parse, timeParser, utcParser);\n\n  if (hasOwnProperty(data, 'columns')) delete data.columns;\n  return data;\n}\n\nfunction parse(data, types, timeParser, utcParser) {\n  if (!data.length) return; // early exit for empty data\n\n  const locale = timeFormatDefaultLocale();\n  timeParser = timeParser || locale.timeParse;\n  utcParser = utcParser || locale.utcParse;\n\n  let fields = data.columns || Object.keys(data[0]),\n      datum, field, i, j, n, m;\n\n  if (types === 'auto') types = inferTypes(data, fields);\n\n  fields = Object.keys(types);\n  const parsers = fields.map(field => {\n    const type = types[field];\n    let parts, pattern;\n\n    if (type && (type.startsWith('date:') || type.startsWith('utc:'))) {\n      parts = type.split(/:(.+)?/, 2);  // split on first :\n      pattern = parts[1];\n\n      if ((pattern[0] === '\\'' && pattern[pattern.length-1] === '\\'') ||\n          (pattern[0] === '\"'  && pattern[pattern.length-1] === '\"')) {\n        pattern = pattern.slice(1, -1);\n      }\n\n      const parse = parts[0] === 'utc' ? utcParser : timeParser;\n      return parse(pattern);\n    }\n\n    if (!typeParsers[type]) {\n      throw Error('Illegal format pattern: ' + field + ':' + type);\n    }\n\n    return typeParsers[type];\n  });\n\n  for (i=0, n=data.length, m=fields.length; i<n; ++i) {\n    datum = data[i];\n    for (j=0; j<m; ++j) {\n      field = fields[j];\n      datum[field] = parsers[j](datum[field]);\n    }\n  }\n}\n","import loaderFactory from './src/loader';\n\nexport const loader = loaderFactory(\n  typeof fetch !== 'undefined' && fetch, // use built-in fetch API\n  null // no file system access\n);\n\nexport {\n  default as read\n} from './src/read';\n\nexport {\n  inferType,\n  inferTypes,\n  typeParsers\n} from './src/type';\n\nexport {\n  format,\n  formats,\n  responseType\n} from './src/formats/index';\n","import { identity, array, isFunction, constant, isArray, id, error, truthy, debounce, extend, visitArray, inherits, logger, Error, hasOwnProperty } from 'vega-util';\nimport { read, responseType, loader } from 'vega-loader';\nimport { defaultLocale } from 'vega-format';\n\nfunction UniqueList(idFunc) {\n  const $ = idFunc || identity,\n        list = [],\n        ids = {};\n\n  list.add = _ => {\n    const id = $(_);\n\n    if (!ids[id]) {\n      ids[id] = 1;\n      list.push(_);\n    }\n\n    return list;\n  };\n\n  list.remove = _ => {\n    const id = $(_);\n\n    if (ids[id]) {\n      ids[id] = 0;\n      const idx = list.indexOf(_);\n      if (idx >= 0) list.splice(idx, 1);\n    }\n\n    return list;\n  };\n\n  return list;\n}\n\n/**\n * Invoke and await a potentially async callback function. If\n * an error occurs, trap it and route to Dataflow.error.\n * @param {Dataflow} df - The dataflow instance\n * @param {function} callback - A callback function to invoke\n *   and then await. The dataflow will be passed as the single\n *   argument to the function.\n */\nasync function asyncCallback (df, callback) {\n  try {\n    await callback(df);\n  } catch (err) {\n    df.error(err);\n  }\n}\n\nconst TUPLE_ID_KEY = Symbol('vega_id');\nlet TUPLE_ID = 1;\n/**\n * Checks if an input value is a registered tuple.\n * @param {*} t - The value to check.\n * @return {boolean} True if the input is a tuple, false otherwise.\n */\n\nfunction isTuple(t) {\n  return !!(t && tupleid(t));\n}\n/**\n * Returns the id of a tuple.\n * @param {object} t - The input tuple.\n * @return {*} the tuple id.\n */\n\nfunction tupleid(t) {\n  return t[TUPLE_ID_KEY];\n}\n/**\n * Sets the id of a tuple.\n * @param {object} t - The input tuple.\n * @param {*} id - The id value to set.\n * @return {object} the input tuple.\n */\n\nfunction setid(t, id) {\n  t[TUPLE_ID_KEY] = id;\n  return t;\n}\n/**\n * Ingest an object or value as a data tuple.\n * If the input value is an object, an id field will be added to it. For\n * efficiency, the input object is modified directly. A copy is not made.\n * If the input value is a literal, it will be wrapped in a new object\n * instance, with the value accessible as the 'data' property.\n * @param datum - The value to ingest.\n * @return {object} The ingested data tuple.\n */\n\n\nfunction ingest$1(datum) {\n  const t = datum === Object(datum) ? datum : {\n    data: datum\n  };\n  return tupleid(t) ? t : setid(t, TUPLE_ID++);\n}\n/**\n * Given a source tuple, return a derived copy.\n * @param {object} t - The source tuple.\n * @return {object} The derived tuple.\n */\n\nfunction derive(t) {\n  return rederive(t, ingest$1({}));\n}\n/**\n * Rederive a derived tuple by copying values from the source tuple.\n * @param {object} t - The source tuple.\n * @param {object} d - The derived tuple.\n * @return {object} The derived tuple.\n */\n\nfunction rederive(t, d) {\n  for (const k in t) d[k] = t[k];\n\n  return d;\n}\n/**\n * Replace an existing tuple with a new tuple.\n * @param {object} t - The existing data tuple.\n * @param {object} d - The new tuple that replaces the old.\n * @return {object} The new tuple.\n */\n\nfunction replace(t, d) {\n  return setid(d, tupleid(t));\n}\n/**\n * Generate an augmented comparator function that provides stable\n * sorting by tuple id when the given comparator produces ties.\n * @param {function} cmp - The comparator to augment.\n * @param {function} [f] - Optional tuple accessor function.\n * @return {function} An augmented comparator function.\n */\n\nfunction stableCompare(cmp, f) {\n  return !cmp ? null : f ? (a, b) => cmp(a, b) || tupleid(f(a)) - tupleid(f(b)) : (a, b) => cmp(a, b) || tupleid(a) - tupleid(b);\n}\n\nfunction isChangeSet(v) {\n  return v && v.constructor === changeset;\n}\nfunction changeset() {\n  const add = [],\n        // insert tuples\n  rem = [],\n        // remove tuples\n  mod = [],\n        // modify tuples\n  remp = [],\n        // remove by predicate\n  modp = []; // modify by predicate\n\n  let clean = null,\n      reflow = false;\n  return {\n    constructor: changeset,\n\n    insert(t) {\n      const d = array(t),\n            n = d.length;\n\n      for (let i = 0; i < n; ++i) add.push(d[i]);\n\n      return this;\n    },\n\n    remove(t) {\n      const a = isFunction(t) ? remp : rem,\n            d = array(t),\n            n = d.length;\n\n      for (let i = 0; i < n; ++i) a.push(d[i]);\n\n      return this;\n    },\n\n    modify(t, field, value) {\n      const m = {\n        field: field,\n        value: constant(value)\n      };\n\n      if (isFunction(t)) {\n        m.filter = t;\n        modp.push(m);\n      } else {\n        m.tuple = t;\n        mod.push(m);\n      }\n\n      return this;\n    },\n\n    encode(t, set) {\n      if (isFunction(t)) modp.push({\n        filter: t,\n        field: set\n      });else mod.push({\n        tuple: t,\n        field: set\n      });\n      return this;\n    },\n\n    clean(value) {\n      clean = value;\n      return this;\n    },\n\n    reflow() {\n      reflow = true;\n      return this;\n    },\n\n    pulse(pulse, tuples) {\n      const cur = {},\n            out = {};\n      let i, n, m, f, t, id; // build lookup table of current tuples\n\n      for (i = 0, n = tuples.length; i < n; ++i) {\n        cur[tupleid(tuples[i])] = 1;\n      } // process individual tuples to remove\n\n\n      for (i = 0, n = rem.length; i < n; ++i) {\n        t = rem[i];\n        cur[tupleid(t)] = -1;\n      } // process predicate-based removals\n\n\n      for (i = 0, n = remp.length; i < n; ++i) {\n        f = remp[i];\n        tuples.forEach(t => {\n          if (f(t)) cur[tupleid(t)] = -1;\n        });\n      } // process all add tuples\n\n\n      for (i = 0, n = add.length; i < n; ++i) {\n        t = add[i];\n        id = tupleid(t);\n\n        if (cur[id]) {\n          // tuple already resides in dataset\n          // if flagged for both add and remove, cancel\n          cur[id] = 1;\n        } else {\n          // tuple does not reside in dataset, add\n          pulse.add.push(ingest$1(add[i]));\n        }\n      } // populate pulse rem list\n\n\n      for (i = 0, n = tuples.length; i < n; ++i) {\n        t = tuples[i];\n        if (cur[tupleid(t)] < 0) pulse.rem.push(t);\n      } // modify helper method\n\n\n      function modify(t, f, v) {\n        if (v) {\n          t[f] = v(t);\n        } else {\n          pulse.encode = f;\n        }\n\n        if (!reflow) out[tupleid(t)] = t;\n      } // process individual tuples to modify\n\n\n      for (i = 0, n = mod.length; i < n; ++i) {\n        m = mod[i];\n        t = m.tuple;\n        f = m.field;\n        id = cur[tupleid(t)];\n\n        if (id > 0) {\n          modify(t, f, m.value);\n          pulse.modifies(f);\n        }\n      } // process predicate-based modifications\n\n\n      for (i = 0, n = modp.length; i < n; ++i) {\n        m = modp[i];\n        f = m.filter;\n        tuples.forEach(t => {\n          if (f(t) && cur[tupleid(t)] > 0) {\n            modify(t, m.field, m.value);\n          }\n        });\n        pulse.modifies(m.field);\n      } // upon reflow request, populate mod with all non-removed tuples\n      // otherwise, populate mod with modified tuples only\n\n\n      if (reflow) {\n        pulse.mod = rem.length || remp.length ? tuples.filter(t => cur[tupleid(t)] > 0) : tuples.slice();\n      } else {\n        for (id in out) pulse.mod.push(out[id]);\n      } // set pulse garbage collection request\n\n\n      if (clean || clean == null && (rem.length || remp.length)) {\n        pulse.clean(true);\n      }\n\n      return pulse;\n    }\n\n  };\n}\n\nconst CACHE = '_:mod:_';\n/**\n * Hash that tracks modifications to assigned values.\n * Callers *must* use the set method to update values.\n */\n\nfunction Parameters() {\n  Object.defineProperty(this, CACHE, {\n    writable: true,\n    value: {}\n  });\n}\nParameters.prototype = {\n  /**\n   * Set a parameter value. If the parameter value changes, the parameter\n   * will be recorded as modified.\n   * @param {string} name - The parameter name.\n   * @param {number} index - The index into an array-value parameter. Ignored if\n   *   the argument is undefined, null or less than zero.\n   * @param {*} value - The parameter value to set.\n   * @param {boolean} [force=false] - If true, records the parameter as modified\n   *   even if the value is unchanged.\n   * @return {Parameters} - This parameter object.\n   */\n  set(name, index, value, force) {\n    const o = this,\n          v = o[name],\n          mod = o[CACHE];\n\n    if (index != null && index >= 0) {\n      if (v[index] !== value || force) {\n        v[index] = value;\n        mod[index + ':' + name] = -1;\n        mod[name] = -1;\n      }\n    } else if (v !== value || force) {\n      o[name] = value;\n      mod[name] = isArray(value) ? 1 + value.length : -1;\n    }\n\n    return o;\n  },\n\n  /**\n   * Tests if one or more parameters has been modified. If invoked with no\n   * arguments, returns true if any parameter value has changed. If the first\n   * argument is array, returns trues if any parameter name in the array has\n   * changed. Otherwise, tests if the given name and optional array index has\n   * changed.\n   * @param {string} name - The parameter name to test.\n   * @param {number} [index=undefined] - The parameter array index to test.\n   * @return {boolean} - Returns true if a queried parameter was modified.\n   */\n  modified(name, index) {\n    const mod = this[CACHE];\n\n    if (!arguments.length) {\n      for (const k in mod) {\n        if (mod[k]) return true;\n      }\n\n      return false;\n    } else if (isArray(name)) {\n      for (let k = 0; k < name.length; ++k) {\n        if (mod[name[k]]) return true;\n      }\n\n      return false;\n    }\n\n    return index != null && index >= 0 ? index + 1 < mod[name] || !!mod[index + ':' + name] : !!mod[name];\n  },\n\n  /**\n   * Clears the modification records. After calling this method,\n   * all parameters are considered unmodified.\n   */\n  clear() {\n    this[CACHE] = {};\n    return this;\n  }\n\n};\n\nlet OP_ID = 0;\nconst PULSE = 'pulse',\n      NO_PARAMS = new Parameters(); // Boolean Flags\n\nconst SKIP$1 = 1,\n      MODIFIED = 2;\n/**\n * An Operator is a processing node in a dataflow graph.\n * Each operator stores a value and an optional value update function.\n * Operators can accept a hash of named parameters. Parameter values can\n * either be direct (JavaScript literals, arrays, objects) or indirect\n * (other operators whose values will be pulled dynamically). Operators\n * included as parameters will have this operator added as a dependency.\n * @constructor\n * @param {*} [init] - The initial value for this operator.\n * @param {function(object, Pulse)} [update] - An update function. Upon\n *   evaluation of this operator, the update function will be invoked and the\n *   return value will be used as the new value of this operator.\n * @param {object} [params] - The parameters for this operator.\n * @param {boolean} [react=true] - Flag indicating if this operator should\n *   listen for changes to upstream operators included as parameters.\n * @see parameters\n */\n\nfunction Operator(init, update, params, react) {\n  this.id = ++OP_ID;\n  this.value = init;\n  this.stamp = -1;\n  this.rank = -1;\n  this.qrank = -1;\n  this.flags = 0;\n\n  if (update) {\n    this._update = update;\n  }\n\n  if (params) this.parameters(params, react);\n}\n\nfunction flag(bit) {\n  return function (state) {\n    const f = this.flags;\n    if (arguments.length === 0) return !!(f & bit);\n    this.flags = state ? f | bit : f & ~bit;\n    return this;\n  };\n}\n\nOperator.prototype = {\n  /**\n   * Returns a list of target operators dependent on this operator.\n   * If this list does not exist, it is created and then returned.\n   * @return {UniqueList}\n   */\n  targets() {\n    return this._targets || (this._targets = UniqueList(id));\n  },\n\n  /**\n   * Sets the value of this operator.\n   * @param {*} value - the value to set.\n   * @return {Number} Returns 1 if the operator value has changed\n   *   according to strict equality, returns 0 otherwise.\n   */\n  set(value) {\n    if (this.value !== value) {\n      this.value = value;\n      return 1;\n    } else {\n      return 0;\n    }\n  },\n\n  /**\n   * Indicates that operator evaluation should be skipped on the next pulse.\n   * This operator will still propagate incoming pulses, but its update function\n   * will not be invoked. The skip flag is reset after every pulse, so calling\n   * this method will affect processing of the next pulse only.\n   */\n  skip: flag(SKIP$1),\n\n  /**\n   * Indicates that this operator's value has been modified on its most recent\n   * pulse. Normally modification is checked via strict equality; however, in\n   * some cases it is more efficient to update the internal state of an object.\n   * In those cases, the modified flag can be used to trigger propagation. Once\n   * set, the modification flag persists across pulses until unset. The flag can\n   * be used with the last timestamp to test if a modification is recent.\n   */\n  modified: flag(MODIFIED),\n\n  /**\n   * Sets the parameters for this operator. The parameter values are analyzed for\n   * operator instances. If found, this operator will be added as a dependency\n   * of the parameterizing operator. Operator values are dynamically marshalled\n   * from each operator parameter prior to evaluation. If a parameter value is\n   * an array, the array will also be searched for Operator instances. However,\n   * the search does not recurse into sub-arrays or object properties.\n   * @param {object} params - A hash of operator parameters.\n   * @param {boolean} [react=true] - A flag indicating if this operator should\n   *   automatically update (react) when parameter values change. In other words,\n   *   this flag determines if the operator registers itself as a listener on\n   *   any upstream operators included in the parameters.\n   * @param {boolean} [initonly=false] - A flag indicating if this operator\n   *   should calculate an update only upon its initiatal evaluation, then\n   *   deregister dependencies and suppress all future update invocations.\n   * @return {Operator[]} - An array of upstream dependencies.\n   */\n  parameters(params, react, initonly) {\n    react = react !== false;\n    const argval = this._argval = this._argval || new Parameters(),\n          argops = this._argops = this._argops || [],\n          deps = [];\n    let name, value, n, i;\n\n    const add = (name, index, value) => {\n      if (value instanceof Operator) {\n        if (value !== this) {\n          if (react) value.targets().add(this);\n          deps.push(value);\n        }\n\n        argops.push({\n          op: value,\n          name: name,\n          index: index\n        });\n      } else {\n        argval.set(name, index, value);\n      }\n    };\n\n    for (name in params) {\n      value = params[name];\n\n      if (name === PULSE) {\n        array(value).forEach(op => {\n          if (!(op instanceof Operator)) {\n            error('Pulse parameters must be operator instances.');\n          } else if (op !== this) {\n            op.targets().add(this);\n            deps.push(op);\n          }\n        });\n        this.source = value;\n      } else if (isArray(value)) {\n        argval.set(name, -1, Array(n = value.length));\n\n        for (i = 0; i < n; ++i) add(name, i, value[i]);\n      } else {\n        add(name, -1, value);\n      }\n    }\n\n    this.marshall().clear(); // initialize values\n\n    if (initonly) argops.initonly = true;\n    return deps;\n  },\n\n  /**\n   * Internal method for marshalling parameter values.\n   * Visits each operator dependency to pull the latest value.\n   * @return {Parameters} A Parameters object to pass to the update function.\n   */\n  marshall(stamp) {\n    const argval = this._argval || NO_PARAMS,\n          argops = this._argops;\n    let item, i, op, mod;\n\n    if (argops) {\n      const n = argops.length;\n\n      for (i = 0; i < n; ++i) {\n        item = argops[i];\n        op = item.op;\n        mod = op.modified() && op.stamp === stamp;\n        argval.set(item.name, item.index, op.value, mod);\n      }\n\n      if (argops.initonly) {\n        for (i = 0; i < n; ++i) {\n          item = argops[i];\n          item.op.targets().remove(this);\n        }\n\n        this._argops = null;\n        this._update = null;\n      }\n    }\n\n    return argval;\n  },\n\n  /**\n   * Detach this operator from the dataflow.\n   * Unregisters listeners on upstream dependencies.\n   */\n  detach() {\n    const argops = this._argops;\n    let i, n, item, op;\n\n    if (argops) {\n      for (i = 0, n = argops.length; i < n; ++i) {\n        item = argops[i];\n        op = item.op;\n\n        if (op._targets) {\n          op._targets.remove(this);\n        }\n      }\n    } // remove references to the source and pulse object,\n    // if present, to prevent memory leaks of old data.\n\n\n    this.pulse = null;\n    this.source = null;\n  },\n\n  /**\n   * Delegate method to perform operator processing.\n   * Subclasses can override this method to perform custom processing.\n   * By default, it marshalls parameters and calls the update function\n   * if that function is defined. If the update function does not\n   * change the operator value then StopPropagation is returned.\n   * If no update function is defined, this method does nothing.\n   * @param {Pulse} pulse - the current dataflow pulse.\n   * @return The output pulse or StopPropagation. A falsy return value\n   *   (including undefined) will let the input pulse pass through.\n   */\n  evaluate(pulse) {\n    const update = this._update;\n\n    if (update) {\n      const params = this.marshall(pulse.stamp),\n            v = update.call(this, params, pulse);\n      params.clear();\n\n      if (v !== this.value) {\n        this.value = v;\n      } else if (!this.modified()) {\n        return pulse.StopPropagation;\n      }\n    }\n  },\n\n  /**\n   * Run this operator for the current pulse. If this operator has already\n   * been run at (or after) the pulse timestamp, returns StopPropagation.\n   * Internally, this method calls {@link evaluate} to perform processing.\n   * If {@link evaluate} returns a falsy value, the input pulse is returned.\n   * This method should NOT be overridden, instead overrride {@link evaluate}.\n   * @param {Pulse} pulse - the current dataflow pulse.\n   * @return the output pulse for this operator (or StopPropagation)\n   */\n  run(pulse) {\n    if (pulse.stamp < this.stamp) return pulse.StopPropagation;\n    let rv;\n\n    if (this.skip()) {\n      this.skip(false);\n      rv = 0;\n    } else {\n      rv = this.evaluate(pulse);\n    }\n\n    return this.pulse = rv || pulse;\n  }\n\n};\n\n/**\n * Add an operator to the dataflow graph. This function accepts a\n * variety of input argument types. The basic signature supports an\n * initial value, update function and parameters. If the first parameter\n * is an Operator instance, it will be added directly. If it is a\n * constructor for an Operator subclass, a new instance will be instantiated.\n * Otherwise, if the first parameter is a function instance, it will be used\n * as the update function and a null initial value is assumed.\n * @param {*} init - One of: the operator to add, the initial value of\n *   the operator, an operator class to instantiate, or an update function.\n * @param {function} [update] - The operator update function.\n * @param {object} [params] - The operator parameters.\n * @param {boolean} [react=true] - Flag indicating if this operator should\n *   listen for changes to upstream operators included as parameters.\n * @return {Operator} - The added operator.\n */\n\nfunction add (init, update, params, react) {\n  let shift = 1,\n      op;\n\n  if (init instanceof Operator) {\n    op = init;\n  } else if (init && init.prototype instanceof Operator) {\n    op = new init();\n  } else if (isFunction(init)) {\n    op = new Operator(null, init);\n  } else {\n    shift = 0;\n    op = new Operator(init, update);\n  }\n\n  this.rank(op);\n\n  if (shift) {\n    react = params;\n    params = update;\n  }\n\n  if (params) this.connect(op, op.parameters(params, react));\n  this.touch(op);\n  return op;\n}\n\n/**\n * Connect a target operator as a dependent of source operators.\n * If necessary, this method will rerank the target operator and its\n * dependents to ensure propagation proceeds in a topologically sorted order.\n * @param {Operator} target - The target operator.\n * @param {Array<Operator>} - The source operators that should propagate\n *   to the target operator.\n */\nfunction connect (target, sources) {\n  const targetRank = target.rank,\n        n = sources.length;\n\n  for (let i = 0; i < n; ++i) {\n    if (targetRank < sources[i].rank) {\n      this.rerank(target);\n      return;\n    }\n  }\n}\n\nlet STREAM_ID = 0;\n/**\n * Models an event stream.\n * @constructor\n * @param {function(Object, number): boolean} [filter] - Filter predicate.\n *   Events pass through when truthy, events are suppressed when falsy.\n * @param {function(Object): *} [apply] - Applied to input events to produce\n *   new event values.\n * @param {function(Object)} [receive] - Event callback function to invoke\n *   upon receipt of a new event. Use to override standard event processing.\n */\n\nfunction EventStream(filter, apply, receive) {\n  this.id = ++STREAM_ID;\n  this.value = null;\n  if (receive) this.receive = receive;\n  if (filter) this._filter = filter;\n  if (apply) this._apply = apply;\n}\n/**\n * Creates a new event stream instance with the provided\n * (optional) filter, apply and receive functions.\n * @param {function(Object, number): boolean} [filter] - Filter predicate.\n *   Events pass through when truthy, events are suppressed when falsy.\n * @param {function(Object): *} [apply] - Applied to input events to produce\n *   new event values.\n * @see EventStream\n */\n\nfunction stream(filter, apply, receive) {\n  return new EventStream(filter, apply, receive);\n}\nEventStream.prototype = {\n  _filter: truthy,\n  _apply: identity,\n\n  targets() {\n    return this._targets || (this._targets = UniqueList(id));\n  },\n\n  consume(_) {\n    if (!arguments.length) return !!this._consume;\n    this._consume = !!_;\n    return this;\n  },\n\n  receive(evt) {\n    if (this._filter(evt)) {\n      const val = this.value = this._apply(evt),\n            trg = this._targets,\n            n = trg ? trg.length : 0;\n\n      for (let i = 0; i < n; ++i) trg[i].receive(val);\n\n      if (this._consume) {\n        evt.preventDefault();\n        evt.stopPropagation();\n      }\n    }\n  },\n\n  filter(filter) {\n    const s = stream(filter);\n    this.targets().add(s);\n    return s;\n  },\n\n  apply(apply) {\n    const s = stream(null, apply);\n    this.targets().add(s);\n    return s;\n  },\n\n  merge() {\n    const s = stream();\n    this.targets().add(s);\n\n    for (let i = 0, n = arguments.length; i < n; ++i) {\n      arguments[i].targets().add(s);\n    }\n\n    return s;\n  },\n\n  throttle(pause) {\n    let t = -1;\n    return this.filter(() => {\n      const now = Date.now();\n\n      if (now - t > pause) {\n        t = now;\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  },\n\n  debounce(delay) {\n    const s = stream();\n    this.targets().add(stream(null, null, debounce(delay, e => {\n      const df = e.dataflow;\n      s.receive(e);\n      if (df && df.run) df.run();\n    })));\n    return s;\n  },\n\n  between(a, b) {\n    let active = false;\n    a.targets().add(stream(null, null, () => active = true));\n    b.targets().add(stream(null, null, () => active = false));\n    return this.filter(() => active);\n  },\n\n  detach() {\n    // ensures compatibility with operators (#2753)\n    // remove references to other streams and filter functions that may\n    // be bound to subcontexts that need to be garbage collected.\n    this._filter = truthy;\n    this._targets = null;\n  }\n\n};\n\n/**\n * Create a new event stream from an event source.\n * @param {object} source - The event source to monitor. The input must\n *  support the addEventListener method.\n * @param {string} type - The event type.\n * @param {function(object): boolean} [filter] - Event filter function.\n * @param {function(object): *} [apply] - Event application function.\n *   If provided, this function will be invoked and the result will be\n *   used as the downstream event value.\n * @return {EventStream}\n */\n\nfunction events (source, type, filter, apply) {\n  const df = this,\n        s = stream(filter, apply),\n        send = function (e) {\n    e.dataflow = df;\n\n    try {\n      s.receive(e);\n    } catch (error) {\n      df.error(error);\n    } finally {\n      df.run();\n    }\n  };\n\n  let sources;\n\n  if (typeof source === 'string' && typeof document !== 'undefined') {\n    sources = document.querySelectorAll(source);\n  } else {\n    sources = array(source);\n  }\n\n  const n = sources.length;\n\n  for (let i = 0; i < n; ++i) {\n    sources[i].addEventListener(type, send);\n  }\n\n  return s;\n}\n\nfunction parse(data, format) {\n  const locale = this.locale();\n  return read(data, format, locale.timeParse, locale.utcParse);\n}\n/**\n * Ingests new data into the dataflow. First parses the data using the\n * vega-loader read method, then pulses a changeset to the target operator.\n * @param {Operator} target - The Operator to target with ingested data,\n *   typically a Collect transform instance.\n * @param {*} data - The input data, prior to parsing. For JSON this may\n *   be a string or an object. For CSV, TSV, etc should be a string.\n * @param {object} format - The data format description for parsing\n *   loaded data. This object is passed to the vega-loader read method.\n * @returns {Dataflow}\n */\n\nfunction ingest(target, data, format) {\n  data = this.parse(data, format);\n  return this.pulse(target, this.changeset().insert(data));\n}\n/**\n * Request data from an external source, parse it, and return a Promise.\n * @param {string} url - The URL from which to load the data. This string\n *   is passed to the vega-loader load method.\n * @param {object} [format] - The data format description for parsing\n *   loaded data. This object is passed to the vega-loader read method.\n * @return {Promise} A Promise that resolves upon completion of the request.\n *   The resolved object contains the following properties:\n *   - data: an array of parsed data (or null upon error)\n *   - status: a code for success (0), load fail (-1), or parse fail (-2)\n */\n\nasync function request(url, format) {\n  const df = this;\n  let status = 0,\n      data;\n\n  try {\n    data = await df.loader().load(url, {\n      context: 'dataflow',\n      response: responseType(format && format.type)\n    });\n\n    try {\n      data = df.parse(data, format);\n    } catch (err) {\n      status = -2;\n      df.warn('Data ingestion failed', url, err);\n    }\n  } catch (err) {\n    status = -1;\n    df.warn('Loading failed', url, err);\n  }\n\n  return {\n    data,\n    status\n  };\n}\nasync function preload(target, url, format) {\n  const df = this,\n        pending = df._pending || loadPending(df);\n  pending.requests += 1;\n  const res = await df.request(url, format);\n  df.pulse(target, df.changeset().remove(truthy).insert(res.data || []));\n  pending.done();\n  return res;\n}\n\nfunction loadPending(df) {\n  let accept;\n  const pending = new Promise(a => accept = a);\n  pending.requests = 0;\n\n  pending.done = () => {\n    if (--pending.requests === 0) {\n      df._pending = null;\n      accept(df);\n    }\n  };\n\n  return df._pending = pending;\n}\n\nconst SKIP = {\n  skip: true\n};\n/**\n * Perform operator updates in response to events. Applies an\n * update function to compute a new operator value. If the update function\n * returns a {@link ChangeSet}, the operator will be pulsed with those tuple\n * changes. Otherwise, the operator value will be updated to the return value.\n * @param {EventStream|Operator} source - The event source to react to.\n *   This argument can be either an EventStream or an Operator.\n * @param {Operator|function(object):Operator} target - The operator to update.\n *   This argument can either be an Operator instance or (if the source\n *   argument is an EventStream), a function that accepts an event object as\n *   input and returns an Operator to target.\n * @param {function(Parameters,Event): *} [update] - Optional update function\n *   to compute the new operator value, or a literal value to set. Update\n *   functions expect to receive a parameter object and event as arguments.\n *   This function can either return a new operator value or (if the source\n *   argument is an EventStream) a {@link ChangeSet} instance to pulse\n *   the target operator with tuple changes.\n * @param {object} [params] - The update function parameters.\n * @param {object} [options] - Additional options hash. If not overridden,\n *   updated operators will be skipped by default.\n * @param {boolean} [options.skip] - If true, the operator will\n *  be skipped: it will not be evaluated, but its dependents will be.\n * @param {boolean} [options.force] - If true, the operator will\n *   be re-evaluated even if its value has not changed.\n * @return {Dataflow}\n */\n\nfunction on (source, target, update, params, options) {\n  const fn = source instanceof Operator ? onOperator : onStream;\n  fn(this, source, target, update, params, options);\n  return this;\n}\n\nfunction onStream(df, stream, target, update, params, options) {\n  const opt = extend({}, options, SKIP);\n  let func, op;\n  if (!isFunction(target)) target = constant(target);\n\n  if (update === undefined) {\n    func = e => df.touch(target(e));\n  } else if (isFunction(update)) {\n    op = new Operator(null, update, params, false);\n\n    func = e => {\n      op.evaluate(e);\n      const t = target(e),\n            v = op.value;\n      isChangeSet(v) ? df.pulse(t, v, options) : df.update(t, v, opt);\n    };\n  } else {\n    func = e => df.update(target(e), update, opt);\n  }\n\n  stream.apply(func);\n}\n\nfunction onOperator(df, source, target, update, params, options) {\n  if (update === undefined) {\n    source.targets().add(target);\n  } else {\n    const opt = options || {},\n          op = new Operator(null, updater(target, update), params, false);\n    op.modified(opt.force);\n    op.rank = source.rank; // immediately follow source\n\n    source.targets().add(op); // add dependency\n\n    if (target) {\n      op.skip(true); // skip first invocation\n\n      op.value = target.value; // initialize value\n\n      op.targets().add(target); // chain dependencies\n\n      df.connect(target, [op]); // rerank as needed, #1672\n    }\n  }\n}\n\nfunction updater(target, update) {\n  update = isFunction(update) ? update : constant(update);\n  return target ? function (_, pulse) {\n    const value = update(_, pulse);\n\n    if (!target.skip()) {\n      target.skip(value !== this.value).value = value;\n    }\n\n    return value;\n  } : update;\n}\n\n/**\n * Assigns a rank to an operator. Ranks are assigned in increasing order\n * by incrementing an internal rank counter.\n * @param {Operator} op - The operator to assign a rank.\n */\n\nfunction rank(op) {\n  op.rank = ++this._rank;\n}\n/**\n * Re-ranks an operator and all downstream target dependencies. This\n * is necessary when upstream dependencies of higher rank are added to\n * a target operator.\n * @param {Operator} op - The operator to re-rank.\n */\n\nfunction rerank(op) {\n  const queue = [op];\n  let cur, list, i;\n\n  while (queue.length) {\n    this.rank(cur = queue.pop());\n\n    if (list = cur._targets) {\n      for (i = list.length; --i >= 0;) {\n        queue.push(cur = list[i]);\n        if (cur === op) error('Cycle detected in dataflow graph.');\n      }\n    }\n  }\n}\n\n/**\n * Sentinel value indicating pulse propagation should stop.\n */\n\nconst StopPropagation = {}; // Pulse visit type flags\n\nconst ADD = 1 << 0,\n      REM = 1 << 1,\n      MOD = 1 << 2,\n      ADD_REM = ADD | REM,\n      ADD_MOD = ADD | MOD,\n      ALL = ADD | REM | MOD,\n      REFLOW = 1 << 3,\n      SOURCE = 1 << 4,\n      NO_SOURCE = 1 << 5,\n      NO_FIELDS = 1 << 6;\n/**\n * A Pulse enables inter-operator communication during a run of the\n * dataflow graph. In addition to the current timestamp, a pulse may also\n * contain a change-set of added, removed or modified data tuples, as well as\n * a pointer to a full backing data source. Tuple change sets may not\n * be fully materialized; for example, to prevent needless array creation\n * a change set may include larger arrays and corresponding filter functions.\n * The pulse provides a {@link visit} method to enable proper and efficient\n * iteration over requested data tuples.\n *\n * In addition, each pulse can track modification flags for data tuple fields.\n * Responsible transform operators should call the {@link modifies} method to\n * indicate changes to data fields. The {@link modified} method enables\n * querying of this modification state.\n *\n * @constructor\n * @param {Dataflow} dataflow - The backing dataflow instance.\n * @param {number} stamp - The current propagation timestamp.\n * @param {string} [encode] - An optional encoding set name, which is then\n *   accessible as Pulse.encode. Operators can respond to (or ignore) this\n *   setting as appropriate. This parameter can be used in conjunction with\n *   the Encode transform in the vega-encode module.\n */\n\nfunction Pulse(dataflow, stamp, encode) {\n  this.dataflow = dataflow;\n  this.stamp = stamp == null ? -1 : stamp;\n  this.add = [];\n  this.rem = [];\n  this.mod = [];\n  this.fields = null;\n  this.encode = encode || null;\n}\n\nfunction materialize(data, filter) {\n  const out = [];\n  visitArray(data, filter, _ => out.push(_));\n  return out;\n}\n\nfunction filter(pulse, flags) {\n  const map = {};\n  pulse.visit(flags, t => {\n    map[tupleid(t)] = 1;\n  });\n  return t => map[tupleid(t)] ? null : t;\n}\n\nfunction addFilter(a, b) {\n  return a ? (t, i) => a(t, i) && b(t, i) : b;\n}\n\nPulse.prototype = {\n  /**\n   * Sentinel value indicating pulse propagation should stop.\n   */\n  StopPropagation,\n\n  /**\n   * Boolean flag indicating ADD (added) tuples.\n   */\n  ADD,\n\n  /**\n   * Boolean flag indicating REM (removed) tuples.\n   */\n  REM,\n\n  /**\n   * Boolean flag indicating MOD (modified) tuples.\n   */\n  MOD,\n\n  /**\n   * Boolean flag indicating ADD (added) and REM (removed) tuples.\n   */\n  ADD_REM,\n\n  /**\n   * Boolean flag indicating ADD (added) and MOD (modified) tuples.\n   */\n  ADD_MOD,\n\n  /**\n   * Boolean flag indicating ADD, REM and MOD tuples.\n   */\n  ALL,\n\n  /**\n   * Boolean flag indicating all tuples in a data source\n   * except for the ADD, REM and MOD tuples.\n   */\n  REFLOW,\n\n  /**\n   * Boolean flag indicating a 'pass-through' to a\n   * backing data source, ignoring ADD, REM and MOD tuples.\n   */\n  SOURCE,\n\n  /**\n   * Boolean flag indicating that source data should be\n   * suppressed when creating a forked pulse.\n   */\n  NO_SOURCE,\n\n  /**\n   * Boolean flag indicating that field modifications should be\n   * suppressed when creating a forked pulse.\n   */\n  NO_FIELDS,\n\n  /**\n   * Creates a new pulse based on the values of this pulse.\n   * The dataflow, time stamp and field modification values are copied over.\n   * By default, new empty ADD, REM and MOD arrays are created.\n   * @param {number} flags - Integer of boolean flags indicating which (if any)\n   *   tuple arrays should be copied to the new pulse. The supported flag values\n   *   are ADD, REM and MOD. Array references are copied directly: new array\n   *   instances are not created.\n   * @return {Pulse} - The forked pulse instance.\n   * @see init\n   */\n  fork(flags) {\n    return new Pulse(this.dataflow).init(this, flags);\n  },\n\n  /**\n   * Creates a copy of this pulse with new materialized array\n   * instances for the ADD, REM, MOD, and SOURCE arrays.\n   * The dataflow, time stamp and field modification values are copied over.\n   * @return {Pulse} - The cloned pulse instance.\n   * @see init\n   */\n  clone() {\n    const p = this.fork(ALL);\n    p.add = p.add.slice();\n    p.rem = p.rem.slice();\n    p.mod = p.mod.slice();\n    if (p.source) p.source = p.source.slice();\n    return p.materialize(ALL | SOURCE);\n  },\n\n  /**\n   * Returns a pulse that adds all tuples from a backing source. This is\n   * useful for cases where operators are added to a dataflow after an\n   * upstream data pipeline has already been processed, ensuring that\n   * new operators can observe all tuples within a stream.\n   * @return {Pulse} - A pulse instance with all source tuples included\n   *   in the add array. If the current pulse already has all source\n   *   tuples in its add array, it is returned directly. If the current\n   *   pulse does not have a backing source, it is returned directly.\n   */\n  addAll() {\n    let p = this;\n    const reuse = !p.source || p.add === p.rem // special case for indexed set (e.g., crossfilter)\n    || !p.rem.length && p.source.length === p.add.length;\n\n    if (reuse) {\n      return p;\n    } else {\n      p = new Pulse(this.dataflow).init(this);\n      p.add = p.source;\n      p.rem = []; // new operators can ignore rem #2769\n\n      return p;\n    }\n  },\n\n  /**\n   * Initialize this pulse based on the values of another pulse. This method\n   * is used internally by {@link fork} to initialize a new forked tuple.\n   * The dataflow, time stamp and field modification values are copied over.\n   * By default, new empty ADD, REM and MOD arrays are created.\n   * @param {Pulse} src - The source pulse to copy from.\n   * @param {number} flags - Integer of boolean flags indicating which (if any)\n   *   tuple arrays should be copied to the new pulse. The supported flag values\n   *   are ADD, REM and MOD. Array references are copied directly: new array\n   *   instances are not created. By default, source data arrays are copied\n   *   to the new pulse. Use the NO_SOURCE flag to enforce a null source.\n   * @return {Pulse} - Returns this Pulse instance.\n   */\n  init(src, flags) {\n    const p = this;\n    p.stamp = src.stamp;\n    p.encode = src.encode;\n\n    if (src.fields && !(flags & NO_FIELDS)) {\n      p.fields = src.fields;\n    }\n\n    if (flags & ADD) {\n      p.addF = src.addF;\n      p.add = src.add;\n    } else {\n      p.addF = null;\n      p.add = [];\n    }\n\n    if (flags & REM) {\n      p.remF = src.remF;\n      p.rem = src.rem;\n    } else {\n      p.remF = null;\n      p.rem = [];\n    }\n\n    if (flags & MOD) {\n      p.modF = src.modF;\n      p.mod = src.mod;\n    } else {\n      p.modF = null;\n      p.mod = [];\n    }\n\n    if (flags & NO_SOURCE) {\n      p.srcF = null;\n      p.source = null;\n    } else {\n      p.srcF = src.srcF;\n      p.source = src.source;\n      if (src.cleans) p.cleans = src.cleans;\n    }\n\n    return p;\n  },\n\n  /**\n   * Schedules a function to run after pulse propagation completes.\n   * @param {function} func - The function to run.\n   */\n  runAfter(func) {\n    this.dataflow.runAfter(func);\n  },\n\n  /**\n   * Indicates if tuples have been added, removed or modified.\n   * @param {number} [flags] - The tuple types (ADD, REM or MOD) to query.\n   *   Defaults to ALL, returning true if any tuple type has changed.\n   * @return {boolean} - Returns true if one or more queried tuple types have\n   *   changed, false otherwise.\n   */\n  changed(flags) {\n    const f = flags || ALL;\n    return f & ADD && this.add.length || f & REM && this.rem.length || f & MOD && this.mod.length;\n  },\n\n  /**\n   * Forces a \"reflow\" of tuple values, such that all tuples in the backing\n   * source are added to the MOD set, unless already present in the ADD set.\n   * @param {boolean} [fork=false] - If true, returns a forked copy of this\n   *   pulse, and invokes reflow on that derived pulse.\n   * @return {Pulse} - The reflowed pulse instance.\n   */\n  reflow(fork) {\n    if (fork) return this.fork(ALL).reflow();\n    const len = this.add.length,\n          src = this.source && this.source.length;\n\n    if (src && src !== len) {\n      this.mod = this.source;\n      if (len) this.filter(MOD, filter(this, ADD));\n    }\n\n    return this;\n  },\n\n  /**\n   * Get/set metadata to pulse requesting garbage collection\n   * to reclaim currently unused resources.\n   */\n  clean(value) {\n    if (arguments.length) {\n      this.cleans = !!value;\n      return this;\n    } else {\n      return this.cleans;\n    }\n  },\n\n  /**\n   * Marks one or more data field names as modified to assist dependency\n   * tracking and incremental processing by transform operators.\n   * @param {string|Array<string>} _ - The field(s) to mark as modified.\n   * @return {Pulse} - This pulse instance.\n   */\n  modifies(_) {\n    const hash = this.fields || (this.fields = {});\n\n    if (isArray(_)) {\n      _.forEach(f => hash[f] = true);\n    } else {\n      hash[_] = true;\n    }\n\n    return this;\n  },\n\n  /**\n   * Checks if one or more data fields have been modified during this pulse\n   * propagation timestamp.\n   * @param {string|Array<string>} _ - The field(s) to check for modified.\n   * @param {boolean} nomod - If true, will check the modified flag even if\n   *   no mod tuples exist. If false (default), mod tuples must be present.\n   * @return {boolean} - Returns true if any of the provided fields has been\n   *   marked as modified, false otherwise.\n   */\n  modified(_, nomod) {\n    const fields = this.fields;\n    return !((nomod || this.mod.length) && fields) ? false : !arguments.length ? !!fields : isArray(_) ? _.some(f => fields[f]) : fields[_];\n  },\n\n  /**\n   * Adds a filter function to one more tuple sets. Filters are applied to\n   * backing tuple arrays, to determine the actual set of tuples considered\n   * added, removed or modified. They can be used to delay materialization of\n   * a tuple set in order to avoid expensive array copies. In addition, the\n   * filter functions can serve as value transformers: unlike standard predicate\n   * function (which return boolean values), Pulse filters should return the\n   * actual tuple value to process. If a tuple set is already filtered, the\n   * new filter function will be appended into a conjuntive ('and') query.\n   * @param {number} flags - Flags indicating the tuple set(s) to filter.\n   * @param {function(*):object} filter - Filter function that will be applied\n   *   to the tuple set array, and should return a data tuple if the value\n   *   should be included in the tuple set, and falsy (or null) otherwise.\n   * @return {Pulse} - Returns this pulse instance.\n   */\n  filter(flags, filter) {\n    const p = this;\n    if (flags & ADD) p.addF = addFilter(p.addF, filter);\n    if (flags & REM) p.remF = addFilter(p.remF, filter);\n    if (flags & MOD) p.modF = addFilter(p.modF, filter);\n    if (flags & SOURCE) p.srcF = addFilter(p.srcF, filter);\n    return p;\n  },\n\n  /**\n   * Materialize one or more tuple sets in this pulse. If the tuple set(s) have\n   * a registered filter function, it will be applied and the tuple set(s) will\n   * be replaced with materialized tuple arrays.\n   * @param {number} flags - Flags indicating the tuple set(s) to materialize.\n   * @return {Pulse} - Returns this pulse instance.\n   */\n  materialize(flags) {\n    flags = flags || ALL;\n    const p = this;\n\n    if (flags & ADD && p.addF) {\n      p.add = materialize(p.add, p.addF);\n      p.addF = null;\n    }\n\n    if (flags & REM && p.remF) {\n      p.rem = materialize(p.rem, p.remF);\n      p.remF = null;\n    }\n\n    if (flags & MOD && p.modF) {\n      p.mod = materialize(p.mod, p.modF);\n      p.modF = null;\n    }\n\n    if (flags & SOURCE && p.srcF) {\n      p.source = p.source.filter(p.srcF);\n      p.srcF = null;\n    }\n\n    return p;\n  },\n\n  /**\n   * Visit one or more tuple sets in this pulse.\n   * @param {number} flags - Flags indicating the tuple set(s) to visit.\n   *   Legal values are ADD, REM, MOD and SOURCE (if a backing data source\n   *   has been set).\n   * @param {function(object):*} - Visitor function invoked per-tuple.\n   * @return {Pulse} - Returns this pulse instance.\n   */\n  visit(flags, visitor) {\n    const p = this,\n          v = visitor;\n\n    if (flags & SOURCE) {\n      visitArray(p.source, p.srcF, v);\n      return p;\n    }\n\n    if (flags & ADD) visitArray(p.add, p.addF, v);\n    if (flags & REM) visitArray(p.rem, p.remF, v);\n    if (flags & MOD) visitArray(p.mod, p.modF, v);\n    const src = p.source;\n\n    if (flags & REFLOW && src) {\n      const sum = p.add.length + p.mod.length;\n\n      if (sum === src.length) ; else if (sum) {\n        visitArray(src, filter(p, ADD_MOD), v);\n      } else {\n        // if no add/rem/mod tuples, visit source\n        visitArray(src, p.srcF, v);\n      }\n    }\n\n    return p;\n  }\n\n};\n\n/**\n * Represents a set of multiple pulses. Used as input for operators\n * that accept multiple pulses at a time. Contained pulses are\n * accessible via the public \"pulses\" array property. This pulse doe\n * not carry added, removed or modified tuples directly. However,\n * the visit method can be used to traverse all such tuples contained\n * in sub-pulses with a timestamp matching this parent multi-pulse.\n * @constructor\n * @param {Dataflow} dataflow - The backing dataflow instance.\n * @param {number} stamp - The timestamp.\n * @param {Array<Pulse>} pulses - The sub-pulses for this multi-pulse.\n */\n\nfunction MultiPulse(dataflow, stamp, pulses, encode) {\n  const p = this,\n        n = pulses.length;\n  let c = 0;\n  this.dataflow = dataflow;\n  this.stamp = stamp;\n  this.fields = null;\n  this.encode = encode || null;\n  this.pulses = pulses;\n\n  for (let i = 0; i < n; ++i) {\n    const pulse = pulses[i];\n    if (pulse.stamp !== stamp) continue;\n\n    if (pulse.fields) {\n      const hash = p.fields || (p.fields = {});\n\n      for (const f in pulse.fields) {\n        hash[f] = 1;\n      }\n    }\n\n    if (pulse.changed(p.ADD)) c |= p.ADD;\n    if (pulse.changed(p.REM)) c |= p.REM;\n    if (pulse.changed(p.MOD)) c |= p.MOD;\n  }\n\n  this.changes = c;\n}\ninherits(MultiPulse, Pulse, {\n  /**\n   * Creates a new pulse based on the values of this pulse.\n   * The dataflow, time stamp and field modification values are copied over.\n   * @return {Pulse}\n   */\n  fork(flags) {\n    const p = new Pulse(this.dataflow).init(this, flags & this.NO_FIELDS);\n\n    if (flags !== undefined) {\n      if (flags & p.ADD) this.visit(p.ADD, t => p.add.push(t));\n      if (flags & p.REM) this.visit(p.REM, t => p.rem.push(t));\n      if (flags & p.MOD) this.visit(p.MOD, t => p.mod.push(t));\n    }\n\n    return p;\n  },\n\n  changed(flags) {\n    return this.changes & flags;\n  },\n\n  modified(_) {\n    const p = this,\n          fields = p.fields;\n    return !(fields && p.changes & p.MOD) ? 0 : isArray(_) ? _.some(f => fields[f]) : fields[_];\n  },\n\n  filter() {\n    error('MultiPulse does not support filtering.');\n  },\n\n  materialize() {\n    error('MultiPulse does not support materialization.');\n  },\n\n  visit(flags, visitor) {\n    const p = this,\n          pulses = p.pulses,\n          n = pulses.length;\n    let i = 0;\n\n    if (flags & p.SOURCE) {\n      for (; i < n; ++i) {\n        pulses[i].visit(flags, visitor);\n      }\n    } else {\n      for (; i < n; ++i) {\n        if (pulses[i].stamp === p.stamp) {\n          pulses[i].visit(flags, visitor);\n        }\n      }\n    }\n\n    return p;\n  }\n\n});\n\n/* eslint-disable require-atomic-updates */\n/**\n * Evaluates the dataflow and returns a Promise that resolves when pulse\n * propagation completes. This method will increment the current timestamp\n * and process all updated, pulsed and touched operators. When invoked for\n * the first time, all registered operators will be processed. This method\n * should not be invoked by third-party clients, use {@link runAsync} or\n * {@link run} instead.\n * @param {string} [encode] - The name of an encoding set to invoke during\n *   propagation. This value is added to generated Pulse instances;\n *   operators can then respond to (or ignore) this setting as appropriate.\n *   This parameter can be used in conjunction with the Encode transform in\n *   the vega-encode package.\n * @param {function} [prerun] - An optional callback function to invoke\n *   immediately before dataflow evaluation commences.\n * @param {function} [postrun] - An optional callback function to invoke\n *   after dataflow evaluation completes. The callback will be invoked\n *   after those registered via {@link runAfter}.\n * @return {Promise} - A promise that resolves to this dataflow after\n *   evaluation completes.\n */\n\nasync function evaluate(encode, prerun, postrun) {\n  const df = this,\n        async = []; // if the pulse value is set, this is a re-entrant call\n\n  if (df._pulse) return reentrant(df); // wait for pending datasets to load\n\n  if (df._pending) await df._pending; // invoke prerun function, if provided\n\n  if (prerun) await asyncCallback(df, prerun); // exit early if there are no updates\n\n  if (!df._touched.length) {\n    df.debug('Dataflow invoked, but nothing to do.');\n    return df;\n  } // increment timestamp clock\n\n\n  const stamp = ++df._clock; // set the current pulse\n\n  df._pulse = new Pulse(df, stamp, encode); // initialize priority queue, reset touched operators\n\n  df._touched.forEach(op => df._enqueue(op, true));\n\n  df._touched = UniqueList(id);\n  let count = 0,\n      op,\n      next,\n      error;\n\n  try {\n    while (df._heap.size() > 0) {\n      // dequeue operator with highest priority\n      op = df._heap.pop(); // re-queue if rank changed\n\n      if (op.rank !== op.qrank) {\n        df._enqueue(op, true);\n\n        continue;\n      } // otherwise, evaluate the operator\n\n\n      next = op.run(df._getPulse(op, encode));\n\n      if (next.then) {\n        // await if operator returns a promise directly\n        next = await next;\n      } else if (next.async) {\n        // queue parallel asynchronous execution\n        async.push(next.async);\n        next = StopPropagation;\n      } // propagate evaluation, enqueue dependent operators\n\n\n      if (next !== StopPropagation) {\n        if (op._targets) op._targets.forEach(op => df._enqueue(op));\n      } // increment visit counter\n\n\n      ++count;\n    }\n  } catch (err) {\n    df._heap.clear();\n\n    error = err;\n  } // reset pulse map\n\n\n  df._input = {};\n  df._pulse = null;\n  df.debug(`Pulse ${stamp}: ${count} operators`);\n\n  if (error) {\n    df._postrun = [];\n    df.error(error);\n  } // invoke callbacks queued via runAfter\n\n\n  if (df._postrun.length) {\n    const pr = df._postrun.sort((a, b) => b.priority - a.priority);\n\n    df._postrun = [];\n\n    for (let i = 0; i < pr.length; ++i) {\n      await asyncCallback(df, pr[i].callback);\n    }\n  } // invoke postrun function, if provided\n\n\n  if (postrun) await asyncCallback(df, postrun); // handle non-blocking asynchronous callbacks\n\n  if (async.length) {\n    Promise.all(async).then(cb => df.runAsync(null, () => {\n      cb.forEach(f => {\n        try {\n          f(df);\n        } catch (err) {\n          df.error(err);\n        }\n      });\n    }));\n  }\n\n  return df;\n}\n/**\n * Queues dataflow evaluation to run once any other queued evaluations have\n * completed and returns a Promise that resolves when the queued pulse\n * propagation completes. If provided, a callback function will be invoked\n * immediately before evaluation commences. This method will ensure a\n * separate evaluation is invoked for each time it is called.\n * @param {string} [encode] - The name of an encoding set to invoke during\n *   propagation. This value is added to generated Pulse instances;\n *   operators can then respond to (or ignore) this setting as appropriate.\n *   This parameter can be used in conjunction with the Encode transform in\n *   the vega-encode package.\n * @param {function} [prerun] - An optional callback function to invoke\n *   immediately before dataflow evaluation commences.\n * @param {function} [postrun] - An optional callback function to invoke\n *   after dataflow evaluation completes. The callback will be invoked\n *   after those registered via {@link runAfter}.\n * @return {Promise} - A promise that resolves to this dataflow after\n *   evaluation completes.\n */\n\nasync function runAsync(encode, prerun, postrun) {\n  // await previously queued functions\n  while (this._running) await this._running; // run dataflow, manage running promise\n\n\n  const clear = () => this._running = null;\n\n  (this._running = this.evaluate(encode, prerun, postrun)).then(clear, clear);\n  return this._running;\n}\n/**\n * Requests dataflow evaluation and the immediately returns this dataflow\n * instance. If there are pending data loading or other asynchronous\n * operations, the dataflow will evaluate asynchronously after this method\n * has been invoked. To track when dataflow evaluation completes, use the\n * {@link runAsync} method instead. This method will raise an error if\n * invoked while the dataflow is already in the midst of evaluation.\n * @param {string} [encode] - The name of an encoding set to invoke during\n *   propagation. This value is added to generated Pulse instances;\n *   operators can then respond to (or ignore) this setting as appropriate.\n *   This parameter can be used in conjunction with the Encode transform in\n *   the vega-encode module.\n * @param {function} [prerun] - An optional callback function to invoke\n *   immediately before dataflow evaluation commences.\n * @param {function} [postrun] - An optional callback function to invoke\n *   after dataflow evaluation completes. The callback will be invoked\n *   after those registered via {@link runAfter}.\n * @return {Dataflow} - This dataflow instance.\n */\n\nfunction run(encode, prerun, postrun) {\n  return this._pulse ? reentrant(this) : (this.evaluate(encode, prerun, postrun), this);\n}\n/**\n * Schedules a callback function to be invoked after the current pulse\n * propagation completes. If no propagation is currently occurring,\n * the function is invoked immediately. Callbacks scheduled via runAfter\n * are invoked immediately upon completion of the current cycle, before\n * any request queued via runAsync. This method is primarily intended for\n * internal use. Third-party callers using runAfter to schedule a callback\n * that invokes {@link run} or {@link runAsync} should not use this method,\n * but instead use {@link runAsync} with prerun or postrun arguments.\n * @param {function(Dataflow)} callback - The callback function to run.\n *   The callback will be invoked with this Dataflow instance as its\n *   sole argument.\n * @param {boolean} enqueue - A boolean flag indicating that the\n *   callback should be queued up to run after the next propagation\n *   cycle, suppressing immediate invocation when propagation is not\n *   currently occurring.\n * @param {number} [priority] - A priority value used to sort registered\n *   callbacks to determine execution order. This argument is intended\n *   for internal Vega use only.\n */\n\nfunction runAfter(callback, enqueue, priority) {\n  if (this._pulse || enqueue) {\n    // pulse propagation is currently running, queue to run after\n    this._postrun.push({\n      priority: priority || 0,\n      callback: callback\n    });\n  } else {\n    // pulse propagation already complete, invoke immediately\n    try {\n      callback(this);\n    } catch (err) {\n      this.error(err);\n    }\n  }\n}\n/**\n * Raise an error for re-entrant dataflow evaluation.\n */\n\nfunction reentrant(df) {\n  df.error('Dataflow already running. Use runAsync() to chain invocations.');\n  return df;\n}\n/**\n * Enqueue an operator into the priority queue for evaluation. The operator\n * will be enqueued if it has no registered pulse for the current cycle, or if\n * the force argument is true. Upon enqueue, this method also sets the\n * operator's qrank to the current rank value.\n * @param {Operator} op - The operator to enqueue.\n * @param {boolean} [force] - A flag indicating if the operator should be\n *   forceably added to the queue, even if it has already been previously\n *   enqueued during the current pulse propagation. This is useful when the\n *   dataflow graph is dynamically modified and the operator rank changes.\n */\n\n\nfunction enqueue(op, force) {\n  const q = op.stamp < this._clock;\n  if (q) op.stamp = this._clock;\n\n  if (q || force) {\n    op.qrank = op.rank;\n\n    this._heap.push(op);\n  }\n}\n/**\n * Provide a correct pulse for evaluating an operator. If the operator has an\n * explicit source operator, we will try to pull the pulse(s) from it.\n * If there is an array of source operators, we build a multi-pulse.\n * Otherwise, we return a current pulse with correct source data.\n * If the pulse is the pulse map has an explicit target set, we use that.\n * Else if the pulse on the upstream source operator is current, we use that.\n * Else we use the pulse from the pulse map, but copy the source tuple array.\n * @param {Operator} op - The operator for which to get an input pulse.\n * @param {string} [encode] - An (optional) encoding set name with which to\n *   annotate the returned pulse. See {@link run} for more information.\n */\n\nfunction getPulse(op, encode) {\n  const s = op.source,\n        stamp = this._clock;\n  return s && isArray(s) ? new MultiPulse(this, stamp, s.map(_ => _.pulse), encode) : this._input[op.id] || singlePulse(this._pulse, s && s.pulse);\n}\n\nfunction singlePulse(p, s) {\n  if (s && s.stamp === p.stamp) {\n    return s;\n  }\n\n  p = p.fork();\n\n  if (s && s !== StopPropagation) {\n    p.source = s.source;\n  }\n\n  return p;\n}\n\nconst NO_OPT = {\n  skip: false,\n  force: false\n};\n/**\n * Touches an operator, scheduling it to be evaluated. If invoked outside of\n * a pulse propagation, the operator will be evaluated the next time this\n * dataflow is run. If invoked in the midst of pulse propagation, the operator\n * will be queued for evaluation if and only if the operator has not yet been\n * evaluated on the current propagation timestamp.\n * @param {Operator} op - The operator to touch.\n * @param {object} [options] - Additional options hash.\n * @param {boolean} [options.skip] - If true, the operator will\n *   be skipped: it will not be evaluated, but its dependents will be.\n * @return {Dataflow}\n */\n\nfunction touch(op, options) {\n  const opt = options || NO_OPT;\n\n  if (this._pulse) {\n    // if in midst of propagation, add to priority queue\n    this._enqueue(op);\n  } else {\n    // otherwise, queue for next propagation\n    this._touched.add(op);\n  }\n\n  if (opt.skip) op.skip(true);\n  return this;\n}\n/**\n * Updates the value of the given operator.\n * @param {Operator} op - The operator to update.\n * @param {*} value - The value to set.\n * @param {object} [options] - Additional options hash.\n * @param {boolean} [options.force] - If true, the operator will\n *   be re-evaluated even if its value has not changed.\n * @param {boolean} [options.skip] - If true, the operator will\n *   be skipped: it will not be evaluated, but its dependents will be.\n * @return {Dataflow}\n */\n\nfunction update(op, value, options) {\n  const opt = options || NO_OPT;\n\n  if (op.set(value) || opt.force) {\n    this.touch(op, opt);\n  }\n\n  return this;\n}\n/**\n * Pulses an operator with a changeset of tuples. If invoked outside of\n * a pulse propagation, the pulse will be applied the next time this\n * dataflow is run. If invoked in the midst of pulse propagation, the pulse\n * will be added to the set of active pulses and will be applied if and\n * only if the target operator has not yet been evaluated on the current\n * propagation timestamp.\n * @param {Operator} op - The operator to pulse.\n * @param {ChangeSet} value - The tuple changeset to apply.\n * @param {object} [options] - Additional options hash.\n * @param {boolean} [options.skip] - If true, the operator will\n *   be skipped: it will not be evaluated, but its dependents will be.\n * @return {Dataflow}\n */\n\nfunction pulse(op, changeset, options) {\n  this.touch(op, options || NO_OPT);\n  const p = new Pulse(this, this._clock + (this._pulse ? 0 : 1)),\n        t = op.pulse && op.pulse.source || [];\n  p.target = op;\n  this._input[op.id] = changeset.pulse(p, t);\n  return this;\n}\n\nfunction Heap(cmp) {\n  let nodes = [];\n  return {\n    clear: () => nodes = [],\n    size: () => nodes.length,\n    peek: () => nodes[0],\n    push: x => {\n      nodes.push(x);\n      return siftdown(nodes, 0, nodes.length - 1, cmp);\n    },\n    pop: () => {\n      const last = nodes.pop();\n      let item;\n\n      if (nodes.length) {\n        item = nodes[0];\n        nodes[0] = last;\n        siftup(nodes, 0, cmp);\n      } else {\n        item = last;\n      }\n\n      return item;\n    }\n  };\n}\n\nfunction siftdown(array, start, idx, cmp) {\n  let parent, pidx;\n  const item = array[idx];\n\n  while (idx > start) {\n    pidx = idx - 1 >> 1;\n    parent = array[pidx];\n\n    if (cmp(item, parent) < 0) {\n      array[idx] = parent;\n      idx = pidx;\n      continue;\n    }\n\n    break;\n  }\n\n  return array[idx] = item;\n}\n\nfunction siftup(array, idx, cmp) {\n  const start = idx,\n        end = array.length,\n        item = array[idx];\n  let cidx = (idx << 1) + 1,\n      ridx;\n\n  while (cidx < end) {\n    ridx = cidx + 1;\n\n    if (ridx < end && cmp(array[cidx], array[ridx]) >= 0) {\n      cidx = ridx;\n    }\n\n    array[idx] = array[cidx];\n    idx = cidx;\n    cidx = (idx << 1) + 1;\n  }\n\n  array[idx] = item;\n  return siftdown(array, start, idx, cmp);\n}\n\n/**\n * A dataflow graph for reactive processing of data streams.\n * @constructor\n */\n\nfunction Dataflow() {\n  this.logger(logger());\n  this.logLevel(Error);\n  this._clock = 0;\n  this._rank = 0;\n  this._locale = defaultLocale();\n\n  try {\n    this._loader = loader();\n  } catch (e) {// do nothing if loader module is unavailable\n  }\n\n  this._touched = UniqueList(id);\n  this._input = {};\n  this._pulse = null;\n  this._heap = Heap((a, b) => a.qrank - b.qrank);\n  this._postrun = [];\n}\n\nfunction logMethod(method) {\n  return function () {\n    return this._log[method].apply(this, arguments);\n  };\n}\n\nDataflow.prototype = {\n  /**\n   * The current timestamp of this dataflow. This value reflects the\n   * timestamp of the previous dataflow run. The dataflow is initialized\n   * with a stamp value of 0. The initial run of the dataflow will have\n   * a timestap of 1, and so on. This value will match the\n   * {@link Pulse.stamp} property.\n   * @return {number} - The current timestamp value.\n   */\n  stamp() {\n    return this._clock;\n  },\n\n  /**\n   * Gets or sets the loader instance to use for data file loading. A\n   * loader object must provide a \"load\" method for loading files and a\n   * \"sanitize\" method for checking URL/filename validity. Both methods\n   * should accept a URI and options hash as arguments, and return a Promise\n   * that resolves to the loaded file contents (load) or a hash containing\n   * sanitized URI data with the sanitized url assigned to the \"href\" property\n   * (sanitize).\n   * @param {object} _ - The loader instance to use.\n   * @return {object|Dataflow} - If no arguments are provided, returns\n   *   the current loader instance. Otherwise returns this Dataflow instance.\n   */\n  loader(_) {\n    if (arguments.length) {\n      this._loader = _;\n      return this;\n    } else {\n      return this._loader;\n    }\n  },\n\n  /**\n   * Gets or sets the locale instance to use for formatting and parsing\n   * string values. The locale object should be provided by the\n   * vega-format library, and include methods such as format, timeFormat,\n   * utcFormat, timeParse, and utcParse.\n   * @param {object} _ - The locale instance to use.\n   * @return {object|Dataflow} - If no arguments are provided, returns\n   *   the current locale instance. Otherwise returns this Dataflow instance.\n   */\n  locale(_) {\n    if (arguments.length) {\n      this._locale = _;\n      return this;\n    } else {\n      return this._locale;\n    }\n  },\n\n  /**\n   * Get or set the logger instance used to log messages. If no arguments are\n   * provided, returns the current logger instance. Otherwise, sets the logger\n   * and return this Dataflow instance. Provided loggers must support the full\n   * API of logger objects generated by the vega-util logger method. Note that\n   * by default the log level of the new logger will be used; use the logLevel\n   * method to adjust the log level as needed.\n   */\n  logger(logger) {\n    if (arguments.length) {\n      this._log = logger;\n      return this;\n    } else {\n      return this._log;\n    }\n  },\n\n  /**\n   * Logs an error message. By default, logged messages are written to console\n   * output. The message will only be logged if the current log level is high\n   * enough to permit error messages.\n   */\n  error: logMethod('error'),\n\n  /**\n   * Logs a warning message. By default, logged messages are written to console\n   * output. The message will only be logged if the current log level is high\n   * enough to permit warning messages.\n   */\n  warn: logMethod('warn'),\n\n  /**\n   * Logs a information message. By default, logged messages are written to\n   * console output. The message will only be logged if the current log level is\n   * high enough to permit information messages.\n   */\n  info: logMethod('info'),\n\n  /**\n   * Logs a debug message. By default, logged messages are written to console\n   * output. The message will only be logged if the current log level is high\n   * enough to permit debug messages.\n   */\n  debug: logMethod('debug'),\n\n  /**\n   * Get or set the current log level. If an argument is provided, it\n   * will be used as the new log level.\n   * @param {number} [level] - Should be one of None, Warn, Info\n   * @return {number} - The current log level.\n   */\n  logLevel: logMethod('level'),\n\n  /**\n   * Empty entry threshold for garbage cleaning. Map data structures will\n   * perform cleaning once the number of empty entries exceeds this value.\n   */\n  cleanThreshold: 1e4,\n  // OPERATOR REGISTRATION\n  add,\n  connect,\n  rank,\n  rerank,\n  // OPERATOR UPDATES\n  pulse,\n  touch,\n  update,\n  changeset,\n  // DATA LOADING\n  ingest,\n  parse,\n  preload,\n  request,\n  // EVENT HANDLING\n  events,\n  on,\n  // PULSE PROPAGATION\n  evaluate,\n  run,\n  runAsync,\n  runAfter,\n  _enqueue: enqueue,\n  _getPulse: getPulse\n};\n\n/**\n * Abstract class for operators that process data tuples.\n * Subclasses must provide a {@link transform} method for operator processing.\n * @constructor\n * @param {*} [init] - The initial value for this operator.\n * @param {object} [params] - The parameters for this operator.\n * @param {Operator} [source] - The operator from which to receive pulses.\n */\n\nfunction Transform(init, params) {\n  Operator.call(this, init, null, params);\n}\ninherits(Transform, Operator, {\n  /**\n   * Overrides {@link Operator.evaluate} for transform operators.\n   * Internally, this method calls {@link evaluate} to perform processing.\n   * If {@link evaluate} returns a falsy value, the input pulse is returned.\n   * This method should NOT be overridden, instead overrride {@link evaluate}.\n   * @param {Pulse} pulse - the current dataflow pulse.\n   * @return the output pulse for this operator (or StopPropagation)\n   */\n  run(pulse) {\n    if (pulse.stamp < this.stamp) return pulse.StopPropagation;\n    let rv;\n\n    if (this.skip()) {\n      this.skip(false);\n    } else {\n      rv = this.evaluate(pulse);\n    }\n\n    rv = rv || pulse;\n\n    if (rv.then) {\n      rv = rv.then(_ => this.pulse = _);\n    } else if (rv !== pulse.StopPropagation) {\n      this.pulse = rv;\n    }\n\n    return rv;\n  },\n\n  /**\n   * Overrides {@link Operator.evaluate} for transform operators.\n   * Marshalls parameter values and then invokes {@link transform}.\n   * @param {Pulse} pulse - the current dataflow pulse.\n   * @return {Pulse} The output pulse (or StopPropagation). A falsy return\n       value (including undefined) will let the input pulse pass through.\n  */\n  evaluate(pulse) {\n    const params = this.marshall(pulse.stamp),\n          out = this.transform(params, pulse);\n    params.clear();\n    return out;\n  },\n\n  /**\n   * Process incoming pulses.\n   * Subclasses should override this method to implement transforms.\n   * @param {Parameters} _ - The operator parameter values.\n   * @param {Pulse} pulse - The current dataflow pulse.\n   * @return {Pulse} The output pulse (or StopPropagation). A falsy return\n   *   value (including undefined) will let the input pulse pass through.\n   */\n  transform() {}\n\n});\n\nconst transforms = {};\nfunction definition(type) {\n  const t = transform(type);\n  return t && t.Definition || null;\n}\nfunction transform(type) {\n  type = type && type.toLowerCase();\n  return hasOwnProperty(transforms, type) ? transforms[type] : null;\n}\n\nexport { Dataflow, EventStream, MultiPulse, Operator, Parameters, Pulse, Transform, UniqueList, asyncCallback, changeset, definition, derive, ingest$1 as ingest, isChangeSet, isTuple, rederive, replace, stableCompare, transform, transforms, tupleid };\n","import { ascending, quantileSorted, deviation, quantile, median } from 'd3-array';\n\nfunction* numbers (values, valueof) {\n  if (valueof == null) {\n    for (let value of values) {\n      if (value != null && value !== '' && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      value = valueof(value, ++index, values);\n\n      if (value != null && value !== '' && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\nfunction quantiles (array, p, f) {\n  const values = Float64Array.from(numbers(array, f)); // don't depend on return value from typed array sort call\n  // protects against undefined sort results in Safari (vega/vega-lite#4964)\n\n  values.sort(ascending);\n  return p.map(_ => quantileSorted(values, _));\n}\n\nfunction quartiles (array, f) {\n  return quantiles(array, [0.25, 0.50, 0.75], f);\n}\n\n// Theory, Practice, and Visualization. Wiley.\n\nfunction estimateBandwidth (array, f) {\n  const n = array.length,\n        d = deviation(array, f),\n        q = quartiles(array, f),\n        h = (q[2] - q[0]) / 1.34,\n        v = Math.min(d, h) || d || Math.abs(q[0]) || 1;\n  return 1.06 * v * Math.pow(n, -0.2);\n}\n\nfunction bin (_) {\n  // determine range\n  const maxb = _.maxbins || 20,\n        base = _.base || 10,\n        logb = Math.log(base),\n        div = _.divide || [5, 2];\n  let min = _.extent[0],\n      max = _.extent[1],\n      step,\n      level,\n      minstep,\n      v,\n      i,\n      n;\n  const span = _.span || max - min || Math.abs(min) || 1;\n\n  if (_.step) {\n    // if step size is explicitly given, use that\n    step = _.step;\n  } else if (_.steps) {\n    // if provided, limit choice to acceptable step sizes\n    v = span / maxb;\n\n    for (i = 0, n = _.steps.length; i < n && _.steps[i] < v; ++i);\n\n    step = _.steps[Math.max(0, i - 1)];\n  } else {\n    // else use span to determine step size\n    level = Math.ceil(Math.log(maxb) / logb);\n    minstep = _.minstep || 0;\n    step = Math.max(minstep, Math.pow(base, Math.round(Math.log(span) / logb) - level)); // increase step size if too many bins\n\n    while (Math.ceil(span / step) > maxb) {\n      step *= base;\n    } // decrease step size if allowed\n\n\n    for (i = 0, n = div.length; i < n; ++i) {\n      v = step / div[i];\n      if (v >= minstep && span / v <= maxb) step = v;\n    }\n  } // update precision, min and max\n\n\n  v = Math.log(step);\n  const precision = v >= 0 ? 0 : ~~(-v / logb) + 1,\n        eps = Math.pow(base, -precision - 1);\n\n  if (_.nice || _.nice === undefined) {\n    v = Math.floor(min / step + eps) * step;\n    min = min < v ? v - step : v;\n    max = Math.ceil(max / step) * step;\n  }\n\n  return {\n    start: min,\n    stop: max === min ? min + step : max,\n    step: step\n  };\n}\n\nvar random = Math.random;\nfunction setRandom(r) {\n  random = r;\n}\n\nfunction bootstrapCI (array, samples, alpha, f) {\n  if (!array.length) return [undefined, undefined];\n  const values = Float64Array.from(numbers(array, f)),\n        n = values.length,\n        m = samples;\n  let a, i, j, mu;\n\n  for (j = 0, mu = Array(m); j < m; ++j) {\n    for (a = 0, i = 0; i < n; ++i) {\n      a += values[~~(random() * n)];\n    }\n\n    mu[j] = a / n;\n  }\n\n  mu.sort(ascending);\n  return [quantile(mu, alpha / 2), quantile(mu, 1 - alpha / 2)];\n}\n\n// Dot density binning for dot plot construction.\n// Based on Leland Wilkinson, Dot Plots, The American Statistician, 1999.\n// https://www.cs.uic.edu/~wilkinson/Publications/dotplots.pdf\nfunction dotbin (array, step, smooth, f) {\n  f = f || (_ => _);\n\n  const n = array.length,\n        v = new Float64Array(n);\n  let i = 0,\n      j = 1,\n      a = f(array[0]),\n      b = a,\n      w = a + step,\n      x;\n\n  for (; j < n; ++j) {\n    x = f(array[j]);\n\n    if (x >= w) {\n      b = (a + b) / 2;\n\n      for (; i < j; ++i) v[i] = b;\n\n      w = x + step;\n      a = x;\n    }\n\n    b = x;\n  }\n\n  b = (a + b) / 2;\n\n  for (; i < j; ++i) v[i] = b;\n\n  return smooth ? smoothing(v, step + step / 4) : v;\n} // perform smoothing to reduce variance\n// swap points between \"adjacent\" stacks\n// Wilkinson defines adjacent as within step/4 units\n\nfunction smoothing(v, thresh) {\n  const n = v.length;\n  let a = 0,\n      b = 1,\n      c,\n      d; // get left stack\n\n  while (v[a] === v[b]) ++b;\n\n  while (b < n) {\n    // get right stack\n    c = b + 1;\n\n    while (v[b] === v[c]) ++c; // are stacks adjacent?\n    // if so, compare sizes and swap as needed\n\n\n    if (v[b] - v[b - 1] < thresh) {\n      d = b + (a + c - b - b >> 1);\n\n      while (d < b) v[d++] = v[b];\n\n      while (d > b) v[d--] = v[a];\n    } // update left stack indices\n\n\n    a = b;\n    b = c;\n  }\n\n  return v;\n}\n\nfunction lcg (seed) {\n  // Random numbers using a Linear Congruential Generator with seed value\n  // Uses glibc values from https://en.wikipedia.org/wiki/Linear_congruential_generator\n  return function () {\n    seed = (1103515245 * seed + 12345) % 2147483647;\n    return seed / 2147483647;\n  };\n}\n\nfunction integer (min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n\n  let a, b, d;\n  const dist = {\n    min(_) {\n      if (arguments.length) {\n        a = _ || 0;\n        d = b - a;\n        return dist;\n      } else {\n        return a;\n      }\n    },\n\n    max(_) {\n      if (arguments.length) {\n        b = _ || 0;\n        d = b - a;\n        return dist;\n      } else {\n        return b;\n      }\n    },\n\n    sample() {\n      return a + Math.floor(d * random());\n    },\n\n    pdf(x) {\n      return x === Math.floor(x) && x >= a && x < b ? 1 / d : 0;\n    },\n\n    cdf(x) {\n      const v = Math.floor(x);\n      return v < a ? 0 : v >= b ? 1 : (v - a + 1) / d;\n    },\n\n    icdf(p) {\n      return p >= 0 && p <= 1 ? a - 1 + Math.floor(p * d) : NaN;\n    }\n\n  };\n  return dist.min(min).max(max);\n}\n\nconst SQRT2PI = Math.sqrt(2 * Math.PI);\nconst SQRT2 = Math.SQRT2;\n\nlet nextSample = NaN;\nfunction sampleNormal(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev == null ? 1 : stdev;\n  let x = 0,\n      y = 0,\n      rds,\n      c;\n\n  if (nextSample === nextSample) {\n    x = nextSample;\n    nextSample = NaN;\n  } else {\n    do {\n      x = random() * 2 - 1;\n      y = random() * 2 - 1;\n      rds = x * x + y * y;\n    } while (rds === 0 || rds > 1);\n\n    c = Math.sqrt(-2 * Math.log(rds) / rds); // Box-Muller transform\n\n    x *= c;\n    nextSample = y * c;\n  }\n\n  return mean + x * stdev;\n}\nfunction densityNormal(value, mean, stdev) {\n  stdev = stdev == null ? 1 : stdev;\n  const z = (value - (mean || 0)) / stdev;\n  return Math.exp(-0.5 * z * z) / (stdev * SQRT2PI);\n} // Approximation from West (2009)\n// Better Approximations to Cumulative Normal Functions\n\nfunction cumulativeNormal(value, mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev == null ? 1 : stdev;\n  const z = (value - mean) / stdev,\n        Z = Math.abs(z);\n  let cd;\n\n  if (Z > 37) {\n    cd = 0;\n  } else {\n    const exp = Math.exp(-Z * Z / 2);\n    let sum;\n\n    if (Z < 7.07106781186547) {\n      sum = 3.52624965998911e-02 * Z + 0.700383064443688;\n      sum = sum * Z + 6.37396220353165;\n      sum = sum * Z + 33.912866078383;\n      sum = sum * Z + 112.079291497871;\n      sum = sum * Z + 221.213596169931;\n      sum = sum * Z + 220.206867912376;\n      cd = exp * sum;\n      sum = 8.83883476483184e-02 * Z + 1.75566716318264;\n      sum = sum * Z + 16.064177579207;\n      sum = sum * Z + 86.7807322029461;\n      sum = sum * Z + 296.564248779674;\n      sum = sum * Z + 637.333633378831;\n      sum = sum * Z + 793.826512519948;\n      sum = sum * Z + 440.413735824752;\n      cd = cd / sum;\n    } else {\n      sum = Z + 0.65;\n      sum = Z + 4 / sum;\n      sum = Z + 3 / sum;\n      sum = Z + 2 / sum;\n      sum = Z + 1 / sum;\n      cd = exp / sum / 2.506628274631;\n    }\n  }\n\n  return z > 0 ? 1 - cd : cd;\n} // Approximation of Probit function using inverse error function.\n\nfunction quantileNormal(p, mean, stdev) {\n  if (p < 0 || p > 1) return NaN;\n  return (mean || 0) + (stdev == null ? 1 : stdev) * SQRT2 * erfinv(2 * p - 1);\n} // Approximate inverse error function. Implementation from \"Approximating\n// the erfinv function\" by Mike Giles, GPU Computing Gems, volume 2, 2010.\n// Ported from Apache Commons Math, http://www.apache.org/licenses/LICENSE-2.0\n\nfunction erfinv(x) {\n  // beware that the logarithm argument must be\n  // commputed as (1.0 - x) * (1.0 + x),\n  // it must NOT be simplified as 1.0 - x * x as this\n  // would induce rounding errors near the boundaries +/-1\n  let w = -Math.log((1 - x) * (1 + x)),\n      p;\n\n  if (w < 6.25) {\n    w -= 3.125;\n    p = -3.6444120640178196996e-21;\n    p = -1.685059138182016589e-19 + p * w;\n    p = 1.2858480715256400167e-18 + p * w;\n    p = 1.115787767802518096e-17 + p * w;\n    p = -1.333171662854620906e-16 + p * w;\n    p = 2.0972767875968561637e-17 + p * w;\n    p = 6.6376381343583238325e-15 + p * w;\n    p = -4.0545662729752068639e-14 + p * w;\n    p = -8.1519341976054721522e-14 + p * w;\n    p = 2.6335093153082322977e-12 + p * w;\n    p = -1.2975133253453532498e-11 + p * w;\n    p = -5.4154120542946279317e-11 + p * w;\n    p = 1.051212273321532285e-09 + p * w;\n    p = -4.1126339803469836976e-09 + p * w;\n    p = -2.9070369957882005086e-08 + p * w;\n    p = 4.2347877827932403518e-07 + p * w;\n    p = -1.3654692000834678645e-06 + p * w;\n    p = -1.3882523362786468719e-05 + p * w;\n    p = 0.0001867342080340571352 + p * w;\n    p = -0.00074070253416626697512 + p * w;\n    p = -0.0060336708714301490533 + p * w;\n    p = 0.24015818242558961693 + p * w;\n    p = 1.6536545626831027356 + p * w;\n  } else if (w < 16.0) {\n    w = Math.sqrt(w) - 3.25;\n    p = 2.2137376921775787049e-09;\n    p = 9.0756561938885390979e-08 + p * w;\n    p = -2.7517406297064545428e-07 + p * w;\n    p = 1.8239629214389227755e-08 + p * w;\n    p = 1.5027403968909827627e-06 + p * w;\n    p = -4.013867526981545969e-06 + p * w;\n    p = 2.9234449089955446044e-06 + p * w;\n    p = 1.2475304481671778723e-05 + p * w;\n    p = -4.7318229009055733981e-05 + p * w;\n    p = 6.8284851459573175448e-05 + p * w;\n    p = 2.4031110387097893999e-05 + p * w;\n    p = -0.0003550375203628474796 + p * w;\n    p = 0.00095328937973738049703 + p * w;\n    p = -0.0016882755560235047313 + p * w;\n    p = 0.0024914420961078508066 + p * w;\n    p = -0.0037512085075692412107 + p * w;\n    p = 0.005370914553590063617 + p * w;\n    p = 1.0052589676941592334 + p * w;\n    p = 3.0838856104922207635 + p * w;\n  } else if (Number.isFinite(w)) {\n    w = Math.sqrt(w) - 5.0;\n    p = -2.7109920616438573243e-11;\n    p = -2.5556418169965252055e-10 + p * w;\n    p = 1.5076572693500548083e-09 + p * w;\n    p = -3.7894654401267369937e-09 + p * w;\n    p = 7.6157012080783393804e-09 + p * w;\n    p = -1.4960026627149240478e-08 + p * w;\n    p = 2.9147953450901080826e-08 + p * w;\n    p = -6.7711997758452339498e-08 + p * w;\n    p = 2.2900482228026654717e-07 + p * w;\n    p = -9.9298272942317002539e-07 + p * w;\n    p = 4.5260625972231537039e-06 + p * w;\n    p = -1.9681778105531670567e-05 + p * w;\n    p = 7.5995277030017761139e-05 + p * w;\n    p = -0.00021503011930044477347 + p * w;\n    p = -0.00013871931833623122026 + p * w;\n    p = 1.0103004648645343977 + p * w;\n    p = 4.8499064014085844221 + p * w;\n  } else {\n    p = Infinity;\n  }\n\n  return p * x;\n}\n\nfunction gaussian (mean, stdev) {\n  let mu, sigma;\n  const dist = {\n    mean(_) {\n      if (arguments.length) {\n        mu = _ || 0;\n        return dist;\n      } else {\n        return mu;\n      }\n    },\n\n    stdev(_) {\n      if (arguments.length) {\n        sigma = _ == null ? 1 : _;\n        return dist;\n      } else {\n        return sigma;\n      }\n    },\n\n    sample: () => sampleNormal(mu, sigma),\n    pdf: value => densityNormal(value, mu, sigma),\n    cdf: value => cumulativeNormal(value, mu, sigma),\n    icdf: p => quantileNormal(p, mu, sigma)\n  };\n  return dist.mean(mean).stdev(stdev);\n}\n\nfunction kde (support, bandwidth) {\n  const kernel = gaussian();\n  let n = 0;\n  const dist = {\n    data(_) {\n      if (arguments.length) {\n        support = _;\n        n = _ ? _.length : 0;\n        return dist.bandwidth(bandwidth);\n      } else {\n        return support;\n      }\n    },\n\n    bandwidth(_) {\n      if (!arguments.length) return bandwidth;\n      bandwidth = _;\n      if (!bandwidth && support) bandwidth = estimateBandwidth(support);\n      return dist;\n    },\n\n    sample() {\n      return support[~~(random() * n)] + bandwidth * kernel.sample();\n    },\n\n    pdf(x) {\n      let y = 0,\n          i = 0;\n\n      for (; i < n; ++i) {\n        y += kernel.pdf((x - support[i]) / bandwidth);\n      }\n\n      return y / bandwidth / n;\n    },\n\n    cdf(x) {\n      let y = 0,\n          i = 0;\n\n      for (; i < n; ++i) {\n        y += kernel.cdf((x - support[i]) / bandwidth);\n      }\n\n      return y / n;\n    },\n\n    icdf() {\n      throw Error('KDE icdf not supported.');\n    }\n\n  };\n  return dist.data(support);\n}\n\nfunction sampleLogNormal(mean, stdev) {\n  mean = mean || 0;\n  stdev = stdev == null ? 1 : stdev;\n  return Math.exp(mean + sampleNormal() * stdev);\n}\nfunction densityLogNormal(value, mean, stdev) {\n  if (value <= 0) return 0;\n  mean = mean || 0;\n  stdev = stdev == null ? 1 : stdev;\n  const z = (Math.log(value) - mean) / stdev;\n  return Math.exp(-0.5 * z * z) / (stdev * SQRT2PI * value);\n}\nfunction cumulativeLogNormal(value, mean, stdev) {\n  return cumulativeNormal(Math.log(value), mean, stdev);\n}\nfunction quantileLogNormal(p, mean, stdev) {\n  return Math.exp(quantileNormal(p, mean, stdev));\n}\nfunction lognormal (mean, stdev) {\n  let mu, sigma;\n  const dist = {\n    mean(_) {\n      if (arguments.length) {\n        mu = _ || 0;\n        return dist;\n      } else {\n        return mu;\n      }\n    },\n\n    stdev(_) {\n      if (arguments.length) {\n        sigma = _ == null ? 1 : _;\n        return dist;\n      } else {\n        return sigma;\n      }\n    },\n\n    sample: () => sampleLogNormal(mu, sigma),\n    pdf: value => densityLogNormal(value, mu, sigma),\n    cdf: value => cumulativeLogNormal(value, mu, sigma),\n    icdf: p => quantileLogNormal(p, mu, sigma)\n  };\n  return dist.mean(mean).stdev(stdev);\n}\n\nfunction mixture (dists, weights) {\n  let m = 0,\n      w;\n\n  function normalize(x) {\n    const w = [];\n    let sum = 0,\n        i;\n\n    for (i = 0; i < m; ++i) {\n      sum += w[i] = x[i] == null ? 1 : +x[i];\n    }\n\n    for (i = 0; i < m; ++i) {\n      w[i] /= sum;\n    }\n\n    return w;\n  }\n\n  const dist = {\n    weights(_) {\n      if (arguments.length) {\n        w = normalize(weights = _ || []);\n        return dist;\n      }\n\n      return weights;\n    },\n\n    distributions(_) {\n      if (arguments.length) {\n        if (_) {\n          m = _.length;\n          dists = _;\n        } else {\n          m = 0;\n          dists = [];\n        }\n\n        return dist.weights(weights);\n      }\n\n      return dists;\n    },\n\n    sample() {\n      const r = random();\n      let d = dists[m - 1],\n          v = w[0],\n          i = 0; // first select distribution\n\n      for (; i < m - 1; v += w[++i]) {\n        if (r < v) {\n          d = dists[i];\n          break;\n        }\n      } // then sample from it\n\n\n      return d.sample();\n    },\n\n    pdf(x) {\n      let p = 0,\n          i = 0;\n\n      for (; i < m; ++i) {\n        p += w[i] * dists[i].pdf(x);\n      }\n\n      return p;\n    },\n\n    cdf(x) {\n      let p = 0,\n          i = 0;\n\n      for (; i < m; ++i) {\n        p += w[i] * dists[i].cdf(x);\n      }\n\n      return p;\n    },\n\n    icdf() {\n      throw Error('Mixture icdf not supported.');\n    }\n\n  };\n  return dist.distributions(dists).weights(weights);\n}\n\nfunction sampleUniform(min, max) {\n  if (max == null) {\n    max = min == null ? 1 : min;\n    min = 0;\n  }\n\n  return min + (max - min) * random();\n}\nfunction densityUniform(value, min, max) {\n  if (max == null) {\n    max = min == null ? 1 : min;\n    min = 0;\n  }\n\n  return value >= min && value <= max ? 1 / (max - min) : 0;\n}\nfunction cumulativeUniform(value, min, max) {\n  if (max == null) {\n    max = min == null ? 1 : min;\n    min = 0;\n  }\n\n  return value < min ? 0 : value > max ? 1 : (value - min) / (max - min);\n}\nfunction quantileUniform(p, min, max) {\n  if (max == null) {\n    max = min == null ? 1 : min;\n    min = 0;\n  }\n\n  return p >= 0 && p <= 1 ? min + p * (max - min) : NaN;\n}\nfunction uniform (min, max) {\n  let a, b;\n  const dist = {\n    min(_) {\n      if (arguments.length) {\n        a = _ || 0;\n        return dist;\n      } else {\n        return a;\n      }\n    },\n\n    max(_) {\n      if (arguments.length) {\n        b = _ == null ? 1 : _;\n        return dist;\n      } else {\n        return b;\n      }\n    },\n\n    sample: () => sampleUniform(a, b),\n    pdf: value => densityUniform(value, a, b),\n    cdf: value => cumulativeUniform(value, a, b),\n    icdf: p => quantileUniform(p, a, b)\n  };\n\n  if (max == null) {\n    max = min == null ? 1 : min;\n    min = 0;\n  }\n\n  return dist.min(min).max(max);\n}\n\n// Ordinary Least Squares\nfunction ols (uX, uY, uXY, uX2) {\n  const delta = uX2 - uX * uX,\n        slope = Math.abs(delta) < 1e-24 ? 0 : (uXY - uX * uY) / delta,\n        intercept = uY - slope * uX;\n  return [intercept, slope];\n}\n\nfunction points(data, x, y, sort) {\n  data = data.filter(d => {\n    let u = x(d),\n        v = y(d);\n    return u != null && (u = +u) >= u && v != null && (v = +v) >= v;\n  });\n\n  if (sort) {\n    data.sort((a, b) => x(a) - x(b));\n  }\n\n  const n = data.length,\n        X = new Float64Array(n),\n        Y = new Float64Array(n); // extract values, calculate means\n\n  let i = 0,\n      ux = 0,\n      uy = 0,\n      xv,\n      yv,\n      d;\n\n  for (d of data) {\n    X[i] = xv = +x(d);\n    Y[i] = yv = +y(d);\n    ++i;\n    ux += (xv - ux) / i;\n    uy += (yv - uy) / i;\n  } // mean center the data\n\n\n  for (i = 0; i < n; ++i) {\n    X[i] -= ux;\n    Y[i] -= uy;\n  }\n\n  return [X, Y, ux, uy];\n}\nfunction visitPoints(data, x, y, callback) {\n  let i = -1,\n      u,\n      v;\n\n  for (const d of data) {\n    u = x(d);\n    v = y(d);\n\n    if (u != null && (u = +u) >= u && v != null && (v = +v) >= v) {\n      callback(u, v, ++i);\n    }\n  }\n}\n\n// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\nfunction rSquared (data, x, y, uY, predict) {\n  let SSE = 0,\n      SST = 0;\n  visitPoints(data, x, y, (dx, dy) => {\n    const sse = dy - predict(dx),\n          sst = dy - uY;\n    SSE += sse * sse;\n    SST += sst * sst;\n  });\n  return 1 - SSE / SST;\n}\n\n// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\nfunction linear (data, x, y) {\n  let X = 0,\n      Y = 0,\n      XY = 0,\n      X2 = 0,\n      n = 0;\n  visitPoints(data, x, y, (dx, dy) => {\n    ++n;\n    X += (dx - X) / n;\n    Y += (dy - Y) / n;\n    XY += (dx * dy - XY) / n;\n    X2 += (dx * dx - X2) / n;\n  });\n\n  const coef = ols(X, Y, XY, X2),\n        predict = x => coef[0] + coef[1] * x;\n\n  return {\n    coef: coef,\n    predict: predict,\n    rSquared: rSquared(data, x, y, Y, predict)\n  };\n}\n\n// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\nfunction log (data, x, y) {\n  let X = 0,\n      Y = 0,\n      XY = 0,\n      X2 = 0,\n      n = 0;\n  visitPoints(data, x, y, (dx, dy) => {\n    ++n;\n    dx = Math.log(dx);\n    X += (dx - X) / n;\n    Y += (dy - Y) / n;\n    XY += (dx * dy - XY) / n;\n    X2 += (dx * dx - X2) / n;\n  });\n\n  const coef = ols(X, Y, XY, X2),\n        predict = x => coef[0] + coef[1] * Math.log(x);\n\n  return {\n    coef: coef,\n    predict: predict,\n    rSquared: rSquared(data, x, y, Y, predict)\n  };\n}\n\nfunction exp (data, x, y) {\n  // eslint-disable-next-line no-unused-vars\n  const [xv, yv, ux, uy] = points(data, x, y);\n  let YL = 0,\n      XY = 0,\n      XYL = 0,\n      X2Y = 0,\n      n = 0,\n      dx,\n      ly,\n      xy;\n  visitPoints(data, x, y, (_, dy) => {\n    dx = xv[n++];\n    ly = Math.log(dy);\n    xy = dx * dy;\n    YL += (dy * ly - YL) / n;\n    XY += (xy - XY) / n;\n    XYL += (xy * ly - XYL) / n;\n    X2Y += (dx * xy - X2Y) / n;\n  });\n\n  const [c0, c1] = ols(XY / uy, YL / uy, XYL / uy, X2Y / uy),\n        predict = x => Math.exp(c0 + c1 * (x - ux));\n\n  return {\n    coef: [Math.exp(c0 - c1 * ux), c1],\n    predict: predict,\n    rSquared: rSquared(data, x, y, uy, predict)\n  };\n}\n\n// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n\nfunction pow (data, x, y) {\n  let X = 0,\n      Y = 0,\n      XY = 0,\n      X2 = 0,\n      YS = 0,\n      n = 0;\n  visitPoints(data, x, y, (dx, dy) => {\n    const lx = Math.log(dx),\n          ly = Math.log(dy);\n    ++n;\n    X += (lx - X) / n;\n    Y += (ly - Y) / n;\n    XY += (lx * ly - XY) / n;\n    X2 += (lx * lx - X2) / n;\n    YS += (dy - YS) / n;\n  });\n\n  const coef = ols(X, Y, XY, X2),\n        predict = x => coef[0] * Math.pow(x, coef[1]);\n\n  coef[0] = Math.exp(coef[0]);\n  return {\n    coef: coef,\n    predict: predict,\n    rSquared: rSquared(data, x, y, YS, predict)\n  };\n}\n\nfunction quad (data, x, y) {\n  const [xv, yv, ux, uy] = points(data, x, y),\n        n = xv.length;\n  let X2 = 0,\n      X3 = 0,\n      X4 = 0,\n      XY = 0,\n      X2Y = 0,\n      i,\n      dx,\n      dy,\n      x2;\n\n  for (i = 0; i < n;) {\n    dx = xv[i];\n    dy = yv[i++];\n    x2 = dx * dx;\n    X2 += (x2 - X2) / i;\n    X3 += (x2 * dx - X3) / i;\n    X4 += (x2 * x2 - X4) / i;\n    XY += (dx * dy - XY) / i;\n    X2Y += (x2 * dy - X2Y) / i;\n  }\n\n  const X2X2 = X4 - X2 * X2,\n        d = X2 * X2X2 - X3 * X3,\n        a = (X2Y * X2 - XY * X3) / d,\n        b = (XY * X2X2 - X2Y * X3) / d,\n        c = -a * X2,\n        predict = x => {\n    x = x - ux;\n    return a * x * x + b * x + c + uy;\n  }; // transform coefficients back from mean-centered space\n\n\n  return {\n    coef: [c - b * ux + a * ux * ux + uy, b - 2 * a * ux, a],\n    predict: predict,\n    rSquared: rSquared(data, x, y, uy, predict)\n  };\n}\n\n// License: https://github.com/HarryStevens/d3-regression/blob/master/LICENSE\n// ... which was adapted from regression-js by Tom Alexander\n// Source: https://github.com/Tom-Alexander/regression-js/blob/master/src/regression.js#L246\n// License: https://github.com/Tom-Alexander/regression-js/blob/master/LICENSE\n\nfunction poly (data, x, y, order) {\n  // use more efficient methods for lower orders\n  if (order === 1) return linear(data, x, y);\n  if (order === 2) return quad(data, x, y);\n  const [xv, yv, ux, uy] = points(data, x, y),\n        n = xv.length,\n        lhs = [],\n        rhs = [],\n        k = order + 1;\n  let i, j, l, v, c;\n\n  for (i = 0; i < k; ++i) {\n    for (l = 0, v = 0; l < n; ++l) {\n      v += Math.pow(xv[l], i) * yv[l];\n    }\n\n    lhs.push(v);\n    c = new Float64Array(k);\n\n    for (j = 0; j < k; ++j) {\n      for (l = 0, v = 0; l < n; ++l) {\n        v += Math.pow(xv[l], i + j);\n      }\n\n      c[j] = v;\n    }\n\n    rhs.push(c);\n  }\n\n  rhs.push(lhs);\n\n  const coef = gaussianElimination(rhs),\n        predict = x => {\n    x -= ux;\n    let y = uy + coef[0] + coef[1] * x + coef[2] * x * x;\n\n    for (i = 3; i < k; ++i) y += coef[i] * Math.pow(x, i);\n\n    return y;\n  };\n\n  return {\n    coef: uncenter(k, coef, -ux, uy),\n    predict: predict,\n    rSquared: rSquared(data, x, y, uy, predict)\n  };\n}\n\nfunction uncenter(k, a, x, y) {\n  const z = Array(k);\n  let i, j, v, c; // initialize to zero\n\n  for (i = 0; i < k; ++i) z[i] = 0; // polynomial expansion\n\n\n  for (i = k - 1; i >= 0; --i) {\n    v = a[i];\n    c = 1;\n    z[i] += v;\n\n    for (j = 1; j <= i; ++j) {\n      c *= (i + 1 - j) / j; // binomial coefficent\n\n      z[i - j] += v * Math.pow(x, j) * c;\n    }\n  } // bias term\n\n\n  z[0] += y;\n  return z;\n} // Given an array for a two-dimensional matrix and the polynomial order,\n// solve A * x = b using Gaussian elimination.\n\n\nfunction gaussianElimination(matrix) {\n  const n = matrix.length - 1,\n        coef = [];\n  let i, j, k, r, t;\n\n  for (i = 0; i < n; ++i) {\n    r = i; // max row\n\n    for (j = i + 1; j < n; ++j) {\n      if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][r])) {\n        r = j;\n      }\n    }\n\n    for (k = i; k < n + 1; ++k) {\n      t = matrix[k][i];\n      matrix[k][i] = matrix[k][r];\n      matrix[k][r] = t;\n    }\n\n    for (j = i + 1; j < n; ++j) {\n      for (k = n; k >= i; k--) {\n        matrix[k][j] -= matrix[k][i] * matrix[i][j] / matrix[i][i];\n      }\n    }\n  }\n\n  for (j = n - 1; j >= 0; --j) {\n    t = 0;\n\n    for (k = j + 1; k < n; ++k) {\n      t += matrix[k][j] * coef[k];\n    }\n\n    coef[j] = (matrix[n][j] - t) / matrix[j][j];\n  }\n\n  return coef;\n}\n\nconst maxiters = 2,\n      epsilon = 1e-12; // Adapted from science.js by Jason Davies\n// Source: https://github.com/jasondavies/science.js/blob/master/src/stats/loess.js\n// License: https://github.com/jasondavies/science.js/blob/master/LICENSE\n\nfunction loess (data, x, y, bandwidth) {\n  const [xv, yv, ux, uy] = points(data, x, y, true),\n        n = xv.length,\n        bw = Math.max(2, ~~(bandwidth * n)),\n        // # nearest neighbors\n  yhat = new Float64Array(n),\n        residuals = new Float64Array(n),\n        robustWeights = new Float64Array(n).fill(1);\n\n  for (let iter = -1; ++iter <= maxiters;) {\n    const interval = [0, bw - 1];\n\n    for (let i = 0; i < n; ++i) {\n      const dx = xv[i],\n            i0 = interval[0],\n            i1 = interval[1],\n            edge = dx - xv[i0] > xv[i1] - dx ? i0 : i1;\n      let W = 0,\n          X = 0,\n          Y = 0,\n          XY = 0,\n          X2 = 0;\n      const denom = 1 / Math.abs(xv[edge] - dx || 1); // avoid singularity!\n\n      for (let k = i0; k <= i1; ++k) {\n        const xk = xv[k],\n              yk = yv[k],\n              w = tricube(Math.abs(dx - xk) * denom) * robustWeights[k],\n              xkw = xk * w;\n        W += w;\n        X += xkw;\n        Y += yk * w;\n        XY += yk * xkw;\n        X2 += xk * xkw;\n      } // linear regression fit\n\n\n      const [a, b] = ols(X / W, Y / W, XY / W, X2 / W);\n      yhat[i] = a + b * dx;\n      residuals[i] = Math.abs(yv[i] - yhat[i]);\n      updateInterval(xv, i + 1, interval);\n    }\n\n    if (iter === maxiters) {\n      break;\n    }\n\n    const medianResidual = median(residuals);\n    if (Math.abs(medianResidual) < epsilon) break;\n\n    for (let i = 0, arg, w; i < n; ++i) {\n      arg = residuals[i] / (6 * medianResidual); // default to epsilon (rather than zero) for large deviations\n      // keeping weights tiny but non-zero prevents singularites\n\n      robustWeights[i] = arg >= 1 ? epsilon : (w = 1 - arg * arg) * w;\n    }\n  }\n\n  return output(xv, yhat, ux, uy);\n} // weighting kernel for local regression\n\nfunction tricube(x) {\n  return (x = 1 - x * x * x) * x * x;\n} // advance sliding window interval of nearest neighbors\n\n\nfunction updateInterval(xv, i, interval) {\n  const val = xv[i];\n  let left = interval[0],\n      right = interval[1] + 1;\n  if (right >= xv.length) return; // step right if distance to new right edge is <= distance to old left edge\n  // step when distance is equal to ensure movement over duplicate x values\n\n  while (i > left && xv[right] - val <= val - xv[left]) {\n    interval[0] = ++left;\n    interval[1] = right;\n    ++right;\n  }\n} // generate smoothed output points\n// average points with repeated x values\n\n\nfunction output(xv, yhat, ux, uy) {\n  const n = xv.length,\n        out = [];\n  let i = 0,\n      cnt = 0,\n      prev = [],\n      v;\n\n  for (; i < n; ++i) {\n    v = xv[i] + ux;\n\n    if (prev[0] === v) {\n      // average output values via online update\n      prev[1] += (yhat[i] - prev[1]) / ++cnt;\n    } else {\n      // add new output point\n      cnt = 0;\n      prev[1] += uy;\n      prev = [v, yhat[i]];\n      out.push(prev);\n    }\n  }\n\n  prev[1] += uy;\n  return out;\n}\n\n// subdivide up to accuracy of 0.1 degrees\nconst MIN_RADIANS = 0.1 * Math.PI / 180; // Adaptively sample an interpolated function over a domain extent\n\nfunction sampleCurve (f, extent, minSteps, maxSteps) {\n  minSteps = minSteps || 25;\n  maxSteps = Math.max(minSteps, maxSteps || 200);\n\n  const point = x => [x, f(x)],\n        minX = extent[0],\n        maxX = extent[1],\n        span = maxX - minX,\n        stop = span / maxSteps,\n        prev = [point(minX)],\n        next = [];\n\n  if (minSteps === maxSteps) {\n    // no adaptation, sample uniform grid directly and return\n    for (let i = 1; i < maxSteps; ++i) {\n      prev.push(point(minX + i / minSteps * span));\n    }\n\n    prev.push(point(maxX));\n    return prev;\n  } else {\n    // sample minimum points on uniform grid\n    // then move on to perform adaptive refinement\n    next.push(point(maxX));\n\n    for (let i = minSteps; --i > 0;) {\n      next.push(point(minX + i / minSteps * span));\n    }\n  }\n\n  let p0 = prev[0],\n      p1 = next[next.length - 1];\n\n  while (p1) {\n    // midpoint for potential curve subdivision\n    const pm = point((p0[0] + p1[0]) / 2);\n\n    if (pm[0] - p0[0] >= stop && angleDelta(p0, pm, p1) > MIN_RADIANS) {\n      // maximum resolution has not yet been met, and\n      // subdivision midpoint sufficiently different from endpoint\n      // save subdivision, push midpoint onto the visitation stack\n      next.push(pm);\n    } else {\n      // subdivision midpoint sufficiently similar to endpoint\n      // skip subdivision, store endpoint, move to next point on the stack\n      p0 = p1;\n      prev.push(p1);\n      next.pop();\n    }\n\n    p1 = next[next.length - 1];\n  }\n\n  return prev;\n}\n\nfunction angleDelta(p, q, r) {\n  const a0 = Math.atan2(r[1] - p[1], r[0] - p[0]),\n        a1 = Math.atan2(q[1] - p[1], q[0] - p[0]);\n  return Math.abs(a0 - a1);\n}\n\nexport { estimateBandwidth as bandwidthNRD, bin, bootstrapCI, cumulativeLogNormal, cumulativeNormal, cumulativeUniform, densityLogNormal, densityNormal, densityUniform, dotbin, quantileLogNormal, quantileNormal, quantileUniform, quantiles, quartiles, random, integer as randomInteger, kde as randomKDE, lcg as randomLCG, lognormal as randomLogNormal, mixture as randomMixture, gaussian as randomNormal, uniform as randomUniform, exp as regressionExp, linear as regressionLinear, loess as regressionLoess, log as regressionLog, poly as regressionPoly, pow as regressionPow, quad as regressionQuad, sampleCurve, sampleLogNormal, sampleNormal, sampleUniform, setRandom };\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import { extend, identity, field, hasOwnProperty, extentIndex, inherits, array, accessorName, error, accessorFields, accessor, toNumber, merge, compare, truthy, extent, span, fastmap, isArray, key, ascending, peek, zero, constant } from 'vega-util';\nimport { tupleid, Transform, replace, ingest, stableCompare, Operator, derive, rederive } from 'vega-dataflow';\nimport { quartiles, bootstrapCI, bin, randomKDE, randomMixture, randomNormal, randomLogNormal, randomUniform, sampleCurve, dotbin, quantiles, random } from 'vega-statistics';\nimport { median, mean, min, max, range, bisector } from 'd3-array';\nimport { TIME_UNITS, utcInterval, timeInterval, timeBin, timeUnits, utcFloor, timeFloor } from 'vega-time';\n\nfunction multikey(f) {\n  return x => {\n    const n = f.length;\n    let i = 1,\n        k = String(f[0](x));\n\n    for (; i < n; ++i) {\n      k += '|' + f[i](x);\n    }\n\n    return k;\n  };\n}\nfunction groupkey(fields) {\n  return !fields || !fields.length ? function () {\n    return '';\n  } : fields.length === 1 ? fields[0] : multikey(fields);\n}\n\nfunction measureName(op, field, as) {\n  return as || op + (!field ? '' : '_' + field);\n}\n\nconst noop = () => {};\n\nconst base_op = {\n  init: noop,\n  add: noop,\n  rem: noop,\n  idx: 0\n};\nconst AggregateOps = {\n  values: {\n    init: m => m.cell.store = true,\n    value: m => m.cell.data.values(),\n    idx: -1\n  },\n  count: {\n    value: m => m.cell.num\n  },\n  __count__: {\n    value: m => m.missing + m.valid\n  },\n  missing: {\n    value: m => m.missing\n  },\n  valid: {\n    value: m => m.valid\n  },\n  sum: {\n    init: m => m.sum = 0,\n    value: m => m.sum,\n    add: (m, v) => m.sum += +v,\n    rem: (m, v) => m.sum -= v\n  },\n  product: {\n    init: m => m.product = 1,\n    value: m => m.valid ? m.product : undefined,\n    add: (m, v) => m.product *= v,\n    rem: (m, v) => m.product /= v\n  },\n  mean: {\n    init: m => m.mean = 0,\n    value: m => m.valid ? m.mean : undefined,\n    add: (m, v) => (m.mean_d = v - m.mean, m.mean += m.mean_d / m.valid),\n    rem: (m, v) => (m.mean_d = v - m.mean, m.mean -= m.valid ? m.mean_d / m.valid : m.mean)\n  },\n  average: {\n    value: m => m.valid ? m.mean : undefined,\n    req: ['mean'],\n    idx: 1\n  },\n  variance: {\n    init: m => m.dev = 0,\n    value: m => m.valid > 1 ? m.dev / (m.valid - 1) : undefined,\n    add: (m, v) => m.dev += m.mean_d * (v - m.mean),\n    rem: (m, v) => m.dev -= m.mean_d * (v - m.mean),\n    req: ['mean'],\n    idx: 1\n  },\n  variancep: {\n    value: m => m.valid > 1 ? m.dev / m.valid : undefined,\n    req: ['variance'],\n    idx: 2\n  },\n  stdev: {\n    value: m => m.valid > 1 ? Math.sqrt(m.dev / (m.valid - 1)) : undefined,\n    req: ['variance'],\n    idx: 2\n  },\n  stdevp: {\n    value: m => m.valid > 1 ? Math.sqrt(m.dev / m.valid) : undefined,\n    req: ['variance'],\n    idx: 2\n  },\n  stderr: {\n    value: m => m.valid > 1 ? Math.sqrt(m.dev / (m.valid * (m.valid - 1))) : undefined,\n    req: ['variance'],\n    idx: 2\n  },\n  distinct: {\n    value: m => m.cell.data.distinct(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  ci0: {\n    value: m => m.cell.data.ci0(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  ci1: {\n    value: m => m.cell.data.ci1(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  median: {\n    value: m => m.cell.data.q2(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  q1: {\n    value: m => m.cell.data.q1(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  q3: {\n    value: m => m.cell.data.q3(m.get),\n    req: ['values'],\n    idx: 3\n  },\n  min: {\n    init: m => m.min = undefined,\n    value: m => m.min = Number.isNaN(m.min) ? m.cell.data.min(m.get) : m.min,\n    add: (m, v) => {\n      if (v < m.min || m.min === undefined) m.min = v;\n    },\n    rem: (m, v) => {\n      if (v <= m.min) m.min = NaN;\n    },\n    req: ['values'],\n    idx: 4\n  },\n  max: {\n    init: m => m.max = undefined,\n    value: m => m.max = Number.isNaN(m.max) ? m.cell.data.max(m.get) : m.max,\n    add: (m, v) => {\n      if (v > m.max || m.max === undefined) m.max = v;\n    },\n    rem: (m, v) => {\n      if (v >= m.max) m.max = NaN;\n    },\n    req: ['values'],\n    idx: 4\n  },\n  argmin: {\n    init: m => m.argmin = undefined,\n    value: m => m.argmin || m.cell.data.argmin(m.get),\n    add: (m, v, t) => {\n      if (v < m.min) m.argmin = t;\n    },\n    rem: (m, v) => {\n      if (v <= m.min) m.argmin = undefined;\n    },\n    req: ['min', 'values'],\n    idx: 3\n  },\n  argmax: {\n    init: m => m.argmax = undefined,\n    value: m => m.argmax || m.cell.data.argmax(m.get),\n    add: (m, v, t) => {\n      if (v > m.max) m.argmax = t;\n    },\n    rem: (m, v) => {\n      if (v >= m.max) m.argmax = undefined;\n    },\n    req: ['max', 'values'],\n    idx: 3\n  }\n};\nconst ValidAggregateOps = Object.keys(AggregateOps);\n\nfunction measure(key, value) {\n  return out => extend({\n    name: key,\n    out: out || key\n  }, base_op, value);\n}\n\nValidAggregateOps.forEach(key => {\n  AggregateOps[key] = measure(key, AggregateOps[key]);\n});\nfunction createMeasure(op, name) {\n  return AggregateOps[op](name);\n}\n\nfunction compareIndex(a, b) {\n  return a.idx - b.idx;\n}\n\nfunction resolve(agg) {\n  const map = {};\n  agg.forEach(a => map[a.name] = a);\n\n  const getreqs = a => {\n    if (!a.req) return;\n    a.req.forEach(key => {\n      if (!map[key]) getreqs(map[key] = AggregateOps[key]());\n    });\n  };\n\n  agg.forEach(getreqs);\n  return Object.values(map).sort(compareIndex);\n}\n\nfunction init() {\n  this.valid = 0;\n  this.missing = 0;\n\n  this._ops.forEach(op => op.init(this));\n}\n\nfunction add(v, t) {\n  if (v == null || v === '') {\n    ++this.missing;\n    return;\n  }\n\n  if (v !== v) return;\n  ++this.valid;\n\n  this._ops.forEach(op => op.add(this, v, t));\n}\n\nfunction rem(v, t) {\n  if (v == null || v === '') {\n    --this.missing;\n    return;\n  }\n\n  if (v !== v) return;\n  --this.valid;\n\n  this._ops.forEach(op => op.rem(this, v, t));\n}\n\nfunction set(t) {\n  this._out.forEach(op => t[op.out] = op.value(this));\n\n  return t;\n}\n\nfunction compileMeasures(agg, field) {\n  const get = field || identity,\n        ops = resolve(agg),\n        out = agg.slice().sort(compareIndex);\n\n  function ctr(cell) {\n    this._ops = ops;\n    this._out = out;\n    this.cell = cell;\n    this.init();\n  }\n\n  ctr.prototype.init = init;\n  ctr.prototype.add = add;\n  ctr.prototype.rem = rem;\n  ctr.prototype.set = set;\n  ctr.prototype.get = get;\n  ctr.fields = agg.map(op => op.out);\n  return ctr;\n}\n\nfunction TupleStore(key) {\n  this._key = key ? field(key) : tupleid;\n  this.reset();\n}\nconst prototype$1 = TupleStore.prototype;\n\nprototype$1.reset = function () {\n  this._add = [];\n  this._rem = [];\n  this._ext = null;\n  this._get = null;\n  this._q = null;\n};\n\nprototype$1.add = function (v) {\n  this._add.push(v);\n};\n\nprototype$1.rem = function (v) {\n  this._rem.push(v);\n};\n\nprototype$1.values = function () {\n  this._get = null;\n  if (this._rem.length === 0) return this._add;\n  const a = this._add,\n        r = this._rem,\n        k = this._key,\n        n = a.length,\n        m = r.length,\n        x = Array(n - m),\n        map = {};\n  let i, j, v; // use unique key field to clear removed values\n\n  for (i = 0; i < m; ++i) {\n    map[k(r[i])] = 1;\n  }\n\n  for (i = 0, j = 0; i < n; ++i) {\n    if (map[k(v = a[i])]) {\n      map[k(v)] = 0;\n    } else {\n      x[j++] = v;\n    }\n  }\n\n  this._rem = [];\n  return this._add = x;\n}; // memoizing statistics methods\n\n\nprototype$1.distinct = function (get) {\n  const v = this.values(),\n        map = {};\n  let n = v.length,\n      count = 0,\n      s;\n\n  while (--n >= 0) {\n    s = get(v[n]) + '';\n\n    if (!hasOwnProperty(map, s)) {\n      map[s] = 1;\n      ++count;\n    }\n  }\n\n  return count;\n};\n\nprototype$1.extent = function (get) {\n  if (this._get !== get || !this._ext) {\n    const v = this.values(),\n          i = extentIndex(v, get);\n    this._ext = [v[i[0]], v[i[1]]];\n    this._get = get;\n  }\n\n  return this._ext;\n};\n\nprototype$1.argmin = function (get) {\n  return this.extent(get)[0] || {};\n};\n\nprototype$1.argmax = function (get) {\n  return this.extent(get)[1] || {};\n};\n\nprototype$1.min = function (get) {\n  const m = this.extent(get)[0];\n  return m != null ? get(m) : undefined;\n};\n\nprototype$1.max = function (get) {\n  const m = this.extent(get)[1];\n  return m != null ? get(m) : undefined;\n};\n\nprototype$1.quartile = function (get) {\n  if (this._get !== get || !this._q) {\n    this._q = quartiles(this.values(), get);\n    this._get = get;\n  }\n\n  return this._q;\n};\n\nprototype$1.q1 = function (get) {\n  return this.quartile(get)[0];\n};\n\nprototype$1.q2 = function (get) {\n  return this.quartile(get)[1];\n};\n\nprototype$1.q3 = function (get) {\n  return this.quartile(get)[2];\n};\n\nprototype$1.ci = function (get) {\n  if (this._get !== get || !this._ci) {\n    this._ci = bootstrapCI(this.values(), 1000, 0.05, get);\n    this._get = get;\n  }\n\n  return this._ci;\n};\n\nprototype$1.ci0 = function (get) {\n  return this.ci(get)[0];\n};\n\nprototype$1.ci1 = function (get) {\n  return this.ci(get)[1];\n};\n\n/**\n * Group-by aggregation operator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {Array<function(object): *>} [params.fields] - An array of accessors to aggregate.\n * @param {Array<string>} [params.ops] - An array of strings indicating aggregation operations.\n * @param {Array<string>} [params.as] - An array of output field names for aggregated values.\n * @param {boolean} [params.cross=false] - A flag indicating that the full\n *   cross-product of groupby values should be generated, including empty cells.\n *   If true, the drop parameter is ignored and empty cells are retained.\n * @param {boolean} [params.drop=true] - A flag indicating if empty cells should be removed.\n */\n\nfunction Aggregate(params) {\n  Transform.call(this, null, params);\n  this._adds = []; // array of added output tuples\n\n  this._mods = []; // array of modified output tuples\n\n  this._alen = 0; // number of active added tuples\n\n  this._mlen = 0; // number of active modified tuples\n\n  this._drop = true; // should empty aggregation cells be removed\n\n  this._cross = false; // produce full cross-product of group-by values\n\n  this._dims = []; // group-by dimension accessors\n\n  this._dnames = []; // group-by dimension names\n\n  this._measures = []; // collection of aggregation monoids\n\n  this._countOnly = false; // flag indicating only count aggregation\n\n  this._counts = null; // collection of count fields\n\n  this._prev = null; // previous aggregation cells\n\n  this._inputs = null; // array of dependent input tuple field names\n\n  this._outputs = null; // array of output tuple field names\n}\nAggregate.Definition = {\n  'type': 'Aggregate',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'ops',\n    'type': 'enum',\n    'array': true,\n    'values': ValidAggregateOps\n  }, {\n    'name': 'fields',\n    'type': 'field',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'drop',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'cross',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'key',\n    'type': 'field'\n  }]\n};\ninherits(Aggregate, Transform, {\n  transform(_, pulse) {\n    const aggr = this,\n          out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          mod = _.modified();\n\n    aggr.stamp = out.stamp;\n\n    if (aggr.value && (mod || pulse.modified(aggr._inputs, true))) {\n      aggr._prev = aggr.value;\n      aggr.value = mod ? aggr.init(_) : {};\n      pulse.visit(pulse.SOURCE, t => aggr.add(t));\n    } else {\n      aggr.value = aggr.value || aggr.init(_);\n      pulse.visit(pulse.REM, t => aggr.rem(t));\n      pulse.visit(pulse.ADD, t => aggr.add(t));\n    } // Indicate output fields and return aggregate tuples.\n\n\n    out.modifies(aggr._outputs); // Should empty cells be dropped?\n\n    aggr._drop = _.drop !== false; // If domain cross-product requested, generate empty cells as needed\n    // and ensure that empty cells are not dropped\n\n    if (_.cross && aggr._dims.length > 1) {\n      aggr._drop = false;\n      aggr.cross();\n    }\n\n    if (pulse.clean() && aggr._drop) {\n      out.clean(true).runAfter(() => this.clean());\n    }\n\n    return aggr.changes(out);\n  },\n\n  cross() {\n    const aggr = this,\n          curr = aggr.value,\n          dims = aggr._dnames,\n          vals = dims.map(() => ({})),\n          n = dims.length; // collect all group-by domain values\n\n    function collect(cells) {\n      let key, i, t, v;\n\n      for (key in cells) {\n        t = cells[key].tuple;\n\n        for (i = 0; i < n; ++i) {\n          vals[i][v = t[dims[i]]] = v;\n        }\n      }\n    }\n\n    collect(aggr._prev);\n    collect(curr); // iterate over key cross-product, create cells as needed\n\n    function generate(base, tuple, index) {\n      const name = dims[index],\n            v = vals[index++];\n\n      for (const k in v) {\n        const key = base ? base + '|' + k : k;\n        tuple[name] = v[k];\n        if (index < n) generate(key, tuple, index);else if (!curr[key]) aggr.cell(key, tuple);\n      }\n    }\n\n    generate('', {}, 0);\n  },\n\n  init(_) {\n    // initialize input and output fields\n    const inputs = this._inputs = [],\n          outputs = this._outputs = [],\n          inputMap = {};\n\n    function inputVisit(get) {\n      const fields = array(accessorFields(get)),\n            n = fields.length;\n      let i = 0,\n          f;\n\n      for (; i < n; ++i) {\n        if (!inputMap[f = fields[i]]) {\n          inputMap[f] = 1;\n          inputs.push(f);\n        }\n      }\n    } // initialize group-by dimensions\n\n\n    this._dims = array(_.groupby);\n    this._dnames = this._dims.map(d => {\n      const dname = accessorName(d);\n      inputVisit(d);\n      outputs.push(dname);\n      return dname;\n    });\n    this.cellkey = _.key ? _.key : groupkey(this._dims); // initialize aggregate measures\n\n    this._countOnly = true;\n    this._counts = [];\n    this._measures = [];\n    const fields = _.fields || [null],\n          ops = _.ops || ['count'],\n          as = _.as || [],\n          n = fields.length,\n          map = {};\n    let field, op, m, mname, outname, i;\n\n    if (n !== ops.length) {\n      error('Unmatched number of fields and aggregate ops.');\n    }\n\n    for (i = 0; i < n; ++i) {\n      field = fields[i];\n      op = ops[i];\n\n      if (field == null && op !== 'count') {\n        error('Null aggregate field specified.');\n      }\n\n      mname = accessorName(field);\n      outname = measureName(op, mname, as[i]);\n      outputs.push(outname);\n\n      if (op === 'count') {\n        this._counts.push(outname);\n\n        continue;\n      }\n\n      m = map[mname];\n\n      if (!m) {\n        inputVisit(field);\n        m = map[mname] = [];\n        m.field = field;\n\n        this._measures.push(m);\n      }\n\n      if (op !== 'count') this._countOnly = false;\n      m.push(createMeasure(op, outname));\n    }\n\n    this._measures = this._measures.map(m => compileMeasures(m, m.field));\n    return {}; // aggregation cells (this.value)\n  },\n\n  // -- Cell Management -----\n  cellkey: groupkey(),\n\n  cell(key, t) {\n    let cell = this.value[key];\n\n    if (!cell) {\n      cell = this.value[key] = this.newcell(key, t);\n      this._adds[this._alen++] = cell;\n    } else if (cell.num === 0 && this._drop && cell.stamp < this.stamp) {\n      cell.stamp = this.stamp;\n      this._adds[this._alen++] = cell;\n    } else if (cell.stamp < this.stamp) {\n      cell.stamp = this.stamp;\n      this._mods[this._mlen++] = cell;\n    }\n\n    return cell;\n  },\n\n  newcell(key, t) {\n    const cell = {\n      key: key,\n      num: 0,\n      agg: null,\n      tuple: this.newtuple(t, this._prev && this._prev[key]),\n      stamp: this.stamp,\n      store: false\n    };\n\n    if (!this._countOnly) {\n      const measures = this._measures,\n            n = measures.length;\n      cell.agg = Array(n);\n\n      for (let i = 0; i < n; ++i) {\n        cell.agg[i] = new measures[i](cell);\n      }\n    }\n\n    if (cell.store) {\n      cell.data = new TupleStore();\n    }\n\n    return cell;\n  },\n\n  newtuple(t, p) {\n    const names = this._dnames,\n          dims = this._dims,\n          n = dims.length,\n          x = {};\n\n    for (let i = 0; i < n; ++i) {\n      x[names[i]] = dims[i](t);\n    }\n\n    return p ? replace(p.tuple, x) : ingest(x);\n  },\n\n  clean() {\n    const cells = this.value;\n\n    for (const key in cells) {\n      if (cells[key].num === 0) {\n        delete cells[key];\n      }\n    }\n  },\n\n  // -- Process Tuples -----\n  add(t) {\n    const key = this.cellkey(t),\n          cell = this.cell(key, t);\n    cell.num += 1;\n    if (this._countOnly) return;\n    if (cell.store) cell.data.add(t);\n    const agg = cell.agg;\n\n    for (let i = 0, n = agg.length; i < n; ++i) {\n      agg[i].add(agg[i].get(t), t);\n    }\n  },\n\n  rem(t) {\n    const key = this.cellkey(t),\n          cell = this.cell(key, t);\n    cell.num -= 1;\n    if (this._countOnly) return;\n    if (cell.store) cell.data.rem(t);\n    const agg = cell.agg;\n\n    for (let i = 0, n = agg.length; i < n; ++i) {\n      agg[i].rem(agg[i].get(t), t);\n    }\n  },\n\n  celltuple(cell) {\n    const tuple = cell.tuple,\n          counts = this._counts; // consolidate stored values\n\n    if (cell.store) {\n      cell.data.values();\n    } // update tuple properties\n\n\n    for (let i = 0, n = counts.length; i < n; ++i) {\n      tuple[counts[i]] = cell.num;\n    }\n\n    if (!this._countOnly) {\n      const agg = cell.agg;\n\n      for (let i = 0, n = agg.length; i < n; ++i) {\n        agg[i].set(tuple);\n      }\n    }\n\n    return tuple;\n  },\n\n  changes(out) {\n    const adds = this._adds,\n          mods = this._mods,\n          prev = this._prev,\n          drop = this._drop,\n          add = out.add,\n          rem = out.rem,\n          mod = out.mod;\n    let cell, key, i, n;\n    if (prev) for (key in prev) {\n      cell = prev[key];\n      if (!drop || cell.num) rem.push(cell.tuple);\n    }\n\n    for (i = 0, n = this._alen; i < n; ++i) {\n      add.push(this.celltuple(adds[i]));\n      adds[i] = null; // for garbage collection\n    }\n\n    for (i = 0, n = this._mlen; i < n; ++i) {\n      cell = mods[i];\n      (cell.num === 0 && drop ? rem : mod).push(this.celltuple(cell));\n      mods[i] = null; // for garbage collection\n    }\n\n    this._alen = this._mlen = 0; // reset list of active cells\n\n    this._prev = null;\n    return out;\n  }\n\n});\n\nconst EPSILON$1 = 1e-14;\n/**\n * Generates a binning function for discretizing data.\n * @constructor\n * @param {object} params - The parameters for this operator. The\n *   provided values should be valid options for the {@link bin} function.\n * @param {function(object): *} params.field - The data field to bin.\n */\n\nfunction Bin(params) {\n  Transform.call(this, null, params);\n}\nBin.Definition = {\n  'type': 'Bin',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'interval',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'anchor',\n    'type': 'number'\n  }, {\n    'name': 'maxbins',\n    'type': 'number',\n    'default': 20\n  }, {\n    'name': 'base',\n    'type': 'number',\n    'default': 10\n  }, {\n    'name': 'divide',\n    'type': 'number',\n    'array': true,\n    'default': [5, 2]\n  }, {\n    'name': 'extent',\n    'type': 'number',\n    'array': true,\n    'length': 2,\n    'required': true\n  }, {\n    'name': 'span',\n    'type': 'number'\n  }, {\n    'name': 'step',\n    'type': 'number'\n  }, {\n    'name': 'steps',\n    'type': 'number',\n    'array': true\n  }, {\n    'name': 'minstep',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'nice',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'name',\n    'type': 'string'\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['bin0', 'bin1']\n  }]\n};\ninherits(Bin, Transform, {\n  transform(_, pulse) {\n    const band = _.interval !== false,\n          bins = this._bins(_),\n          start = bins.start,\n          step = bins.step,\n          as = _.as || ['bin0', 'bin1'],\n          b0 = as[0],\n          b1 = as[1];\n\n    let flag;\n\n    if (_.modified()) {\n      pulse = pulse.reflow(true);\n      flag = pulse.SOURCE;\n    } else {\n      flag = pulse.modified(accessorFields(_.field)) ? pulse.ADD_MOD : pulse.ADD;\n    }\n\n    pulse.visit(flag, band ? t => {\n      const v = bins(t); // minimum bin value (inclusive)\n\n      t[b0] = v; // maximum bin value (exclusive)\n      // use convoluted math for better floating point agreement\n      // see https://github.com/vega/vega/issues/830\n      // infinite values propagate through this formula! #2227\n\n      t[b1] = v == null ? null : start + step * (1 + (v - start) / step);\n    } : t => t[b0] = bins(t));\n    return pulse.modifies(band ? as : b0);\n  },\n\n  _bins(_) {\n    if (this.value && !_.modified()) {\n      return this.value;\n    }\n\n    const field = _.field,\n          bins = bin(_),\n          step = bins.step;\n    let start = bins.start,\n        stop = start + Math.ceil((bins.stop - start) / step) * step,\n        a,\n        d;\n\n    if ((a = _.anchor) != null) {\n      d = a - (start + step * Math.floor((a - start) / step));\n      start += d;\n      stop += d;\n    }\n\n    const f = function (t) {\n      let v = toNumber(field(t));\n      return v == null ? null : v < start ? -Infinity : v > stop ? +Infinity : (v = Math.max(start, Math.min(v, stop - step)), start + step * Math.floor(EPSILON$1 + (v - start) / step));\n    };\n\n    f.start = start;\n    f.stop = bins.stop;\n    f.step = step;\n    return this.value = accessor(f, accessorFields(field), _.name || 'bin_' + accessorName(field));\n  }\n\n});\n\nfunction SortedList (idFunc, source, input) {\n  const $ = idFunc;\n  let data = source || [],\n      add = input || [],\n      rem = {},\n      cnt = 0;\n  return {\n    add: t => add.push(t),\n    remove: t => rem[$(t)] = ++cnt,\n    size: () => data.length,\n    data: (compare, resort) => {\n      if (cnt) {\n        data = data.filter(t => !rem[$(t)]);\n        rem = {};\n        cnt = 0;\n      }\n\n      if (resort && compare) {\n        data.sort(compare);\n      }\n\n      if (add.length) {\n        data = compare ? merge(compare, data, add.sort(compare)) : data.concat(add);\n        add = [];\n      }\n\n      return data;\n    }\n  };\n}\n\n/**\n * Collects all data tuples that pass through this operator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - An optional\n *   comparator function for additionally sorting the collected tuples.\n */\n\nfunction Collect(params) {\n  Transform.call(this, [], params);\n}\nCollect.Definition = {\n  'type': 'Collect',\n  'metadata': {\n    'source': true\n  },\n  'params': [{\n    'name': 'sort',\n    'type': 'compare'\n  }]\n};\ninherits(Collect, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.ALL),\n          list = SortedList(tupleid, this.value, out.materialize(out.ADD).add),\n          sort = _.sort,\n          mod = pulse.changed() || sort && (_.modified('sort') || pulse.modified(sort.fields));\n    out.visit(out.REM, list.remove);\n    this.modified(mod);\n    this.value = out.source = list.data(stableCompare(sort), mod); // propagate tree root if defined\n\n    if (pulse.source && pulse.source.root) {\n      this.value.root = pulse.source.root;\n    }\n\n    return out;\n  }\n\n});\n\n/**\n * Generates a comparator function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<string|function>} params.fields - The fields to compare.\n * @param {Array<string>} [params.orders] - The sort orders.\n *   Each entry should be one of \"ascending\" (default) or \"descending\".\n */\n\nfunction Compare(params) {\n  Operator.call(this, null, update$5, params);\n}\ninherits(Compare, Operator);\n\nfunction update$5(_) {\n  return this.value && !_.modified() ? this.value : compare(_.fields, _.orders);\n}\n\n/**\n * Count regexp-defined pattern occurrences in a text field.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - An accessor for the text field.\n * @param {string} [params.pattern] - RegExp string defining the text pattern.\n * @param {string} [params.case] - One of 'lower', 'upper' or null (mixed) case.\n * @param {string} [params.stopwords] - RegExp string of words to ignore.\n */\n\nfunction CountPattern(params) {\n  Transform.call(this, null, params);\n}\nCountPattern.Definition = {\n  'type': 'CountPattern',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'case',\n    'type': 'enum',\n    'values': ['upper', 'lower', 'mixed'],\n    'default': 'mixed'\n  }, {\n    'name': 'pattern',\n    'type': 'string',\n    'default': '[\\\\w\"]+'\n  }, {\n    'name': 'stopwords',\n    'type': 'string',\n    'default': ''\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['text', 'count']\n  }]\n};\n\nfunction tokenize(text, tcase, match) {\n  switch (tcase) {\n    case 'upper':\n      text = text.toUpperCase();\n      break;\n\n    case 'lower':\n      text = text.toLowerCase();\n      break;\n  }\n\n  return text.match(match);\n}\n\ninherits(CountPattern, Transform, {\n  transform(_, pulse) {\n    const process = update => tuple => {\n      var tokens = tokenize(get(tuple), _.case, match) || [],\n          t;\n\n      for (var i = 0, n = tokens.length; i < n; ++i) {\n        if (!stop.test(t = tokens[i])) update(t);\n      }\n    };\n\n    const init = this._parameterCheck(_, pulse),\n          counts = this._counts,\n          match = this._match,\n          stop = this._stop,\n          get = _.field,\n          as = _.as || ['text', 'count'],\n          add = process(t => counts[t] = 1 + (counts[t] || 0)),\n          rem = process(t => counts[t] -= 1);\n\n    if (init) {\n      pulse.visit(pulse.SOURCE, add);\n    } else {\n      pulse.visit(pulse.ADD, add);\n      pulse.visit(pulse.REM, rem);\n    }\n\n    return this._finish(pulse, as); // generate output tuples\n  },\n\n  _parameterCheck(_, pulse) {\n    let init = false;\n\n    if (_.modified('stopwords') || !this._stop) {\n      this._stop = new RegExp('^' + (_.stopwords || '') + '$', 'i');\n      init = true;\n    }\n\n    if (_.modified('pattern') || !this._match) {\n      this._match = new RegExp(_.pattern || '[\\\\w\\']+', 'g');\n      init = true;\n    }\n\n    if (_.modified('field') || pulse.modified(_.field.fields)) {\n      init = true;\n    }\n\n    if (init) this._counts = {};\n    return init;\n  },\n\n  _finish(pulse, as) {\n    const counts = this._counts,\n          tuples = this._tuples || (this._tuples = {}),\n          text = as[0],\n          count = as[1],\n          out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n    let w, t, c;\n\n    for (w in counts) {\n      t = tuples[w];\n      c = counts[w] || 0;\n\n      if (!t && c) {\n        tuples[w] = t = ingest({});\n        t[text] = w;\n        t[count] = c;\n        out.add.push(t);\n      } else if (c === 0) {\n        if (t) out.rem.push(t);\n        counts[w] = null;\n        tuples[w] = null;\n      } else if (t[count] !== c) {\n        t[count] = c;\n        out.mod.push(t);\n      }\n    }\n\n    return out.modifies(as);\n  }\n\n});\n\n/**\n * Perform a cross-product of a tuple stream with itself.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object):boolean} [params.filter] - An optional filter\n *   function for selectively including tuples in the cross product.\n * @param {Array<string>} [params.as] - The names of the output fields.\n */\n\nfunction Cross(params) {\n  Transform.call(this, null, params);\n}\nCross.Definition = {\n  'type': 'Cross',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'filter',\n    'type': 'expr'\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['a', 'b']\n  }]\n};\ninherits(Cross, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE),\n          as = _.as || ['a', 'b'],\n          a = as[0],\n          b = as[1],\n          reset = !this.value || pulse.changed(pulse.ADD_REM) || _.modified('as') || _.modified('filter');\n\n    let data = this.value;\n\n    if (reset) {\n      if (data) out.rem = data;\n      data = pulse.materialize(pulse.SOURCE).source;\n      out.add = this.value = cross(data, a, b, _.filter || truthy);\n    } else {\n      out.mod = data;\n    }\n\n    out.source = this.value;\n    return out.modifies(as);\n  }\n\n});\n\nfunction cross(input, a, b, filter) {\n  var data = [],\n      t = {},\n      n = input.length,\n      i = 0,\n      j,\n      left;\n\n  for (; i < n; ++i) {\n    t[a] = left = input[i];\n\n    for (j = 0; j < n; ++j) {\n      t[b] = input[j];\n\n      if (filter(t)) {\n        data.push(ingest(t));\n        t = {};\n        t[a] = left;\n      }\n    }\n  }\n\n  return data;\n}\n\nconst Distributions = {\n  kde: randomKDE,\n  mixture: randomMixture,\n  normal: randomNormal,\n  lognormal: randomLogNormal,\n  uniform: randomUniform\n};\nconst DISTRIBUTIONS = 'distributions',\n      FUNCTION = 'function',\n      FIELD = 'field';\n/**\n * Parse a parameter object for a probability distribution.\n * @param {object} def - The distribution parameter object.\n * @param {function():Array<object>} - A method for requesting\n *   source data. Used for distributions (such as KDE) that\n *   require sample data points. This method will only be\n *   invoked if the 'from' parameter for a target data source\n *   is not provided. Typically this method returns backing\n *   source data for a Pulse object.\n * @return {object} - The output distribution object.\n */\n\nfunction parse(def, data) {\n  const func = def[FUNCTION];\n\n  if (!hasOwnProperty(Distributions, func)) {\n    error('Unknown distribution function: ' + func);\n  }\n\n  const d = Distributions[func]();\n\n  for (const name in def) {\n    // if data field, extract values\n    if (name === FIELD) {\n      d.data((def.from || data()).map(def[name]));\n    } // if distribution mixture, recurse to parse each definition\n    else if (name === DISTRIBUTIONS) {\n        d[name](def[name].map(_ => parse(_, data)));\n      } // otherwise, simply set the parameter\n      else if (typeof d[name] === FUNCTION) {\n          d[name](def[name]);\n        }\n  }\n\n  return d;\n}\n\n/**\n * Grid sample points for a probability density. Given a distribution and\n * a sampling extent, will generate points suitable for plotting either\n * PDF (probability density function) or CDF (cumulative distribution\n * function) curves.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {object} params.distribution - The probability distribution. This\n *   is an object parameter dependent on the distribution type.\n * @param {string} [params.method='pdf'] - The distribution method to sample.\n *   One of 'pdf' or 'cdf'.\n * @param {Array<number>} [params.extent] - The [min, max] extent over which\n *   to sample the distribution. This argument is required in most cases, but\n *   can be omitted if the distribution (e.g., 'kde') supports a 'data' method\n *   that returns numerical sample points from which the extent can be deduced.\n * @param {number} [params.minsteps=25] - The minimum number of curve samples\n *   for plotting the density.\n * @param {number} [params.maxsteps=200] - The maximum number of curve samples\n *   for plotting the density.\n * @param {number} [params.steps] - The exact number of curve samples for\n *   plotting the density. If specified, overrides both minsteps and maxsteps\n *   to set an exact number of uniform samples. Useful in conjunction with\n *   a fixed extent to ensure consistent sample points for stacked densities.\n */\n\nfunction Density(params) {\n  Transform.call(this, null, params);\n}\nconst distributions = [{\n  'key': {\n    'function': 'normal'\n  },\n  'params': [{\n    'name': 'mean',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'stdev',\n    'type': 'number',\n    'default': 1\n  }]\n}, {\n  'key': {\n    'function': 'lognormal'\n  },\n  'params': [{\n    'name': 'mean',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'stdev',\n    'type': 'number',\n    'default': 1\n  }]\n}, {\n  'key': {\n    'function': 'uniform'\n  },\n  'params': [{\n    'name': 'min',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'max',\n    'type': 'number',\n    'default': 1\n  }]\n}, {\n  'key': {\n    'function': 'kde'\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'from',\n    'type': 'data'\n  }, {\n    'name': 'bandwidth',\n    'type': 'number',\n    'default': 0\n  }]\n}];\nconst mixture = {\n  'key': {\n    'function': 'mixture'\n  },\n  'params': [{\n    'name': 'distributions',\n    'type': 'param',\n    'array': true,\n    'params': distributions\n  }, {\n    'name': 'weights',\n    'type': 'number',\n    'array': true\n  }]\n};\nDensity.Definition = {\n  'type': 'Density',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'extent',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'steps',\n    'type': 'number'\n  }, {\n    'name': 'minsteps',\n    'type': 'number',\n    'default': 25\n  }, {\n    'name': 'maxsteps',\n    'type': 'number',\n    'default': 200\n  }, {\n    'name': 'method',\n    'type': 'string',\n    'default': 'pdf',\n    'values': ['pdf', 'cdf']\n  }, {\n    'name': 'distribution',\n    'type': 'param',\n    'params': distributions.concat(mixture)\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'default': ['value', 'density']\n  }]\n};\ninherits(Density, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n\n    if (!this.value || pulse.changed() || _.modified()) {\n      const dist = parse(_.distribution, source(pulse)),\n            minsteps = _.steps || _.minsteps || 25,\n            maxsteps = _.steps || _.maxsteps || 200;\n      let method = _.method || 'pdf';\n\n      if (method !== 'pdf' && method !== 'cdf') {\n        error('Invalid density method: ' + method);\n      }\n\n      if (!_.extent && !dist.data) {\n        error('Missing density extent parameter.');\n      }\n\n      method = dist[method];\n      const as = _.as || ['value', 'density'],\n            domain = _.extent || extent(dist.data()),\n            values = sampleCurve(method, domain, minsteps, maxsteps).map(v => {\n        const tuple = {};\n        tuple[as[0]] = v[0];\n        tuple[as[1]] = v[1];\n        return ingest(tuple);\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.add = out.source = values;\n    }\n\n    return out;\n  }\n\n});\n\nfunction source(pulse) {\n  return () => pulse.materialize(pulse.SOURCE).source;\n}\n\nfunction fieldNames(fields, as) {\n  if (!fields) return null;\n  return fields.map((f, i) => as[i] || accessorName(f));\n}\nfunction partition$1(data, groupby, field) {\n  const groups = [],\n        get = f => f(t);\n\n  let map, i, n, t, k, g; // partition data points into groups\n\n  if (groupby == null) {\n    groups.push(data.map(field));\n  } else {\n    for (map = {}, i = 0, n = data.length; i < n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n\n      if (!g) {\n        map[k] = g = [];\n        g.dims = k;\n        groups.push(g);\n      }\n\n      g.push(field(t));\n    }\n  }\n\n  return groups;\n}\n\nconst Output = 'bin';\n/**\n * Dot density binning for dot plot construction.\n * Based on Leland Wilkinson, Dot Plots, The American Statistician, 1999.\n * https://www.cs.uic.edu/~wilkinson/Publications/dotplots.pdf\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to bin.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {number} [params.step] - The step size (bin width) within which dots should be\n *   stacked. Defaults to 1/30 of the extent of the data *field*.\n * @param {boolean} [params.smooth=false] - A boolean flag indicating if dot density\n *   stacks should be smoothed to reduce variance.\n */\n\nfunction DotBin(params) {\n  Transform.call(this, null, params);\n}\nDotBin.Definition = {\n  'type': 'DotBin',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'step',\n    'type': 'number'\n  }, {\n    'name': 'smooth',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': Output\n  }]\n};\n\nconst autostep = (data, field) => span(extent(data, field)) / 30;\n\ninherits(DotBin, Transform, {\n  transform(_, pulse) {\n    if (this.value && !(_.modified() || pulse.changed())) {\n      return pulse; // early exit\n    }\n\n    const source = pulse.materialize(pulse.SOURCE).source,\n          groups = partition$1(pulse.source, _.groupby, identity),\n          smooth = _.smooth || false,\n          field = _.field,\n          step = _.step || autostep(source, field),\n          sort = stableCompare((a, b) => field(a) - field(b)),\n          as = _.as || Output,\n          n = groups.length; // compute dotplot bins per group\n\n    let min = Infinity,\n        max = -Infinity,\n        i = 0,\n        j;\n\n    for (; i < n; ++i) {\n      const g = groups[i].sort(sort);\n      j = -1;\n\n      for (const v of dotbin(g, step, smooth, field)) {\n        if (v < min) min = v;\n        if (v > max) max = v;\n        g[++j][as] = v;\n      }\n    }\n\n    this.value = {\n      start: min,\n      stop: max,\n      step: step\n    };\n    return pulse.reflow(true).modifies(as);\n  }\n\n});\n\n/**\n * Wraps an expression function with access to external parameters.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function} params.expr - The expression function. The\n *  function should accept both a datum and a parameter object.\n *  This operator's value will be a new function that wraps the\n *  expression function with access to this operator's parameters.\n */\n\nfunction Expression(params) {\n  Operator.call(this, null, update$4, params);\n  this.modified(true);\n}\ninherits(Expression, Operator);\n\nfunction update$4(_) {\n  const expr = _.expr;\n  return this.value && !_.modified('expr') ? this.value : accessor(datum => expr(datum, _), accessorFields(expr), accessorName(expr));\n}\n\n/**\n * Computes extents (min/max) for a data field.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The field over which to compute extends.\n */\n\nfunction Extent(params) {\n  Transform.call(this, [undefined, undefined], params);\n}\nExtent.Definition = {\n  'type': 'Extent',\n  'metadata': {},\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }]\n};\ninherits(Extent, Transform, {\n  transform(_, pulse) {\n    const extent = this.value,\n          field = _.field,\n          mod = pulse.changed() || pulse.modified(field.fields) || _.modified('field');\n\n    let min = extent[0],\n        max = extent[1];\n\n    if (mod || min == null) {\n      min = +Infinity;\n      max = -Infinity;\n    }\n\n    pulse.visit(mod ? pulse.SOURCE : pulse.ADD, t => {\n      const v = toNumber(field(t));\n\n      if (v != null) {\n        // NaNs will fail all comparisons!\n        if (v < min) min = v;\n        if (v > max) max = v;\n      }\n    });\n\n    if (!Number.isFinite(min) || !Number.isFinite(max)) {\n      let name = accessorName(field);\n      if (name) name = ` for field \"${name}\"`;\n      pulse.dataflow.warn(`Infinite extent${name}: [${min}, ${max}]`);\n      min = max = undefined;\n    }\n\n    this.value = [min, max];\n  }\n\n});\n\n/**\n * Provides a bridge between a parent transform and a target subflow that\n * consumes only a subset of the tuples that pass through the parent.\n * @constructor\n * @param {Pulse} pulse - A pulse to use as the value of this operator.\n * @param {Transform} parent - The parent transform (typically a Facet instance).\n */\n\nfunction Subflow(pulse, parent) {\n  Operator.call(this, pulse);\n  this.parent = parent;\n  this.count = 0;\n}\ninherits(Subflow, Operator, {\n  /**\n   * Routes pulses from this subflow to a target transform.\n   * @param {Transform} target - A transform that receives the subflow of tuples.\n   */\n  connect(target) {\n    this.detachSubflow = target.detachSubflow;\n    this.targets().add(target);\n    return target.source = this;\n  },\n\n  /**\n   * Add an 'add' tuple to the subflow pulse.\n   * @param {Tuple} t - The tuple being added.\n   */\n  add(t) {\n    this.count += 1;\n    this.value.add.push(t);\n  },\n\n  /**\n   * Add a 'rem' tuple to the subflow pulse.\n   * @param {Tuple} t - The tuple being removed.\n   */\n  rem(t) {\n    this.count -= 1;\n    this.value.rem.push(t);\n  },\n\n  /**\n   * Add a 'mod' tuple to the subflow pulse.\n   * @param {Tuple} t - The tuple being modified.\n   */\n  mod(t) {\n    this.value.mod.push(t);\n  },\n\n  /**\n   * Re-initialize this operator's pulse value.\n   * @param {Pulse} pulse - The pulse to copy from.\n   * @see Pulse.init\n   */\n  init(pulse) {\n    this.value.init(pulse, pulse.NO_SOURCE);\n  },\n\n  /**\n   * Evaluate this operator. This method overrides the\n   * default behavior to simply return the contained pulse value.\n   * @return {Pulse}\n   */\n  evaluate() {\n    // assert: this.value.stamp === pulse.stamp\n    return this.value;\n  }\n\n});\n\n/**\n * Facets a dataflow into a set of subflows based on a key.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(Dataflow, string): Operator} params.subflow - A function\n *   that generates a subflow of operators and returns its root operator.\n * @param {function(object): *} params.key - The key field to facet by.\n */\n\nfunction Facet(params) {\n  Transform.call(this, {}, params);\n  this._keys = fastmap(); // cache previously calculated key values\n  // keep track of active subflows, use as targets array for listeners\n  // this allows us to limit propagation to only updated subflows\n\n  const a = this._targets = [];\n  a.active = 0;\n\n  a.forEach = f => {\n    for (let i = 0, n = a.active; i < n; ++i) {\n      f(a[i], i, a);\n    }\n  };\n}\ninherits(Facet, Transform, {\n  activate(flow) {\n    this._targets[this._targets.active++] = flow;\n  },\n\n  // parent argument provided by PreFacet subclass\n  subflow(key, flow, pulse, parent) {\n    const flows = this.value;\n    let sf = hasOwnProperty(flows, key) && flows[key],\n        df,\n        p;\n\n    if (!sf) {\n      p = parent || (p = this._group[key]) && p.tuple;\n      df = pulse.dataflow;\n      sf = new Subflow(pulse.fork(pulse.NO_SOURCE), this);\n      df.add(sf).connect(flow(df, key, p));\n      flows[key] = sf;\n      this.activate(sf);\n    } else if (sf.value.stamp < pulse.stamp) {\n      sf.init(pulse);\n      this.activate(sf);\n    }\n\n    return sf;\n  },\n\n  clean() {\n    const flows = this.value;\n    let detached = 0;\n\n    for (const key in flows) {\n      if (flows[key].count === 0) {\n        const detach = flows[key].detachSubflow;\n        if (detach) detach();\n        delete flows[key];\n        ++detached;\n      }\n    } // remove inactive targets from the active targets array\n\n\n    if (detached) {\n      const active = this._targets.filter(sf => sf && sf.count > 0);\n\n      this.initTargets(active);\n    }\n  },\n\n  initTargets(act) {\n    const a = this._targets,\n          n = a.length,\n          m = act ? act.length : 0;\n    let i = 0;\n\n    for (; i < m; ++i) {\n      a[i] = act[i];\n    }\n\n    for (; i < n && a[i] != null; ++i) {\n      a[i] = null; // ensure old flows can be garbage collected\n    }\n\n    a.active = m;\n  },\n\n  transform(_, pulse) {\n    const df = pulse.dataflow,\n          key = _.key,\n          flow = _.subflow,\n          cache = this._keys,\n          rekey = _.modified('key'),\n          subflow = key => this.subflow(key, flow, pulse);\n\n    this._group = _.group || {};\n    this.initTargets(); // reset list of active subflows\n\n    pulse.visit(pulse.REM, t => {\n      const id = tupleid(t),\n            k = cache.get(id);\n\n      if (k !== undefined) {\n        cache.delete(id);\n        subflow(k).rem(t);\n      }\n    });\n    pulse.visit(pulse.ADD, t => {\n      const k = key(t);\n      cache.set(tupleid(t), k);\n      subflow(k).add(t);\n    });\n\n    if (rekey || pulse.modified(key.fields)) {\n      pulse.visit(pulse.MOD, t => {\n        const id = tupleid(t),\n              k0 = cache.get(id),\n              k1 = key(t);\n\n        if (k0 === k1) {\n          subflow(k1).mod(t);\n        } else {\n          cache.set(id, k1);\n          subflow(k0).rem(t);\n          subflow(k1).add(t);\n        }\n      });\n    } else if (pulse.changed(pulse.MOD)) {\n      pulse.visit(pulse.MOD, t => {\n        subflow(cache.get(tupleid(t))).mod(t);\n      });\n    }\n\n    if (rekey) {\n      pulse.visit(pulse.REFLOW, t => {\n        const id = tupleid(t),\n              k0 = cache.get(id),\n              k1 = key(t);\n\n        if (k0 !== k1) {\n          cache.set(id, k1);\n          subflow(k0).rem(t);\n          subflow(k1).add(t);\n        }\n      });\n    }\n\n    if (pulse.clean()) {\n      df.runAfter(() => {\n        this.clean();\n        cache.clean();\n      });\n    } else if (cache.empty > df.cleanThreshold) {\n      df.runAfter(cache.clean);\n    }\n\n    return pulse;\n  }\n\n});\n\n/**\n * Generates one or more field accessor functions.\n * If the 'name' parameter is an array, an array of field accessors\n * will be created and the 'as' parameter will be ignored.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {string} params.name - The field name(s) to access.\n * @param {string} params.as - The accessor function name.\n */\n\nfunction Field(params) {\n  Operator.call(this, null, update$3, params);\n}\ninherits(Field, Operator);\n\nfunction update$3(_) {\n  return this.value && !_.modified() ? this.value : isArray(_.name) ? array(_.name).map(f => field(f)) : field(_.name, _.as);\n}\n\n/**\n * Filters data tuples according to a predicate function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.expr - The predicate expression function\n *   that determines a tuple's filter status. Truthy values pass the filter.\n */\n\nfunction Filter(params) {\n  Transform.call(this, fastmap(), params);\n}\nFilter.Definition = {\n  'type': 'Filter',\n  'metadata': {\n    'changes': true\n  },\n  'params': [{\n    'name': 'expr',\n    'type': 'expr',\n    'required': true\n  }]\n};\ninherits(Filter, Transform, {\n  transform(_, pulse) {\n    const df = pulse.dataflow,\n          cache = this.value,\n          // cache ids of filtered tuples\n    output = pulse.fork(),\n          add = output.add,\n          rem = output.rem,\n          mod = output.mod,\n          test = _.expr;\n    let isMod = true;\n    pulse.visit(pulse.REM, t => {\n      const id = tupleid(t);\n      if (!cache.has(id)) rem.push(t);else cache.delete(id);\n    });\n    pulse.visit(pulse.ADD, t => {\n      if (test(t, _)) add.push(t);else cache.set(tupleid(t), 1);\n    });\n\n    function revisit(t) {\n      const id = tupleid(t),\n            b = test(t, _),\n            s = cache.get(id);\n\n      if (b && s) {\n        cache.delete(id);\n        add.push(t);\n      } else if (!b && !s) {\n        cache.set(id, 1);\n        rem.push(t);\n      } else if (isMod && b && !s) {\n        mod.push(t);\n      }\n    }\n\n    pulse.visit(pulse.MOD, revisit);\n\n    if (_.modified()) {\n      isMod = false;\n      pulse.visit(pulse.REFLOW, revisit);\n    }\n\n    if (cache.empty > df.cleanThreshold) df.runAfter(cache.clean);\n    return output;\n  }\n\n});\n\n/**\n * Flattens array-typed field values into new data objects.\n * If multiple fields are specified, they are treated as parallel arrays,\n * with output values included for each matching index (or null if missing).\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} params.fields - An array of field\n *   accessors for the tuple fields that should be flattened.\n * @param {string} [params.index] - Optional output field name for index\n *   value. If unspecified, no index field is included in the output.\n * @param {Array<string>} [params.as] - Output field names for flattened\n *   array fields. Any unspecified fields will use the field name provided\n *   by the fields accessors.\n */\n\nfunction Flatten(params) {\n  Transform.call(this, [], params);\n}\nFlatten.Definition = {\n  'type': 'Flatten',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'required': true\n  }, {\n    'name': 'index',\n    'type': 'string'\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true\n  }]\n};\ninherits(Flatten, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE),\n          fields = _.fields,\n          as = fieldNames(fields, _.as || []),\n          index = _.index || null,\n          m = as.length; // remove any previous results\n\n    out.rem = this.value; // generate flattened tuples\n\n    pulse.visit(pulse.SOURCE, t => {\n      const arrays = fields.map(f => f(t)),\n            maxlen = arrays.reduce((l, a) => Math.max(l, a.length), 0);\n      let i = 0,\n          j,\n          d,\n          v;\n\n      for (; i < maxlen; ++i) {\n        d = derive(t);\n\n        for (j = 0; j < m; ++j) {\n          d[as[j]] = (v = arrays[j][i]) == null ? null : v;\n        }\n\n        if (index) {\n          d[index] = i;\n        }\n\n        out.add.push(d);\n      }\n    });\n    this.value = out.source = out.add;\n    if (index) out.modifies(index);\n    return out.modifies(as);\n  }\n\n});\n\n/**\n * Folds one more tuple fields into multiple tuples in which the field\n * name and values are available under new 'key' and 'value' fields.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.fields - An array of field accessors\n *   for the tuple fields that should be folded.\n * @param {Array<string>} [params.as] - Output field names for folded key\n *   and value fields, defaults to ['key', 'value'].\n */\n\nfunction Fold(params) {\n  Transform.call(this, [], params);\n}\nFold.Definition = {\n  'type': 'Fold',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'required': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['key', 'value']\n  }]\n};\ninherits(Fold, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE),\n          fields = _.fields,\n          fnames = fields.map(accessorName),\n          as = _.as || ['key', 'value'],\n          k = as[0],\n          v = as[1],\n          n = fields.length;\n    out.rem = this.value;\n    pulse.visit(pulse.SOURCE, t => {\n      for (let i = 0, d; i < n; ++i) {\n        d = derive(t);\n        d[k] = fnames[i];\n        d[v] = fields[i](t);\n        out.add.push(d);\n      }\n    });\n    this.value = out.source = out.add;\n    return out.modifies(as);\n  }\n\n});\n\n/**\n * Invokes a function for each data tuple and saves the results as a new field.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.expr - The formula function to invoke for each tuple.\n * @param {string} params.as - The field name under which to save the result.\n * @param {boolean} [params.initonly=false] - If true, the formula is applied to\n *   added tuples only, and does not update in response to modifications.\n */\n\nfunction Formula(params) {\n  Transform.call(this, null, params);\n}\nFormula.Definition = {\n  'type': 'Formula',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'expr',\n    'type': 'expr',\n    'required': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'required': true\n  }, {\n    'name': 'initonly',\n    'type': 'boolean'\n  }]\n};\ninherits(Formula, Transform, {\n  transform(_, pulse) {\n    const func = _.expr,\n          as = _.as,\n          mod = _.modified(),\n          flag = _.initonly ? pulse.ADD : mod ? pulse.SOURCE : pulse.modified(func.fields) || pulse.modified(as) ? pulse.ADD_MOD : pulse.ADD;\n\n    if (mod) {\n      // parameters updated, need to reflow\n      pulse = pulse.materialize().reflow(true);\n    }\n\n    if (!_.initonly) {\n      pulse.modifies(as);\n    }\n\n    return pulse.visit(flag, t => t[as] = func(t, _));\n  }\n\n});\n\n/**\n * Generates data tuples using a provided generator function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(Parameters): object} params.generator - A tuple generator\n *   function. This function is given the operator parameters as input.\n *   Changes to any additional parameters will not trigger re-calculation\n *   of previously generated tuples. Only future tuples are affected.\n * @param {number} params.size - The number of tuples to produce.\n */\n\nfunction Generate(params) {\n  Transform.call(this, [], params);\n}\ninherits(Generate, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.ALL),\n          gen = _.generator;\n    let data = this.value,\n        num = _.size - data.length,\n        add,\n        rem,\n        t;\n\n    if (num > 0) {\n      // need more tuples, generate and add\n      for (add = []; --num >= 0;) {\n        add.push(t = ingest(gen(_)));\n        data.push(t);\n      }\n\n      out.add = out.add.length ? out.materialize(out.ADD).add.concat(add) : add;\n    } else {\n      // need fewer tuples, remove\n      rem = data.slice(0, -num);\n      out.rem = out.rem.length ? out.materialize(out.REM).rem.concat(rem) : rem;\n      data = data.slice(-num);\n    }\n\n    out.source = this.value = data;\n    return out;\n  }\n\n});\n\nconst Methods = {\n  value: 'value',\n  median: median,\n  mean: mean,\n  min: min,\n  max: max\n};\nconst Empty = [];\n/**\n * Impute missing values.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to impute.\n * @param {Array<function(object): *>} [params.groupby] - An array of\n *   accessors to determine series within which to perform imputation.\n * @param {function(object): *} params.key - An accessor for a key value.\n *   Each key value should be unique within a group. New tuples will be\n *   imputed for any key values that are not found within a group.\n * @param {Array<*>} [params.keyvals] - Optional array of required key\n *   values. New tuples will be imputed for any key values that are not\n *   found within a group. In addition, these values will be automatically\n *   augmented with the key values observed in the input data.\n * @param {string} [method='value'] - The imputation method to use. One of\n *   'value', 'mean', 'median', 'max', 'min'.\n * @param {*} [value=0] - The constant value to use for imputation\n *   when using method 'value'.\n */\n\nfunction Impute(params) {\n  Transform.call(this, [], params);\n}\nImpute.Definition = {\n  'type': 'Impute',\n  'metadata': {\n    'changes': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'key',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'keyvals',\n    'array': true\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'method',\n    'type': 'enum',\n    'default': 'value',\n    'values': ['value', 'mean', 'median', 'max', 'min']\n  }, {\n    'name': 'value',\n    'default': 0\n  }]\n};\n\nfunction getValue(_) {\n  var m = _.method || Methods.value,\n      v;\n\n  if (Methods[m] == null) {\n    error('Unrecognized imputation method: ' + m);\n  } else if (m === Methods.value) {\n    v = _.value !== undefined ? _.value : 0;\n    return () => v;\n  } else {\n    return Methods[m];\n  }\n}\n\nfunction getField(_) {\n  const f = _.field;\n  return t => t ? f(t) : NaN;\n}\n\ninherits(Impute, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        impute = getValue(_),\n        field = getField(_),\n        fName = accessorName(_.field),\n        kName = accessorName(_.key),\n        gNames = (_.groupby || []).map(accessorName),\n        groups = partition(pulse.source, _.groupby, _.key, _.keyvals),\n        curr = [],\n        prev = this.value,\n        m = groups.domain.length,\n        group,\n        value,\n        gVals,\n        kVal,\n        g,\n        i,\n        j,\n        l,\n        n,\n        t;\n\n    for (g = 0, l = groups.length; g < l; ++g) {\n      group = groups[g];\n      gVals = group.values;\n      value = NaN; // add tuples for missing values\n\n      for (j = 0; j < m; ++j) {\n        if (group[j] != null) continue;\n        kVal = groups.domain[j];\n        t = {\n          _impute: true\n        };\n\n        for (i = 0, n = gVals.length; i < n; ++i) t[gNames[i]] = gVals[i];\n\n        t[kName] = kVal;\n        t[fName] = Number.isNaN(value) ? value = impute(group, field) : value;\n        curr.push(ingest(t));\n      }\n    } // update pulse with imputed tuples\n\n\n    if (curr.length) out.add = out.materialize(out.ADD).add.concat(curr);\n    if (prev.length) out.rem = out.materialize(out.REM).rem.concat(prev);\n    this.value = curr;\n    return out;\n  }\n\n});\n\nfunction partition(data, groupby, key, keyvals) {\n  var get = f => f(t),\n      groups = [],\n      domain = keyvals ? keyvals.slice() : [],\n      kMap = {},\n      gMap = {},\n      gVals,\n      gKey,\n      group,\n      i,\n      j,\n      k,\n      n,\n      t;\n\n  domain.forEach((k, i) => kMap[k] = i + 1);\n\n  for (i = 0, n = data.length; i < n; ++i) {\n    t = data[i];\n    k = key(t);\n    j = kMap[k] || (kMap[k] = domain.push(k));\n    gKey = (gVals = groupby ? groupby.map(get) : Empty) + '';\n\n    if (!(group = gMap[gKey])) {\n      group = gMap[gKey] = [];\n      groups.push(group);\n      group.values = gVals;\n    }\n\n    group[j - 1] = t;\n  }\n\n  groups.domain = domain;\n  return groups;\n}\n\n/**\n * Extend input tuples with aggregate values.\n * Calcuates aggregate values and joins them with the input stream.\n * @constructor\n */\n\nfunction JoinAggregate(params) {\n  Aggregate.call(this, params);\n}\nJoinAggregate.Definition = {\n  'type': 'JoinAggregate',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'fields',\n    'type': 'field',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'ops',\n    'type': 'enum',\n    'array': true,\n    'values': ValidAggregateOps\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'key',\n    'type': 'field'\n  }]\n};\ninherits(JoinAggregate, Aggregate, {\n  transform(_, pulse) {\n    const aggr = this,\n          mod = _.modified();\n\n    let cells; // process all input tuples to calculate aggregates\n\n    if (aggr.value && (mod || pulse.modified(aggr._inputs, true))) {\n      cells = aggr.value = mod ? aggr.init(_) : {};\n      pulse.visit(pulse.SOURCE, t => aggr.add(t));\n    } else {\n      cells = aggr.value = aggr.value || this.init(_);\n      pulse.visit(pulse.REM, t => aggr.rem(t));\n      pulse.visit(pulse.ADD, t => aggr.add(t));\n    } // update aggregation cells\n\n\n    aggr.changes(); // write aggregate values to input tuples\n\n    pulse.visit(pulse.SOURCE, t => {\n      extend(t, cells[aggr.cellkey(t)].tuple);\n    });\n    return pulse.reflow(mod).modifies(this._outputs);\n  },\n\n  changes() {\n    const adds = this._adds,\n          mods = this._mods;\n    let i, n;\n\n    for (i = 0, n = this._alen; i < n; ++i) {\n      this.celltuple(adds[i]);\n      adds[i] = null; // for garbage collection\n    }\n\n    for (i = 0, n = this._mlen; i < n; ++i) {\n      this.celltuple(mods[i]);\n      mods[i] = null; // for garbage collection\n    }\n\n    this._alen = this._mlen = 0; // reset list of active cells\n  }\n\n});\n\n/**\n * Compute kernel density estimates (KDE) for one or more data groups.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *   to groupby.\n * @param {function(object): *} params.field - An accessor for the data field\n *   to estimate.\n * @param {number} [params.bandwidth=0] - The KDE kernel bandwidth.\n *   If zero or unspecified, the bandwidth is automatically determined.\n * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n *   output values should be probability estimates (false, default) or\n *   smoothed counts (true).\n * @param {string} [params.cumulative=false] - A boolean flag indicating if a\n *   density (false) or cumulative distribution (true) should be generated.\n * @param {Array<number>} [params.extent] - The domain extent over which to\n *   plot the density. If unspecified, the [min, max] data extent is used.\n * @param {string} [params.resolve='independent'] - Indicates how parameters for\n *   multiple densities should be resolved. If \"independent\" (the default), each\n *   density may have its own domain extent and dynamic number of curve sample\n *   steps. If \"shared\", the KDE transform will ensure that all densities are\n *   defined over a shared domain and curve steps, enabling stacking.\n * @param {number} [params.minsteps=25] - The minimum number of curve samples\n *   for plotting the density.\n * @param {number} [params.maxsteps=200] - The maximum number of curve samples\n *   for plotting the density.\n * @param {number} [params.steps] - The exact number of curve samples for\n *   plotting the density. If specified, overrides both minsteps and maxsteps\n *   to set an exact number of uniform samples. Useful in conjunction with\n *   a fixed extent to ensure consistent sample points for stacked densities.\n */\n\nfunction KDE(params) {\n  Transform.call(this, null, params);\n}\nKDE.Definition = {\n  'type': 'KDE',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'cumulative',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'counts',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'bandwidth',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'extent',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'resolve',\n    'type': 'enum',\n    'values': ['shared', 'independent'],\n    'default': 'independent'\n  }, {\n    'name': 'steps',\n    'type': 'number'\n  }, {\n    'name': 'minsteps',\n    'type': 'number',\n    'default': 25\n  }, {\n    'name': 'maxsteps',\n    'type': 'number',\n    'default': 200\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'default': ['value', 'density']\n  }]\n};\ninherits(KDE, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n\n    if (!this.value || pulse.changed() || _.modified()) {\n      const source = pulse.materialize(pulse.SOURCE).source,\n            groups = partition$1(source, _.groupby, _.field),\n            names = (_.groupby || []).map(accessorName),\n            bandwidth = _.bandwidth,\n            method = _.cumulative ? 'cdf' : 'pdf',\n            as = _.as || ['value', 'density'],\n            values = [];\n      let domain = _.extent,\n          minsteps = _.steps || _.minsteps || 25,\n          maxsteps = _.steps || _.maxsteps || 200;\n\n      if (method !== 'pdf' && method !== 'cdf') {\n        error('Invalid density method: ' + method);\n      }\n\n      if (_.resolve === 'shared') {\n        if (!domain) domain = extent(source, _.field);\n        minsteps = maxsteps = _.steps || maxsteps;\n      }\n\n      groups.forEach(g => {\n        const density = randomKDE(g, bandwidth)[method],\n              scale = _.counts ? g.length : 1,\n              local = domain || extent(g);\n        sampleCurve(density, local, minsteps, maxsteps).forEach(v => {\n          const t = {};\n\n          for (let i = 0; i < names.length; ++i) {\n            t[names[i]] = g.dims[i];\n          }\n\n          t[as[0]] = v[0];\n          t[as[1]] = v[1] * scale;\n          values.push(ingest(t));\n        });\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.add = out.source = values;\n    }\n\n    return out;\n  }\n\n});\n\n/**\n * Generates a key function.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<string>} params.fields - The field name(s) for the key function.\n * @param {boolean} params.flat - A boolean flag indicating if the field names\n *  should be treated as flat property names, side-stepping nested field\n *  lookups normally indicated by dot or bracket notation.\n */\n\nfunction Key(params) {\n  Operator.call(this, null, update$2, params);\n}\ninherits(Key, Operator);\n\nfunction update$2(_) {\n  return this.value && !_.modified() ? this.value : key(_.fields, _.flat);\n}\n\n/**\n * Load and parse data from an external source. Marshalls parameter\n * values and then invokes the Dataflow request method.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {string} params.url - The URL to load from.\n * @param {object} params.format - The data format options.\n */\n\nfunction Load(params) {\n  Transform.call(this, [], params);\n  this._pending = null;\n}\ninherits(Load, Transform, {\n  transform(_, pulse) {\n    const df = pulse.dataflow;\n\n    if (this._pending) {\n      // update state and return pulse\n      return output(this, pulse, this._pending);\n    }\n\n    if (stop(_)) return pulse.StopPropagation;\n\n    if (_.values) {\n      // parse and ingest values, return output pulse\n      return output(this, pulse, df.parse(_.values, _.format));\n    } else if (_.async) {\n      // return promise for non-blocking async loading\n      const p = df.request(_.url, _.format).then(res => {\n        this._pending = array(res.data);\n        return df => df.touch(this);\n      });\n      return {\n        async: p\n      };\n    } else {\n      // return promise for synchronous loading\n      return df.request(_.url, _.format).then(res => output(this, pulse, array(res.data)));\n    }\n  }\n\n});\n\nfunction stop(_) {\n  return _.modified('async') && !(_.modified('values') || _.modified('url') || _.modified('format'));\n}\n\nfunction output(op, pulse, data) {\n  data.forEach(ingest);\n  const out = pulse.fork(pulse.NO_FIELDS & pulse.NO_SOURCE);\n  out.rem = op.value;\n  op.value = out.source = out.add = data;\n  op._pending = null;\n  if (out.rem.length) out.clean(true);\n  return out;\n}\n\n/**\n * Extend tuples by joining them with values from a lookup table.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Map} params.index - The lookup table map.\n * @param {Array<function(object): *} params.fields - The fields to lookup.\n * @param {Array<string>} params.as - Output field names for each lookup value.\n * @param {*} [params.default] - A default value to use if lookup fails.\n */\n\nfunction Lookup(params) {\n  Transform.call(this, {}, params);\n}\nLookup.Definition = {\n  'type': 'Lookup',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'index',\n    'type': 'index',\n    'params': [{\n      'name': 'from',\n      'type': 'data',\n      'required': true\n    }, {\n      'name': 'key',\n      'type': 'field',\n      'required': true\n    }]\n  }, {\n    'name': 'values',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'required': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true\n  }, {\n    'name': 'default',\n    'default': null\n  }]\n};\ninherits(Lookup, Transform, {\n  transform(_, pulse) {\n    const keys = _.fields,\n          index = _.index,\n          values = _.values,\n          defaultValue = _.default == null ? null : _.default,\n          reset = _.modified(),\n          n = keys.length;\n\n    let flag = reset ? pulse.SOURCE : pulse.ADD,\n        out = pulse,\n        as = _.as,\n        set,\n        m,\n        mods;\n\n    if (values) {\n      m = values.length;\n\n      if (n > 1 && !as) {\n        error('Multi-field lookup requires explicit \"as\" parameter.');\n      }\n\n      if (as && as.length !== n * m) {\n        error('The \"as\" parameter has too few output field names.');\n      }\n\n      as = as || values.map(accessorName);\n\n      set = function (t) {\n        for (var i = 0, k = 0, j, v; i < n; ++i) {\n          v = index.get(keys[i](t));\n          if (v == null) for (j = 0; j < m; ++j, ++k) t[as[k]] = defaultValue;else for (j = 0; j < m; ++j, ++k) t[as[k]] = values[j](v);\n        }\n      };\n    } else {\n      if (!as) {\n        error('Missing output field names.');\n      }\n\n      set = function (t) {\n        for (var i = 0, v; i < n; ++i) {\n          v = index.get(keys[i](t));\n          t[as[i]] = v == null ? defaultValue : v;\n        }\n      };\n    }\n\n    if (reset) {\n      out = pulse.reflow(true);\n    } else {\n      mods = keys.some(k => pulse.modified(k.fields));\n      flag |= mods ? pulse.MOD : 0;\n    }\n\n    pulse.visit(flag, set);\n    return out.modifies(as);\n  }\n\n});\n\n/**\n * Computes global min/max extents over a collection of extents.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<Array<number>>} params.extents - The input extents.\n */\n\nfunction MultiExtent(params) {\n  Operator.call(this, null, update$1, params);\n}\ninherits(MultiExtent, Operator);\n\nfunction update$1(_) {\n  if (this.value && !_.modified()) {\n    return this.value;\n  }\n\n  const ext = _.extents,\n        n = ext.length;\n  let min = +Infinity,\n      max = -Infinity,\n      i,\n      e;\n\n  for (i = 0; i < n; ++i) {\n    e = ext[i];\n    if (e[0] < min) min = e[0];\n    if (e[1] > max) max = e[1];\n  }\n\n  return [min, max];\n}\n\n/**\n * Merge a collection of value arrays.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<Array<*>>} params.values - The input value arrrays.\n */\n\nfunction MultiValues(params) {\n  Operator.call(this, null, update, params);\n}\ninherits(MultiValues, Operator);\n\nfunction update(_) {\n  return this.value && !_.modified() ? this.value : _.values.reduce((data, _) => data.concat(_), []);\n}\n\n/**\n * Operator whose value is simply its parameter hash. This operator is\n * useful for enabling reactive updates to values of nested objects.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction Params(params) {\n  Transform.call(this, null, params);\n}\ninherits(Params, Transform, {\n  transform(_, pulse) {\n    this.modified(_.modified());\n    this.value = _;\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS); // do not pass tuples\n  }\n\n});\n\n/**\n * Aggregate and pivot selected field values to become new fields.\n * This operator is useful to construction cross-tabulations.\n * @constructor\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *  to groupby. These fields act just like groupby fields of an Aggregate transform.\n * @param {function(object): *} params.field - The field to pivot on. The unique\n *  values of this field become new field names in the output stream.\n * @param {function(object): *} params.value - The field to populate pivoted fields.\n *  The aggregate values of this field become the values of the new pivoted fields.\n * @param {string} [params.op] - The aggregation operation for the value field,\n *  applied per cell in the output stream. The default is \"sum\".\n * @param {number} [params.limit] - An optional parameter indicating the maximum\n *  number of pivoted fields to generate. The pivoted field names are sorted in\n *  ascending order prior to enforcing the limit.\n */\n\nfunction Pivot(params) {\n  Aggregate.call(this, params);\n}\nPivot.Definition = {\n  'type': 'Pivot',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'value',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'op',\n    'type': 'enum',\n    'values': ValidAggregateOps,\n    'default': 'sum'\n  }, {\n    'name': 'limit',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'key',\n    'type': 'field'\n  }]\n};\ninherits(Pivot, Aggregate, {\n  _transform: Aggregate.prototype.transform,\n\n  transform(_, pulse) {\n    return this._transform(aggregateParams(_, pulse), pulse);\n  }\n\n}); // Shoehorn a pivot transform into an aggregate transform!\n// First collect all unique pivot field values.\n// Then generate aggregate fields for each output pivot field.\n\nfunction aggregateParams(_, pulse) {\n  const key = _.field,\n        value = _.value,\n        op = (_.op === 'count' ? '__count__' : _.op) || 'sum',\n        fields = accessorFields(key).concat(accessorFields(value)),\n        keys = pivotKeys(key, _.limit || 0, pulse); // if data stream content changes, pivot fields may change\n  // flag parameter modification to ensure re-initialization\n\n  if (pulse.changed()) _.set('__pivot__', null, null, true);\n  return {\n    key: _.key,\n    groupby: _.groupby,\n    ops: keys.map(() => op),\n    fields: keys.map(k => get(k, key, value, fields)),\n    as: keys.map(k => k + ''),\n    modified: _.modified.bind(_)\n  };\n} // Generate aggregate field accessor.\n// Output NaN for non-existent values; aggregator will ignore!\n\n\nfunction get(k, key, value, fields) {\n  return accessor(d => key(d) === k ? value(d) : NaN, fields, k + '');\n} // Collect (and optionally limit) all unique pivot values.\n\n\nfunction pivotKeys(key, limit, pulse) {\n  const map = {},\n        list = [];\n  pulse.visit(pulse.SOURCE, t => {\n    const k = key(t);\n\n    if (!map[k]) {\n      map[k] = 1;\n      list.push(k);\n    }\n  });\n  list.sort(ascending);\n  return limit ? list.slice(0, limit) : list;\n}\n\n/**\n * Partitions pre-faceted data into tuple subflows.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(Dataflow, string): Operator} params.subflow - A function\n *   that generates a subflow of operators and returns its root operator.\n * @param {function(object): Array<object>} params.field - The field\n *   accessor for an array of subflow tuple objects.\n */\n\nfunction PreFacet(params) {\n  Facet.call(this, params);\n}\ninherits(PreFacet, Facet, {\n  transform(_, pulse) {\n    const flow = _.subflow,\n          field = _.field,\n          subflow = t => this.subflow(tupleid(t), flow, pulse, t);\n\n    if (_.modified('field') || field && pulse.modified(accessorFields(field))) {\n      error('PreFacet does not support field modification.');\n    }\n\n    this.initTargets(); // reset list of active subflows\n\n    if (field) {\n      pulse.visit(pulse.MOD, t => {\n        const sf = subflow(t);\n        field(t).forEach(_ => sf.mod(_));\n      });\n      pulse.visit(pulse.ADD, t => {\n        const sf = subflow(t);\n        field(t).forEach(_ => sf.add(ingest(_)));\n      });\n      pulse.visit(pulse.REM, t => {\n        const sf = subflow(t);\n        field(t).forEach(_ => sf.rem(_));\n      });\n    } else {\n      pulse.visit(pulse.MOD, t => subflow(t).mod(t));\n      pulse.visit(pulse.ADD, t => subflow(t).add(t));\n      pulse.visit(pulse.REM, t => subflow(t).rem(t));\n    }\n\n    if (pulse.clean()) {\n      pulse.runAfter(() => this.clean());\n    }\n\n    return pulse;\n  }\n\n});\n\n/**\n * Performs a relational projection, copying selected fields from source\n * tuples to a new set of derived tuples.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *} params.fields - The fields to project,\n *   as an array of field accessors. If unspecified, all fields will be\n *   copied with names unchanged.\n * @param {Array<string>} [params.as] - Output field names for each projected\n *   field. Any unspecified fields will use the field name provided by\n *   the field accessor.\n */\n\nfunction Project(params) {\n  Transform.call(this, null, params);\n}\nProject.Definition = {\n  'type': 'Project',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'fields',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'null': true,\n    'array': true\n  }]\n};\ninherits(Project, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE),\n          fields = _.fields,\n          as = fieldNames(_.fields, _.as || []),\n          derive = fields ? (s, t) => project(s, t, fields, as) : rederive;\n    let lut;\n\n    if (this.value) {\n      lut = this.value;\n    } else {\n      pulse = pulse.addAll();\n      lut = this.value = {};\n    }\n\n    pulse.visit(pulse.REM, t => {\n      const id = tupleid(t);\n      out.rem.push(lut[id]);\n      lut[id] = null;\n    });\n    pulse.visit(pulse.ADD, t => {\n      const dt = derive(t, ingest({}));\n      lut[tupleid(t)] = dt;\n      out.add.push(dt);\n    });\n    pulse.visit(pulse.MOD, t => {\n      out.mod.push(derive(t, lut[tupleid(t)]));\n    });\n    return out;\n  }\n\n});\n\nfunction project(s, t, fields, as) {\n  for (let i = 0, n = fields.length; i < n; ++i) {\n    t[as[i]] = fields[i](s);\n  }\n\n  return t;\n}\n\n/**\n * Proxy the value of another operator as a pure signal value.\n * Ensures no tuples are propagated.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {*} params.value - The value to proxy, becomes the value of this operator.\n */\n\nfunction Proxy(params) {\n  Transform.call(this, null, params);\n}\ninherits(Proxy, Transform, {\n  transform(_, pulse) {\n    this.value = _.value;\n    return _.modified('value') ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS) : pulse.StopPropagation;\n  }\n\n});\n\n/**\n * Generates sample quantile values from an input data stream.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - An accessor for the data field\n *   over which to calculate quantile values.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *   to groupby.\n * @param {Array<number>} [params.probs] - An array of probabilities in\n *   the range (0, 1) for which to compute quantile values. If not specified,\n *   the *step* parameter will be used.\n * @param {Array<number>} [params.step=0.01] - A probability step size for\n *   sampling quantile values. All values from one-half the step size up to\n *   1 (exclusive) will be sampled. This parameter is only used if the\n *   *quantiles* parameter is not provided.\n */\n\nfunction Quantile(params) {\n  Transform.call(this, null, params);\n}\nQuantile.Definition = {\n  'type': 'Quantile',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'probs',\n    'type': 'number',\n    'array': true\n  }, {\n    'name': 'step',\n    'type': 'number',\n    'default': 0.01\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'default': ['prob', 'value']\n  }]\n};\nconst EPSILON = 1e-14;\ninherits(Quantile, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n          as = _.as || ['prob', 'value'];\n\n    if (this.value && !_.modified() && !pulse.changed()) {\n      out.source = this.value;\n      return out;\n    }\n\n    const source = pulse.materialize(pulse.SOURCE).source,\n          groups = partition$1(source, _.groupby, _.field),\n          names = (_.groupby || []).map(accessorName),\n          values = [],\n          step = _.step || 0.01,\n          p = _.probs || range(step / 2, 1 - EPSILON, step),\n          n = p.length;\n    groups.forEach(g => {\n      const q = quantiles(g, p);\n\n      for (let i = 0; i < n; ++i) {\n        const t = {};\n\n        for (let i = 0; i < names.length; ++i) {\n          t[names[i]] = g.dims[i];\n        }\n\n        t[as[0]] = p[i];\n        t[as[1]] = q[i];\n        values.push(ingest(t));\n      }\n    });\n    if (this.value) out.rem = this.value;\n    this.value = out.add = out.source = values;\n    return out;\n  }\n\n});\n\n/**\n * Relays a data stream between data processing pipelines.\n * If the derive parameter is set, this transform will create derived\n * copies of observed tuples. This provides derived data streams in which\n * modifications to the tuples do not pollute an upstream data source.\n * @param {object} params - The parameters for this operator.\n * @param {number} [params.derive=false] - Boolean flag indicating if\n *   the transform should make derived copies of incoming tuples.\n * @constructor\n */\n\nfunction Relay(params) {\n  Transform.call(this, null, params);\n}\ninherits(Relay, Transform, {\n  transform(_, pulse) {\n    let out, lut;\n\n    if (this.value) {\n      lut = this.value;\n    } else {\n      out = pulse = pulse.addAll();\n      lut = this.value = {};\n    }\n\n    if (_.derive) {\n      out = pulse.fork(pulse.NO_SOURCE);\n      pulse.visit(pulse.REM, t => {\n        const id = tupleid(t);\n        out.rem.push(lut[id]);\n        lut[id] = null;\n      });\n      pulse.visit(pulse.ADD, t => {\n        const dt = derive(t);\n        lut[tupleid(t)] = dt;\n        out.add.push(dt);\n      });\n      pulse.visit(pulse.MOD, t => {\n        const dt = lut[tupleid(t)];\n\n        for (const k in t) {\n          dt[k] = t[k]; // down stream writes may overwrite re-derived tuples\n          // conservatively mark all source fields as modified\n\n          out.modifies(k);\n        }\n\n        out.mod.push(dt);\n      });\n    }\n\n    return out;\n  }\n\n});\n\n/**\n * Samples tuples passing through this operator.\n * Uses reservoir sampling to maintain a representative sample.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {number} [params.size=1000] - The maximum number of samples.\n */\n\nfunction Sample(params) {\n  Transform.call(this, [], params);\n  this.count = 0;\n}\nSample.Definition = {\n  'type': 'Sample',\n  'metadata': {},\n  'params': [{\n    'name': 'size',\n    'type': 'number',\n    'default': 1000\n  }]\n};\ninherits(Sample, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE),\n          mod = _.modified('size'),\n          num = _.size,\n          map = this.value.reduce((m, t) => (m[tupleid(t)] = 1, m), {});\n\n    let res = this.value,\n        cnt = this.count,\n        cap = 0; // sample reservoir update function\n\n    function update(t) {\n      let p, idx;\n\n      if (res.length < num) {\n        res.push(t);\n      } else {\n        idx = ~~((cnt + 1) * random());\n\n        if (idx < res.length && idx >= cap) {\n          p = res[idx];\n          if (map[tupleid(p)]) out.rem.push(p); // eviction\n\n          res[idx] = t;\n        }\n      }\n\n      ++cnt;\n    }\n\n    if (pulse.rem.length) {\n      // find all tuples that should be removed, add to output\n      pulse.visit(pulse.REM, t => {\n        const id = tupleid(t);\n\n        if (map[id]) {\n          map[id] = -1;\n          out.rem.push(t);\n        }\n\n        --cnt;\n      }); // filter removed tuples out of the sample reservoir\n\n      res = res.filter(t => map[tupleid(t)] !== -1);\n    }\n\n    if ((pulse.rem.length || mod) && res.length < num && pulse.source) {\n      // replenish sample if backing data source is available\n      cap = cnt = res.length;\n      pulse.visit(pulse.SOURCE, t => {\n        // update, but skip previously sampled tuples\n        if (!map[tupleid(t)]) update(t);\n      });\n      cap = -1;\n    }\n\n    if (mod && res.length > num) {\n      const n = res.length - num;\n\n      for (let i = 0; i < n; ++i) {\n        map[tupleid(res[i])] = -1;\n        out.rem.push(res[i]);\n      }\n\n      res = res.slice(n);\n    }\n\n    if (pulse.mod.length) {\n      // propagate modified tuples in the sample reservoir\n      pulse.visit(pulse.MOD, t => {\n        if (map[tupleid(t)]) out.mod.push(t);\n      });\n    }\n\n    if (pulse.add.length) {\n      // update sample reservoir\n      pulse.visit(pulse.ADD, update);\n    }\n\n    if (pulse.add.length || cap < 0) {\n      // output newly added tuples\n      out.add = res.filter(t => !map[tupleid(t)]);\n    }\n\n    this.count = cnt;\n    this.value = out.source = res;\n    return out;\n  }\n\n});\n\n/**\n * Generates data tuples for a specified sequence range of numbers.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {number} params.start - The first number in the sequence.\n * @param {number} params.stop - The last number (exclusive) in the sequence.\n * @param {number} [params.step=1] - The step size between numbers in the sequence.\n */\n\nfunction Sequence(params) {\n  Transform.call(this, null, params);\n}\nSequence.Definition = {\n  'type': 'Sequence',\n  'metadata': {\n    'generates': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'start',\n    'type': 'number',\n    'required': true\n  }, {\n    'name': 'stop',\n    'type': 'number',\n    'required': true\n  }, {\n    'name': 'step',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'data'\n  }]\n};\ninherits(Sequence, Transform, {\n  transform(_, pulse) {\n    if (this.value && !_.modified()) return;\n    const out = pulse.materialize().fork(pulse.MOD),\n          as = _.as || 'data';\n    out.rem = this.value ? pulse.rem.concat(this.value) : pulse.rem;\n    this.value = range(_.start, _.stop, _.step || 1).map(v => {\n      const t = {};\n      t[as] = v;\n      return ingest(t);\n    });\n    out.add = pulse.add.concat(this.value);\n    return out;\n  }\n\n});\n\n/**\n * Propagates a new pulse without any tuples so long as the input\n * pulse contains some added, removed or modified tuples.\n * @param {object} params - The parameters for this operator.\n * @constructor\n */\n\nfunction Sieve(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\ninherits(Sieve, Transform, {\n  transform(_, pulse) {\n    this.value = pulse.source;\n    return pulse.changed() ? pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS) : pulse.StopPropagation;\n  }\n\n});\n\n/**\n * Discretize dates to specific time units.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The data field containing date/time values.\n */\n\nfunction TimeUnit(params) {\n  Transform.call(this, null, params);\n}\nconst OUTPUT = ['unit0', 'unit1'];\nTimeUnit.Definition = {\n  'type': 'TimeUnit',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'interval',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'units',\n    'type': 'enum',\n    'values': TIME_UNITS,\n    'array': true\n  }, {\n    'name': 'step',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'maxbins',\n    'type': 'number',\n    'default': 40\n  }, {\n    'name': 'extent',\n    'type': 'date',\n    'array': true\n  }, {\n    'name': 'timezone',\n    'type': 'enum',\n    'default': 'local',\n    'values': ['local', 'utc']\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': OUTPUT\n  }]\n};\ninherits(TimeUnit, Transform, {\n  transform(_, pulse) {\n    const field = _.field,\n          band = _.interval !== false,\n          utc = _.timezone === 'utc',\n          floor = this._floor(_, pulse),\n          offset = (utc ? utcInterval : timeInterval)(floor.unit).offset,\n          as = _.as || OUTPUT,\n          u0 = as[0],\n          u1 = as[1],\n          step = floor.step;\n\n    let min = floor.start || Infinity,\n        max = floor.stop || -Infinity,\n        flag = pulse.ADD;\n\n    if (_.modified() || pulse.modified(accessorFields(field))) {\n      pulse = pulse.reflow(true);\n      flag = pulse.SOURCE;\n      min = Infinity;\n      max = -Infinity;\n    }\n\n    pulse.visit(flag, t => {\n      const v = field(t);\n      let a, b;\n\n      if (v == null) {\n        t[u0] = null;\n        if (band) t[u1] = null;\n      } else {\n        t[u0] = a = b = floor(v);\n        if (band) t[u1] = b = offset(a, step);\n        if (a < min) min = a;\n        if (b > max) max = b;\n      }\n    });\n    floor.start = min;\n    floor.stop = max;\n    return pulse.modifies(band ? as : u0);\n  },\n\n  _floor(_, pulse) {\n    const utc = _.timezone === 'utc'; // get parameters\n\n    const {\n      units,\n      step\n    } = _.units ? {\n      units: _.units,\n      step: _.step || 1\n    } : timeBin({\n      extent: _.extent || extent(pulse.materialize(pulse.SOURCE).source, _.field),\n      maxbins: _.maxbins\n    }); // check / standardize time units\n\n    const tunits = timeUnits(units),\n          prev = this.value || {},\n          floor = (utc ? utcFloor : timeFloor)(tunits, step);\n    floor.unit = peek(tunits);\n    floor.units = tunits;\n    floor.step = step;\n    floor.start = prev.start;\n    floor.stop = prev.stop;\n    return this.value = floor;\n  }\n\n});\n\n/**\n * An index that maps from unique, string-coerced, field values to tuples.\n * Assumes that the field serves as a unique key with no duplicate values.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The field accessor to index.\n */\n\nfunction TupleIndex(params) {\n  Transform.call(this, fastmap(), params);\n}\ninherits(TupleIndex, Transform, {\n  transform(_, pulse) {\n    const df = pulse.dataflow,\n          field = _.field,\n          index = this.value,\n          set = t => index.set(field(t), t);\n\n    let mod = true;\n\n    if (_.modified('field') || pulse.modified(field.fields)) {\n      index.clear();\n      pulse.visit(pulse.SOURCE, set);\n    } else if (pulse.changed()) {\n      pulse.visit(pulse.REM, t => index.delete(field(t)));\n      pulse.visit(pulse.ADD, set);\n    } else {\n      mod = false;\n    }\n\n    this.modified(mod);\n    if (index.empty > df.cleanThreshold) df.runAfter(index.clean);\n    return pulse.fork();\n  }\n\n});\n\n/**\n * Extracts an array of values. Assumes the source data has already been\n * reduced as needed (e.g., by an upstream Aggregate transform).\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The domain field to extract.\n * @param {function(*,*): number} [params.sort] - An optional\n *   comparator function for sorting the values. The comparator will be\n *   applied to backing tuples prior to value extraction.\n */\n\nfunction Values(params) {\n  Transform.call(this, null, params);\n}\ninherits(Values, Transform, {\n  transform(_, pulse) {\n    const run = !this.value || _.modified('field') || _.modified('sort') || pulse.changed() || _.sort && pulse.modified(_.sort.fields);\n\n    if (run) {\n      this.value = (_.sort ? pulse.source.slice().sort(stableCompare(_.sort)) : pulse.source).map(_.field);\n    }\n  }\n\n});\n\nfunction WindowOp(op, field, param, as) {\n  const fn = WindowOps[op](field, param);\n  return {\n    init: fn.init || zero,\n    update: function (w, t) {\n      t[as] = fn.next(w);\n    }\n  };\n}\nconst WindowOps = {\n  row_number: function () {\n    return {\n      next: w => w.index + 1\n    };\n  },\n  rank: function () {\n    let rank;\n    return {\n      init: () => rank = 1,\n      next: w => {\n        const i = w.index,\n              data = w.data;\n        return i && w.compare(data[i - 1], data[i]) ? rank = i + 1 : rank;\n      }\n    };\n  },\n  dense_rank: function () {\n    let drank;\n    return {\n      init: () => drank = 1,\n      next: w => {\n        const i = w.index,\n              d = w.data;\n        return i && w.compare(d[i - 1], d[i]) ? ++drank : drank;\n      }\n    };\n  },\n  percent_rank: function () {\n    const rank = WindowOps.rank(),\n          next = rank.next;\n    return {\n      init: rank.init,\n      next: w => (next(w) - 1) / (w.data.length - 1)\n    };\n  },\n  cume_dist: function () {\n    let cume;\n    return {\n      init: () => cume = 0,\n      next: w => {\n        const d = w.data,\n              c = w.compare;\n        let i = w.index;\n\n        if (cume < i) {\n          while (i + 1 < d.length && !c(d[i], d[i + 1])) ++i;\n\n          cume = i;\n        }\n\n        return (1 + cume) / d.length;\n      }\n    };\n  },\n  ntile: function (field, num) {\n    num = +num;\n    if (!(num > 0)) error('ntile num must be greater than zero.');\n    const cume = WindowOps.cume_dist(),\n          next = cume.next;\n    return {\n      init: cume.init,\n      next: w => Math.ceil(num * next(w))\n    };\n  },\n  lag: function (field, offset) {\n    offset = +offset || 1;\n    return {\n      next: w => {\n        const i = w.index - offset;\n        return i >= 0 ? field(w.data[i]) : null;\n      }\n    };\n  },\n  lead: function (field, offset) {\n    offset = +offset || 1;\n    return {\n      next: w => {\n        const i = w.index + offset,\n              d = w.data;\n        return i < d.length ? field(d[i]) : null;\n      }\n    };\n  },\n  first_value: function (field) {\n    return {\n      next: w => field(w.data[w.i0])\n    };\n  },\n  last_value: function (field) {\n    return {\n      next: w => field(w.data[w.i1 - 1])\n    };\n  },\n  nth_value: function (field, nth) {\n    nth = +nth;\n    if (!(nth > 0)) error('nth_value nth must be greater than zero.');\n    return {\n      next: w => {\n        const i = w.i0 + (nth - 1);\n        return i < w.i1 ? field(w.data[i]) : null;\n      }\n    };\n  },\n  prev_value: function (field) {\n    let prev;\n    return {\n      init: () => prev = null,\n      next: w => {\n        const v = field(w.data[w.index]);\n        return v != null ? prev = v : prev;\n      }\n    };\n  },\n  next_value: function (field) {\n    let v, i;\n    return {\n      init: () => (v = null, i = -1),\n      next: w => {\n        const d = w.data;\n        return w.index <= i ? v : (i = find(field, d, w.index)) < 0 ? (i = d.length, v = null) : v = field(d[i]);\n      }\n    };\n  }\n};\n\nfunction find(field, data, index) {\n  for (let n = data.length; index < n; ++index) {\n    const v = field(data[index]);\n    if (v != null) return index;\n  }\n\n  return -1;\n}\n\nconst ValidWindowOps = Object.keys(WindowOps);\n\nfunction WindowState(_) {\n  const ops = array(_.ops),\n        fields = array(_.fields),\n        params = array(_.params),\n        as = array(_.as),\n        outputs = this.outputs = [],\n        windows = this.windows = [],\n        inputs = {},\n        map = {},\n        counts = [],\n        measures = [];\n  let countOnly = true;\n\n  function visitInputs(f) {\n    array(accessorFields(f)).forEach(_ => inputs[_] = 1);\n  }\n\n  visitInputs(_.sort);\n  ops.forEach((op, i) => {\n    const field = fields[i],\n          mname = accessorName(field),\n          name = measureName(op, mname, as[i]);\n    visitInputs(field);\n    outputs.push(name); // Window operation\n\n    if (hasOwnProperty(WindowOps, op)) {\n      windows.push(WindowOp(op, fields[i], params[i], name));\n    } // Aggregate operation\n    else {\n        if (field == null && op !== 'count') {\n          error('Null aggregate field specified.');\n        }\n\n        if (op === 'count') {\n          counts.push(name);\n          return;\n        }\n\n        countOnly = false;\n        let m = map[mname];\n\n        if (!m) {\n          m = map[mname] = [];\n          m.field = field;\n          measures.push(m);\n        }\n\n        m.push(createMeasure(op, name));\n      }\n  });\n\n  if (counts.length || measures.length) {\n    this.cell = cell(measures, counts, countOnly);\n  }\n\n  this.inputs = Object.keys(inputs);\n}\nconst prototype = WindowState.prototype;\n\nprototype.init = function () {\n  this.windows.forEach(_ => _.init());\n  if (this.cell) this.cell.init();\n};\n\nprototype.update = function (w, t) {\n  const cell = this.cell,\n        wind = this.windows,\n        data = w.data,\n        m = wind && wind.length;\n  let j;\n\n  if (cell) {\n    for (j = w.p0; j < w.i0; ++j) cell.rem(data[j]);\n\n    for (j = w.p1; j < w.i1; ++j) cell.add(data[j]);\n\n    cell.set(t);\n  }\n\n  for (j = 0; j < m; ++j) wind[j].update(w, t);\n};\n\nfunction cell(measures, counts, countOnly) {\n  measures = measures.map(m => compileMeasures(m, m.field));\n  const cell = {\n    num: 0,\n    agg: null,\n    store: false,\n    count: counts\n  };\n\n  if (!countOnly) {\n    var n = measures.length,\n        a = cell.agg = Array(n),\n        i = 0;\n\n    for (; i < n; ++i) a[i] = new measures[i](cell);\n  }\n\n  if (cell.store) {\n    var store = cell.data = new TupleStore();\n  }\n\n  cell.add = function (t) {\n    cell.num += 1;\n    if (countOnly) return;\n    if (store) store.add(t);\n\n    for (let i = 0; i < n; ++i) {\n      a[i].add(a[i].get(t), t);\n    }\n  };\n\n  cell.rem = function (t) {\n    cell.num -= 1;\n    if (countOnly) return;\n    if (store) store.rem(t);\n\n    for (let i = 0; i < n; ++i) {\n      a[i].rem(a[i].get(t), t);\n    }\n  };\n\n  cell.set = function (t) {\n    let i, n; // consolidate stored values\n\n    if (store) store.values(); // update tuple properties\n\n    for (i = 0, n = counts.length; i < n; ++i) t[counts[i]] = cell.num;\n\n    if (!countOnly) for (i = 0, n = a.length; i < n; ++i) a[i].set(t);\n  };\n\n  cell.init = function () {\n    cell.num = 0;\n    if (store) store.reset();\n\n    for (let i = 0; i < n; ++i) a[i].init();\n  };\n\n  return cell;\n}\n\n/**\n * Perform window calculations and write results to the input stream.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - A comparator function for sorting tuples within a window.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors by which to partition tuples into separate windows.\n * @param {Array<string>} params.ops - An array of strings indicating window operations to perform.\n * @param {Array<function(object): *>} [params.fields] - An array of accessors\n *   for data fields to use as inputs to window operations.\n * @param {Array<*>} [params.params] - An array of parameter values for window operations.\n * @param {Array<string>} [params.as] - An array of output field names for window operations.\n * @param {Array<number>} [params.frame] - Window frame definition as two-element array.\n * @param {boolean} [params.ignorePeers=false] - If true, base window frame boundaries on row\n *   number alone, ignoring peers with identical sort values. If false (default),\n *   the window boundaries will be adjusted to include peer values.\n */\n\nfunction Window(params) {\n  Transform.call(this, {}, params);\n  this._mlen = 0;\n  this._mods = [];\n}\nWindow.Definition = {\n  'type': 'Window',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'ops',\n    'type': 'enum',\n    'array': true,\n    'values': ValidWindowOps.concat(ValidAggregateOps)\n  }, {\n    'name': 'params',\n    'type': 'number',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'fields',\n    'type': 'field',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'null': true,\n    'array': true\n  }, {\n    'name': 'frame',\n    'type': 'number',\n    'null': true,\n    'array': true,\n    'length': 2,\n    'default': [null, 0]\n  }, {\n    'name': 'ignorePeers',\n    'type': 'boolean',\n    'default': false\n  }]\n};\ninherits(Window, Transform, {\n  transform(_, pulse) {\n    this.stamp = pulse.stamp;\n\n    const mod = _.modified(),\n          cmp = stableCompare(_.sort),\n          key = groupkey(_.groupby),\n          group = t => this.group(key(t)); // initialize window state\n\n\n    let state = this.state;\n\n    if (!state || mod) {\n      state = this.state = new WindowState(_);\n    } // partition input tuples\n\n\n    if (mod || pulse.modified(state.inputs)) {\n      this.value = {};\n      pulse.visit(pulse.SOURCE, t => group(t).add(t));\n    } else {\n      pulse.visit(pulse.REM, t => group(t).remove(t));\n      pulse.visit(pulse.ADD, t => group(t).add(t));\n    } // perform window calculations for each modified partition\n\n\n    for (let i = 0, n = this._mlen; i < n; ++i) {\n      processPartition(this._mods[i], state, cmp, _);\n    }\n\n    this._mlen = 0;\n    this._mods = []; // TODO don't reflow everything?\n\n    return pulse.reflow(mod).modifies(state.outputs);\n  },\n\n  group(key) {\n    let group = this.value[key];\n\n    if (!group) {\n      group = this.value[key] = SortedList(tupleid);\n      group.stamp = -1;\n    }\n\n    if (group.stamp < this.stamp) {\n      group.stamp = this.stamp;\n      this._mods[this._mlen++] = group;\n    }\n\n    return group;\n  }\n\n});\n\nfunction processPartition(list, state, cmp, _) {\n  const sort = _.sort,\n        range = sort && !_.ignorePeers,\n        frame = _.frame || [null, 0],\n        data = list.data(cmp),\n        // use cmp for stable sort\n  n = data.length,\n        b = range ? bisector(sort) : null,\n        w = {\n    i0: 0,\n    i1: 0,\n    p0: 0,\n    p1: 0,\n    index: 0,\n    data: data,\n    compare: sort || constant(-1)\n  };\n  state.init();\n\n  for (let i = 0; i < n; ++i) {\n    setWindow(w, frame, i, n);\n    if (range) adjustRange(w, b);\n    state.update(w, data[i]);\n  }\n}\n\nfunction setWindow(w, f, i, n) {\n  w.p0 = w.i0;\n  w.p1 = w.i1;\n  w.i0 = f[0] == null ? 0 : Math.max(0, i - Math.abs(f[0]));\n  w.i1 = f[1] == null ? n : Math.min(n, i + Math.abs(f[1]) + 1);\n  w.index = i;\n} // if frame type is 'range', adjust window for peer values\n\n\nfunction adjustRange(w, bisect) {\n  const r0 = w.i0,\n        r1 = w.i1 - 1,\n        c = w.compare,\n        d = w.data,\n        n = d.length - 1;\n  if (r0 > 0 && !c(d[r0], d[r0 - 1])) w.i0 = bisect.left(d, d[r0]);\n  if (r1 < n && !c(d[r1], d[r1 + 1])) w.i1 = bisect.right(d, d[r1]);\n}\n\nexport { Aggregate as aggregate, Bin as bin, Collect as collect, Compare as compare, CountPattern as countpattern, Cross as cross, Density as density, DotBin as dotbin, Expression as expression, Extent as extent, Facet as facet, Field as field, Filter as filter, Flatten as flatten, Fold as fold, Formula as formula, Generate as generate, Impute as impute, JoinAggregate as joinaggregate, KDE as kde, Key as key, Load as load, Lookup as lookup, MultiExtent as multiextent, MultiValues as multivalues, Params as params, Pivot as pivot, PreFacet as prefacet, Project as project, Proxy as proxy, Quantile as quantile, Relay as relay, Sample as sample, Sequence as sequence, Sieve as sieve, Subflow as subflow, TimeUnit as timeunit, TupleIndex as tupleindex, Values as values, Window as window };\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import {pi, tau} from \"../math.js\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","import {pi, tau} from \"../math.js\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export function domCanvas(w, h) {\n  if (typeof document !== 'undefined' && document.createElement) {\n    const c = document.createElement('canvas');\n    if (c && c.getContext) {\n      c.width = w;\n      c.height = h;\n      return c;\n    }\n  }\n  return null;\n}\n\nexport const domImage = () =>\n  typeof Image !== 'undefined' ? Image : null;\n","import { toNumber, peek, hasOwnProperty, toSet, array, constant, isNumber, span, isObject, isString, error, isArray } from 'vega-util';\nimport { bisectRight, range, bisect } from 'd3-array';\nimport { scaleOrdinal, tickFormat as tickFormat$1, scaleIdentity, scaleLinear, scaleLog, scalePow, scaleSqrt, scaleSymlog, scaleTime, scaleUtc, scaleSequential, scaleSequentialLog, scaleSequentialPow, scaleSequentialSqrt, scaleSequentialSymlog, scaleDiverging, scaleDivergingLog, scaleDivergingPow, scaleDivergingSqrt, scaleDivergingSymlog, scaleQuantile, scaleQuantize, scaleThreshold } from 'd3-scale';\nexport { scaleImplicit } from 'd3-scale';\nimport * as $ from 'd3-interpolate';\nimport { piecewise } from 'd3-interpolate';\nimport { timeInterval, utcInterval } from 'vega-time';\n\nfunction bandSpace (count, paddingInner, paddingOuter) {\n  const space = count - paddingInner + paddingOuter * 2;\n  return count ? space > 0 ? space : 1 : 0;\n}\n\nconst Identity = 'identity';\nconst Linear = 'linear';\nconst Log = 'log';\nconst Pow = 'pow';\nconst Sqrt = 'sqrt';\nconst Symlog = 'symlog';\nconst Time = 'time';\nconst UTC = 'utc';\nconst Sequential = 'sequential';\nconst Diverging = 'diverging';\nconst Quantile = 'quantile';\nconst Quantize = 'quantize';\nconst Threshold = 'threshold';\nconst Ordinal = 'ordinal';\nconst Point = 'point';\nconst Band = 'band';\nconst BinOrdinal = 'bin-ordinal'; // categories\n\nconst Continuous = 'continuous';\nconst Discrete = 'discrete';\nconst Discretizing = 'discretizing';\nconst Interpolating = 'interpolating';\nconst Temporal = 'temporal';\n\nfunction invertRange (scale) {\n  return function (_) {\n    let lo = _[0],\n        hi = _[1],\n        t;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    return [scale.invert(lo), scale.invert(hi)];\n  };\n}\n\nfunction invertRangeExtent (scale) {\n  return function (_) {\n    const range = scale.range();\n    let lo = _[0],\n        hi = _[1],\n        min = -1,\n        max,\n        t,\n        i,\n        n;\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    for (i = 0, n = range.length; i < n; ++i) {\n      if (range[i] >= lo && range[i] <= hi) {\n        if (min < 0) min = i;\n        max = i;\n      }\n    }\n\n    if (min < 0) return undefined;\n    lo = scale.invertExtent(range[min]);\n    hi = scale.invertExtent(range[max]);\n    return [lo[0] === undefined ? lo[1] : lo[0], hi[1] === undefined ? hi[0] : hi[1]];\n  };\n}\n\nfunction band() {\n  const scale = scaleOrdinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range;\n  let range$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    const n = domain().length,\n          reverse = range$1[1] < range$1[0],\n          stop = range$1[1 - reverse],\n          space = bandSpace(n, paddingInner, paddingOuter);\n    let start = range$1[reverse - 0];\n    step = (stop - start) / (space || 1);\n\n    if (round) {\n      step = Math.floor(step);\n    }\n\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n\n    if (round) {\n      start = Math.round(start);\n      bandwidth = Math.round(bandwidth);\n    }\n\n    const values = range(n).map(i => start + step * i);\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain(_);\n      return rescale();\n    } else {\n      return domain();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range$1 = [+_[0], +_[1]];\n      return rescale();\n    } else {\n      return range$1.slice();\n    }\n  };\n\n  scale.rangeRound = function (_) {\n    range$1 = [+_[0], +_[1]];\n    round = true;\n    return rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    if (arguments.length) {\n      round = !!_;\n      return rescale();\n    } else {\n      return round;\n    }\n  };\n\n  scale.padding = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      paddingInner = paddingOuter;\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingInner = function (_) {\n    if (arguments.length) {\n      paddingInner = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingInner;\n    }\n  };\n\n  scale.paddingOuter = function (_) {\n    if (arguments.length) {\n      paddingOuter = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return paddingOuter;\n    }\n  };\n\n  scale.align = function (_) {\n    if (arguments.length) {\n      align = Math.max(0, Math.min(1, _));\n      return rescale();\n    } else {\n      return align;\n    }\n  };\n\n  scale.invertRange = function (_) {\n    // bail if range has null or undefined values\n    if (_[0] == null || _[1] == null) return;\n    const reverse = range$1[1] < range$1[0],\n          values = reverse ? ordinalRange().reverse() : ordinalRange(),\n          n = values.length - 1;\n    let lo = +_[0],\n        hi = +_[1],\n        a,\n        b,\n        t; // bail if either range endpoint is invalid\n\n    if (lo !== lo || hi !== hi) return; // order range inputs, bail if outside of scale range\n\n    if (hi < lo) {\n      t = lo;\n      lo = hi;\n      hi = t;\n    }\n\n    if (hi < values[0] || lo > range$1[1 - reverse]) return; // binary search to index into scale range\n\n    a = Math.max(0, bisectRight(values, lo) - 1);\n    b = lo === hi ? a : bisectRight(values, hi) - 1; // increment index a if lo is within padding gap\n\n    if (lo - values[a] > bandwidth + 1e-10) ++a;\n\n    if (reverse) {\n      // map + swap\n      t = a;\n      a = n - b;\n      b = n - t;\n    }\n\n    return a > b ? undefined : domain().slice(a, b + 1);\n  };\n\n  scale.invert = function (_) {\n    const value = scale.invertRange([_, _]);\n    return value ? value[0] : value;\n  };\n\n  scale.copy = function () {\n    return band().domain(domain()).range(range$1).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  const copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band().paddingInner(1));\n}\n\nvar map = Array.prototype.map;\nfunction numbers(_) {\n  return map.call(_, toNumber);\n}\n\nconst slice = Array.prototype.slice;\n\nfunction scaleBinOrdinal() {\n  let domain = [],\n      range = [];\n\n  function scale(x) {\n    return x == null || x !== x ? undefined : range[(bisect(domain, x) - 1) % range.length];\n  }\n\n  scale.domain = function (_) {\n    if (arguments.length) {\n      domain = numbers(_);\n      return scale;\n    } else {\n      return domain.slice();\n    }\n  };\n\n  scale.range = function (_) {\n    if (arguments.length) {\n      range = slice.call(_);\n      return scale;\n    } else {\n      return range.slice();\n    }\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat$1(domain[0], peek(domain), count == null ? 10 : count, specifier);\n  };\n\n  scale.copy = function () {\n    return scaleBinOrdinal().domain(scale.domain()).range(scale.range());\n  };\n\n  return scale;\n}\n\nconst scales = {};\n/**\n * Augment scales with their type and needed inverse methods.\n */\n\nfunction create(type, constructor, metadata) {\n  const ctr = function scale() {\n    const s = constructor();\n\n    if (!s.invertRange) {\n      s.invertRange = s.invert ? invertRange(s) : s.invertExtent ? invertRangeExtent(s) : undefined;\n    }\n\n    s.type = type;\n    return s;\n  };\n\n  ctr.metadata = toSet(array(metadata));\n  return ctr;\n}\n\nfunction scale(type, scale, metadata) {\n  if (arguments.length > 1) {\n    scales[type] = create(type, scale, metadata);\n    return this;\n  } else {\n    return isValidScaleType(type) ? scales[type] : undefined;\n  }\n} // identity scale\n\nscale(Identity, scaleIdentity); // continuous scales\n\nscale(Linear, scaleLinear, Continuous);\nscale(Log, scaleLog, [Continuous, Log]);\nscale(Pow, scalePow, Continuous);\nscale(Sqrt, scaleSqrt, Continuous);\nscale(Symlog, scaleSymlog, Continuous);\nscale(Time, scaleTime, [Continuous, Temporal]);\nscale(UTC, scaleUtc, [Continuous, Temporal]); // sequential scales\n\nscale(Sequential, scaleSequential, [Continuous, Interpolating]); // backwards compat\n\nscale(\"\".concat(Sequential, \"-\").concat(Linear), scaleSequential, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Log), scaleSequentialLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Sequential, \"-\").concat(Pow), scaleSequentialPow, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Sqrt), scaleSequentialSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Sequential, \"-\").concat(Symlog), scaleSequentialSymlog, [Continuous, Interpolating]); // diverging scales\n\nscale(\"\".concat(Diverging, \"-\").concat(Linear), scaleDiverging, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Log), scaleDivergingLog, [Continuous, Interpolating, Log]);\nscale(\"\".concat(Diverging, \"-\").concat(Pow), scaleDivergingPow, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Sqrt), scaleDivergingSqrt, [Continuous, Interpolating]);\nscale(\"\".concat(Diverging, \"-\").concat(Symlog), scaleDivergingSymlog, [Continuous, Interpolating]); // discretizing scales\n\nscale(Quantile, scaleQuantile, [Discretizing, Quantile]);\nscale(Quantize, scaleQuantize, Discretizing);\nscale(Threshold, scaleThreshold, Discretizing); // discrete scales\n\nscale(BinOrdinal, scaleBinOrdinal, [Discrete, Discretizing]);\nscale(Ordinal, scaleOrdinal, Discrete);\nscale(Band, band, Discrete);\nscale(Point, point, Discrete);\nfunction isValidScaleType(type) {\n  return hasOwnProperty(scales, type);\n}\n\nfunction hasType(key, type) {\n  const s = scales[key];\n  return s && s.metadata[type];\n}\n\nfunction isContinuous(key) {\n  return hasType(key, Continuous);\n}\nfunction isDiscrete(key) {\n  return hasType(key, Discrete);\n}\nfunction isDiscretizing(key) {\n  return hasType(key, Discretizing);\n}\nfunction isLogarithmic(key) {\n  return hasType(key, Log);\n}\nfunction isTemporal(key) {\n  return hasType(key, Temporal);\n}\nfunction isInterpolating(key) {\n  return hasType(key, Interpolating);\n}\nfunction isQuantile(key) {\n  return hasType(key, Quantile);\n}\n\nconst scaleProps = ['clamp', 'base', 'constant', 'exponent'];\nfunction interpolateRange(interpolator, range) {\n  const start = range[0],\n        span = peek(range) - start;\n  return function (i) {\n    return interpolator(start + i * span);\n  };\n}\nfunction interpolateColors(colors, type, gamma) {\n  return piecewise(interpolate(type || 'rgb', gamma), colors);\n}\nfunction quantizeInterpolator(interpolator, count) {\n  const samples = new Array(count),\n        n = count + 1;\n\n  for (let i = 0; i < count;) samples[i] = interpolator(++i / n);\n\n  return samples;\n}\nfunction scaleCopy(scale) {\n  const t = scale.type,\n        s = scale.copy();\n  s.type = t;\n  return s;\n}\nfunction scaleFraction(scale$1, min, max) {\n  const delta = max - min;\n  let i, t, s;\n\n  if (!delta || !Number.isFinite(delta)) {\n    return constant(0.5);\n  } else {\n    i = (t = scale$1.type).indexOf('-');\n    t = i < 0 ? t : t.slice(i + 1);\n    s = scale(t)().domain([min, max]).range([0, 1]);\n    scaleProps.forEach(m => scale$1[m] ? s[m](scale$1[m]()) : 0);\n    return s;\n  }\n}\nfunction interpolate(type, gamma) {\n  const interp = $[method(type)];\n  return gamma != null && interp && interp.gamma ? interp.gamma(gamma) : interp;\n}\n\nfunction method(type) {\n  return 'interpolate' + type.toLowerCase().split('-').map(s => s[0].toUpperCase() + s.slice(1)).join('');\n}\n\nconst continuous = {\n  blues: 'cfe1f2bed8eca8cee58fc1de74b2d75ba3cf4592c63181bd206fb2125ca40a4a90',\n  greens: 'd3eecdc0e6baabdda594d3917bc77d60ba6c46ab5e329a512089430e7735036429',\n  greys: 'e2e2e2d4d4d4c4c4c4b1b1b19d9d9d8888887575756262624d4d4d3535351e1e1e',\n  oranges: 'fdd8b3fdc998fdb87bfda55efc9244f87f2cf06b18e4580bd14904b93d029f3303',\n  purples: 'e2e1efd4d4e8c4c5e0b4b3d6a3a0cc928ec3827cb97566ae684ea25c3696501f8c',\n  reds: 'fdc9b4fcb49afc9e80fc8767fa7051f6573fec3f2fdc2a25c81b1db21218970b13',\n  blueGreen: 'd5efedc1e8e0a7ddd18bd2be70c6a958ba9144ad77319c5d2089460e7736036429',\n  bluePurple: 'ccddecbad0e4a8c2dd9ab0d4919cc98d85be8b6db28a55a6873c99822287730f71',\n  greenBlue: 'd3eecec5e8c3b1e1bb9bd8bb82cec269c2ca51b2cd3c9fc7288abd1675b10b60a1',\n  orangeRed: 'fddcaffdcf9bfdc18afdad77fb9562f67d53ee6545e24932d32d1ebf130da70403',\n  purpleBlue: 'dbdaebc8cee4b1c3de97b7d87bacd15b9fc93a90c01e7fb70b70ab056199045281',\n  purpleBlueGreen: 'dbd8eac8cee4b0c3de93b7d872acd1549fc83892bb1c88a3097f8702736b016353',\n  purpleRed: 'dcc9e2d3b3d7ce9eccd186c0da6bb2e14da0e23189d91e6fc61159ab07498f023a',\n  redPurple: 'fccfccfcbec0faa9b8f98faff571a5ec539ddb3695c41b8aa908808d0179700174',\n  yellowGreen: 'e4f4acd1eca0b9e2949ed68880c97c62bb6e47aa5e3297502083440e723b036034',\n  yellowOrangeBrown: 'feeaa1fedd84fecc63feb746fca031f68921eb7215db5e0bc54c05ab3d038f3204',\n  yellowOrangeRed: 'fee087fed16ffebd59fea849fd903efc7335f9522bee3423de1b20ca0b22af0225',\n  blueOrange: '134b852f78b35da2cb9dcae1d2e5eff2f0ebfce0bafbbf74e8932fc5690d994a07',\n  brownBlueGreen: '704108a0651ac79548e3c78af3e6c6eef1eac9e9e48ed1c74da79e187a72025147',\n  purpleGreen: '5b1667834792a67fb6c9aed3e6d6e8eff0efd9efd5aedda971bb75368e490e5e29',\n  purpleOrange: '4114696647968f83b7b9b4d6dadbebf3eeeafce0bafbbf74e8932fc5690d994a07',\n  redBlue: '8c0d25bf363adf745ef4ae91fbdbc9f2efeed2e5ef9dcae15da2cb2f78b3134b85',\n  redGrey: '8c0d25bf363adf745ef4ae91fcdccbfaf4f1e2e2e2c0c0c0969696646464343434',\n  yellowGreenBlue: 'eff9bddbf1b4bde5b594d5b969c5be45b4c22c9ec02182b82163aa23479c1c3185',\n  redYellowBlue: 'a50026d4322cf16e43fcac64fedd90faf8c1dcf1ecabd6e875abd04a74b4313695',\n  redYellowGreen: 'a50026d4322cf16e43fcac63fedd8df9f7aed7ee8ea4d86e64bc6122964f006837',\n  pinkYellowGreen: '8e0152c0267edd72adf0b3d6faddedf5f3efe1f2cab6de8780bb474f9125276419',\n  spectral: '9e0142d13c4bf0704afcac63fedd8dfbf8b0e0f3a1a9dda269bda94288b55e4fa2',\n  viridis: '440154470e61481a6c482575472f7d443a834144873d4e8a39568c35608d31688e2d708e2a788e27818e23888e21918d1f988b1fa08822a8842ab07f35b77943bf7154c56866cc5d7ad1518fd744a5db36bcdf27d2e21be9e51afde725',\n  magma: '0000040404130b0924150e3720114b2c11603b0f704a107957157e651a80721f817f24828c29819a2e80a8327db6377ac43c75d1426fde4968e95462f1605df76f5cfa7f5efc8f65fe9f6dfeaf78febf84fece91fddea0fcedaffcfdbf',\n  inferno: '0000040403130c0826170c3b240c4f330a5f420a68500d6c5d126e6b176e781c6d86216b932667a12b62ae305cbb3755c73e4cd24644dd513ae65c30ed6925f3771af8850ffb9506fca50afcb519fac62df6d645f2e661f3f484fcffa4',\n  plasma: '0d088723069033059742039d5002a25d01a66a00a87801a88405a7900da49c179ea72198b12a90ba3488c33d80cb4779d35171da5a69e16462e76e5bed7953f2834cf68f44fa9a3dfca636fdb32ffec029fcce25f9dc24f5ea27f0f921',\n  cividis: '00205100235800265d002961012b65042e670831690d346b11366c16396d1c3c6e213f6e26426e2c456e31476e374a6e3c4d6e42506e47536d4c566d51586e555b6e5a5e6e5e616e62646f66676f6a6a706e6d717270717573727976737c79747f7c75827f758682768985778c8877908b78938e789691789a94789e9778a19b78a59e77a9a177aea575b2a874b6ab73bbaf71c0b26fc5b66dc9b96acebd68d3c065d8c462ddc85fe2cb5ce7cf58ebd355f0d652f3da4ff7de4cfae249fce647',\n  rainbow: '6e40aa883eb1a43db3bf3cafd83fa4ee4395fe4b83ff576eff6659ff7847ff8c38f3a130e2b72fcfcc36bee044aff05b8ff4576ff65b52f6673af27828ea8d1ddfa319d0b81cbecb23abd82f96e03d82e14c6edb5a5dd0664dbf6e40aa',\n  sinebow: 'ff4040fc582af47218e78d0bd5a703bfbf00a7d5038de70b72f41858fc2a40ff402afc5818f4720be78d03d5a700bfbf03a7d50b8de71872f42a58fc4040ff582afc7218f48d0be7a703d5bf00bfd503a7e70b8df41872fc2a58ff4040',\n  turbo: '23171b32204a3e2a71453493493eae4b49c54a53d7485ee44569ee4074f53c7ff8378af93295f72e9ff42ba9ef28b3e926bce125c5d925cdcf27d5c629dcbc2de3b232e9a738ee9d3ff39347f68950f9805afc7765fd6e70fe667cfd5e88fc5795fb51a1f84badf545b9f140c5ec3cd0e637dae034e4d931ecd12ef4c92bfac029ffb626ffad24ffa223ff9821ff8d1fff821dff771cfd6c1af76118f05616e84b14df4111d5380fcb2f0dc0260ab61f07ac1805a313029b0f00950c00910b00',\n  browns: 'eedbbdecca96e9b97ae4a865dc9856d18954c7784cc0673fb85536ad44339f3632',\n  tealBlues: 'bce4d89dd3d181c3cb65b3c245a2b9368fae347da0306a932c5985',\n  teals: 'bbdfdfa2d4d58ac9c975bcbb61b0af4da5a43799982b8b8c1e7f7f127273006667',\n  warmGreys: 'dcd4d0cec5c1c0b8b4b3aaa7a59c9998908c8b827f7e7673726866665c5a59504e',\n  goldGreen: 'f4d166d5ca60b6c35c98bb597cb25760a6564b9c533f8f4f33834a257740146c36',\n  goldOrange: 'f4d166f8be5cf8aa4cf5983bf3852aef701be2621fd65322c54923b142239e3a26',\n  goldRed: 'f4d166f6be59f9aa51fc964ef6834bee734ae56249db5247cf4244c43141b71d3e',\n  lightGreyRed: 'efe9e6e1dad7d5cbc8c8bdb9bbaea9cd967ddc7b43e15f19df4011dc000b',\n  lightGreyTeal: 'e4eaead6dcddc8ced2b7c2c7a6b4bc64b0bf22a6c32295c11f85be1876bc',\n  lightMulti: 'e0f1f2c4e9d0b0de9fd0e181f6e072f6c053f3993ef77440ef4a3c',\n  lightOrange: 'f2e7daf7d5baf9c499fab184fa9c73f68967ef7860e8645bde515bd43d5b',\n  lightTealBlue: 'e3e9e0c0dccf9aceca7abfc859afc0389fb9328dad2f7ca0276b95255988',\n  darkBlue: '3232322d46681a5c930074af008cbf05a7ce25c0dd38daed50f3faffffff',\n  darkGold: '3c3c3c584b37725e348c7631ae8b2bcfa424ecc31ef9de30fff184ffffff',\n  darkGreen: '3a3a3a215748006f4d048942489e4276b340a6c63dd2d836ffeb2cffffaa',\n  darkMulti: '3737371f5287197d8c29a86995ce3fffe800ffffff',\n  darkRed: '3434347036339e3c38cc4037e75d1eec8620eeab29f0ce32ffeb2c'\n};\nconst discrete = {\n  category10: '1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf',\n  category20: '1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5',\n  category20b: '393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6',\n  category20c: '3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9',\n  tableau10: '4c78a8f58518e4575672b7b254a24beeca3bb279a2ff9da69d755dbab0ac',\n  tableau20: '4c78a89ecae9f58518ffbf7954a24b88d27ab79a20f2cf5b43989483bcb6e45756ff9d9879706ebab0acd67195fcbfd2b279a2d6a5c99e765fd8b5a5',\n  accent: '7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666',\n  dark2: '1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666',\n  paired: 'a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928',\n  pastel1: 'fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2',\n  pastel2: 'b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc',\n  set1: 'e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999',\n  set2: '66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3',\n  set3: '8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f'\n};\n\nfunction colors(palette) {\n  const n = palette.length / 6 | 0,\n        c = new Array(n);\n\n  for (let i = 0; i < n;) {\n    c[i] = '#' + palette.slice(i * 6, ++i * 6);\n  }\n\n  return c;\n}\n\nfunction apply(_, f) {\n  for (const k in _) scheme(k, f(_[k]));\n}\n\nconst schemes = {};\napply(discrete, colors);\napply(continuous, _ => interpolateColors(colors(_)));\nfunction scheme(name, scheme) {\n  name = name && name.toLowerCase();\n\n  if (arguments.length > 1) {\n    schemes[name] = scheme;\n    return this;\n  } else {\n    return schemes[name];\n  }\n}\n\nconst SymbolLegend = 'symbol';\nconst DiscreteLegend = 'discrete';\nconst GradientLegend = 'gradient';\n\nconst defaultFormatter = value => isArray(value) ? value.map(v => String(v)) : String(value);\n\nconst ascending = (a, b) => a[1] - b[1];\n\nconst descending = (a, b) => b[1] - a[1];\n/**\n * Determine the tick count or interval function.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} count - The desired tick count or interval specifier.\n * @param {number} minStep - The desired minimum step between tick values.\n * @return {*} - The tick count or interval function.\n */\n\n\nfunction tickCount(scale, count, minStep) {\n  let step;\n\n  if (isNumber(count)) {\n    if (scale.bins) {\n      count = Math.max(count, scale.bins.length);\n    }\n\n    if (minStep != null) {\n      count = Math.min(count, Math.floor(span(scale.domain()) / minStep || 1));\n    }\n  }\n\n  if (isObject(count)) {\n    step = count.step;\n    count = count.interval;\n  }\n\n  if (isString(count)) {\n    count = scale.type === Time ? timeInterval(count) : scale.type == UTC ? utcInterval(count) : error('Only time and utc scales accept interval strings.');\n    if (step) count = count.every(step);\n  }\n\n  return count;\n}\n/**\n * Filter a set of candidate tick values, ensuring that only tick values\n * that lie within the scale range are included.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {Array<*>} ticks - The candidate tick values.\n * @param {*} count - The tick count or interval function.\n * @return {Array<*>} - The filtered tick values.\n */\n\nfunction validTicks(scale, ticks, count) {\n  let range = scale.range(),\n      lo = range[0],\n      hi = peek(range),\n      cmp = ascending;\n\n  if (lo > hi) {\n    range = hi;\n    hi = lo;\n    lo = range;\n    cmp = descending;\n  }\n\n  lo = Math.floor(lo);\n  hi = Math.ceil(hi); // filter ticks to valid values within the range\n  // additionally sort ticks in range order (#2579)\n\n  ticks = ticks.map(v => [v, scale(v)]).filter(_ => lo <= _[1] && _[1] <= hi).sort(cmp).map(_ => _[0]);\n\n  if (count > 0 && ticks.length > 1) {\n    const endpoints = [ticks[0], peek(ticks)];\n\n    while (ticks.length > count && ticks.length >= 3) {\n      ticks = ticks.filter((_, i) => !(i % 2));\n    }\n\n    if (ticks.length < 3) {\n      ticks = endpoints;\n    }\n  }\n\n  return ticks;\n}\n/**\n * Generate tick values for the given scale and approximate tick count or\n * interval value. If the scale has a 'ticks' method, it will be used to\n * generate the ticks, with the count argument passed as a parameter. If the\n * scale lacks a 'ticks' method, the full scale domain will be returned.\n * @param {Scale} scale - The scale for which to generate tick values.\n * @param {*} [count] - The approximate number of desired ticks.\n * @return {Array<*>} - The generated tick values.\n */\n\nfunction tickValues(scale, count) {\n  return scale.bins ? validTicks(scale, scale.bins) : scale.ticks ? scale.ticks(count) : scale.domain();\n}\n/**\n * Generate a label format function for a scale. If the scale has a\n * 'tickFormat' method, it will be used to generate the formatter, with the\n * count and specifier arguments passed as parameters. If the scale lacks a\n * 'tickFormat' method, the returned formatter performs simple string coercion.\n * If the input scale is a logarithmic scale and the format specifier does not\n * indicate a desired decimal precision, a special variable precision formatter\n * that automatically trims trailing zeroes will be generated.\n * @param {Scale} scale - The scale for which to generate the label formatter.\n * @param {*} [count] - The approximate number of desired ticks.\n * @param {string} [specifier] - The format specifier. Must be a legal d3\n *   specifier string (see https://github.com/d3/d3-format#formatSpecifier) or\n *   time multi-format specifier object.\n * @return {function(*):string} - The generated label formatter.\n */\n\nfunction tickFormat(locale, scale, count, specifier, formatType, noSkip) {\n  const type = scale.type;\n  let format = defaultFormatter;\n\n  if (type === Time || formatType === Time) {\n    format = locale.timeFormat(specifier);\n  } else if (type === UTC || formatType === UTC) {\n    format = locale.utcFormat(specifier);\n  } else if (isLogarithmic(type)) {\n    const varfmt = locale.formatFloat(specifier);\n\n    if (noSkip || scale.bins) {\n      format = varfmt;\n    } else {\n      const test = tickLog(scale, count, false);\n\n      format = _ => test(_) ? varfmt(_) : '';\n    }\n  } else if (scale.tickFormat) {\n    // if d3 scale has tickFormat, it must be continuous\n    const d = scale.domain();\n    format = locale.formatSpan(d[0], d[d.length - 1], count, specifier);\n  } else if (specifier) {\n    format = locale.format(specifier);\n  }\n\n  return format;\n}\nfunction tickLog(scale, count, values) {\n  const ticks = tickValues(scale, count),\n        base = scale.base(),\n        logb = Math.log(base),\n        k = Math.max(1, base * count / ticks.length); // apply d3-scale's log format filter criteria\n\n  const test = d => {\n    let i = d / Math.pow(base, Math.round(Math.log(d) / logb));\n    if (i * base < base - 0.5) i *= base;\n    return i <= k;\n  };\n\n  return values ? ticks.filter(test) : test;\n}\n\nconst symbols = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'thresholds',\n  [Threshold]: 'domain'\n};\nconst formats = {\n  [Quantile]: 'quantiles',\n  [Quantize]: 'domain'\n};\nfunction labelValues(scale, count) {\n  return scale.bins ? binValues(scale.bins) : scale.type === Log ? tickLog(scale, count, true) : symbols[scale.type] ? thresholdValues(scale[symbols[scale.type]]()) : tickValues(scale, count);\n}\nfunction thresholdFormat(locale, scale, specifier) {\n  const _ = scale[formats[scale.type]](),\n        n = _.length;\n\n  let d = n > 1 ? _[1] - _[0] : _[0],\n      i;\n\n  for (i = 1; i < n; ++i) {\n    d = Math.min(d, _[i] - _[i - 1]);\n  } // tickCount = 3 ticks times 10 for increased resolution\n\n\n  return locale.formatSpan(0, d, 3 * 10, specifier);\n}\n\nfunction thresholdValues(thresholds) {\n  const values = [-Infinity].concat(thresholds);\n  values.max = +Infinity;\n  return values;\n}\n\nfunction binValues(bins) {\n  const values = bins.slice(0, -1);\n  values.max = peek(bins);\n  return values;\n}\n\nconst isDiscreteRange = scale => symbols[scale.type] || scale.bins;\n\nfunction labelFormat(locale, scale, count, type, specifier, formatType, noSkip) {\n  const format = formats[scale.type] && formatType !== Time && formatType !== UTC ? thresholdFormat(locale, scale, specifier) : tickFormat(locale, scale, count, specifier, formatType, noSkip);\n  return type === SymbolLegend && isDiscreteRange(scale) ? formatRange(format) : type === DiscreteLegend ? formatDiscrete(format) : formatPoint(format);\n}\n\nconst formatRange = format => (value, index, array) => {\n  const limit = get(array[index + 1], get(array.max, +Infinity)),\n        lo = formatValue(value, format),\n        hi = formatValue(limit, format);\n  return lo && hi ? lo + ' \\u2013 ' + hi : hi ? '< ' + hi : '\\u2265 ' + lo;\n};\n\nconst get = (value, dflt) => value != null ? value : dflt;\n\nconst formatDiscrete = format => (value, index) => index ? format(value) : null;\n\nconst formatPoint = format => value => format(value);\n\nconst formatValue = (value, format) => Number.isFinite(value) ? format(value) : null;\n\nfunction labelFraction(scale) {\n  const domain = scale.domain(),\n        count = domain.length - 1;\n  let lo = +domain[0],\n      hi = +peek(domain),\n      span = hi - lo;\n\n  if (scale.type === Threshold) {\n    const adjust = count ? span / count : 0.1;\n    lo -= adjust;\n    hi += adjust;\n    span = hi - lo;\n  }\n\n  return value => (value - lo) / span;\n}\n\nfunction format(locale, scale, specifier, formatType) {\n  const type = formatType || scale.type; // replace abbreviated time specifiers to improve screen reader experience\n\n  if (isString(specifier) && isTemporal(type)) {\n    specifier = specifier.replace(/%a/g, '%A').replace(/%b/g, '%B');\n  }\n\n  return !specifier && type === Time ? locale.timeFormat('%A, %d %B %Y, %X') : !specifier && type === UTC ? locale.utcFormat('%A, %d %B %Y, %X UTC') : labelFormat(locale, scale, 5, null, specifier, formatType, true);\n}\n\nfunction domainCaption(locale, scale, opt) {\n  opt = opt || {};\n  const max = Math.max(3, opt.maxlen || 7),\n        fmt = format(locale, scale, opt.format, opt.formatType); // if scale breaks domain into bins, describe boundaries\n\n  if (isDiscretizing(scale.type)) {\n    const v = labelValues(scale).slice(1).map(fmt),\n          n = v.length;\n    return \"\".concat(n, \" boundar\").concat(n === 1 ? 'y' : 'ies', \": \").concat(v.join(', '));\n  } // if scale domain is discrete, list values\n  else if (isDiscrete(scale.type)) {\n      const d = scale.domain(),\n            n = d.length,\n            v = n > max ? d.slice(0, max - 2).map(fmt).join(', ') + ', ending with ' + d.slice(-1).map(fmt) : d.map(fmt).join(', ');\n      return \"\".concat(n, \" value\").concat(n === 1 ? '' : 's', \": \").concat(v);\n    } // if scale domain is continuous, describe value range\n    else {\n        const d = scale.domain();\n        return \"values from \".concat(fmt(d[0]), \" to \").concat(fmt(peek(d)));\n      }\n}\n\nexport { Band, BinOrdinal, DiscreteLegend, Diverging, GradientLegend, Identity, Linear, Log, Ordinal, Point, Pow, Quantile, Quantize, Sequential, Sqrt, SymbolLegend, Symlog, Threshold, Time, UTC, bandSpace, domainCaption, interpolate, interpolateColors, interpolateRange, isContinuous, isDiscrete, isDiscretizing, isInterpolating, isLogarithmic, isQuantile, isTemporal, isValidScaleType, labelFormat, labelFraction, labelValues, quantizeInterpolator, scale, scaleCopy, scaleFraction, scheme, tickCount, tickFormat, tickValues, validTicks };\n","import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","import {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcTicks, utcTickInterval} from \"d3-time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {calendar} from \"./time.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function utcTime() {\n  return initRange.apply(calendar(utcTicks, utcTickInterval, utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {ascending, bisect, quantileSorted as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import { hasOwnProperty, isFunction, inherits, truthy, lruCache, isArray, error, toSet, array, peek, extend, isNumber, isObject } from 'vega-util';\nimport { curveBasis, curveBasisClosed, curveBasisOpen, curveBundle, curveCardinal, curveCardinalOpen, curveCardinalClosed, curveCatmullRom, curveCatmullRomClosed, curveCatmullRomOpen, curveLinear, curveLinearClosed, curveMonotoneY, curveMonotoneX, curveNatural, curveStep, curveStepAfter, curveStepBefore, arc as arc$2, area as area$2, line as line$2, symbol as symbol$2 } from 'd3-shape';\nimport { path as path$3 } from 'd3-path';\nimport { image as image$1, canvas } from 'vega-canvas';\nimport { loader } from 'vega-loader';\nimport { isDiscrete, domainCaption } from 'vega-scale';\n\nlet gradient_id = 0;\nfunction resetSVGGradientId() {\n  gradient_id = 0;\n}\nconst patternPrefix = 'p_';\nfunction isGradient(value) {\n  return value && value.gradient;\n}\nfunction gradientRef(g, defs, base) {\n  const type = g.gradient;\n  let id = g.id,\n      prefix = type === 'radial' ? patternPrefix : ''; // check id, assign default values as needed\n\n  if (!id) {\n    id = g.id = 'gradient_' + gradient_id++;\n\n    if (type === 'radial') {\n      g.x1 = get(g.x1, 0.5);\n      g.y1 = get(g.y1, 0.5);\n      g.r1 = get(g.r1, 0);\n      g.x2 = get(g.x2, 0.5);\n      g.y2 = get(g.y2, 0.5);\n      g.r2 = get(g.r2, 0.5);\n      prefix = patternPrefix;\n    } else {\n      g.x1 = get(g.x1, 0);\n      g.y1 = get(g.y1, 0);\n      g.x2 = get(g.x2, 1);\n      g.y2 = get(g.y2, 0);\n    }\n  } // register definition\n\n\n  defs[id] = g; // return url reference\n\n  return 'url(' + (base || '') + '#' + prefix + id + ')';\n}\n\nfunction get(val, def) {\n  return val != null ? val : def;\n}\n\nfunction Gradient (p0, p1) {\n  var stops = [],\n      gradient;\n  return gradient = {\n    gradient: 'linear',\n    x1: p0 ? p0[0] : 0,\n    y1: p0 ? p0[1] : 0,\n    x2: p1 ? p1[0] : 1,\n    y2: p1 ? p1[1] : 0,\n    stops: stops,\n    stop: function (offset, color) {\n      stops.push({\n        offset: offset,\n        color: color\n      });\n      return gradient;\n    }\n  };\n}\n\nconst lookup = {\n  'basis': {\n    curve: curveBasis\n  },\n  'basis-closed': {\n    curve: curveBasisClosed\n  },\n  'basis-open': {\n    curve: curveBasisOpen\n  },\n  'bundle': {\n    curve: curveBundle,\n    tension: 'beta',\n    value: 0.85\n  },\n  'cardinal': {\n    curve: curveCardinal,\n    tension: 'tension',\n    value: 0\n  },\n  'cardinal-open': {\n    curve: curveCardinalOpen,\n    tension: 'tension',\n    value: 0\n  },\n  'cardinal-closed': {\n    curve: curveCardinalClosed,\n    tension: 'tension',\n    value: 0\n  },\n  'catmull-rom': {\n    curve: curveCatmullRom,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'catmull-rom-closed': {\n    curve: curveCatmullRomClosed,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'catmull-rom-open': {\n    curve: curveCatmullRomOpen,\n    tension: 'alpha',\n    value: 0.5\n  },\n  'linear': {\n    curve: curveLinear\n  },\n  'linear-closed': {\n    curve: curveLinearClosed\n  },\n  'monotone': {\n    horizontal: curveMonotoneY,\n    vertical: curveMonotoneX\n  },\n  'natural': {\n    curve: curveNatural\n  },\n  'step': {\n    curve: curveStep\n  },\n  'step-after': {\n    curve: curveStepAfter\n  },\n  'step-before': {\n    curve: curveStepBefore\n  }\n};\nfunction curves(type, orientation, tension) {\n  var entry = hasOwnProperty(lookup, type) && lookup[type],\n      curve = null;\n\n  if (entry) {\n    curve = entry.curve || entry[orientation || 'vertical'];\n\n    if (entry.tension && tension != null) {\n      curve = curve[entry.tension](tension);\n    }\n  }\n\n  return curve;\n}\n\n// Path parsing and rendering code adapted from fabric.js -- Thanks!\nconst cmdlen = {\n  m: 2,\n  l: 2,\n  h: 1,\n  v: 1,\n  c: 6,\n  s: 4,\n  q: 4,\n  t: 2,\n  a: 7\n},\n      regexp = [/([MLHVCSQTAZmlhvcsqtaz])/g, /###/, /(\\.\\d+)(\\.\\d)/g, /(\\d)([-+])/g, /\\s|,|###/];\nfunction pathParse (pathstr) {\n  const result = [];\n  let curr, chunks, parsed, param, cmd, len, i, j, n, m; // First, break path into command sequence\n\n  const path = pathstr.slice().replace(regexp[0], '###$1').split(regexp[1]).slice(1); // Next, parse each command in turn\n\n  for (i = 0, n = path.length; i < n; ++i) {\n    curr = path[i];\n    chunks = curr.slice(1).trim().replace(regexp[2], '$1###$2').replace(regexp[3], '$1###$2').split(regexp[4]);\n    cmd = curr.charAt(0);\n    parsed = [cmd];\n\n    for (j = 0, m = chunks.length; j < m; ++j) {\n      if ((param = +chunks[j]) === param) {\n        // not NaN\n        parsed.push(param);\n      }\n    }\n\n    len = cmdlen[cmd.toLowerCase()];\n\n    if (parsed.length - 1 > len) {\n      const m = parsed.length;\n      j = 1;\n      result.push([cmd].concat(parsed.slice(j, j += len))); // handle implicit lineTo (#2803)\n\n      cmd = cmd === 'M' ? 'L' : cmd === 'm' ? 'l' : cmd;\n\n      for (; j < m; j += len) {\n        result.push([cmd].concat(parsed.slice(j, j + len)));\n      }\n    } else {\n      result.push(parsed);\n    }\n  }\n\n  return result;\n}\n\nconst DegToRad = Math.PI / 180;\nconst Epsilon = 1e-14;\nconst HalfPi = Math.PI / 2;\nconst Tau = Math.PI * 2;\nconst HalfSqrt3 = Math.sqrt(3) / 2;\n\nvar segmentCache = {};\nvar bezierCache = {};\nvar join = [].join; // Copied from Inkscape svgtopdf, thanks!\n\nfunction segments(x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  const key = join.call(arguments);\n\n  if (segmentCache[key]) {\n    return segmentCache[key];\n  }\n\n  const th = rotateX * DegToRad;\n  const sin_th = Math.sin(th);\n  const cos_th = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  const px = cos_th * (ox - x) * 0.5 + sin_th * (oy - y) * 0.5;\n  const py = cos_th * (oy - y) * 0.5 - sin_th * (ox - x) * 0.5;\n  let pl = px * px / (rx * rx) + py * py / (ry * ry);\n\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  const a00 = cos_th / rx;\n  const a01 = sin_th / rx;\n  const a10 = -sin_th / ry;\n  const a11 = cos_th / ry;\n  const x0 = a00 * ox + a01 * oy;\n  const y0 = a10 * ox + a11 * oy;\n  const x1 = a00 * x + a01 * y;\n  const y1 = a10 * x + a11 * y;\n  const d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  let sfactor_sq = 1 / d - 0.25;\n  if (sfactor_sq < 0) sfactor_sq = 0;\n  let sfactor = Math.sqrt(sfactor_sq);\n  if (sweep == large) sfactor = -sfactor;\n  const xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  const yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  const th0 = Math.atan2(y0 - yc, x0 - xc);\n  const th1 = Math.atan2(y1 - yc, x1 - xc);\n  let th_arc = th1 - th0;\n\n  if (th_arc < 0 && sweep === 1) {\n    th_arc += Tau;\n  } else if (th_arc > 0 && sweep === 0) {\n    th_arc -= Tau;\n  }\n\n  const segs = Math.ceil(Math.abs(th_arc / (HalfPi + 0.001)));\n  const result = [];\n\n  for (let i = 0; i < segs; ++i) {\n    const th2 = th0 + i * th_arc / segs;\n    const th3 = th0 + (i + 1) * th_arc / segs;\n    result[i] = [xc, yc, th2, th3, rx, ry, sin_th, cos_th];\n  }\n\n  return segmentCache[key] = result;\n}\nfunction bezier(params) {\n  const key = join.call(params);\n\n  if (bezierCache[key]) {\n    return bezierCache[key];\n  }\n\n  var cx = params[0],\n      cy = params[1],\n      th0 = params[2],\n      th1 = params[3],\n      rx = params[4],\n      ry = params[5],\n      sin_th = params[6],\n      cos_th = params[7];\n  const a00 = cos_th * rx;\n  const a01 = -sin_th * ry;\n  const a10 = sin_th * rx;\n  const a11 = cos_th * ry;\n  const cos_th0 = Math.cos(th0);\n  const sin_th0 = Math.sin(th0);\n  const cos_th1 = Math.cos(th1);\n  const sin_th1 = Math.sin(th1);\n  const th_half = 0.5 * (th1 - th0);\n  const sin_th_h2 = Math.sin(th_half * 0.5);\n  const t = 8 / 3 * sin_th_h2 * sin_th_h2 / Math.sin(th_half);\n  const x1 = cx + cos_th0 - t * sin_th0;\n  const y1 = cy + sin_th0 + t * cos_th0;\n  const x3 = cx + cos_th1;\n  const y3 = cy + sin_th1;\n  const x2 = x3 + t * sin_th1;\n  const y2 = y3 - t * cos_th1;\n  return bezierCache[key] = [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n}\n\nconst temp = ['l', 0, 0, 0, 0, 0, 0, 0];\n\nfunction scale$1(current, sX, sY) {\n  const c = temp[0] = current[0];\n\n  if (c === 'a' || c === 'A') {\n    temp[1] = sX * current[1];\n    temp[2] = sY * current[2];\n    temp[3] = current[3];\n    temp[4] = current[4];\n    temp[5] = current[5];\n    temp[6] = sX * current[6];\n    temp[7] = sY * current[7];\n  } else if (c === 'h' || c === 'H') {\n    temp[1] = sX * current[1];\n  } else if (c === 'v' || c === 'V') {\n    temp[1] = sY * current[1];\n  } else {\n    for (var i = 1, n = current.length; i < n; ++i) {\n      temp[i] = (i % 2 == 1 ? sX : sY) * current[i];\n    }\n  }\n\n  return temp;\n}\n\nfunction pathRender (context, path, l, t, sX, sY) {\n  var current,\n      // current instruction\n  previous = null,\n      x = 0,\n      // current x\n  y = 0,\n      // current y\n  controlX = 0,\n      // current control point x\n  controlY = 0,\n      // current control point y\n  tempX,\n      tempY,\n      tempControlX,\n      tempControlY;\n  if (l == null) l = 0;\n  if (t == null) t = 0;\n  if (sX == null) sX = 1;\n  if (sY == null) sY = sX;\n  if (context.beginPath) context.beginPath();\n\n  for (var i = 0, len = path.length; i < len; ++i) {\n    current = path[i];\n\n    if (sX !== 1 || sY !== 1) {\n      current = scale$1(current, sX, sY);\n    }\n\n    switch (current[0]) {\n      // first letter\n      case 'l':\n        // lineto, relative\n        x += current[1];\n        y += current[2];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'L':\n        // lineto, absolute\n        x = current[1];\n        y = current[2];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'h':\n        // horizontal lineto, relative\n        x += current[1];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'H':\n        // horizontal lineto, absolute\n        x = current[1];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'v':\n        // vertical lineto, relative\n        y += current[1];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'V':\n        // verical lineto, absolute\n        y = current[1];\n        context.lineTo(x + l, y + t);\n        break;\n\n      case 'm':\n        // moveTo, relative\n        x += current[1];\n        y += current[2];\n        context.moveTo(x + l, y + t);\n        break;\n\n      case 'M':\n        // moveTo, absolute\n        x = current[1];\n        y = current[2];\n        context.moveTo(x + l, y + t);\n        break;\n\n      case 'c':\n        // bezierCurveTo, relative\n        tempX = x + current[5];\n        tempY = y + current[6];\n        controlX = x + current[3];\n        controlY = y + current[4];\n        context.bezierCurveTo(x + current[1] + l, // x1\n        y + current[2] + t, // y1\n        controlX + l, // x2\n        controlY + t, // y2\n        tempX + l, tempY + t);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'C':\n        // bezierCurveTo, absolute\n        x = current[5];\n        y = current[6];\n        controlX = current[3];\n        controlY = current[4];\n        context.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n        break;\n\n      case 's':\n        // shorthand cubic bezierCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4]; // calculate reflection of previous control points\n\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        context.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t); // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n\n        controlX = x + current[1];\n        controlY = y + current[2];\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'S':\n        // shorthand cubic bezierCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4]; // calculate reflection of previous control points\n\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        context.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n        x = tempX;\n        y = tempY; // set control point to 2nd one of this command\n        // the first control point is assumed to be the reflection of\n        // the second control point on the previous command relative\n        // to the current point.\n\n        controlX = current[1];\n        controlY = current[2];\n        break;\n\n      case 'q':\n        // quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[3];\n        tempY = y + current[4];\n        controlX = x + current[1];\n        controlY = y + current[2];\n        context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'Q':\n        // quadraticCurveTo, absolute\n        tempX = current[3];\n        tempY = current[4];\n        context.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n        x = tempX;\n        y = tempY;\n        controlX = current[1];\n        controlY = current[2];\n        break;\n\n      case 't':\n        // shorthand quadraticCurveTo, relative\n        // transform to absolute x,y\n        tempX = x + current[1];\n        tempY = y + current[2];\n\n        if (previous[0].match(/[QqTt]/) === null) {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        } else if (previous[0] === 't') {\n          // calculate reflection of previous control points for t\n          controlX = 2 * x - tempControlX;\n          controlY = 2 * y - tempControlY;\n        } else if (previous[0] === 'q') {\n          // calculate reflection of previous control points for q\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        }\n\n        tempControlX = controlX;\n        tempControlY = controlY;\n        context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n        x = tempX;\n        y = tempY;\n        controlX = x + current[1];\n        controlY = y + current[2];\n        break;\n\n      case 'T':\n        tempX = current[1];\n        tempY = current[2]; // calculate reflection of previous control points\n\n        controlX = 2 * x - controlX;\n        controlY = 2 * y - controlY;\n        context.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n        x = tempX;\n        y = tempY;\n        break;\n\n      case 'a':\n        drawArc(context, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t]);\n        x += current[6];\n        y += current[7];\n        break;\n\n      case 'A':\n        drawArc(context, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t]);\n        x = current[6];\n        y = current[7];\n        break;\n\n      case 'z':\n      case 'Z':\n        context.closePath();\n        break;\n    }\n\n    previous = current;\n  }\n}\n\nfunction drawArc(context, x, y, coords) {\n  const seg = segments(coords[5], // end x\n  coords[6], // end y\n  coords[0], // radius x\n  coords[1], // radius y\n  coords[3], // large flag\n  coords[4], // sweep flag\n  coords[2], // rotation\n  x, y);\n\n  for (let i = 0; i < seg.length; ++i) {\n    const bez = bezier(seg[i]);\n    context.bezierCurveTo(bez[0], bez[1], bez[2], bez[3], bez[4], bez[5]);\n  }\n}\n\nconst Tan30 = 0.5773502691896257;\nconst builtins = {\n  'circle': {\n    draw: function (context, size) {\n      const r = Math.sqrt(size) / 2;\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, Tau);\n    }\n  },\n  'cross': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          s = r / 2.5;\n      context.moveTo(-r, -s);\n      context.lineTo(-r, s);\n      context.lineTo(-s, s);\n      context.lineTo(-s, r);\n      context.lineTo(s, r);\n      context.lineTo(s, s);\n      context.lineTo(r, s);\n      context.lineTo(r, -s);\n      context.lineTo(s, -s);\n      context.lineTo(s, -r);\n      context.lineTo(-s, -r);\n      context.lineTo(-s, -s);\n      context.closePath();\n    }\n  },\n  'diamond': {\n    draw: function (context, size) {\n      const r = Math.sqrt(size) / 2;\n      context.moveTo(-r, 0);\n      context.lineTo(0, -r);\n      context.lineTo(r, 0);\n      context.lineTo(0, r);\n      context.closePath();\n    }\n  },\n  'square': {\n    draw: function (context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  },\n  'arrow': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          s = r / 7,\n          t = r / 2.5,\n          v = r / 8;\n      context.moveTo(-s, r);\n      context.lineTo(s, r);\n      context.lineTo(s, -v);\n      context.lineTo(t, -v);\n      context.lineTo(0, -r);\n      context.lineTo(-t, -v);\n      context.lineTo(-s, -v);\n      context.closePath();\n    }\n  },\n  'wedge': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r,\n          o = h - r * Tan30,\n          b = r / 4;\n      context.moveTo(0, -h - o);\n      context.lineTo(-b, h - o);\n      context.lineTo(b, h - o);\n      context.closePath();\n    }\n  },\n  'triangle': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r,\n          o = h - r * Tan30;\n      context.moveTo(0, -h - o);\n      context.lineTo(-r, h - o);\n      context.lineTo(r, h - o);\n      context.closePath();\n    }\n  },\n  'triangle-up': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r;\n      context.moveTo(0, -h);\n      context.lineTo(-r, h);\n      context.lineTo(r, h);\n      context.closePath();\n    }\n  },\n  'triangle-down': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r;\n      context.moveTo(0, h);\n      context.lineTo(-r, -h);\n      context.lineTo(r, -h);\n      context.closePath();\n    }\n  },\n  'triangle-right': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r;\n      context.moveTo(h, 0);\n      context.lineTo(-h, -r);\n      context.lineTo(-h, r);\n      context.closePath();\n    }\n  },\n  'triangle-left': {\n    draw: function (context, size) {\n      var r = Math.sqrt(size) / 2,\n          h = HalfSqrt3 * r;\n      context.moveTo(-h, 0);\n      context.lineTo(h, -r);\n      context.lineTo(h, r);\n      context.closePath();\n    }\n  },\n  'stroke': {\n    draw: function (context, size) {\n      const r = Math.sqrt(size) / 2;\n      context.moveTo(-r, 0);\n      context.lineTo(r, 0);\n    }\n  }\n};\nfunction symbols(_) {\n  return hasOwnProperty(builtins, _) ? builtins[_] : customSymbol(_);\n}\nvar custom = {};\n\nfunction customSymbol(path) {\n  if (!hasOwnProperty(custom, path)) {\n    const parsed = pathParse(path);\n    custom[path] = {\n      draw: function (context, size) {\n        pathRender(context, parsed, 0, 0, Math.sqrt(size) / 2);\n      }\n    };\n  }\n\n  return custom[path];\n}\n\nconst C = 0.448084975506; // C = 1 - c\n\nfunction rectangleX(d) {\n  return d.x;\n}\n\nfunction rectangleY(d) {\n  return d.y;\n}\n\nfunction rectangleWidth(d) {\n  return d.width;\n}\n\nfunction rectangleHeight(d) {\n  return d.height;\n}\n\nfunction number(_) {\n  return typeof _ === 'function' ? _ : () => +_;\n}\n\nfunction clamp(value, min, max) {\n  return Math.max(min, Math.min(value, max));\n}\n\nfunction vg_rect () {\n  var x = rectangleX,\n      y = rectangleY,\n      width = rectangleWidth,\n      height = rectangleHeight,\n      crTL = number(0),\n      crTR = crTL,\n      crBL = crTL,\n      crBR = crTL,\n      context = null;\n\n  function rectangle(_, x0, y0) {\n    var buffer,\n        x1 = x0 != null ? x0 : +x.call(this, _),\n        y1 = y0 != null ? y0 : +y.call(this, _),\n        w = +width.call(this, _),\n        h = +height.call(this, _),\n        s = Math.min(w, h) / 2,\n        tl = clamp(+crTL.call(this, _), 0, s),\n        tr = clamp(+crTR.call(this, _), 0, s),\n        bl = clamp(+crBL.call(this, _), 0, s),\n        br = clamp(+crBR.call(this, _), 0, s);\n    if (!context) context = buffer = path$3();\n\n    if (tl <= 0 && tr <= 0 && bl <= 0 && br <= 0) {\n      context.rect(x1, y1, w, h);\n    } else {\n      var x2 = x1 + w,\n          y2 = y1 + h;\n      context.moveTo(x1 + tl, y1);\n      context.lineTo(x2 - tr, y1);\n      context.bezierCurveTo(x2 - C * tr, y1, x2, y1 + C * tr, x2, y1 + tr);\n      context.lineTo(x2, y2 - br);\n      context.bezierCurveTo(x2, y2 - C * br, x2 - C * br, y2, x2 - br, y2);\n      context.lineTo(x1 + bl, y2);\n      context.bezierCurveTo(x1 + C * bl, y2, x1, y2 - C * bl, x1, y2 - bl);\n      context.lineTo(x1, y1 + tl);\n      context.bezierCurveTo(x1, y1 + C * tl, x1 + C * tl, y1, x1 + tl, y1);\n      context.closePath();\n    }\n\n    if (buffer) {\n      context = null;\n      return buffer + '' || null;\n    }\n  }\n\n  rectangle.x = function (_) {\n    if (arguments.length) {\n      x = number(_);\n      return rectangle;\n    } else {\n      return x;\n    }\n  };\n\n  rectangle.y = function (_) {\n    if (arguments.length) {\n      y = number(_);\n      return rectangle;\n    } else {\n      return y;\n    }\n  };\n\n  rectangle.width = function (_) {\n    if (arguments.length) {\n      width = number(_);\n      return rectangle;\n    } else {\n      return width;\n    }\n  };\n\n  rectangle.height = function (_) {\n    if (arguments.length) {\n      height = number(_);\n      return rectangle;\n    } else {\n      return height;\n    }\n  };\n\n  rectangle.cornerRadius = function (tl, tr, br, bl) {\n    if (arguments.length) {\n      crTL = number(tl);\n      crTR = tr != null ? number(tr) : crTL;\n      crBR = br != null ? number(br) : crTL;\n      crBL = bl != null ? number(bl) : crTR;\n      return rectangle;\n    } else {\n      return crTL;\n    }\n  };\n\n  rectangle.context = function (_) {\n    if (arguments.length) {\n      context = _ == null ? null : _;\n      return rectangle;\n    } else {\n      return context;\n    }\n  };\n\n  return rectangle;\n}\n\nfunction vg_trail () {\n  var x,\n      y,\n      size,\n      defined,\n      context = null,\n      ready,\n      x1,\n      y1,\n      r1;\n\n  function point(x2, y2, w2) {\n    const r2 = w2 / 2;\n\n    if (ready) {\n      var ux = y1 - y2,\n          uy = x2 - x1;\n\n      if (ux || uy) {\n        // get normal vector\n        var ud = Math.sqrt(ux * ux + uy * uy),\n            rx = (ux /= ud) * r1,\n            ry = (uy /= ud) * r1,\n            t = Math.atan2(uy, ux); // draw segment\n\n        context.moveTo(x1 - rx, y1 - ry);\n        context.lineTo(x2 - ux * r2, y2 - uy * r2);\n        context.arc(x2, y2, r2, t - Math.PI, t);\n        context.lineTo(x1 + rx, y1 + ry);\n        context.arc(x1, y1, r1, t, t + Math.PI);\n      } else {\n        context.arc(x2, y2, r2, 0, Tau);\n      }\n\n      context.closePath();\n    } else {\n      ready = 1;\n    }\n\n    x1 = x2;\n    y1 = y2;\n    r1 = r2;\n  }\n\n  function trail(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) context = buffer = path$3();\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) ready = 0;\n      }\n\n      if (defined0) point(+x(d, i, data), +y(d, i, data), +size(d, i, data));\n    }\n\n    if (buffer) {\n      context = null;\n      return buffer + '' || null;\n    }\n  }\n\n  trail.x = function (_) {\n    if (arguments.length) {\n      x = _;\n      return trail;\n    } else {\n      return x;\n    }\n  };\n\n  trail.y = function (_) {\n    if (arguments.length) {\n      y = _;\n      return trail;\n    } else {\n      return y;\n    }\n  };\n\n  trail.size = function (_) {\n    if (arguments.length) {\n      size = _;\n      return trail;\n    } else {\n      return size;\n    }\n  };\n\n  trail.defined = function (_) {\n    if (arguments.length) {\n      defined = _;\n      return trail;\n    } else {\n      return defined;\n    }\n  };\n\n  trail.context = function (_) {\n    if (arguments.length) {\n      if (_ == null) {\n        context = null;\n      } else {\n        context = _;\n      }\n\n      return trail;\n    } else {\n      return context;\n    }\n  };\n\n  return trail;\n}\n\nfunction value$1(a, b) {\n  return a != null ? a : b;\n}\n\nconst x = item => item.x || 0,\n      y = item => item.y || 0,\n      w = item => item.width || 0,\n      h = item => item.height || 0,\n      xw = item => (item.x || 0) + (item.width || 0),\n      yh = item => (item.y || 0) + (item.height || 0),\n      sa = item => item.startAngle || 0,\n      ea = item => item.endAngle || 0,\n      pa = item => item.padAngle || 0,\n      ir = item => item.innerRadius || 0,\n      or = item => item.outerRadius || 0,\n      cr = item => item.cornerRadius || 0,\n      tl = item => value$1(item.cornerRadiusTopLeft, item.cornerRadius) || 0,\n      tr = item => value$1(item.cornerRadiusTopRight, item.cornerRadius) || 0,\n      br = item => value$1(item.cornerRadiusBottomRight, item.cornerRadius) || 0,\n      bl = item => value$1(item.cornerRadiusBottomLeft, item.cornerRadius) || 0,\n      sz = item => value$1(item.size, 64),\n      ts = item => item.size || 1,\n      def = item => !(item.defined === false),\n      type = item => symbols(item.shape || 'circle');\n\nconst arcShape = arc$2().startAngle(sa).endAngle(ea).padAngle(pa).innerRadius(ir).outerRadius(or).cornerRadius(cr),\n      areavShape = area$2().x(x).y1(y).y0(yh).defined(def),\n      areahShape = area$2().y(y).x1(x).x0(xw).defined(def),\n      lineShape = line$2().x(x).y(y).defined(def),\n      rectShape = vg_rect().x(x).y(y).width(w).height(h).cornerRadius(tl, tr, br, bl),\n      symbolShape = symbol$2().type(type).size(sz),\n      trailShape = vg_trail().x(x).y(y).defined(def).size(ts);\nfunction hasCornerRadius(item) {\n  return item.cornerRadius || item.cornerRadiusTopLeft || item.cornerRadiusTopRight || item.cornerRadiusBottomRight || item.cornerRadiusBottomLeft;\n}\nfunction arc$1(context, item) {\n  return arcShape.context(context)(item);\n}\nfunction area$1(context, items) {\n  const item = items[0],\n        interp = item.interpolate || 'linear';\n  return (item.orient === 'horizontal' ? areahShape : areavShape).curve(curves(interp, item.orient, item.tension)).context(context)(items);\n}\nfunction line$1(context, items) {\n  const item = items[0],\n        interp = item.interpolate || 'linear';\n  return lineShape.curve(curves(interp, item.orient, item.tension)).context(context)(items);\n}\nfunction rectangle(context, item, x, y) {\n  return rectShape.context(context)(item, x, y);\n}\nfunction shape$1(context, item) {\n  return (item.mark.shape || item.shape).context(context)(item);\n}\nfunction symbol$1(context, item) {\n  return symbolShape.context(context)(item);\n}\nfunction trail$1(context, items) {\n  return trailShape.context(context)(items);\n}\n\nvar clip_id = 1;\nfunction resetSVGClipId() {\n  clip_id = 1;\n}\nfunction clip$1 (renderer, item, size) {\n  var clip = item.clip,\n      defs = renderer._defs,\n      id = item.clip_id || (item.clip_id = 'clip' + clip_id++),\n      c = defs.clipping[id] || (defs.clipping[id] = {\n    id: id\n  });\n\n  if (isFunction(clip)) {\n    c.path = clip(null);\n  } else if (hasCornerRadius(size)) {\n    c.path = rectangle(null, size, 0, 0);\n  } else {\n    c.width = size.width || 0;\n    c.height = size.height || 0;\n  }\n\n  return 'url(#' + id + ')';\n}\n\nfunction Bounds(b) {\n  this.clear();\n  if (b) this.union(b);\n}\nBounds.prototype = {\n  clone() {\n    return new Bounds(this);\n  },\n\n  clear() {\n    this.x1 = +Number.MAX_VALUE;\n    this.y1 = +Number.MAX_VALUE;\n    this.x2 = -Number.MAX_VALUE;\n    this.y2 = -Number.MAX_VALUE;\n    return this;\n  },\n\n  empty() {\n    return this.x1 === +Number.MAX_VALUE && this.y1 === +Number.MAX_VALUE && this.x2 === -Number.MAX_VALUE && this.y2 === -Number.MAX_VALUE;\n  },\n\n  equals(b) {\n    return this.x1 === b.x1 && this.y1 === b.y1 && this.x2 === b.x2 && this.y2 === b.y2;\n  },\n\n  set(x1, y1, x2, y2) {\n    if (x2 < x1) {\n      this.x2 = x1;\n      this.x1 = x2;\n    } else {\n      this.x1 = x1;\n      this.x2 = x2;\n    }\n\n    if (y2 < y1) {\n      this.y2 = y1;\n      this.y1 = y2;\n    } else {\n      this.y1 = y1;\n      this.y2 = y2;\n    }\n\n    return this;\n  },\n\n  add(x, y) {\n    if (x < this.x1) this.x1 = x;\n    if (y < this.y1) this.y1 = y;\n    if (x > this.x2) this.x2 = x;\n    if (y > this.y2) this.y2 = y;\n    return this;\n  },\n\n  expand(d) {\n    this.x1 -= d;\n    this.y1 -= d;\n    this.x2 += d;\n    this.y2 += d;\n    return this;\n  },\n\n  round() {\n    this.x1 = Math.floor(this.x1);\n    this.y1 = Math.floor(this.y1);\n    this.x2 = Math.ceil(this.x2);\n    this.y2 = Math.ceil(this.y2);\n    return this;\n  },\n\n  scale(s) {\n    this.x1 *= s;\n    this.y1 *= s;\n    this.x2 *= s;\n    this.y2 *= s;\n    return this;\n  },\n\n  translate(dx, dy) {\n    this.x1 += dx;\n    this.x2 += dx;\n    this.y1 += dy;\n    this.y2 += dy;\n    return this;\n  },\n\n  rotate(angle, x, y) {\n    const p = this.rotatedPoints(angle, x, y);\n    return this.clear().add(p[0], p[1]).add(p[2], p[3]).add(p[4], p[5]).add(p[6], p[7]);\n  },\n\n  rotatedPoints(angle, x, y) {\n    var {\n      x1,\n      y1,\n      x2,\n      y2\n    } = this,\n        cos = Math.cos(angle),\n        sin = Math.sin(angle),\n        cx = x - x * cos + y * sin,\n        cy = y - x * sin - y * cos;\n    return [cos * x1 - sin * y1 + cx, sin * x1 + cos * y1 + cy, cos * x1 - sin * y2 + cx, sin * x1 + cos * y2 + cy, cos * x2 - sin * y1 + cx, sin * x2 + cos * y1 + cy, cos * x2 - sin * y2 + cx, sin * x2 + cos * y2 + cy];\n  },\n\n  union(b) {\n    if (b.x1 < this.x1) this.x1 = b.x1;\n    if (b.y1 < this.y1) this.y1 = b.y1;\n    if (b.x2 > this.x2) this.x2 = b.x2;\n    if (b.y2 > this.y2) this.y2 = b.y2;\n    return this;\n  },\n\n  intersect(b) {\n    if (b.x1 > this.x1) this.x1 = b.x1;\n    if (b.y1 > this.y1) this.y1 = b.y1;\n    if (b.x2 < this.x2) this.x2 = b.x2;\n    if (b.y2 < this.y2) this.y2 = b.y2;\n    return this;\n  },\n\n  encloses(b) {\n    return b && this.x1 <= b.x1 && this.x2 >= b.x2 && this.y1 <= b.y1 && this.y2 >= b.y2;\n  },\n\n  alignsWith(b) {\n    return b && (this.x1 == b.x1 || this.x2 == b.x2 || this.y1 == b.y1 || this.y2 == b.y2);\n  },\n\n  intersects(b) {\n    return b && !(this.x2 < b.x1 || this.x1 > b.x2 || this.y2 < b.y1 || this.y1 > b.y2);\n  },\n\n  contains(x, y) {\n    return !(x < this.x1 || x > this.x2 || y < this.y1 || y > this.y2);\n  },\n\n  width() {\n    return this.x2 - this.x1;\n  },\n\n  height() {\n    return this.y2 - this.y1;\n  }\n\n};\n\nfunction Item(mark) {\n  this.mark = mark;\n  this.bounds = this.bounds || new Bounds();\n}\n\nfunction GroupItem(mark) {\n  Item.call(this, mark);\n  this.items = this.items || [];\n}\ninherits(GroupItem, Item);\n\nfunction ResourceLoader(customLoader) {\n  this._pending = 0;\n  this._loader = customLoader || loader();\n}\n\nfunction increment(loader) {\n  loader._pending += 1;\n}\n\nfunction decrement(loader) {\n  loader._pending -= 1;\n}\n\nResourceLoader.prototype = {\n  pending() {\n    return this._pending;\n  },\n\n  sanitizeURL(uri) {\n    const loader = this;\n    increment(loader);\n    return loader._loader.sanitize(uri, {\n      context: 'href'\n    }).then(opt => {\n      decrement(loader);\n      return opt;\n    }).catch(() => {\n      decrement(loader);\n      return null;\n    });\n  },\n\n  loadImage(uri) {\n    const loader = this,\n          Image = image$1();\n    increment(loader);\n    return loader._loader.sanitize(uri, {\n      context: 'image'\n    }).then(opt => {\n      const url = opt.href;\n      if (!url || !Image) throw {\n        url: url\n      };\n      const img = new Image(); // set crossOrigin only if cors is defined; empty string sets anonymous mode\n      // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin\n\n      const cors = hasOwnProperty(opt, 'crossOrigin') ? opt.crossOrigin : 'anonymous';\n      if (cors != null) img.crossOrigin = cors; // attempt to load image resource\n\n      img.onload = () => decrement(loader);\n\n      img.onerror = () => decrement(loader);\n\n      img.src = url;\n      return img;\n    }).catch(e => {\n      decrement(loader);\n      return {\n        complete: false,\n        width: 0,\n        height: 0,\n        src: e && e.url || ''\n      };\n    });\n  },\n\n  ready() {\n    const loader = this;\n    return new Promise(accept => {\n      function poll(value) {\n        if (!loader.pending()) accept(value);else setTimeout(() => {\n          poll(true);\n        }, 10);\n      }\n\n      poll(false);\n    });\n  }\n\n};\n\nfunction boundStroke (bounds, item, miter) {\n  if (item.stroke && item.opacity !== 0 && item.strokeOpacity !== 0) {\n    const sw = item.strokeWidth != null ? +item.strokeWidth : 1;\n    bounds.expand(sw + (miter ? miterAdjustment(item, sw) : 0));\n  }\n\n  return bounds;\n}\n\nfunction miterAdjustment(item, strokeWidth) {\n  // TODO: more sophisticated adjustment? Or miter support in boundContext?\n  return item.strokeJoin && item.strokeJoin !== 'miter' ? 0 : strokeWidth;\n}\n\nconst circleThreshold = Tau - 1e-8;\nlet bounds, lx, ly, rot, ma, mb, mc, md;\n\nconst add = (x, y) => bounds.add(x, y);\n\nconst addL = (x, y) => add(lx = x, ly = y);\n\nconst addX = x => add(x, bounds.y1);\n\nconst addY = y => add(bounds.x1, y);\n\nconst px = (x, y) => ma * x + mc * y;\n\nconst py = (x, y) => mb * x + md * y;\n\nconst addp = (x, y) => add(px(x, y), py(x, y));\n\nconst addpL = (x, y) => addL(px(x, y), py(x, y));\n\nfunction boundContext (_, deg) {\n  bounds = _;\n\n  if (deg) {\n    rot = deg * DegToRad;\n    ma = md = Math.cos(rot);\n    mb = Math.sin(rot);\n    mc = -mb;\n  } else {\n    ma = md = 1;\n    rot = mb = mc = 0;\n  }\n\n  return context$1;\n}\nconst context$1 = {\n  beginPath() {},\n\n  closePath() {},\n\n  moveTo: addpL,\n  lineTo: addpL,\n\n  rect(x, y, w, h) {\n    if (rot) {\n      addp(x + w, y);\n      addp(x + w, y + h);\n      addp(x, y + h);\n      addpL(x, y);\n    } else {\n      add(x + w, y + h);\n      addL(x, y);\n    }\n  },\n\n  quadraticCurveTo(x1, y1, x2, y2) {\n    const px1 = px(x1, y1),\n          py1 = py(x1, y1),\n          px2 = px(x2, y2),\n          py2 = py(x2, y2);\n    quadExtrema(lx, px1, px2, addX);\n    quadExtrema(ly, py1, py2, addY);\n    addL(px2, py2);\n  },\n\n  bezierCurveTo(x1, y1, x2, y2, x3, y3) {\n    const px1 = px(x1, y1),\n          py1 = py(x1, y1),\n          px2 = px(x2, y2),\n          py2 = py(x2, y2),\n          px3 = px(x3, y3),\n          py3 = py(x3, y3);\n    cubicExtrema(lx, px1, px2, px3, addX);\n    cubicExtrema(ly, py1, py2, py3, addY);\n    addL(px3, py3);\n  },\n\n  arc(cx, cy, r, sa, ea, ccw) {\n    sa += rot;\n    ea += rot; // store last point on path\n\n    lx = r * Math.cos(ea) + cx;\n    ly = r * Math.sin(ea) + cy;\n\n    if (Math.abs(ea - sa) > circleThreshold) {\n      // treat as full circle\n      add(cx - r, cy - r);\n      add(cx + r, cy + r);\n    } else {\n      const update = a => add(r * Math.cos(a) + cx, r * Math.sin(a) + cy);\n\n      let s, i; // sample end points\n\n      update(sa);\n      update(ea); // sample interior points aligned with 90 degrees\n\n      if (ea !== sa) {\n        sa = sa % Tau;\n        if (sa < 0) sa += Tau;\n        ea = ea % Tau;\n        if (ea < 0) ea += Tau;\n\n        if (ea < sa) {\n          ccw = !ccw; // flip direction\n\n          s = sa;\n          sa = ea;\n          ea = s; // swap end-points\n        }\n\n        if (ccw) {\n          ea -= Tau;\n          s = sa - sa % HalfPi;\n\n          for (i = 0; i < 4 && s > ea; ++i, s -= HalfPi) update(s);\n        } else {\n          s = sa - sa % HalfPi + HalfPi;\n\n          for (i = 0; i < 4 && s < ea; ++i, s = s + HalfPi) update(s);\n        }\n      }\n    }\n  }\n\n};\n\nfunction quadExtrema(x0, x1, x2, cb) {\n  const t = (x0 - x1) / (x0 + x2 - 2 * x1);\n  if (0 < t && t < 1) cb(x0 + (x1 - x0) * t);\n}\n\nfunction cubicExtrema(x0, x1, x2, x3, cb) {\n  const a = x3 - x0 + 3 * x1 - 3 * x2,\n        b = x0 + x2 - 2 * x1,\n        c = x0 - x1;\n  let t0 = 0,\n      t1 = 0,\n      r; // solve for parameter t\n\n  if (Math.abs(a) > Epsilon) {\n    // quadratic equation\n    r = b * b + c * a;\n\n    if (r >= 0) {\n      r = Math.sqrt(r);\n      t0 = (-b + r) / a;\n      t1 = (-b - r) / a;\n    }\n  } else {\n    // linear equation\n    t0 = 0.5 * c / b;\n  } // calculate position\n\n\n  if (0 < t0 && t0 < 1) cb(cubic(t0, x0, x1, x2, x3));\n  if (0 < t1 && t1 < 1) cb(cubic(t1, x0, x1, x2, x3));\n}\n\nfunction cubic(t, x0, x1, x2, x3) {\n  const s = 1 - t,\n        s2 = s * s,\n        t2 = t * t;\n  return s2 * s * x0 + 3 * s2 * t * x1 + 3 * s * t2 * x2 + t2 * t * x3;\n}\n\nvar context = (context = canvas(1, 1)) ? context.getContext('2d') : null;\n\nconst b = new Bounds();\nfunction intersectPath(draw) {\n  return function (item, brush) {\n    // rely on (inaccurate) bounds intersection if no context\n    if (!context) return true; // add path to offscreen graphics context\n\n    draw(context, item); // get bounds intersection region\n\n    b.clear().union(item.bounds).intersect(brush).round();\n    const {\n      x1,\n      y1,\n      x2,\n      y2\n    } = b; // iterate over intersection region\n    // perform fine grained inclusion test\n\n    for (let y = y1; y <= y2; ++y) {\n      for (let x = x1; x <= x2; ++x) {\n        if (context.isPointInPath(x, y)) {\n          return true;\n        }\n      }\n    } // false if no hits in intersection region\n\n\n    return false;\n  };\n}\nfunction intersectPoint(item, box) {\n  return box.contains(item.x || 0, item.y || 0);\n}\nfunction intersectRect(item, box) {\n  const x = item.x || 0,\n        y = item.y || 0,\n        w = item.width || 0,\n        h = item.height || 0;\n  return box.intersects(b.set(x, y, x + w, y + h));\n}\nfunction intersectRule(item, box) {\n  const x = item.x || 0,\n        y = item.y || 0,\n        x2 = item.x2 != null ? item.x2 : x,\n        y2 = item.y2 != null ? item.y2 : y;\n  return intersectBoxLine(box, x, y, x2, y2);\n}\nfunction intersectBoxLine(box, x, y, u, v) {\n  const {\n    x1,\n    y1,\n    x2,\n    y2\n  } = box,\n        dx = u - x,\n        dy = v - y;\n  let t0 = 0,\n      t1 = 1,\n      p,\n      q,\n      r,\n      e;\n\n  for (e = 0; e < 4; ++e) {\n    if (e === 0) {\n      p = -dx;\n      q = -(x1 - x);\n    }\n\n    if (e === 1) {\n      p = dx;\n      q = x2 - x;\n    }\n\n    if (e === 2) {\n      p = -dy;\n      q = -(y1 - y);\n    }\n\n    if (e === 3) {\n      p = dy;\n      q = y2 - y;\n    }\n\n    if (Math.abs(p) < 1e-10 && q < 0) return false;\n    r = q / p;\n\n    if (p < 0) {\n      if (r > t1) return false;else if (r > t0) t0 = r;\n    } else if (p > 0) {\n      if (r < t0) return false;else if (r < t1) t1 = r;\n    }\n  }\n\n  return true;\n}\n\nfunction blend (context, item) {\n  context.globalCompositeOperation = item.blend || 'source-over';\n}\n\nfunction value (value, dflt) {\n  return value == null ? dflt : value;\n}\n\nfunction addStops(gradient, stops) {\n  const n = stops.length;\n\n  for (let i = 0; i < n; ++i) {\n    gradient.addColorStop(stops[i].offset, stops[i].color);\n  }\n\n  return gradient;\n}\n\nfunction gradient (context, spec, bounds) {\n  const w = bounds.width(),\n        h = bounds.height();\n  let gradient;\n\n  if (spec.gradient === 'radial') {\n    gradient = context.createRadialGradient(bounds.x1 + value(spec.x1, 0.5) * w, bounds.y1 + value(spec.y1, 0.5) * h, Math.max(w, h) * value(spec.r1, 0), bounds.x1 + value(spec.x2, 0.5) * w, bounds.y1 + value(spec.y2, 0.5) * h, Math.max(w, h) * value(spec.r2, 0.5));\n  } else {\n    // linear gradient\n    const x1 = value(spec.x1, 0),\n          y1 = value(spec.y1, 0),\n          x2 = value(spec.x2, 1),\n          y2 = value(spec.y2, 0);\n\n    if (x1 === x2 || y1 === y2 || w === h) {\n      // axis aligned: use normal gradient\n      gradient = context.createLinearGradient(bounds.x1 + x1 * w, bounds.y1 + y1 * h, bounds.x1 + x2 * w, bounds.y1 + y2 * h);\n    } else {\n      // not axis aligned: render gradient into a pattern (#2365)\n      // this allows us to use normalized bounding box coordinates\n      const image = canvas(Math.ceil(w), Math.ceil(h)),\n            ictx = image.getContext('2d');\n      ictx.scale(w, h);\n      ictx.fillStyle = addStops(ictx.createLinearGradient(x1, y1, x2, y2), spec.stops);\n      ictx.fillRect(0, 0, w, h);\n      return context.createPattern(image, 'no-repeat');\n    }\n  }\n\n  return addStops(gradient, spec.stops);\n}\n\nfunction color (context, item, value) {\n  return isGradient(value) ? gradient(context, value, item.bounds) : value;\n}\n\nfunction fill (context, item, opacity) {\n  opacity *= item.fillOpacity == null ? 1 : item.fillOpacity;\n\n  if (opacity > 0) {\n    context.globalAlpha = opacity;\n    context.fillStyle = color(context, item, item.fill);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nvar Empty = [];\nfunction stroke (context, item, opacity) {\n  var lw = (lw = item.strokeWidth) != null ? lw : 1;\n  if (lw <= 0) return false;\n  opacity *= item.strokeOpacity == null ? 1 : item.strokeOpacity;\n\n  if (opacity > 0) {\n    context.globalAlpha = opacity;\n    context.strokeStyle = color(context, item, item.stroke);\n    context.lineWidth = lw;\n    context.lineCap = item.strokeCap || 'butt';\n    context.lineJoin = item.strokeJoin || 'miter';\n    context.miterLimit = item.strokeMiterLimit || 10;\n\n    if (context.setLineDash) {\n      context.setLineDash(item.strokeDash || Empty);\n      context.lineDashOffset = item.strokeDashOffset || 0;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction compare(a, b) {\n  return a.zindex - b.zindex || a.index - b.index;\n}\n\nfunction zorder(scene) {\n  if (!scene.zdirty) return scene.zitems;\n  var items = scene.items,\n      output = [],\n      item,\n      i,\n      n;\n\n  for (i = 0, n = items.length; i < n; ++i) {\n    item = items[i];\n    item.index = i;\n    if (item.zindex) output.push(item);\n  }\n\n  scene.zdirty = false;\n  return scene.zitems = output.sort(compare);\n}\nfunction visit(scene, visitor) {\n  var items = scene.items,\n      i,\n      n;\n  if (!items || !items.length) return;\n  const zitems = zorder(scene);\n\n  if (zitems && zitems.length) {\n    for (i = 0, n = items.length; i < n; ++i) {\n      if (!items[i].zindex) visitor(items[i]);\n    }\n\n    items = zitems;\n  }\n\n  for (i = 0, n = items.length; i < n; ++i) {\n    visitor(items[i]);\n  }\n}\nfunction pickVisit(scene, visitor) {\n  var items = scene.items,\n      hit,\n      i;\n  if (!items || !items.length) return null;\n  const zitems = zorder(scene);\n  if (zitems && zitems.length) items = zitems;\n\n  for (i = items.length; --i >= 0;) {\n    if (hit = visitor(items[i])) return hit;\n  }\n\n  if (items === zitems) {\n    for (items = scene.items, i = items.length; --i >= 0;) {\n      if (!items[i].zindex) {\n        if (hit = visitor(items[i])) return hit;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction drawAll(path) {\n  return function (context, scene, bounds) {\n    visit(scene, item => {\n      if (!bounds || bounds.intersects(item.bounds)) {\n        drawPath(path, context, item, item);\n      }\n    });\n  };\n}\nfunction drawOne(path) {\n  return function (context, scene, bounds) {\n    if (scene.items.length && (!bounds || bounds.intersects(scene.bounds))) {\n      drawPath(path, context, scene.items[0], scene.items);\n    }\n  };\n}\n\nfunction drawPath(path, context, item, items) {\n  var opacity = item.opacity == null ? 1 : item.opacity;\n  if (opacity === 0) return;\n  if (path(context, items)) return;\n  blend(context, item);\n\n  if (item.fill && fill(context, item, opacity)) {\n    context.fill();\n  }\n\n  if (item.stroke && stroke(context, item, opacity)) {\n    context.stroke();\n  }\n}\n\nfunction pick$1(test) {\n  test = test || truthy;\n  return function (context, scene, x, y, gx, gy) {\n    x *= context.pixelRatio;\n    y *= context.pixelRatio;\n    return pickVisit(scene, item => {\n      const b = item.bounds; // first hit test against bounding box\n\n      if (b && !b.contains(gx, gy) || !b) return; // if in bounding box, perform more careful test\n\n      if (test(context, item, x, y, gx, gy)) return item;\n    });\n  };\n}\nfunction hitPath(path, filled) {\n  return function (context, o, x, y) {\n    var item = Array.isArray(o) ? o[0] : o,\n        fill = filled == null ? item.fill : filled,\n        stroke = item.stroke && context.isPointInStroke,\n        lw,\n        lc;\n\n    if (stroke) {\n      lw = item.strokeWidth;\n      lc = item.strokeCap;\n      context.lineWidth = lw != null ? lw : 1;\n      context.lineCap = lc != null ? lc : 'butt';\n    }\n\n    return path(context, o) ? false : fill && context.isPointInPath(x, y) || stroke && context.isPointInStroke(x, y);\n  };\n}\nfunction pickPath(path) {\n  return pick$1(hitPath(path));\n}\n\nfunction translate(x, y) {\n  return 'translate(' + x + ',' + y + ')';\n}\nfunction rotate(a) {\n  return 'rotate(' + a + ')';\n}\nfunction scale(scaleX, scaleY) {\n  return 'scale(' + scaleX + ',' + scaleY + ')';\n}\nfunction translateItem(item) {\n  return translate(item.x || 0, item.y || 0);\n}\nfunction rotateItem(item) {\n  return translate(item.x || 0, item.y || 0) + (item.angle ? ' ' + rotate(item.angle) : '');\n}\nfunction transformItem(item) {\n  return translate(item.x || 0, item.y || 0) + (item.angle ? ' ' + rotate(item.angle) : '') + (item.scaleX || item.scaleY ? ' ' + scale(item.scaleX || 1, item.scaleY || 1) : '');\n}\n\nfunction markItemPath (type, shape, isect) {\n  function attr(emit, item) {\n    emit('transform', rotateItem(item));\n    emit('d', shape(null, item));\n  }\n\n  function bound(bounds, item) {\n    shape(boundContext(bounds, item.angle), item);\n    return boundStroke(bounds, item).translate(item.x || 0, item.y || 0);\n  }\n\n  function draw(context, item) {\n    var x = item.x || 0,\n        y = item.y || 0,\n        a = item.angle || 0;\n    context.translate(x, y);\n    if (a) context.rotate(a *= DegToRad);\n    context.beginPath();\n    shape(context, item);\n    if (a) context.rotate(-a);\n    context.translate(-x, -y);\n  }\n\n  return {\n    type: type,\n    tag: 'path',\n    nested: false,\n    attr: attr,\n    bound: bound,\n    draw: drawAll(draw),\n    pick: pickPath(draw),\n    isect: isect || intersectPath(draw)\n  };\n}\n\nvar arc = markItemPath('arc', arc$1);\n\nfunction pickArea(a, p) {\n  var v = a[0].orient === 'horizontal' ? p[1] : p[0],\n      z = a[0].orient === 'horizontal' ? 'y' : 'x',\n      i = a.length,\n      min = +Infinity,\n      hit,\n      d;\n\n  while (--i >= 0) {\n    if (a[i].defined === false) continue;\n    d = Math.abs(a[i][z] - v);\n\n    if (d < min) {\n      min = d;\n      hit = a[i];\n    }\n  }\n\n  return hit;\n}\nfunction pickLine(a, p) {\n  var t = Math.pow(a[0].strokeWidth || 1, 2),\n      i = a.length,\n      dx,\n      dy,\n      dd;\n\n  while (--i >= 0) {\n    if (a[i].defined === false) continue;\n    dx = a[i].x - p[0];\n    dy = a[i].y - p[1];\n    dd = dx * dx + dy * dy;\n    if (dd < t) return a[i];\n  }\n\n  return null;\n}\nfunction pickTrail(a, p) {\n  var i = a.length,\n      dx,\n      dy,\n      dd;\n\n  while (--i >= 0) {\n    if (a[i].defined === false) continue;\n    dx = a[i].x - p[0];\n    dy = a[i].y - p[1];\n    dd = dx * dx + dy * dy;\n    dx = a[i].size || 1;\n    if (dd < dx * dx) return a[i];\n  }\n\n  return null;\n}\n\nfunction markMultiItemPath (type, shape, tip) {\n  function attr(emit, item) {\n    var items = item.mark.items;\n    if (items.length) emit('d', shape(null, items));\n  }\n\n  function bound(bounds, mark) {\n    var items = mark.items;\n\n    if (items.length === 0) {\n      return bounds;\n    } else {\n      shape(boundContext(bounds), items);\n      return boundStroke(bounds, items[0]);\n    }\n  }\n\n  function draw(context, items) {\n    context.beginPath();\n    shape(context, items);\n  }\n\n  const hit = hitPath(draw);\n\n  function pick(context, scene, x, y, gx, gy) {\n    var items = scene.items,\n        b = scene.bounds;\n\n    if (!items || !items.length || b && !b.contains(gx, gy)) {\n      return null;\n    }\n\n    x *= context.pixelRatio;\n    y *= context.pixelRatio;\n    return hit(context, items, x, y) ? items[0] : null;\n  }\n\n  return {\n    type: type,\n    tag: 'path',\n    nested: true,\n    attr: attr,\n    bound: bound,\n    draw: drawOne(draw),\n    pick: pick,\n    isect: intersectPoint,\n    tip: tip\n  };\n}\n\nvar area = markMultiItemPath('area', area$1, pickArea);\n\nfunction clip (context, scene) {\n  var clip = scene.clip;\n  context.save();\n\n  if (isFunction(clip)) {\n    context.beginPath();\n    clip(context);\n    context.clip();\n  } else {\n    clipGroup(context, scene.group);\n  }\n}\nfunction clipGroup(context, group) {\n  context.beginPath();\n  hasCornerRadius(group) ? rectangle(context, group, 0, 0) : context.rect(0, 0, group.width || 0, group.height || 0);\n  context.clip();\n}\n\nfunction offset$1(item) {\n  const sw = value(item.strokeWidth, 1);\n  return item.strokeOffset != null ? item.strokeOffset : item.stroke && sw > 0.5 && sw < 1.5 ? 0.5 - Math.abs(sw - 1) : 0;\n}\n\nfunction attr$5(emit, item) {\n  emit('transform', translateItem(item));\n}\n\nfunction emitRectangle(emit, item) {\n  const off = offset$1(item);\n  emit('d', rectangle(null, item, off, off));\n}\n\nfunction background(emit, item) {\n  emit('class', 'background');\n  emit('aria-hidden', true);\n  emitRectangle(emit, item);\n}\n\nfunction foreground(emit, item) {\n  emit('class', 'foreground');\n  emit('aria-hidden', true);\n\n  if (item.strokeForeground) {\n    emitRectangle(emit, item);\n  } else {\n    emit('d', '');\n  }\n}\n\nfunction content(emit, item, renderer) {\n  const url = item.clip ? clip$1(renderer, item, item) : null;\n  emit('clip-path', url);\n}\n\nfunction bound$5(bounds, group) {\n  if (!group.clip && group.items) {\n    const items = group.items,\n          m = items.length;\n\n    for (let j = 0; j < m; ++j) {\n      bounds.union(items[j].bounds);\n    }\n  }\n\n  if ((group.clip || group.width || group.height) && !group.noBound) {\n    bounds.add(0, 0).add(group.width || 0, group.height || 0);\n  }\n\n  boundStroke(bounds, group);\n  return bounds.translate(group.x || 0, group.y || 0);\n}\n\nfunction rectanglePath(context, group, x, y) {\n  const off = offset$1(group);\n  context.beginPath();\n  rectangle(context, group, (x || 0) + off, (y || 0) + off);\n}\n\nconst hitBackground = hitPath(rectanglePath);\nconst hitForeground = hitPath(rectanglePath, false);\nconst hitCorner = hitPath(rectanglePath, true);\n\nfunction draw$4(context, scene, bounds) {\n  visit(scene, group => {\n    const gx = group.x || 0,\n          gy = group.y || 0,\n          fore = group.strokeForeground,\n          opacity = group.opacity == null ? 1 : group.opacity; // draw group background\n\n    if ((group.stroke || group.fill) && opacity) {\n      rectanglePath(context, group, gx, gy);\n      blend(context, group);\n\n      if (group.fill && fill(context, group, opacity)) {\n        context.fill();\n      }\n\n      if (group.stroke && !fore && stroke(context, group, opacity)) {\n        context.stroke();\n      }\n    } // setup graphics context, set clip and bounds\n\n\n    context.save();\n    context.translate(gx, gy);\n    if (group.clip) clipGroup(context, group);\n    if (bounds) bounds.translate(-gx, -gy); // draw group contents\n\n    visit(group, item => {\n      this.draw(context, item, bounds);\n    }); // restore graphics context\n\n    if (bounds) bounds.translate(gx, gy);\n    context.restore(); // draw group foreground\n\n    if (fore && group.stroke && opacity) {\n      rectanglePath(context, group, gx, gy);\n      blend(context, group);\n\n      if (stroke(context, group, opacity)) {\n        context.stroke();\n      }\n    }\n  });\n}\n\nfunction pick(context, scene, x, y, gx, gy) {\n  if (scene.bounds && !scene.bounds.contains(gx, gy) || !scene.items) {\n    return null;\n  }\n\n  const cx = x * context.pixelRatio,\n        cy = y * context.pixelRatio;\n  return pickVisit(scene, group => {\n    let hit, dx, dy; // first hit test bounding box\n\n    const b = group.bounds;\n    if (b && !b.contains(gx, gy)) return; // passed bounds check, test rectangular clip\n\n    dx = group.x || 0;\n    dy = group.y || 0;\n    const dw = dx + (group.width || 0),\n          dh = dy + (group.height || 0),\n          c = group.clip;\n    if (c && (gx < dx || gx > dw || gy < dy || gy > dh)) return; // adjust coordinate system\n\n    context.save();\n    context.translate(dx, dy);\n    dx = gx - dx;\n    dy = gy - dy; // test background for rounded corner clip\n\n    if (c && hasCornerRadius(group) && !hitCorner(context, group, cx, cy)) {\n      context.restore();\n      return null;\n    }\n\n    const fore = group.strokeForeground,\n          ix = scene.interactive !== false; // hit test against group foreground\n\n    if (ix && fore && group.stroke && hitForeground(context, group, cx, cy)) {\n      context.restore();\n      return group;\n    } // hit test against contained marks\n\n\n    hit = pickVisit(group, mark => pickMark(mark, dx, dy) ? this.pick(mark, x, y, dx, dy) : null); // hit test against group background\n\n    if (!hit && ix && (group.fill || !fore && group.stroke) && hitBackground(context, group, cx, cy)) {\n      hit = group;\n    } // restore state and return\n\n\n    context.restore();\n    return hit || null;\n  });\n}\n\nfunction pickMark(mark, x, y) {\n  return (mark.interactive !== false || mark.marktype === 'group') && mark.bounds && mark.bounds.contains(x, y);\n}\n\nvar group = {\n  type: 'group',\n  tag: 'g',\n  nested: false,\n  attr: attr$5,\n  bound: bound$5,\n  draw: draw$4,\n  pick: pick,\n  isect: intersectRect,\n  content: content,\n  background: background,\n  foreground: foreground\n};\n\nvar metadata = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  'version': '1.1'\n};\n\nfunction getImage(item, renderer) {\n  var image = item.image;\n\n  if (!image || item.url && item.url !== image.url) {\n    image = {\n      complete: false,\n      width: 0,\n      height: 0\n    };\n    renderer.loadImage(item.url).then(image => {\n      item.image = image;\n      item.image.url = item.url;\n    });\n  }\n\n  return image;\n}\n\nfunction imageWidth(item, image) {\n  return item.width != null ? item.width : !image || !image.width ? 0 : item.aspect !== false && item.height ? item.height * image.width / image.height : image.width;\n}\n\nfunction imageHeight(item, image) {\n  return item.height != null ? item.height : !image || !image.height ? 0 : item.aspect !== false && item.width ? item.width * image.height / image.width : image.height;\n}\n\nfunction imageXOffset(align, w) {\n  return align === 'center' ? w / 2 : align === 'right' ? w : 0;\n}\n\nfunction imageYOffset(baseline, h) {\n  return baseline === 'middle' ? h / 2 : baseline === 'bottom' ? h : 0;\n}\n\nfunction attr$4(emit, item, renderer) {\n  const img = getImage(item, renderer),\n        w = imageWidth(item, img),\n        h = imageHeight(item, img),\n        x = (item.x || 0) - imageXOffset(item.align, w),\n        y = (item.y || 0) - imageYOffset(item.baseline, h),\n        i = !img.src && img.toDataURL ? img.toDataURL() : img.src || '';\n  emit('href', i, metadata['xmlns:xlink'], 'xlink:href');\n  emit('transform', translate(x, y));\n  emit('width', w);\n  emit('height', h);\n  emit('preserveAspectRatio', item.aspect === false ? 'none' : 'xMidYMid');\n}\n\nfunction bound$4(bounds, item) {\n  const img = item.image,\n        w = imageWidth(item, img),\n        h = imageHeight(item, img),\n        x = (item.x || 0) - imageXOffset(item.align, w),\n        y = (item.y || 0) - imageYOffset(item.baseline, h);\n  return bounds.set(x, y, x + w, y + h);\n}\n\nfunction draw$3(context, scene, bounds) {\n  visit(scene, item => {\n    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check\n\n    const img = getImage(item, this);\n    let w = imageWidth(item, img);\n    let h = imageHeight(item, img);\n    if (w === 0 || h === 0) return; // early exit\n\n    let x = (item.x || 0) - imageXOffset(item.align, w),\n        y = (item.y || 0) - imageYOffset(item.baseline, h),\n        opacity,\n        ar0,\n        ar1,\n        t;\n\n    if (item.aspect !== false) {\n      ar0 = img.width / img.height;\n      ar1 = item.width / item.height;\n\n      if (ar0 === ar0 && ar1 === ar1 && ar0 !== ar1) {\n        if (ar1 < ar0) {\n          t = w / ar0;\n          y += (h - t) / 2;\n          h = t;\n        } else {\n          t = h * ar0;\n          x += (w - t) / 2;\n          w = t;\n        }\n      }\n    }\n\n    if (img.complete || img.toDataURL) {\n      blend(context, item);\n      context.globalAlpha = (opacity = item.opacity) != null ? opacity : 1;\n      context.imageSmoothingEnabled = item.smooth !== false;\n      context.drawImage(img, x, y, w, h);\n    }\n  });\n}\n\nvar image = {\n  type: 'image',\n  tag: 'image',\n  nested: false,\n  attr: attr$4,\n  bound: bound$4,\n  draw: draw$3,\n  pick: pick$1(),\n  isect: truthy,\n  // bounds check is sufficient\n  get: getImage,\n  xOffset: imageXOffset,\n  yOffset: imageYOffset\n};\n\nvar line = markMultiItemPath('line', line$1, pickLine);\n\nfunction attr$3(emit, item) {\n  var sx = item.scaleX || 1,\n      sy = item.scaleY || 1;\n\n  if (sx !== 1 || sy !== 1) {\n    emit('vector-effect', 'non-scaling-stroke');\n  }\n\n  emit('transform', transformItem(item));\n  emit('d', item.path);\n}\n\nfunction path$1(context, item) {\n  var path = item.path;\n  if (path == null) return true;\n  var x = item.x || 0,\n      y = item.y || 0,\n      sx = item.scaleX || 1,\n      sy = item.scaleY || 1,\n      a = (item.angle || 0) * DegToRad,\n      cache = item.pathCache;\n\n  if (!cache || cache.path !== path) {\n    (item.pathCache = cache = pathParse(path)).path = path;\n  }\n\n  if (a && context.rotate && context.translate) {\n    context.translate(x, y);\n    context.rotate(a);\n    pathRender(context, cache, 0, 0, sx, sy);\n    context.rotate(-a);\n    context.translate(-x, -y);\n  } else {\n    pathRender(context, cache, x, y, sx, sy);\n  }\n}\n\nfunction bound$3(bounds, item) {\n  return path$1(boundContext(bounds, item.angle), item) ? bounds.set(0, 0, 0, 0) : boundStroke(bounds, item, true);\n}\n\nvar path$2 = {\n  type: 'path',\n  tag: 'path',\n  nested: false,\n  attr: attr$3,\n  bound: bound$3,\n  draw: drawAll(path$1),\n  pick: pickPath(path$1),\n  isect: intersectPath(path$1)\n};\n\nfunction attr$2(emit, item) {\n  emit('d', rectangle(null, item));\n}\n\nfunction bound$2(bounds, item) {\n  var x, y;\n  return boundStroke(bounds.set(x = item.x || 0, y = item.y || 0, x + item.width || 0, y + item.height || 0), item);\n}\n\nfunction draw$2(context, item) {\n  context.beginPath();\n  rectangle(context, item);\n}\n\nvar rect = {\n  type: 'rect',\n  tag: 'path',\n  nested: false,\n  attr: attr$2,\n  bound: bound$2,\n  draw: drawAll(draw$2),\n  pick: pickPath(draw$2),\n  isect: intersectRect\n};\n\nfunction attr$1(emit, item) {\n  emit('transform', translateItem(item));\n  emit('x2', item.x2 != null ? item.x2 - (item.x || 0) : 0);\n  emit('y2', item.y2 != null ? item.y2 - (item.y || 0) : 0);\n}\n\nfunction bound$1(bounds, item) {\n  var x1, y1;\n  return boundStroke(bounds.set(x1 = item.x || 0, y1 = item.y || 0, item.x2 != null ? item.x2 : x1, item.y2 != null ? item.y2 : y1), item);\n}\n\nfunction path(context, item, opacity) {\n  var x1, y1, x2, y2;\n\n  if (item.stroke && stroke(context, item, opacity)) {\n    x1 = item.x || 0;\n    y1 = item.y || 0;\n    x2 = item.x2 != null ? item.x2 : x1;\n    y2 = item.y2 != null ? item.y2 : y1;\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    return true;\n  }\n\n  return false;\n}\n\nfunction draw$1(context, scene, bounds) {\n  visit(scene, item => {\n    if (bounds && !bounds.intersects(item.bounds)) return; // bounds check\n\n    var opacity = item.opacity == null ? 1 : item.opacity;\n\n    if (opacity && path(context, item, opacity)) {\n      blend(context, item);\n      context.stroke();\n    }\n  });\n}\n\nfunction hit$1(context, item, x, y) {\n  if (!context.isPointInStroke) return false;\n  return path(context, item, 1) && context.isPointInStroke(x, y);\n}\n\nvar rule = {\n  type: 'rule',\n  tag: 'line',\n  nested: false,\n  attr: attr$1,\n  bound: bound$1,\n  draw: draw$1,\n  pick: pick$1(hit$1),\n  isect: intersectRule\n};\n\nvar shape = markItemPath('shape', shape$1);\n\nvar symbol = markItemPath('symbol', symbol$1, intersectPoint);\n\nconst widthCache = lruCache();\nvar textMetrics = {\n  height: fontSize,\n  measureWidth: measureWidth,\n  estimateWidth: estimateWidth,\n  width: estimateWidth,\n  canvas: useCanvas\n};\nuseCanvas(true);\n\nfunction useCanvas(use) {\n  textMetrics.width = use && context ? measureWidth : estimateWidth;\n} // make simple estimate if no canvas is available\n\n\nfunction estimateWidth(item, text) {\n  return _estimateWidth(textValue(item, text), fontSize(item));\n}\n\nfunction _estimateWidth(text, currentFontHeight) {\n  return ~~(0.8 * text.length * currentFontHeight);\n} // measure text width if canvas is available\n\n\nfunction measureWidth(item, text) {\n  return fontSize(item) <= 0 || !(text = textValue(item, text)) ? 0 : _measureWidth(text, font(item));\n}\n\nfunction _measureWidth(text, currentFont) {\n  const key = `(${currentFont}) ${text}`;\n  let width = widthCache.get(key);\n\n  if (width === undefined) {\n    context.font = currentFont;\n    width = context.measureText(text).width;\n    widthCache.set(key, width);\n  }\n\n  return width;\n}\n\nfunction fontSize(item) {\n  return item.fontSize != null ? +item.fontSize || 0 : 11;\n}\nfunction lineHeight(item) {\n  return item.lineHeight != null ? item.lineHeight : fontSize(item) + 2;\n}\n\nfunction lineArray(_) {\n  return isArray(_) ? _.length > 1 ? _ : _[0] : _;\n}\n\nfunction textLines(item) {\n  return lineArray(item.lineBreak && item.text && !isArray(item.text) ? item.text.split(item.lineBreak) : item.text);\n}\nfunction multiLineOffset(item) {\n  const tl = textLines(item);\n  return (isArray(tl) ? tl.length - 1 : 0) * lineHeight(item);\n}\nfunction textValue(item, line) {\n  const text = line == null ? '' : (line + '').trim();\n  return item.limit > 0 && text.length ? truncate(item, text) : text;\n}\n\nfunction widthGetter(item) {\n  if (textMetrics.width === measureWidth) {\n    // we are using canvas\n    const currentFont = font(item);\n    return text => _measureWidth(text, currentFont);\n  } else {\n    // we are relying on estimates\n    const currentFontHeight = fontSize(item);\n    return text => _estimateWidth(text, currentFontHeight);\n  }\n}\n\nfunction truncate(item, text) {\n  var limit = +item.limit,\n      width = widthGetter(item);\n  if (width(text) < limit) return text;\n  var ellipsis = item.ellipsis || '\\u2026',\n      rtl = item.dir === 'rtl',\n      lo = 0,\n      hi = text.length,\n      mid;\n  limit -= width(ellipsis);\n\n  if (rtl) {\n    while (lo < hi) {\n      mid = lo + hi >>> 1;\n      if (width(text.slice(mid)) > limit) lo = mid + 1;else hi = mid;\n    }\n\n    return ellipsis + text.slice(lo);\n  } else {\n    while (lo < hi) {\n      mid = 1 + (lo + hi >>> 1);\n      if (width(text.slice(0, mid)) < limit) lo = mid;else hi = mid - 1;\n    }\n\n    return text.slice(0, lo) + ellipsis;\n  }\n}\n\nfunction fontFamily(item, quote) {\n  var font = item.font;\n  return (quote && font ? String(font).replace(/\"/g, '\\'') : font) || 'sans-serif';\n}\nfunction font(item, quote) {\n  return '' + (item.fontStyle ? item.fontStyle + ' ' : '') + (item.fontVariant ? item.fontVariant + ' ' : '') + (item.fontWeight ? item.fontWeight + ' ' : '') + fontSize(item) + 'px ' + fontFamily(item, quote);\n}\nfunction offset(item) {\n  // perform our own font baseline calculation\n  // why? not all browsers support SVG 1.1 'alignment-baseline' :(\n  // this also ensures consistent layout across renderers\n  var baseline = item.baseline,\n      h = fontSize(item);\n  return Math.round(baseline === 'top' ? 0.79 * h : baseline === 'middle' ? 0.30 * h : baseline === 'bottom' ? -0.21 * h : baseline === 'line-top' ? 0.29 * h + 0.5 * lineHeight(item) : baseline === 'line-bottom' ? 0.29 * h - 0.5 * lineHeight(item) : 0);\n}\n\nconst textAlign = {\n  'left': 'start',\n  'center': 'middle',\n  'right': 'end'\n};\nconst tempBounds = new Bounds();\n\nfunction anchorPoint(item) {\n  var x = item.x || 0,\n      y = item.y || 0,\n      r = item.radius || 0,\n      t;\n\n  if (r) {\n    t = (item.theta || 0) - HalfPi;\n    x += r * Math.cos(t);\n    y += r * Math.sin(t);\n  }\n\n  tempBounds.x1 = x;\n  tempBounds.y1 = y;\n  return tempBounds;\n}\n\nfunction attr(emit, item) {\n  var dx = item.dx || 0,\n      dy = (item.dy || 0) + offset(item),\n      p = anchorPoint(item),\n      x = p.x1,\n      y = p.y1,\n      a = item.angle || 0,\n      t;\n  emit('text-anchor', textAlign[item.align] || 'start');\n\n  if (a) {\n    t = translate(x, y) + ' ' + rotate(a);\n    if (dx || dy) t += ' ' + translate(dx, dy);\n  } else {\n    t = translate(x + dx, y + dy);\n  }\n\n  emit('transform', t);\n}\n\nfunction bound(bounds, item, mode) {\n  var h = textMetrics.height(item),\n      a = item.align,\n      p = anchorPoint(item),\n      x = p.x1,\n      y = p.y1,\n      dx = item.dx || 0,\n      dy = (item.dy || 0) + offset(item) - Math.round(0.8 * h),\n      // use 4/5 offset\n  tl = textLines(item),\n      w; // get dimensions\n\n  if (isArray(tl)) {\n    // multi-line text\n    h += lineHeight(item) * (tl.length - 1);\n    w = tl.reduce((w, t) => Math.max(w, textMetrics.width(item, t)), 0);\n  } else {\n    // single-line text\n    w = textMetrics.width(item, tl);\n  } // horizontal alignment\n\n\n  if (a === 'center') {\n    dx -= w / 2;\n  } else if (a === 'right') {\n    dx -= w;\n  } else ;\n\n  bounds.set(dx += x, dy += y, dx + w, dy + h);\n\n  if (item.angle && !mode) {\n    bounds.rotate(item.angle * DegToRad, x, y);\n  } else if (mode === 2) {\n    return bounds.rotatedPoints(item.angle * DegToRad, x, y);\n  }\n\n  return bounds;\n}\n\nfunction draw(context, scene, bounds) {\n  visit(scene, item => {\n    var opacity = item.opacity == null ? 1 : item.opacity,\n        p,\n        x,\n        y,\n        i,\n        lh,\n        tl,\n        str;\n    if (bounds && !bounds.intersects(item.bounds) || // bounds check\n    opacity === 0 || item.fontSize <= 0 || item.text == null || item.text.length === 0) return;\n    context.font = font(item);\n    context.textAlign = item.align || 'left';\n    p = anchorPoint(item);\n    x = p.x1, y = p.y1;\n\n    if (item.angle) {\n      context.save();\n      context.translate(x, y);\n      context.rotate(item.angle * DegToRad);\n      x = y = 0; // reset x, y\n    }\n\n    x += item.dx || 0;\n    y += (item.dy || 0) + offset(item);\n    tl = textLines(item);\n    blend(context, item);\n\n    if (isArray(tl)) {\n      lh = lineHeight(item);\n\n      for (i = 0; i < tl.length; ++i) {\n        str = textValue(item, tl[i]);\n\n        if (item.fill && fill(context, item, opacity)) {\n          context.fillText(str, x, y);\n        }\n\n        if (item.stroke && stroke(context, item, opacity)) {\n          context.strokeText(str, x, y);\n        }\n\n        y += lh;\n      }\n    } else {\n      str = textValue(item, tl);\n\n      if (item.fill && fill(context, item, opacity)) {\n        context.fillText(str, x, y);\n      }\n\n      if (item.stroke && stroke(context, item, opacity)) {\n        context.strokeText(str, x, y);\n      }\n    }\n\n    if (item.angle) context.restore();\n  });\n}\n\nfunction hit(context, item, x, y, gx, gy) {\n  if (item.fontSize <= 0) return false;\n  if (!item.angle) return true; // bounds sufficient if no rotation\n  // project point into space of unrotated bounds\n\n  var p = anchorPoint(item),\n      ax = p.x1,\n      ay = p.y1,\n      b = bound(tempBounds, item, 1),\n      a = -item.angle * DegToRad,\n      cos = Math.cos(a),\n      sin = Math.sin(a),\n      px = cos * gx - sin * gy + (ax - cos * ax + sin * ay),\n      py = sin * gx + cos * gy + (ay - sin * ax - cos * ay);\n  return b.contains(px, py);\n}\n\nfunction intersectText(item, box) {\n  const p = bound(tempBounds, item, 2);\n  return intersectBoxLine(box, p[0], p[1], p[2], p[3]) || intersectBoxLine(box, p[0], p[1], p[4], p[5]) || intersectBoxLine(box, p[4], p[5], p[6], p[7]) || intersectBoxLine(box, p[2], p[3], p[6], p[7]);\n}\n\nvar text = {\n  type: 'text',\n  tag: 'text',\n  nested: false,\n  attr: attr,\n  bound: bound,\n  draw: draw,\n  pick: pick$1(hit),\n  isect: intersectText\n};\n\nvar trail = markMultiItemPath('trail', trail$1, pickTrail);\n\nvar Marks = {\n  arc: arc,\n  area: area,\n  group: group,\n  image: image,\n  line: line,\n  path: path$2,\n  rect: rect,\n  rule: rule,\n  shape: shape,\n  symbol: symbol,\n  text: text,\n  trail: trail\n};\n\nfunction boundItem (item, func, opt) {\n  var type = Marks[item.mark.marktype],\n      bound = func || type.bound;\n  if (type.nested) item = item.mark;\n  return bound(item.bounds || (item.bounds = new Bounds()), item, opt);\n}\n\nvar DUMMY = {\n  mark: null\n};\nfunction boundMark (mark, bounds, opt) {\n  var type = Marks[mark.marktype],\n      bound = type.bound,\n      items = mark.items,\n      hasItems = items && items.length,\n      i,\n      n,\n      item,\n      b;\n\n  if (type.nested) {\n    if (hasItems) {\n      item = items[0];\n    } else {\n      // no items, fake it\n      DUMMY.mark = mark;\n      item = DUMMY;\n    }\n\n    b = boundItem(item, bound, opt);\n    bounds = bounds && bounds.union(b) || b;\n    return bounds;\n  }\n\n  bounds = bounds || mark.bounds && mark.bounds.clear() || new Bounds();\n\n  if (hasItems) {\n    for (i = 0, n = items.length; i < n; ++i) {\n      bounds.union(boundItem(items[i], bound, opt));\n    }\n  }\n\n  return mark.bounds = bounds;\n}\n\nconst keys = ['marktype', 'name', 'role', 'interactive', 'clip', 'items', 'zindex', 'x', 'y', 'width', 'height', 'align', 'baseline', // layout\n'fill', 'fillOpacity', 'opacity', 'blend', // fill\n'stroke', 'strokeOpacity', 'strokeWidth', 'strokeCap', // stroke\n'strokeDash', 'strokeDashOffset', // stroke dash\n'strokeForeground', 'strokeOffset', // group\n'startAngle', 'endAngle', 'innerRadius', 'outerRadius', // arc\n'cornerRadius', 'padAngle', // arc, rect\n'cornerRadiusTopLeft', 'cornerRadiusTopRight', // rect, group\n'cornerRadiusBottomLeft', 'cornerRadiusBottomRight', 'interpolate', 'tension', 'orient', 'defined', // area, line\n'url', 'aspect', 'smooth', // image\n'path', 'scaleX', 'scaleY', // path\n'x2', 'y2', // rule\n'size', 'shape', // symbol\n'text', 'angle', 'theta', 'radius', 'dir', 'dx', 'dy', // text\n'ellipsis', 'limit', 'lineBreak', 'lineHeight', 'font', 'fontSize', 'fontWeight', 'fontStyle', 'fontVariant', // font\n'description', 'aria', 'ariaRole', 'ariaRoleDescription' // aria\n];\nfunction sceneToJSON(scene, indent) {\n  return JSON.stringify(scene, keys, indent);\n}\nfunction sceneFromJSON(json) {\n  const scene = typeof json === 'string' ? JSON.parse(json) : json;\n  return initialize(scene);\n}\n\nfunction initialize(scene) {\n  var type = scene.marktype,\n      items = scene.items,\n      parent,\n      i,\n      n;\n\n  if (items) {\n    for (i = 0, n = items.length; i < n; ++i) {\n      parent = type ? 'mark' : 'group';\n      items[i][parent] = scene;\n      if (items[i].zindex) items[i][parent].zdirty = true;\n      if ('group' === (type || parent)) initialize(items[i]);\n    }\n  }\n\n  if (type) boundMark(scene);\n  return scene;\n}\n\nfunction Scenegraph(scene) {\n  if (arguments.length) {\n    this.root = sceneFromJSON(scene);\n  } else {\n    this.root = createMark({\n      marktype: 'group',\n      name: 'root',\n      role: 'frame'\n    });\n    this.root.items = [new GroupItem(this.root)];\n  }\n}\nScenegraph.prototype = {\n  toJSON(indent) {\n    return sceneToJSON(this.root, indent || 0);\n  },\n\n  mark(markdef, group, index) {\n    group = group || this.root.items[0];\n    const mark = createMark(markdef, group);\n    group.items[index] = mark;\n    if (mark.zindex) mark.group.zdirty = true;\n    return mark;\n  }\n\n};\n\nfunction createMark(def, group) {\n  const mark = {\n    bounds: new Bounds(),\n    clip: !!def.clip,\n    group: group,\n    interactive: def.interactive === false ? false : true,\n    items: [],\n    marktype: def.marktype,\n    name: def.name || undefined,\n    role: def.role || undefined,\n    zindex: def.zindex || 0\n  }; // add accessibility properties if defined\n\n  if (def.aria != null) {\n    mark.aria = def.aria;\n  }\n\n  if (def.description) {\n    mark.description = def.description;\n  }\n\n  return mark;\n}\n\n// create a new DOM element\nfunction domCreate(doc, tag, ns) {\n  if (!doc && typeof document !== 'undefined' && document.createElement) {\n    doc = document;\n  }\n\n  return doc ? ns ? doc.createElementNS(ns, tag) : doc.createElement(tag) : null;\n} // find first child element with matching tag\n\nfunction domFind(el, tag) {\n  tag = tag.toLowerCase();\n  var nodes = el.childNodes,\n      i = 0,\n      n = nodes.length;\n\n  for (; i < n; ++i) if (nodes[i].tagName.toLowerCase() === tag) {\n    return nodes[i];\n  }\n} // retrieve child element at given index\n// create & insert if doesn't exist or if tags do not match\n\nfunction domChild(el, index, tag, ns) {\n  var a = el.childNodes[index],\n      b;\n\n  if (!a || a.tagName.toLowerCase() !== tag.toLowerCase()) {\n    b = a || null;\n    a = domCreate(el.ownerDocument, tag, ns);\n    el.insertBefore(a, b);\n  }\n\n  return a;\n} // remove all child elements at or above the given index\n\nfunction domClear(el, index) {\n  var nodes = el.childNodes,\n      curr = nodes.length;\n\n  while (curr > index) el.removeChild(nodes[--curr]);\n\n  return el;\n} // generate css class name for mark\n\nfunction cssClass(mark) {\n  return 'mark-' + mark.marktype + (mark.role ? ' role-' + mark.role : '') + (mark.name ? ' ' + mark.name : '');\n}\n\nfunction point (event, el) {\n  const rect = el.getBoundingClientRect();\n  return [event.clientX - rect.left - (el.clientLeft || 0), event.clientY - rect.top - (el.clientTop || 0)];\n}\n\nfunction resolveItem (item, event, el, origin) {\n  var mark = item && item.mark,\n      mdef,\n      p;\n\n  if (mark && (mdef = Marks[mark.marktype]).tip) {\n    p = point(event, el);\n    p[0] -= origin[0];\n    p[1] -= origin[1];\n\n    while (item = item.mark.group) {\n      p[0] -= item.x || 0;\n      p[1] -= item.y || 0;\n    }\n\n    item = mdef.tip(mark.items, p);\n  }\n\n  return item;\n}\n\n/**\n * Create a new Handler instance.\n * @param {object} [customLoader] - Optional loader instance for\n *   href URL sanitization. If not specified, a standard loader\n *   instance will be generated.\n * @param {function} [customTooltip] - Optional tooltip handler\n *   function for custom tooltip display.\n * @constructor\n */\n\nfunction Handler(customLoader, customTooltip) {\n  this._active = null;\n  this._handlers = {};\n  this._loader = customLoader || loader();\n  this._tooltip = customTooltip || defaultTooltip;\n} // The default tooltip display handler.\n// Sets the HTML title attribute on the visualization container.\n\nfunction defaultTooltip(handler, event, item, value) {\n  handler.element().setAttribute('title', value || '');\n}\n\nHandler.prototype = {\n  /**\n   * Initialize a new Handler instance.\n   * @param {DOMElement} el - The containing DOM element for the display.\n   * @param {Array<number>} origin - The origin of the display, in pixels.\n   *   The coordinate system will be translated to this point.\n   * @param {object} [obj] - Optional context object that should serve as\n   *   the \"this\" context for event callbacks.\n   * @return {Handler} - This handler instance.\n   */\n  initialize(el, origin, obj) {\n    this._el = el;\n    this._obj = obj || null;\n    return this.origin(origin);\n  },\n\n  /**\n   * Returns the parent container element for a visualization.\n   * @return {DOMElement} - The containing DOM element.\n   */\n  element() {\n    return this._el;\n  },\n\n  /**\n   * Returns the scene element (e.g., canvas or SVG) of the visualization\n   * Subclasses must override if the first child is not the scene element.\n   * @return {DOMElement} - The scene (e.g., canvas or SVG) element.\n   */\n  canvas() {\n    return this._el && this._el.firstChild;\n  },\n\n  /**\n   * Get / set the origin coordinates of the visualization.\n   */\n  origin(origin) {\n    if (arguments.length) {\n      this._origin = origin || [0, 0];\n      return this;\n    } else {\n      return this._origin.slice();\n    }\n  },\n\n  /**\n   * Get / set the scenegraph root.\n   */\n  scene(scene) {\n    if (!arguments.length) return this._scene;\n    this._scene = scene;\n    return this;\n  },\n\n  /**\n   * Add an event handler. Subclasses should override this method.\n   */\n  on()\n  /*type, handler*/\n  {},\n\n  /**\n   * Remove an event handler. Subclasses should override this method.\n   */\n  off()\n  /*type, handler*/\n  {},\n\n  /**\n   * Utility method for finding the array index of an event handler.\n   * @param {Array} h - An array of registered event handlers.\n   * @param {string} type - The event type.\n   * @param {function} handler - The event handler instance to find.\n   * @return {number} - The handler's array index or -1 if not registered.\n   */\n  _handlerIndex(h, type, handler) {\n    for (let i = h ? h.length : 0; --i >= 0;) {\n      if (h[i].type === type && (!handler || h[i].handler === handler)) {\n        return i;\n      }\n    }\n\n    return -1;\n  },\n\n  /**\n   * Returns an array with registered event handlers.\n   * @param {string} [type] - The event type to query. Any annotations\n   *   are ignored; for example, for the argument \"click.foo\", \".foo\" will\n   *   be ignored and the method returns all \"click\" handlers. If type is\n   *   null or unspecified, this method returns handlers for all types.\n   * @return {Array} - A new array containing all registered event handlers.\n   */\n  handlers(type) {\n    const h = this._handlers,\n          a = [];\n\n    if (type) {\n      a.push(...h[this.eventName(type)]);\n    } else {\n      for (const k in h) {\n        a.push(...h[k]);\n      }\n    }\n\n    return a;\n  },\n\n  /**\n   * Parses an event name string to return the specific event type.\n   * For example, given \"click.foo\" returns \"click\"\n   * @param {string} name - The input event type string.\n   * @return {string} - A string with the event type only.\n   */\n  eventName(name) {\n    const i = name.indexOf('.');\n    return i < 0 ? name : name.slice(0, i);\n  },\n\n  /**\n   * Handle hyperlink navigation in response to an item.href value.\n   * @param {Event} event - The event triggering hyperlink navigation.\n   * @param {Item} item - The scenegraph item.\n   * @param {string} href - The URL to navigate to.\n   */\n  handleHref(event, item, href) {\n    this._loader.sanitize(href, {\n      context: 'href'\n    }).then(opt => {\n      const e = new MouseEvent(event.type, event),\n            a = domCreate(null, 'a');\n\n      for (const name in opt) a.setAttribute(name, opt[name]);\n\n      a.dispatchEvent(e);\n    }).catch(() => {\n      /* do nothing */\n    });\n  },\n\n  /**\n   * Handle tooltip display in response to an item.tooltip value.\n   * @param {Event} event - The event triggering tooltip display.\n   * @param {Item} item - The scenegraph item.\n   * @param {boolean} show - A boolean flag indicating whether\n   *   to show or hide a tooltip for the given item.\n   */\n  handleTooltip(event, item, show) {\n    if (item && item.tooltip != null) {\n      item = resolveItem(item, event, this.canvas(), this._origin);\n      const value = show && item && item.tooltip || null;\n\n      this._tooltip.call(this._obj, this, event, item, value);\n    }\n  },\n\n  /**\n   * Returns the size of a scenegraph item and its position relative\n   * to the viewport.\n   * @param {Item} item - The scenegraph item.\n   * @return {object} - A bounding box object (compatible with the\n   *   DOMRect type) consisting of x, y, width, heigh, top, left,\n   *   right, and bottom properties.\n   */\n  getItemBoundingClientRect(item) {\n    const el = this.canvas();\n    if (!el) return;\n    const rect = el.getBoundingClientRect(),\n          origin = this._origin,\n          bounds = item.bounds,\n          width = bounds.width(),\n          height = bounds.height();\n    let x = bounds.x1 + origin[0] + rect.left,\n        y = bounds.y1 + origin[1] + rect.top; // translate coordinate for each parent group\n\n    while (item.mark && (item = item.mark.group)) {\n      x += item.x || 0;\n      y += item.y || 0;\n    } // return DOMRect-compatible bounding box\n\n\n    return {\n      x,\n      y,\n      width,\n      height,\n      left: x,\n      top: y,\n      right: x + width,\n      bottom: y + height\n    };\n  }\n\n};\n\n/**\n * Create a new Renderer instance.\n * @param {object} [loader] - Optional loader instance for\n *   image and href URL sanitization. If not specified, a\n *   standard loader instance will be generated.\n * @constructor\n */\n\nfunction Renderer(loader) {\n  this._el = null;\n  this._bgcolor = null;\n  this._loader = new ResourceLoader(loader);\n}\nRenderer.prototype = {\n  /**\n   * Initialize a new Renderer instance.\n   * @param {DOMElement} el - The containing DOM element for the display.\n   * @param {number} width - The coordinate width of the display, in pixels.\n   * @param {number} height - The coordinate height of the display, in pixels.\n   * @param {Array<number>} origin - The origin of the display, in pixels.\n   *   The coordinate system will be translated to this point.\n   * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply\n   *   the width and height to determine the final pixel size.\n   * @return {Renderer} - This renderer instance.\n   */\n  initialize(el, width, height, origin, scaleFactor) {\n    this._el = el;\n    return this.resize(width, height, origin, scaleFactor);\n  },\n\n  /**\n   * Returns the parent container element for a visualization.\n   * @return {DOMElement} - The containing DOM element.\n   */\n  element() {\n    return this._el;\n  },\n\n  /**\n   * Returns the scene element (e.g., canvas or SVG) of the visualization\n   * Subclasses must override if the first child is not the scene element.\n   * @return {DOMElement} - The scene (e.g., canvas or SVG) element.\n   */\n  canvas() {\n    return this._el && this._el.firstChild;\n  },\n\n  /**\n   * Get / set the background color.\n   */\n  background(bgcolor) {\n    if (arguments.length === 0) return this._bgcolor;\n    this._bgcolor = bgcolor;\n    return this;\n  },\n\n  /**\n   * Resize the display.\n   * @param {number} width - The new coordinate width of the display, in pixels.\n   * @param {number} height - The new coordinate height of the display, in pixels.\n   * @param {Array<number>} origin - The new origin of the display, in pixels.\n   *   The coordinate system will be translated to this point.\n   * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply\n   *   the width and height to determine the final pixel size.\n   * @return {Renderer} - This renderer instance;\n   */\n  resize(width, height, origin, scaleFactor) {\n    this._width = width;\n    this._height = height;\n    this._origin = origin || [0, 0];\n    this._scale = scaleFactor || 1;\n    return this;\n  },\n\n  /**\n   * Report a dirty item whose bounds should be redrawn.\n   * This base class method does nothing. Subclasses that perform\n   * incremental should implement this method.\n   * @param {Item} item - The dirty item whose bounds should be redrawn.\n   */\n  dirty()\n  /*item*/\n  {},\n\n  /**\n   * Render an input scenegraph, potentially with a set of dirty items.\n   * This method will perform an immediate rendering with available resources.\n   * The renderer may also need to perform image loading to perform a complete\n   * render. This process can lead to asynchronous re-rendering of the scene\n   * after this method returns. To receive notification when rendering is\n   * complete, use the renderAsync method instead.\n   * @param {object} scene - The root mark of a scenegraph to render.\n   * @return {Renderer} - This renderer instance.\n   */\n  render(scene) {\n    const r = this; // bind arguments into a render call, and cache it\n    // this function may be subsequently called for async redraw\n\n    r._call = function () {\n      r._render(scene);\n    }; // invoke the renderer\n\n\n    r._call(); // clear the cached call for garbage collection\n    // async redraws will stash their own copy\n\n\n    r._call = null;\n    return r;\n  },\n\n  /**\n   * Internal rendering method. Renderer subclasses should override this\n   * method to actually perform rendering.\n   * @param {object} scene - The root mark of a scenegraph to render.\n   */\n  _render()\n  /*scene*/\n  {// subclasses to override\n  },\n\n  /**\n   * Asynchronous rendering method. Similar to render, but returns a Promise\n   * that resolves when all rendering is completed. Sometimes a renderer must\n   * perform image loading to get a complete rendering. The returned\n   * Promise will not resolve until this process completes.\n   * @param {object} scene - The root mark of a scenegraph to render.\n   * @return {Promise} - A Promise that resolves when rendering is complete.\n   */\n  renderAsync(scene) {\n    const r = this.render(scene);\n    return this._ready ? this._ready.then(() => r) : Promise.resolve(r);\n  },\n\n  /**\n   * Internal method for asynchronous resource loading.\n   * Proxies method calls to the ImageLoader, and tracks loading\n   * progress to invoke a re-render once complete.\n   * @param {string} method - The method name to invoke on the ImageLoader.\n   * @param {string} uri - The URI for the requested resource.\n   * @return {Promise} - A Promise that resolves to the requested resource.\n   */\n  _load(method, uri) {\n    var r = this,\n        p = r._loader[method](uri);\n\n    if (!r._ready) {\n      // re-render the scene when loading completes\n      const call = r._call;\n      r._ready = r._loader.ready().then(redraw => {\n        if (redraw) call();\n        r._ready = null;\n      });\n    }\n\n    return p;\n  },\n\n  /**\n   * Sanitize a URL to include as a hyperlink in the rendered scene.\n   * This method proxies a call to ImageLoader.sanitizeURL, but also tracks\n   * image loading progress and invokes a re-render once complete.\n   * @param {string} uri - The URI string to sanitize.\n   * @return {Promise} - A Promise that resolves to the sanitized URL.\n   */\n  sanitizeURL(uri) {\n    return this._load('sanitizeURL', uri);\n  },\n\n  /**\n   * Requests an image to include in the rendered scene.\n   * This method proxies a call to ImageLoader.loadImage, but also tracks\n   * image loading progress and invokes a re-render once complete.\n   * @param {string} uri - The URI string of the image.\n   * @return {Promise} - A Promise that resolves to the loaded Image.\n   */\n  loadImage(uri) {\n    return this._load('loadImage', uri);\n  }\n\n};\n\nconst KeyDownEvent = 'keydown';\nconst KeyPressEvent = 'keypress';\nconst KeyUpEvent = 'keyup';\nconst DragEnterEvent = 'dragenter';\nconst DragLeaveEvent = 'dragleave';\nconst DragOverEvent = 'dragover';\nconst MouseDownEvent = 'mousedown';\nconst MouseUpEvent = 'mouseup';\nconst MouseMoveEvent = 'mousemove';\nconst MouseOutEvent = 'mouseout';\nconst MouseOverEvent = 'mouseover';\nconst ClickEvent = 'click';\nconst DoubleClickEvent = 'dblclick';\nconst WheelEvent = 'wheel';\nconst MouseWheelEvent = 'mousewheel';\nconst TouchStartEvent = 'touchstart';\nconst TouchMoveEvent = 'touchmove';\nconst TouchEndEvent = 'touchend';\nconst Events = [KeyDownEvent, KeyPressEvent, KeyUpEvent, DragEnterEvent, DragLeaveEvent, DragOverEvent, MouseDownEvent, MouseUpEvent, MouseMoveEvent, MouseOutEvent, MouseOverEvent, ClickEvent, DoubleClickEvent, WheelEvent, MouseWheelEvent, TouchStartEvent, TouchMoveEvent, TouchEndEvent];\nconst TooltipShowEvent = MouseMoveEvent;\nconst TooltipHideEvent = MouseOutEvent;\nconst HrefEvent = ClickEvent;\n\nfunction CanvasHandler(loader, tooltip) {\n  Handler.call(this, loader, tooltip);\n  this._down = null;\n  this._touch = null;\n  this._first = true;\n  this._events = {};\n}\n\nconst eventBundle = type => type === TouchStartEvent || type === TouchMoveEvent || type === TouchEndEvent ? [TouchStartEvent, TouchMoveEvent, TouchEndEvent] : [type]; // lazily add listeners to the canvas as needed\n\n\nfunction eventListenerCheck(handler, type) {\n  eventBundle(type).forEach(_ => addEventListener(handler, _));\n}\n\nfunction addEventListener(handler, type) {\n  const canvas = handler.canvas();\n\n  if (canvas && !handler._events[type]) {\n    handler._events[type] = 1;\n    canvas.addEventListener(type, handler[type] ? evt => handler[type](evt) : evt => handler.fire(type, evt));\n  }\n}\n\nfunction move(moveEvent, overEvent, outEvent) {\n  return function (evt) {\n    const a = this._active,\n          p = this.pickEvent(evt);\n\n    if (p === a) {\n      // active item and picked item are the same\n      this.fire(moveEvent, evt); // fire move\n    } else {\n      // active item and picked item are different\n      if (!a || !a.exit) {\n        // fire out for prior active item\n        // suppress if active item was removed from scene\n        this.fire(outEvent, evt);\n      }\n\n      this._active = p; // set new active item\n\n      this.fire(overEvent, evt); // fire over for new active item\n\n      this.fire(moveEvent, evt); // fire move for new active item\n    }\n  };\n}\n\nfunction inactive(type) {\n  return function (evt) {\n    this.fire(type, evt);\n    this._active = null;\n  };\n}\n\ninherits(CanvasHandler, Handler, {\n  initialize(el, origin, obj) {\n    this._canvas = el && domFind(el, 'canvas'); // add minimal events required for proper state management\n\n    [ClickEvent, MouseDownEvent, MouseMoveEvent, MouseOutEvent, DragLeaveEvent].forEach(type => eventListenerCheck(this, type));\n    return Handler.prototype.initialize.call(this, el, origin, obj);\n  },\n\n  // return the backing canvas instance\n  canvas() {\n    return this._canvas;\n  },\n\n  // retrieve the current canvas context\n  context() {\n    return this._canvas.getContext('2d');\n  },\n\n  // supported events\n  events: Events,\n\n  // to keep old versions of firefox happy\n  DOMMouseScroll(evt) {\n    this.fire(MouseWheelEvent, evt);\n  },\n\n  mousemove: move(MouseMoveEvent, MouseOverEvent, MouseOutEvent),\n  dragover: move(DragOverEvent, DragEnterEvent, DragLeaveEvent),\n  mouseout: inactive(MouseOutEvent),\n  dragleave: inactive(DragLeaveEvent),\n\n  mousedown(evt) {\n    this._down = this._active;\n    this.fire(MouseDownEvent, evt);\n  },\n\n  click(evt) {\n    if (this._down === this._active) {\n      this.fire(ClickEvent, evt);\n      this._down = null;\n    }\n  },\n\n  touchstart(evt) {\n    this._touch = this.pickEvent(evt.changedTouches[0]);\n\n    if (this._first) {\n      this._active = this._touch;\n      this._first = false;\n    }\n\n    this.fire(TouchStartEvent, evt, true);\n  },\n\n  touchmove(evt) {\n    this.fire(TouchMoveEvent, evt, true);\n  },\n\n  touchend(evt) {\n    this.fire(TouchEndEvent, evt, true);\n    this._touch = null;\n  },\n\n  // fire an event\n  fire(type, evt, touch) {\n    const a = touch ? this._touch : this._active,\n          h = this._handlers[type]; // set event type relative to scenegraph items\n\n    evt.vegaType = type; // handle hyperlinks and tooltips first\n\n    if (type === HrefEvent && a && a.href) {\n      this.handleHref(evt, a, a.href);\n    } else if (type === TooltipShowEvent || type === TooltipHideEvent) {\n      this.handleTooltip(evt, a, type !== TooltipHideEvent);\n    } // invoke all registered handlers\n\n\n    if (h) {\n      for (let i = 0, len = h.length; i < len; ++i) {\n        h[i].handler.call(this._obj, evt, a);\n      }\n    }\n  },\n\n  // add an event handler\n  on(type, handler) {\n    const name = this.eventName(type),\n          h = this._handlers,\n          i = this._handlerIndex(h[name], type, handler);\n\n    if (i < 0) {\n      eventListenerCheck(this, type);\n      (h[name] || (h[name] = [])).push({\n        type: type,\n        handler: handler\n      });\n    }\n\n    return this;\n  },\n\n  // remove an event handler\n  off(type, handler) {\n    const name = this.eventName(type),\n          h = this._handlers[name],\n          i = this._handlerIndex(h, type, handler);\n\n    if (i >= 0) {\n      h.splice(i, 1);\n    }\n\n    return this;\n  },\n\n  pickEvent(evt) {\n    const p = point(evt, this._canvas),\n          o = this._origin;\n    return this.pick(this._scene, p[0], p[1], p[0] - o[0], p[1] - o[1]);\n  },\n\n  // find the scenegraph item at the current mouse position\n  // x, y -- the absolute x, y mouse coordinates on the canvas element\n  // gx, gy -- the relative coordinates within the current group\n  pick(scene, x, y, gx, gy) {\n    const g = this.context(),\n          mark = Marks[scene.marktype];\n    return mark.pick.call(this, g, scene, x, y, gx, gy);\n  }\n\n});\n\nfunction devicePixelRatio() {\n  return typeof window !== 'undefined' ? window.devicePixelRatio || 1 : 1;\n}\n\nvar pixelRatio = devicePixelRatio();\nfunction resize (canvas, width, height, origin, scaleFactor, opt) {\n  const inDOM = typeof HTMLElement !== 'undefined' && canvas instanceof HTMLElement && canvas.parentNode != null,\n        context = canvas.getContext('2d'),\n        ratio = inDOM ? pixelRatio : scaleFactor;\n  canvas.width = width * ratio;\n  canvas.height = height * ratio;\n\n  for (const key in opt) {\n    context[key] = opt[key];\n  }\n\n  if (inDOM && ratio !== 1) {\n    canvas.style.width = width + 'px';\n    canvas.style.height = height + 'px';\n  }\n\n  context.pixelRatio = ratio;\n  context.setTransform(ratio, 0, 0, ratio, ratio * origin[0], ratio * origin[1]);\n  return canvas;\n}\n\nfunction CanvasRenderer(loader) {\n  Renderer.call(this, loader);\n  this._options = {};\n  this._redraw = false;\n  this._dirty = new Bounds();\n  this._tempb = new Bounds();\n}\nconst base$1 = Renderer.prototype;\n\nconst viewBounds = (origin, width, height) => new Bounds().set(0, 0, width, height).translate(-origin[0], -origin[1]);\n\nfunction clipToBounds(g, b, origin) {\n  // expand bounds by 1 pixel, then round to pixel boundaries\n  b.expand(1).round(); // align to base pixel grid in case of non-integer scaling (#2425)\n\n  if (g.pixelRatio % 1) {\n    b.scale(g.pixelRatio).round().scale(1 / g.pixelRatio);\n  } // to avoid artifacts translate if origin has fractional pixels\n\n\n  b.translate(-(origin[0] % 1), -(origin[1] % 1)); // set clip path\n\n  g.beginPath();\n  g.rect(b.x1, b.y1, b.width(), b.height());\n  g.clip();\n  return b;\n}\n\ninherits(CanvasRenderer, Renderer, {\n  initialize(el, width, height, origin, scaleFactor, options) {\n    this._options = options || {};\n    this._canvas = this._options.externalContext ? null : canvas(1, 1, this._options.type); // instantiate a small canvas\n\n    if (el && this._canvas) {\n      domClear(el, 0).appendChild(this._canvas);\n\n      this._canvas.setAttribute('class', 'marks');\n    } // this method will invoke resize to size the canvas appropriately\n\n\n    return base$1.initialize.call(this, el, width, height, origin, scaleFactor);\n  },\n\n  resize(width, height, origin, scaleFactor) {\n    base$1.resize.call(this, width, height, origin, scaleFactor);\n\n    if (this._canvas) {\n      // configure canvas size and transform\n      resize(this._canvas, this._width, this._height, this._origin, this._scale, this._options.context);\n    } else {\n      // external context needs to be scaled and positioned to origin\n      const ctx = this._options.externalContext;\n      if (!ctx) error('CanvasRenderer is missing a valid canvas or context');\n      ctx.scale(this._scale, this._scale);\n      ctx.translate(this._origin[0], this._origin[1]);\n    }\n\n    this._redraw = true;\n    return this;\n  },\n\n  canvas() {\n    return this._canvas;\n  },\n\n  context() {\n    return this._options.externalContext || (this._canvas ? this._canvas.getContext('2d') : null);\n  },\n\n  dirty(item) {\n    const b = this._tempb.clear().union(item.bounds);\n\n    let g = item.mark.group;\n\n    while (g) {\n      b.translate(g.x || 0, g.y || 0);\n      g = g.mark.group;\n    }\n\n    this._dirty.union(b);\n  },\n\n  _render(scene) {\n    const g = this.context(),\n          o = this._origin,\n          w = this._width,\n          h = this._height,\n          db = this._dirty,\n          vb = viewBounds(o, w, h); // setup\n\n    g.save();\n    const b = this._redraw || db.empty() ? (this._redraw = false, vb.expand(1)) : clipToBounds(g, vb.intersect(db), o);\n    this.clear(-o[0], -o[1], w, h); // render\n\n    this.draw(g, scene, b); // takedown\n\n    g.restore();\n    db.clear();\n    return this;\n  },\n\n  draw(ctx, scene, bounds) {\n    const mark = Marks[scene.marktype];\n    if (scene.clip) clip(ctx, scene);\n    mark.draw.call(this, ctx, scene, bounds);\n    if (scene.clip) ctx.restore();\n  },\n\n  clear(x, y, w, h) {\n    const opt = this._options,\n          g = this.context();\n\n    if (opt.type !== 'pdf' && !opt.externalContext) {\n      // calling clear rect voids vector output in pdf mode\n      // and could remove external context content (#2615)\n      g.clearRect(x, y, w, h);\n    }\n\n    if (this._bgcolor != null) {\n      g.fillStyle = this._bgcolor;\n      g.fillRect(x, y, w, h);\n    }\n  }\n\n});\n\nfunction SVGHandler(loader, tooltip) {\n  Handler.call(this, loader, tooltip);\n  const h = this;\n  h._hrefHandler = listener(h, (evt, item) => {\n    if (item && item.href) h.handleHref(evt, item, item.href);\n  });\n  h._tooltipHandler = listener(h, (evt, item) => {\n    h.handleTooltip(evt, item, evt.type !== TooltipHideEvent);\n  });\n} // wrap an event listener for the SVG DOM\n\nconst listener = (context, handler) => evt => {\n  let item = evt.target.__data__;\n  item = Array.isArray(item) ? item[0] : item;\n  evt.vegaType = evt.type;\n  handler.call(context._obj, evt, item);\n};\n\ninherits(SVGHandler, Handler, {\n  initialize(el, origin, obj) {\n    let svg = this._svg;\n\n    if (svg) {\n      svg.removeEventListener(HrefEvent, this._hrefHandler);\n      svg.removeEventListener(TooltipShowEvent, this._tooltipHandler);\n      svg.removeEventListener(TooltipHideEvent, this._tooltipHandler);\n    }\n\n    this._svg = svg = el && domFind(el, 'svg');\n\n    if (svg) {\n      svg.addEventListener(HrefEvent, this._hrefHandler);\n      svg.addEventListener(TooltipShowEvent, this._tooltipHandler);\n      svg.addEventListener(TooltipHideEvent, this._tooltipHandler);\n    }\n\n    return Handler.prototype.initialize.call(this, el, origin, obj);\n  },\n\n  canvas() {\n    return this._svg;\n  },\n\n  // add an event handler\n  on(type, handler) {\n    const name = this.eventName(type),\n          h = this._handlers,\n          i = this._handlerIndex(h[name], type, handler);\n\n    if (i < 0) {\n      const x = {\n        type,\n        handler,\n        listener: listener(this, handler)\n      };\n      (h[name] || (h[name] = [])).push(x);\n\n      if (this._svg) {\n        this._svg.addEventListener(name, x.listener);\n      }\n    }\n\n    return this;\n  },\n\n  // remove an event handler\n  off(type, handler) {\n    const name = this.eventName(type),\n          h = this._handlers[name],\n          i = this._handlerIndex(h, type, handler);\n\n    if (i >= 0) {\n      if (this._svg) {\n        this._svg.removeEventListener(name, h[i].listener);\n      }\n\n      h.splice(i, 1);\n    }\n\n    return this;\n  }\n\n});\n\nconst ARIA_HIDDEN = 'aria-hidden';\nconst ARIA_LABEL = 'aria-label';\nconst ARIA_ROLE = 'role';\nconst ARIA_ROLEDESCRIPTION = 'aria-roledescription';\nconst GRAPHICS_OBJECT = 'graphics-object';\nconst GRAPHICS_SYMBOL = 'graphics-symbol';\n\nconst bundle = (role, roledesc, label) => ({\n  [ARIA_ROLE]: role,\n  [ARIA_ROLEDESCRIPTION]: roledesc,\n  [ARIA_LABEL]: label || undefined\n}); // these roles are covered by related roles\n// we can ignore them, no need to generate attributes\n\n\nconst AriaIgnore = toSet(['axis-domain', 'axis-grid', 'axis-label', 'axis-tick', 'axis-title', 'legend-band', 'legend-entry', 'legend-gradient', 'legend-label', 'legend-title', 'legend-symbol', 'title']); // aria attribute generators for guide roles\n\nconst AriaGuides = {\n  'axis': {\n    desc: 'axis',\n    caption: axisCaption\n  },\n  'legend': {\n    desc: 'legend',\n    caption: legendCaption\n  },\n  'title-text': {\n    desc: 'title',\n    caption: item => `Title text '${titleCaption(item)}'`\n  },\n  'title-subtitle': {\n    desc: 'subtitle',\n    caption: item => `Subtitle text '${titleCaption(item)}'`\n  }\n}; // aria properties generated for mark item encoding channels\n\nconst AriaEncode = {\n  ariaRole: ARIA_ROLE,\n  ariaRoleDescription: ARIA_ROLEDESCRIPTION,\n  description: ARIA_LABEL\n};\nfunction ariaItemAttributes(emit, item) {\n  const hide = item.aria === false;\n  emit(ARIA_HIDDEN, hide || undefined);\n\n  if (hide || item.description == null) {\n    for (const prop in AriaEncode) {\n      emit(AriaEncode[prop], undefined);\n    }\n  } else {\n    const type = item.mark.marktype;\n    emit(ARIA_LABEL, item.description);\n    emit(ARIA_ROLE, item.ariaRole || (type === 'group' ? GRAPHICS_OBJECT : GRAPHICS_SYMBOL));\n    emit(ARIA_ROLEDESCRIPTION, item.ariaRoleDescription || `${type} mark`);\n  }\n}\nfunction ariaMarkAttributes(mark) {\n  return mark.aria === false ? {\n    [ARIA_HIDDEN]: true\n  } : AriaIgnore[mark.role] ? null : AriaGuides[mark.role] ? ariaGuide(mark, AriaGuides[mark.role]) : ariaMark(mark);\n}\n\nfunction ariaMark(mark) {\n  const type = mark.marktype;\n  const recurse = type === 'group' || type === 'text' || mark.items.some(_ => _.description != null && _.aria !== false);\n  return bundle(recurse ? GRAPHICS_OBJECT : GRAPHICS_SYMBOL, `${type} mark container`, mark.description);\n}\n\nfunction ariaGuide(mark, opt) {\n  try {\n    const item = mark.items[0],\n          caption = opt.caption || (() => '');\n\n    return bundle(opt.role || GRAPHICS_SYMBOL, opt.desc, item.description || caption(item));\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction titleCaption(item) {\n  return array(item.text).join(' ');\n}\n\nfunction axisCaption(item) {\n  const datum = item.datum,\n        orient = item.orient,\n        title = datum.title ? extractTitle(item) : null,\n        ctx = item.context,\n        scale = ctx.scales[datum.scale].value,\n        locale = ctx.dataflow.locale(),\n        type = scale.type,\n        xy = orient === 'left' || orient === 'right' ? 'Y' : 'X';\n  return `${xy}-axis` + (title ? ` titled '${title}'` : '') + ` for a ${isDiscrete(type) ? 'discrete' : type} scale` + ` with ${domainCaption(locale, scale, item)}`;\n}\n\nfunction legendCaption(item) {\n  const datum = item.datum,\n        title = datum.title ? extractTitle(item) : null,\n        type = `${datum.type || ''} legend`.trim(),\n        scales = datum.scales,\n        props = Object.keys(scales),\n        ctx = item.context,\n        scale = ctx.scales[scales[props[0]]].value,\n        locale = ctx.dataflow.locale();\n  return capitalize(type) + (title ? ` titled '${title}'` : '') + ` for ${channelCaption(props)}` + ` with ${domainCaption(locale, scale, item)}`;\n}\n\nfunction extractTitle(item) {\n  try {\n    return array(peek(item.items).items[0].text).join(' ');\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction channelCaption(props) {\n  props = props.map(p => p + (p === 'fill' || p === 'stroke' ? ' color' : ''));\n  return props.length < 2 ? props[0] : props.slice(0, -1).join(', ') + ' and ' + peek(props);\n}\n\nfunction capitalize(s) {\n  return s.length ? s[0].toUpperCase() + s.slice(1) : s;\n}\n\nconst innerText = val => (val + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n\nconst attrText = val => innerText(val).replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n\nfunction markup() {\n  let buf = '',\n      outer = '',\n      inner = '';\n\n  const stack = [],\n        clear = () => outer = inner = '',\n        push = tag => {\n    if (outer) {\n      buf += `${outer}>${inner}`;\n      clear();\n    }\n\n    stack.push(tag);\n  },\n        attr = (name, value) => {\n    if (value != null) outer += ` ${name}=\"${attrText(value)}\"`;\n    return m;\n  },\n        m = {\n    open(tag, ...attrs) {\n      push(tag);\n      outer = '<' + tag;\n\n      for (const set of attrs) {\n        for (const key in set) attr(key, set[key]);\n      }\n\n      return m;\n    },\n\n    close() {\n      const tag = stack.pop();\n\n      if (outer) {\n        buf += outer + (inner ? `>${inner}</${tag}>` : '/>');\n      } else {\n        buf += `</${tag}>`;\n      }\n\n      clear();\n      return m;\n    },\n\n    attr,\n    text: t => (inner += innerText(t), m),\n    toString: () => buf\n  };\n\n  return m;\n}\nconst serializeXML = node => _serialize(markup(), node) + '';\n\nfunction _serialize(m, node) {\n  m.open(node.tagName);\n\n  if (node.hasAttributes()) {\n    const attrs = node.attributes,\n          n = attrs.length;\n\n    for (let i = 0; i < n; ++i) {\n      m.attr(attrs[i].name, attrs[i].value);\n    }\n  }\n\n  if (node.hasChildNodes()) {\n    const children = node.childNodes,\n          n = children.length;\n\n    for (let i = 0; i < n; i++) {\n      const child = children[i];\n      child.nodeType === 3 // text node\n      ? m.text(child.nodeValue) : _serialize(m, child);\n    }\n  }\n\n  return m.close();\n}\n\nconst styles = {\n  fill: 'fill',\n  fillOpacity: 'fill-opacity',\n  stroke: 'stroke',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  strokeCap: 'stroke-linecap',\n  strokeJoin: 'stroke-linejoin',\n  strokeDash: 'stroke-dasharray',\n  strokeDashOffset: 'stroke-dashoffset',\n  strokeMiterLimit: 'stroke-miterlimit',\n  opacity: 'opacity',\n  blend: 'mix-blend-mode'\n}; // ensure miter limit default is consistent with canvas (#2498)\n\nconst rootAttributes = {\n  'fill': 'none',\n  'stroke-miterlimit': 10\n};\n\nconst RootIndex = 0,\n      xmlns = 'http://www.w3.org/2000/xmlns/',\n      svgns = metadata.xmlns;\nfunction SVGRenderer(loader) {\n  Renderer.call(this, loader);\n  this._dirtyID = 0;\n  this._dirty = [];\n  this._svg = null;\n  this._root = null;\n  this._defs = null;\n}\nconst base = Renderer.prototype;\ninherits(SVGRenderer, Renderer, {\n  /**\n   * Initialize a new SVGRenderer instance.\n   * @param {DOMElement} el - The containing DOM element for the display.\n   * @param {number} width - The coordinate width of the display, in pixels.\n   * @param {number} height - The coordinate height of the display, in pixels.\n   * @param {Array<number>} origin - The origin of the display, in pixels.\n   *   The coordinate system will be translated to this point.\n   * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply\n   *   the width and height to determine the final pixel size.\n   * @return {SVGRenderer} - This renderer instance.\n   */\n  initialize(el, width, height, origin, scaleFactor) {\n    // create the svg definitions cache\n    this._defs = {};\n\n    this._clearDefs();\n\n    if (el) {\n      this._svg = domChild(el, 0, 'svg', svgns);\n\n      this._svg.setAttributeNS(xmlns, 'xmlns', svgns);\n\n      this._svg.setAttributeNS(xmlns, 'xmlns:xlink', metadata['xmlns:xlink']);\n\n      this._svg.setAttribute('version', metadata['version']);\n\n      this._svg.setAttribute('class', 'marks');\n\n      domClear(el, 1); // set the svg root group\n\n      this._root = domChild(this._svg, RootIndex, 'g', svgns);\n      setAttributes(this._root, rootAttributes); // ensure no additional child elements\n\n      domClear(this._svg, RootIndex + 1);\n    } // set background color if defined\n\n\n    this.background(this._bgcolor);\n    return base.initialize.call(this, el, width, height, origin, scaleFactor);\n  },\n\n  /**\n   * Get / set the background color.\n   */\n  background(bgcolor) {\n    if (arguments.length && this._svg) {\n      this._svg.style.setProperty('background-color', bgcolor);\n    }\n\n    return base.background.apply(this, arguments);\n  },\n\n  /**\n   * Resize the display.\n   * @param {number} width - The new coordinate width of the display, in pixels.\n   * @param {number} height - The new coordinate height of the display, in pixels.\n   * @param {Array<number>} origin - The new origin of the display, in pixels.\n   *   The coordinate system will be translated to this point.\n   * @param {number} [scaleFactor=1] - Optional scaleFactor by which to multiply\n   *   the width and height to determine the final pixel size.\n   * @return {SVGRenderer} - This renderer instance;\n   */\n  resize(width, height, origin, scaleFactor) {\n    base.resize.call(this, width, height, origin, scaleFactor);\n\n    if (this._svg) {\n      setAttributes(this._svg, {\n        width: this._width * this._scale,\n        height: this._height * this._scale,\n        viewBox: `0 0 ${this._width} ${this._height}`\n      });\n\n      this._root.setAttribute('transform', `translate(${this._origin})`);\n    }\n\n    this._dirty = [];\n    return this;\n  },\n\n  /**\n   * Returns the SVG element of the visualization.\n   * @return {DOMElement} - The SVG element.\n   */\n  canvas() {\n    return this._svg;\n  },\n\n  /**\n   * Returns an SVG text string for the rendered content,\n   * or null if this renderer is currently headless.\n   */\n  svg() {\n    const svg = this._svg,\n          bg = this._bgcolor;\n    if (!svg) return null;\n    let node;\n\n    if (bg) {\n      svg.removeAttribute('style');\n      node = domChild(svg, RootIndex, 'rect', svgns);\n      setAttributes(node, {\n        width: this._width,\n        height: this._height,\n        fill: bg\n      });\n    }\n\n    const text = serializeXML(svg);\n\n    if (bg) {\n      svg.removeChild(node);\n\n      this._svg.style.setProperty('background-color', bg);\n    }\n\n    return text;\n  },\n\n  /**\n   * Internal rendering method.\n   * @param {object} scene - The root mark of a scenegraph to render.\n   */\n  _render(scene) {\n    // perform spot updates and re-render markup\n    if (this._dirtyCheck()) {\n      if (this._dirtyAll) this._clearDefs();\n      this.mark(this._root, scene);\n      domClear(this._root, 1);\n    }\n\n    this.defs();\n    this._dirty = [];\n    ++this._dirtyID;\n    return this;\n  },\n\n  // -- Manage rendering of items marked as dirty --\n\n  /**\n   * Flag a mark item as dirty.\n   * @param {Item} item - The mark item.\n   */\n  dirty(item) {\n    if (item.dirty !== this._dirtyID) {\n      item.dirty = this._dirtyID;\n\n      this._dirty.push(item);\n    }\n  },\n\n  /**\n   * Check if a mark item is considered dirty.\n   * @param {Item} item - The mark item.\n   */\n  isDirty(item) {\n    return this._dirtyAll || !item._svg || item.dirty === this._dirtyID;\n  },\n\n  /**\n   * Internal method to check dirty status and, if possible,\n   * make targetted updates without a full rendering pass.\n   */\n  _dirtyCheck() {\n    this._dirtyAll = true;\n    const items = this._dirty;\n    if (!items.length || !this._dirtyID) return true;\n    const id = ++this._dirtyID;\n    let item, mark, type, mdef, i, n, o;\n\n    for (i = 0, n = items.length; i < n; ++i) {\n      item = items[i];\n      mark = item.mark;\n\n      if (mark.marktype !== type) {\n        // memoize mark instance lookup\n        type = mark.marktype;\n        mdef = Marks[type];\n      }\n\n      if (mark.zdirty && mark.dirty !== id) {\n        this._dirtyAll = false;\n        dirtyParents(item, id);\n        mark.items.forEach(i => {\n          i.dirty = id;\n        });\n      }\n\n      if (mark.zdirty) continue; // handle in standard drawing pass\n\n      if (item.exit) {\n        // EXIT\n        if (mdef.nested && mark.items.length) {\n          // if nested mark with remaining points, update instead\n          o = mark.items[0];\n          if (o._svg) this._update(mdef, o._svg, o);\n        } else if (item._svg) {\n          // otherwise remove from DOM\n          o = item._svg.parentNode;\n          if (o) o.removeChild(item._svg);\n        }\n\n        item._svg = null;\n        continue;\n      }\n\n      item = mdef.nested ? mark.items[0] : item;\n      if (item._update === id) continue; // already visited\n\n      if (!item._svg || !item._svg.ownerSVGElement) {\n        // ENTER\n        this._dirtyAll = false;\n        dirtyParents(item, id);\n      } else {\n        // IN-PLACE UPDATE\n        this._update(mdef, item._svg, item);\n      }\n\n      item._update = id;\n    }\n\n    return !this._dirtyAll;\n  },\n\n  // -- Construct & maintain scenegraph to SVG mapping ---\n\n  /**\n   * Render a set of mark items.\n   * @param {SVGElement} el - The parent element in the SVG tree.\n   * @param {object} scene - The mark parent to render.\n   * @param {SVGElement} prev - The previous sibling in the SVG tree.\n   */\n  mark(el, scene, prev) {\n    if (!this.isDirty(scene)) return scene._svg;\n    const svg = this._svg,\n          mdef = Marks[scene.marktype],\n          events = scene.interactive === false ? 'none' : null,\n          isGroup = mdef.tag === 'g';\n    let sibling = null,\n        i = 0;\n    const parent = bind(scene, el, prev, 'g', svg);\n    parent.setAttribute('class', cssClass(scene)); // apply aria attributes to parent container element\n\n    const aria = ariaMarkAttributes(scene);\n\n    for (const key in aria) setAttribute(parent, key, aria[key]);\n\n    if (!isGroup) {\n      setAttribute(parent, 'pointer-events', events);\n    }\n\n    setAttribute(parent, 'clip-path', scene.clip ? clip$1(this, scene, scene.group) : null);\n\n    const process = item => {\n      const dirty = this.isDirty(item),\n            node = bind(item, parent, sibling, mdef.tag, svg);\n\n      if (dirty) {\n        this._update(mdef, node, item);\n\n        if (isGroup) recurse(this, node, item);\n      }\n\n      sibling = node;\n      ++i;\n    };\n\n    if (mdef.nested) {\n      if (scene.items.length) process(scene.items[0]);\n    } else {\n      visit(scene, process);\n    }\n\n    domClear(parent, i);\n    return parent;\n  },\n\n  /**\n   * Update the attributes of an SVG element for a mark item.\n   * @param {object} mdef - The mark definition object\n   * @param {SVGElement} el - The SVG element.\n   * @param {Item} item - The mark item.\n   */\n  _update(mdef, el, item) {\n    // set dom element and values cache\n    // provides access to emit method\n    element = el;\n    values = el.__values__; // apply aria-specific properties\n\n    ariaItemAttributes(emit, item); // apply svg attributes\n\n    mdef.attr(emit, item, this); // some marks need special treatment\n\n    const extra = mark_extras[mdef.type];\n    if (extra) extra.call(this, mdef, el, item); // apply svg style attributes\n    // note: element state may have been modified by 'extra' method\n\n    if (element) this.style(element, item);\n  },\n\n  /**\n   * Update the presentation attributes of an SVG element for a mark item.\n   * @param {SVGElement} el - The SVG element.\n   * @param {Item} item - The mark item.\n   */\n  style(el, item) {\n    if (item == null) return;\n\n    for (const prop in styles) {\n      let value = prop === 'font' ? fontFamily(item) : item[prop];\n      if (value === values[prop]) continue;\n      const name = styles[prop];\n\n      if (value == null) {\n        el.removeAttribute(name);\n      } else {\n        if (isGradient(value)) {\n          value = gradientRef(value, this._defs.gradient, href());\n        }\n\n        el.setAttribute(name, value + '');\n      }\n\n      values[prop] = value;\n    }\n  },\n\n  /**\n   * Render SVG defs, as needed.\n   * Must be called *after* marks have been processed to ensure the\n   * collected state is current and accurate.\n   */\n  defs() {\n    const svg = this._svg,\n          defs = this._defs;\n    let el = defs.el,\n        index = 0;\n\n    for (const id in defs.gradient) {\n      if (!el) defs.el = el = domChild(svg, RootIndex + 1, 'defs', svgns);\n      index = updateGradient(el, defs.gradient[id], index);\n    }\n\n    for (const id in defs.clipping) {\n      if (!el) defs.el = el = domChild(svg, RootIndex + 1, 'defs', svgns);\n      index = updateClipping(el, defs.clipping[id], index);\n    } // clean-up\n\n\n    if (el) {\n      index === 0 ? (svg.removeChild(el), defs.el = null) : domClear(el, index);\n    }\n  },\n\n  /**\n   * Clear defs caches.\n   */\n  _clearDefs() {\n    const def = this._defs;\n    def.gradient = {};\n    def.clipping = {};\n  }\n\n}); // mark ancestor chain with a dirty id\n\nfunction dirtyParents(item, id) {\n  for (; item && item.dirty !== id; item = item.mark.group) {\n    item.dirty = id;\n\n    if (item.mark && item.mark.dirty !== id) {\n      item.mark.dirty = id;\n    } else return;\n  }\n} // update gradient definitions\n\n\nfunction updateGradient(el, grad, index) {\n  let i, n, stop;\n\n  if (grad.gradient === 'radial') {\n    // SVG radial gradients automatically transform to normalized bbox\n    // coordinates, in a way that is cumbersome to replicate in canvas.\n    // We wrap the radial gradient in a pattern element, allowing us to\n    // maintain a circular gradient that matches what canvas provides.\n    let pt = domChild(el, index++, 'pattern', svgns);\n    setAttributes(pt, {\n      id: patternPrefix + grad.id,\n      viewBox: '0,0,1,1',\n      width: '100%',\n      height: '100%',\n      preserveAspectRatio: 'xMidYMid slice'\n    });\n    pt = domChild(pt, 0, 'rect', svgns);\n    setAttributes(pt, {\n      width: 1,\n      height: 1,\n      fill: `url(${href()}#${grad.id})`\n    });\n    el = domChild(el, index++, 'radialGradient', svgns);\n    setAttributes(el, {\n      id: grad.id,\n      fx: grad.x1,\n      fy: grad.y1,\n      fr: grad.r1,\n      cx: grad.x2,\n      cy: grad.y2,\n      r: grad.r2\n    });\n  } else {\n    el = domChild(el, index++, 'linearGradient', svgns);\n    setAttributes(el, {\n      id: grad.id,\n      x1: grad.x1,\n      x2: grad.x2,\n      y1: grad.y1,\n      y2: grad.y2\n    });\n  }\n\n  for (i = 0, n = grad.stops.length; i < n; ++i) {\n    stop = domChild(el, i, 'stop', svgns);\n    stop.setAttribute('offset', grad.stops[i].offset);\n    stop.setAttribute('stop-color', grad.stops[i].color);\n  }\n\n  domClear(el, i);\n  return index;\n} // update clipping path definitions\n\n\nfunction updateClipping(el, clip, index) {\n  let mask;\n  el = domChild(el, index, 'clipPath', svgns);\n  el.setAttribute('id', clip.id);\n\n  if (clip.path) {\n    mask = domChild(el, 0, 'path', svgns);\n    mask.setAttribute('d', clip.path);\n  } else {\n    mask = domChild(el, 0, 'rect', svgns);\n    setAttributes(mask, {\n      x: 0,\n      y: 0,\n      width: clip.width,\n      height: clip.height\n    });\n  }\n\n  domClear(el, 1);\n  return index + 1;\n} // Recursively process group contents.\n\n\nfunction recurse(renderer, el, group) {\n  el = el.lastChild.previousSibling;\n  let prev,\n      idx = 0;\n  visit(group, item => {\n    prev = renderer.mark(el, item, prev);\n    ++idx;\n  }); // remove any extraneous DOM elements\n\n  domClear(el, 1 + idx);\n} // Bind a scenegraph item to an SVG DOM element.\n// Create new SVG elements as needed.\n\n\nfunction bind(item, el, sibling, tag, svg) {\n  let node = item._svg,\n      doc; // create a new dom node if needed\n\n  if (!node) {\n    doc = el.ownerDocument;\n    node = domCreate(doc, tag, svgns);\n    item._svg = node;\n\n    if (item.mark) {\n      node.__data__ = item;\n      node.__values__ = {\n        fill: 'default'\n      }; // if group, create background, content, and foreground elements\n\n      if (tag === 'g') {\n        const bg = domCreate(doc, 'path', svgns);\n        node.appendChild(bg);\n        bg.__data__ = item;\n        const cg = domCreate(doc, 'g', svgns);\n        node.appendChild(cg);\n        cg.__data__ = item;\n        const fg = domCreate(doc, 'path', svgns);\n        node.appendChild(fg);\n        fg.__data__ = item;\n        fg.__values__ = {\n          fill: 'default'\n        };\n      }\n    }\n  } // (re-)insert if (a) not contained in SVG or (b) sibling order has changed\n\n\n  if (node.ownerSVGElement !== svg || siblingCheck(node, sibling)) {\n    el.insertBefore(node, sibling ? sibling.nextSibling : el.firstChild);\n  }\n\n  return node;\n} // check if two nodes are ordered siblings\n\n\nfunction siblingCheck(node, sibling) {\n  return node.parentNode && node.parentNode.childNodes.length > 1 && node.previousSibling != sibling; // treat null/undefined the same\n} // -- Set attributes & styles on SVG elements ---\n\n\nlet element = null,\n    // temp var for current SVG element\nvalues = null; // temp var for current values hash\n// Extra configuration for certain mark types\n\nconst mark_extras = {\n  group(mdef, el, item) {\n    const fg = element = el.childNodes[2];\n    values = fg.__values__;\n    mdef.foreground(emit, item, this);\n    values = el.__values__; // use parent's values hash\n\n    element = el.childNodes[1];\n    mdef.content(emit, item, this);\n    const bg = element = el.childNodes[0];\n    mdef.background(emit, item, this);\n    const value = item.mark.interactive === false ? 'none' : null;\n\n    if (value !== values.events) {\n      setAttribute(fg, 'pointer-events', value);\n      setAttribute(bg, 'pointer-events', value);\n      values.events = value;\n    }\n\n    if (item.strokeForeground && item.stroke) {\n      const fill = item.fill;\n      setAttribute(fg, 'display', null); // set style of background\n\n      this.style(bg, item);\n      setAttribute(bg, 'stroke', null); // set style of foreground\n\n      if (fill) item.fill = null;\n      values = fg.__values__;\n      this.style(fg, item);\n      if (fill) item.fill = fill; // leave element null to prevent downstream styling\n\n      element = null;\n    } else {\n      // ensure foreground is ignored\n      setAttribute(fg, 'display', 'none');\n    }\n  },\n\n  image(mdef, el, item) {\n    if (item.smooth === false) {\n      setStyle(el, 'image-rendering', 'optimizeSpeed');\n      setStyle(el, 'image-rendering', 'pixelated');\n    } else {\n      setStyle(el, 'image-rendering', null);\n    }\n  },\n\n  text(mdef, el, item) {\n    const tl = textLines(item);\n    let key, value, doc, lh;\n\n    if (isArray(tl)) {\n      // multi-line text\n      value = tl.map(_ => textValue(item, _));\n      key = value.join('\\n'); // content cache key\n\n      if (key !== values.text) {\n        domClear(el, 0);\n        doc = el.ownerDocument;\n        lh = lineHeight(item);\n        value.forEach((t, i) => {\n          const ts = domCreate(doc, 'tspan', svgns);\n          ts.__data__ = item; // data binding\n\n          ts.textContent = t;\n\n          if (i) {\n            ts.setAttribute('x', 0);\n            ts.setAttribute('dy', lh);\n          }\n\n          el.appendChild(ts);\n        });\n        values.text = key;\n      }\n    } else {\n      // single-line text\n      value = textValue(item, tl);\n\n      if (value !== values.text) {\n        el.textContent = value;\n        values.text = value;\n      }\n    }\n\n    setAttribute(el, 'font-family', fontFamily(item));\n    setAttribute(el, 'font-size', fontSize(item) + 'px');\n    setAttribute(el, 'font-style', item.fontStyle);\n    setAttribute(el, 'font-variant', item.fontVariant);\n    setAttribute(el, 'font-weight', item.fontWeight);\n  }\n\n};\n\nfunction emit(name, value, ns) {\n  // early exit if value is unchanged\n  if (value === values[name]) return; // use appropriate method given namespace (ns)\n\n  if (ns) {\n    setAttributeNS(element, name, value, ns);\n  } else {\n    setAttribute(element, name, value);\n  } // note current value for future comparison\n\n\n  values[name] = value;\n}\n\nfunction setStyle(el, name, value) {\n  if (value !== values[name]) {\n    if (value == null) {\n      el.style.removeProperty(name);\n    } else {\n      el.style.setProperty(name, value + '');\n    }\n\n    values[name] = value;\n  }\n}\n\nfunction setAttributes(el, attrs) {\n  for (const key in attrs) {\n    setAttribute(el, key, attrs[key]);\n  }\n}\n\nfunction setAttribute(el, name, value) {\n  if (value != null) {\n    // if value is provided, update DOM attribute\n    el.setAttribute(name, value);\n  } else {\n    // else remove DOM attribute\n    el.removeAttribute(name);\n  }\n}\n\nfunction setAttributeNS(el, name, value, ns) {\n  if (value != null) {\n    // if value is provided, update DOM attribute\n    el.setAttributeNS(ns, name, value);\n  } else {\n    // else remove DOM attribute\n    el.removeAttributeNS(ns, name);\n  }\n}\n\nfunction href() {\n  let loc;\n  return typeof window === 'undefined' ? '' : (loc = window.location).hash ? loc.href.slice(0, -loc.hash.length) : loc.href;\n}\n\nfunction SVGStringRenderer(loader) {\n  Renderer.call(this, loader);\n  this._text = null;\n  this._defs = {\n    gradient: {},\n    clipping: {}\n  };\n}\ninherits(SVGStringRenderer, Renderer, {\n  /**\n   * Returns the rendered SVG text string,\n   * or null if rendering has not yet occurred.\n   */\n  svg() {\n    return this._text;\n  },\n\n  /**\n   * Internal rendering method.\n   * @param {object} scene - The root mark of a scenegraph to render.\n   */\n  _render(scene) {\n    const m = markup(); // svg tag\n\n    m.open('svg', extend({}, metadata, {\n      class: 'marks',\n      width: this._width * this._scale,\n      height: this._height * this._scale,\n      viewBox: `0 0 ${this._width} ${this._height}`\n    })); // background, if defined\n\n    const bg = this._bgcolor;\n\n    if (bg && bg !== 'transparent' && bg !== 'none') {\n      m.open('rect', {\n        width: this._width,\n        height: this._height,\n        fill: bg\n      }).close();\n    } // root content group\n\n\n    m.open('g', rootAttributes, {\n      transform: 'translate(' + this._origin + ')'\n    });\n    this.mark(m, scene);\n    m.close(); // </g>\n    // defs\n\n    this.defs(m); // get SVG text string\n\n    this._text = m.close() + '';\n    return this;\n  },\n\n  /**\n   * Render a set of mark items.\n   * @param {object} m - The markup context.\n   * @param {object} scene - The mark parent to render.\n   */\n  mark(m, scene) {\n    const mdef = Marks[scene.marktype],\n          tag = mdef.tag,\n          attrList = [ariaItemAttributes, mdef.attr]; // render opening group tag\n\n    m.open('g', {\n      'class': cssClass(scene),\n      'clip-path': scene.clip ? clip$1(this, scene, scene.group) : null\n    }, ariaMarkAttributes(scene), {\n      'pointer-events': tag !== 'g' && scene.interactive === false ? 'none' : null\n    }); // render contained elements\n\n    const process = item => {\n      const href = this.href(item);\n      if (href) m.open('a', href);\n      m.open(tag, this.attr(scene, item, attrList, tag !== 'g' ? tag : null));\n\n      if (tag === 'text') {\n        const tl = textLines(item);\n\n        if (isArray(tl)) {\n          // multi-line text\n          const attrs = {\n            x: 0,\n            dy: lineHeight(item)\n          };\n\n          for (let i = 0; i < tl.length; ++i) {\n            m.open('tspan', i ? attrs : null).text(textValue(item, tl[i])).close();\n          }\n        } else {\n          // single-line text\n          m.text(textValue(item, tl));\n        }\n      } else if (tag === 'g') {\n        const fore = item.strokeForeground,\n              fill = item.fill,\n              stroke = item.stroke;\n\n        if (fore && stroke) {\n          item.stroke = null;\n        }\n\n        m.open('path', this.attr(scene, item, mdef.background, 'bgrect')).close(); // recurse for group content\n\n        m.open('g', this.attr(scene, item, mdef.content));\n        visit(item, scene => this.mark(m, scene));\n        m.close();\n\n        if (fore && stroke) {\n          if (fill) item.fill = null;\n          item.stroke = stroke;\n          m.open('path', this.attr(scene, item, mdef.foreground, 'bgrect')).close();\n          if (fill) item.fill = fill;\n        } else {\n          m.open('path', this.attr(scene, item, mdef.foreground, 'bgfore')).close();\n        }\n      }\n\n      m.close(); // </tag>\n\n      if (href) m.close(); // </a>\n    };\n\n    if (mdef.nested) {\n      if (scene.items && scene.items.length) process(scene.items[0]);\n    } else {\n      visit(scene, process);\n    } // render closing group tag\n\n\n    return m.close(); // </g>\n  },\n\n  /**\n   * Get href attributes for a hyperlinked mark item.\n   * @param {Item} item - The mark item.\n   */\n  href(item) {\n    const href = item.href;\n    let attr;\n\n    if (href) {\n      if (attr = this._hrefs && this._hrefs[href]) {\n        return attr;\n      } else {\n        this.sanitizeURL(href).then(attr => {\n          // rewrite to use xlink namespace\n          attr['xlink:href'] = attr.href;\n          attr.href = null;\n          (this._hrefs || (this._hrefs = {}))[href] = attr;\n        });\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Get an object of SVG attributes for a mark item.\n   * @param {object} scene - The mark parent.\n   * @param {Item} item - The mark item.\n   * @param {array|function} attrs - One or more attribute emitters.\n   * @param {string} tag - The tag being rendered.\n   */\n  attr(scene, item, attrs, tag) {\n    const object = {},\n          emit = (name, value, ns, prefixed) => {\n      object[prefixed || name] = value;\n    }; // apply mark specific attributes\n\n\n    if (Array.isArray(attrs)) {\n      attrs.forEach(fn => fn(emit, item, this));\n    } else {\n      attrs(emit, item, this);\n    } // apply style attributes\n\n\n    if (tag) {\n      style(object, item, scene, tag, this._defs);\n    }\n\n    return object;\n  },\n\n  /**\n   * Render SVG defs, as needed.\n   * Must be called *after* marks have been processed to ensure the\n   * collected state is current and accurate.\n   * @param {object} m - The markup context.\n   */\n  defs(m) {\n    const gradient = this._defs.gradient,\n          clipping = this._defs.clipping,\n          count = Object.keys(gradient).length + Object.keys(clipping).length;\n    if (count === 0) return; // nothing to do\n\n    m.open('defs');\n\n    for (const id in gradient) {\n      const def = gradient[id],\n            stops = def.stops;\n\n      if (def.gradient === 'radial') {\n        // SVG radial gradients automatically transform to normalized bbox\n        // coordinates, in a way that is cumbersome to replicate in canvas.\n        // We wrap the radial gradient in a pattern element, allowing us to\n        // maintain a circular gradient that matches what canvas provides.\n        m.open('pattern', {\n          id: patternPrefix + id,\n          viewBox: '0,0,1,1',\n          width: '100%',\n          height: '100%',\n          preserveAspectRatio: 'xMidYMid slice'\n        });\n        m.open('rect', {\n          width: '1',\n          height: '1',\n          fill: 'url(#' + id + ')'\n        }).close();\n        m.close(); // </pattern>\n\n        m.open('radialGradient', {\n          id: id,\n          fx: def.x1,\n          fy: def.y1,\n          fr: def.r1,\n          cx: def.x2,\n          cy: def.y2,\n          r: def.r2\n        });\n      } else {\n        m.open('linearGradient', {\n          id: id,\n          x1: def.x1,\n          x2: def.x2,\n          y1: def.y1,\n          y2: def.y2\n        });\n      }\n\n      for (let i = 0; i < stops.length; ++i) {\n        m.open('stop', {\n          offset: stops[i].offset,\n          'stop-color': stops[i].color\n        }).close();\n      }\n\n      m.close();\n    }\n\n    for (const id in clipping) {\n      const def = clipping[id];\n      m.open('clipPath', {\n        id: id\n      });\n\n      if (def.path) {\n        m.open('path', {\n          d: def.path\n        }).close();\n      } else {\n        m.open('rect', {\n          x: 0,\n          y: 0,\n          width: def.width,\n          height: def.height\n        }).close();\n      }\n\n      m.close();\n    }\n\n    m.close();\n  }\n\n}); // Helper function for attr for style presentation attributes\n\nfunction style(s, item, scene, tag, defs) {\n  if (item == null) return s;\n\n  if (tag === 'bgrect' && scene.interactive === false) {\n    s['pointer-events'] = 'none';\n  }\n\n  if (tag === 'bgfore') {\n    if (scene.interactive === false) {\n      s['pointer-events'] = 'none';\n    }\n\n    s.display = 'none';\n    if (item.fill !== null) return s;\n  }\n\n  if (tag === 'image' && item.smooth === false) {\n    s.style = 'image-rendering: optimizeSpeed; image-rendering: pixelated;';\n  }\n\n  if (tag === 'text') {\n    s['font-family'] = fontFamily(item);\n    s['font-size'] = fontSize(item) + 'px';\n    s['font-style'] = item.fontStyle;\n    s['font-variant'] = item.fontVariant;\n    s['font-weight'] = item.fontWeight;\n  }\n\n  for (const prop in styles) {\n    let value = item[prop];\n    const name = styles[prop];\n\n    if (value === 'transparent' && (name === 'fill' || name === 'stroke')) ; else if (value != null) {\n      if (isGradient(value)) {\n        value = gradientRef(value, defs.gradient, '');\n      }\n\n      s[name] = value;\n    }\n  }\n\n  return s;\n}\n\nconst Canvas = 'canvas';\nconst PNG = 'png';\nconst SVG = 'svg';\nconst None = 'none';\nconst RenderType = {\n  Canvas: Canvas,\n  PNG: PNG,\n  SVG: SVG,\n  None: None\n};\nconst modules = {};\nmodules[Canvas] = modules[PNG] = {\n  renderer: CanvasRenderer,\n  headless: CanvasRenderer,\n  handler: CanvasHandler\n};\nmodules[SVG] = {\n  renderer: SVGRenderer,\n  headless: SVGStringRenderer,\n  handler: SVGHandler\n};\nmodules[None] = {};\nfunction renderModule(name, _) {\n  name = String(name || '').toLowerCase();\n\n  if (arguments.length > 1) {\n    modules[name] = _;\n    return this;\n  } else {\n    return modules[name];\n  }\n}\n\nfunction intersect(scene, bounds, filter) {\n  const hits = [],\n        // intersection results\n  box = new Bounds().union(bounds),\n        // defensive copy\n  type = scene.marktype;\n  return type ? intersectMark(scene, box, filter, hits) : type === 'group' ? intersectGroup(scene, box, filter, hits) : error('Intersect scene must be mark node or group item.');\n}\n\nfunction intersectMark(mark, box, filter, hits) {\n  if (visitMark(mark, box, filter)) {\n    const items = mark.items,\n          type = mark.marktype,\n          n = items.length;\n    let i = 0;\n\n    if (type === 'group') {\n      for (; i < n; ++i) {\n        intersectGroup(items[i], box, filter, hits);\n      }\n    } else {\n      for (const test = Marks[type].isect; i < n; ++i) {\n        const item = items[i];\n        if (intersectItem(item, box, test)) hits.push(item);\n      }\n    }\n  }\n\n  return hits;\n}\n\nfunction visitMark(mark, box, filter) {\n  // process if bounds intersect and if\n  // (1) mark is a group mark (so we must recurse), or\n  // (2) mark is interactive and passes filter\n  return mark.bounds && box.intersects(mark.bounds) && (mark.marktype === 'group' || mark.interactive !== false && (!filter || filter(mark)));\n}\n\nfunction intersectGroup(group, box, filter, hits) {\n  // test intersect against group\n  // skip groups by default unless filter says otherwise\n  if (filter && filter(group.mark) && intersectItem(group, box, Marks.group.isect)) {\n    hits.push(group);\n  } // recursively test children marks\n  // translate box to group coordinate space\n\n\n  const marks = group.items,\n        n = marks && marks.length;\n\n  if (n) {\n    const x = group.x || 0,\n          y = group.y || 0;\n    box.translate(-x, -y);\n\n    for (let i = 0; i < n; ++i) {\n      intersectMark(marks[i], box, filter, hits);\n    }\n\n    box.translate(x, y);\n  }\n\n  return hits;\n}\n\nfunction intersectItem(item, box, test) {\n  // test bounds enclosure, bounds intersection, then detailed test\n  const bounds = item.bounds;\n  return box.encloses(bounds) || box.intersects(bounds) && test(item, box);\n}\n\nconst clipBounds = new Bounds();\nfunction boundClip (mark) {\n  const clip = mark.clip;\n\n  if (isFunction(clip)) {\n    clip(boundContext(clipBounds.clear()));\n  } else if (clip) {\n    clipBounds.set(0, 0, mark.group.width, mark.group.height);\n  } else return;\n\n  mark.bounds.intersect(clipBounds);\n}\n\nconst TOLERANCE = 1e-9;\nfunction sceneEqual(a, b, key) {\n  return a === b ? true : key === 'path' ? pathEqual(a, b) : a instanceof Date && b instanceof Date ? +a === +b : isNumber(a) && isNumber(b) ? Math.abs(a - b) <= TOLERANCE : !a || !b || !isObject(a) && !isObject(b) ? a == b : objectEqual(a, b);\n}\nfunction pathEqual(a, b) {\n  return sceneEqual(pathParse(a), pathParse(b));\n}\n\nfunction objectEqual(a, b) {\n  var ka = Object.keys(a),\n      kb = Object.keys(b),\n      key,\n      i;\n  if (ka.length !== kb.length) return false;\n  ka.sort();\n  kb.sort();\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i]) return false;\n  }\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!sceneEqual(a[key], b[key], key)) return false;\n  }\n\n  return typeof a === typeof b;\n}\n\nfunction resetSVGDefIds() {\n  resetSVGClipId();\n  resetSVGGradientId();\n}\n\nexport { Bounds, CanvasHandler, CanvasRenderer, Gradient, GroupItem, Handler, Item, Marks, RenderType, Renderer, ResourceLoader, SVGHandler, SVGRenderer, SVGStringRenderer, Scenegraph, boundClip, boundContext, boundItem, boundMark, boundStroke, domChild, domClear, domCreate, domFind, font, fontFamily, fontSize, intersect, intersectBoxLine, intersectPath, intersectPoint, intersectRule, lineHeight, markup, multiLineOffset, curves as pathCurves, pathEqual, pathParse, vg_rect as pathRectangle, pathRender, symbols as pathSymbols, vg_trail as pathTrail, point, renderModule, resetSVGClipId, resetSVGDefIds, sceneEqual, sceneFromJSON, pickVisit as scenePickVisit, sceneToJSON, visit as sceneVisit, zorder as sceneZOrder, serializeXML, textMetrics };\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function(type, size) {\n  var context = null;\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import { Transform } from 'vega-dataflow';\nimport { Marks, boundClip, GroupItem, Item, Bounds, multiLineOffset, boundStroke } from 'vega-scenegraph';\nimport { inherits, peek, isObject } from 'vega-util';\n\nconst Top = 'top';\nconst Left = 'left';\nconst Right = 'right';\nconst Bottom = 'bottom';\nconst TopLeft = 'top-left';\nconst TopRight = 'top-right';\nconst BottomLeft = 'bottom-left';\nconst BottomRight = 'bottom-right';\nconst Start = 'start';\nconst Middle = 'middle';\nconst End = 'end';\nconst X = 'x';\nconst Y = 'y';\nconst Group = 'group';\nconst AxisRole = 'axis';\nconst TitleRole = 'title';\nconst FrameRole = 'frame';\nconst ScopeRole = 'scope';\nconst LegendRole = 'legend';\nconst RowHeader = 'row-header';\nconst RowFooter = 'row-footer';\nconst RowTitle = 'row-title';\nconst ColHeader = 'column-header';\nconst ColFooter = 'column-footer';\nconst ColTitle = 'column-title';\nconst Padding = 'padding';\nconst Symbols = 'symbol';\nconst Fit = 'fit';\nconst FitX = 'fit-x';\nconst FitY = 'fit-y';\nconst Pad = 'pad';\nconst None = 'none';\nconst All = 'all';\nconst Each = 'each';\nconst Flush = 'flush';\nconst Column = 'column';\nconst Row = 'row';\n\n/**\n * Calculate bounding boxes for scenegraph items.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {object} params.mark - The scenegraph mark instance to bound.\n */\n\nfunction Bound(params) {\n  Transform.call(this, null, params);\n}\ninherits(Bound, Transform, {\n  transform(_, pulse) {\n    const view = pulse.dataflow,\n          mark = _.mark,\n          type = mark.marktype,\n          entry = Marks[type],\n          bound = entry.bound;\n    let markBounds = mark.bounds,\n        rebound;\n\n    if (entry.nested) {\n      // multi-item marks have a single bounds instance\n      if (mark.items.length) view.dirty(mark.items[0]);\n      markBounds = boundItem(mark, bound);\n      mark.items.forEach(item => {\n        item.bounds.clear().union(markBounds);\n      });\n    } else if (type === Group || _.modified()) {\n      // operator parameters modified -> re-bound all items\n      // updates group bounds in response to modified group content\n      pulse.visit(pulse.MOD, item => view.dirty(item));\n      markBounds.clear();\n      mark.items.forEach(item => markBounds.union(boundItem(item, bound))); // force reflow for axes/legends/titles to propagate any layout changes\n\n      switch (mark.role) {\n        case AxisRole:\n        case LegendRole:\n        case TitleRole:\n          pulse.reflow();\n      }\n    } else {\n      // incrementally update bounds, re-bound mark as needed\n      rebound = pulse.changed(pulse.REM);\n      pulse.visit(pulse.ADD, item => {\n        markBounds.union(boundItem(item, bound));\n      });\n      pulse.visit(pulse.MOD, item => {\n        rebound = rebound || markBounds.alignsWith(item.bounds);\n        view.dirty(item);\n        markBounds.union(boundItem(item, bound));\n      });\n\n      if (rebound) {\n        markBounds.clear();\n        mark.items.forEach(item => markBounds.union(item.bounds));\n      }\n    } // ensure mark bounds do not exceed any clipping region\n\n\n    boundClip(mark);\n    return pulse.modifies('bounds');\n  }\n\n});\n\nfunction boundItem(item, bound, opt) {\n  return bound(item.bounds.clear(), item, opt);\n}\n\nconst COUNTER_NAME = ':vega_identifier:';\n/**\n * Adds a unique identifier to all added tuples.\n * This transform creates a new signal that serves as an id counter.\n * As a result, the id counter is shared across all instances of this\n * transform, generating unique ids across multiple data streams. In\n * addition, this signal value can be included in a snapshot of the\n * dataflow state, enabling correct resumption of id allocation.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {string} params.as - The field name for the generated identifier.\n */\n\nfunction Identifier(params) {\n  Transform.call(this, 0, params);\n}\nIdentifier.Definition = {\n  'type': 'Identifier',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'as',\n    'type': 'string',\n    'required': true\n  }]\n};\ninherits(Identifier, Transform, {\n  transform(_, pulse) {\n    const counter = getCounter(pulse.dataflow),\n          as = _.as;\n    let id = counter.value;\n    pulse.visit(pulse.ADD, t => t[as] = t[as] || ++id);\n    counter.set(this.value = id);\n    return pulse;\n  }\n\n});\n\nfunction getCounter(view) {\n  return view._signals[COUNTER_NAME] || (view._signals[COUNTER_NAME] = view.add(0));\n}\n\n/**\n * Bind scenegraph items to a scenegraph mark instance.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {object} params.markdef - The mark definition for creating the mark.\n *   This is an object of legal scenegraph mark properties which *must* include\n *   the 'marktype' property.\n */\n\nfunction Mark(params) {\n  Transform.call(this, null, params);\n}\ninherits(Mark, Transform, {\n  transform(_, pulse) {\n    let mark = this.value; // acquire mark on first invocation, bind context and group\n\n    if (!mark) {\n      mark = pulse.dataflow.scenegraph().mark(_.markdef, lookup(_), _.index);\n      mark.group.context = _.context;\n      if (!_.context.group) _.context.group = mark.group;\n      mark.source = this.source; // point to upstream collector\n\n      mark.clip = _.clip;\n      mark.interactive = _.interactive;\n      this.value = mark;\n    } // initialize entering items\n\n\n    const Init = mark.marktype === Group ? GroupItem : Item;\n    pulse.visit(pulse.ADD, item => Init.call(item, mark)); // update clipping and/or interactive status\n\n    if (_.modified('clip') || _.modified('interactive')) {\n      mark.clip = _.clip;\n      mark.interactive = !!_.interactive;\n      mark.zdirty = true; // force scenegraph re-eval\n\n      pulse.reflow();\n    } // bind items array to scenegraph mark\n\n\n    mark.items = pulse.source;\n    return pulse;\n  }\n\n});\n\nfunction lookup(_) {\n  const g = _.groups,\n        p = _.parent;\n  return g && g.size === 1 ? g.get(Object.keys(g.object)[0]) : g && p ? g.lookup(p) : null;\n}\n\n/**\n * Analyze items for overlap, changing opacity to hide items with\n * overlapping bounding boxes. This transform will preserve at least\n * two items (e.g., first and last) even if overlap persists.\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - A comparator\n *   function for sorting items.\n * @param {object} [params.method] - The overlap removal method to apply.\n *   One of 'parity' (default, hide every other item until there is no\n *   more overlap) or 'greedy' (sequentially scan and hide and items that\n *   overlap with the last visible item).\n * @param {object} [params.boundScale] - A scale whose range should be used\n *   to bound the items. Items exceeding the bounds of the scale range\n *   will be treated as overlapping. If null or undefined, no bounds check\n *   will be applied.\n * @param {object} [params.boundOrient] - The orientation of the scale\n *   (top, bottom, left, or right) used to bound items. This parameter is\n *   ignored if boundScale is null or undefined.\n * @param {object} [params.boundTolerance] - The tolerance in pixels for\n *   bound inclusion testing (default 1). This specifies by how many pixels\n *   an item's bounds may exceed the scale range bounds and not be culled.\n * @constructor\n */\n\nfunction Overlap(params) {\n  Transform.call(this, null, params);\n}\nconst methods = {\n  parity: items => items.filter((item, i) => i % 2 ? item.opacity = 0 : 1),\n  greedy: (items, sep) => {\n    let a;\n    return items.filter((b, i) => !i || !intersect(a.bounds, b.bounds, sep) ? (a = b, 1) : b.opacity = 0);\n  }\n}; // compute bounding box intersection\n// including padding pixels of separation\n\nconst intersect = (a, b, sep) => sep > Math.max(b.x1 - a.x2, a.x1 - b.x2, b.y1 - a.y2, a.y1 - b.y2);\n\nconst hasOverlap = (items, pad) => {\n  for (var i = 1, n = items.length, a = items[0].bounds, b; i < n; a = b, ++i) {\n    if (intersect(a, b = items[i].bounds, pad)) return true;\n  }\n};\n\nconst hasBounds = item => {\n  const b = item.bounds;\n  return b.width() > 1 && b.height() > 1;\n};\n\nconst boundTest = (scale, orient, tolerance) => {\n  var range = scale.range(),\n      b = new Bounds();\n\n  if (orient === Top || orient === Bottom) {\n    b.set(range[0], -Infinity, range[1], +Infinity);\n  } else {\n    b.set(-Infinity, range[0], +Infinity, range[1]);\n  }\n\n  b.expand(tolerance || 1);\n  return item => b.encloses(item.bounds);\n}; // reset all items to be fully opaque\n\n\nconst reset = source => {\n  source.forEach(item => item.opacity = 1);\n  return source;\n}; // add all tuples to mod, fork pulse if parameters were modified\n// fork prevents cross-stream tuple pollution (e.g., pulse from scale)\n\n\nconst reflow = (pulse, _) => pulse.reflow(_.modified()).modifies('opacity');\n\ninherits(Overlap, Transform, {\n  transform(_, pulse) {\n    const reduce = methods[_.method] || methods.parity,\n          sep = _.separation || 0;\n    let source = pulse.materialize(pulse.SOURCE).source,\n        items,\n        test;\n    if (!source || !source.length) return;\n\n    if (!_.method) {\n      // early exit if method is falsy\n      if (_.modified('method')) {\n        reset(source);\n        pulse = reflow(pulse, _);\n      }\n\n      return pulse;\n    } // skip labels with no content\n\n\n    source = source.filter(hasBounds); // early exit, nothing to do\n\n    if (!source.length) return;\n\n    if (_.sort) {\n      source = source.slice().sort(_.sort);\n    }\n\n    items = reset(source);\n    pulse = reflow(pulse, _);\n\n    if (items.length >= 3 && hasOverlap(items, sep)) {\n      do {\n        items = reduce(items, sep);\n      } while (items.length >= 3 && hasOverlap(items, sep));\n\n      if (items.length < 3 && !peek(source).opacity) {\n        if (items.length > 1) peek(items).opacity = 0;\n        peek(source).opacity = 1;\n      }\n    }\n\n    if (_.boundScale && _.boundTolerance >= 0) {\n      test = boundTest(_.boundScale, _.boundOrient, +_.boundTolerance);\n      source.forEach(item => {\n        if (!test(item)) item.opacity = 0;\n      });\n    } // re-calculate mark bounds\n\n\n    const bounds = items[0].mark.bounds.clear();\n    source.forEach(item => {\n      if (item.opacity) bounds.union(item.bounds);\n    });\n    return pulse;\n  }\n\n});\n\n/**\n * Queue modified scenegraph items for rendering.\n * @constructor\n */\n\nfunction Render(params) {\n  Transform.call(this, null, params);\n}\ninherits(Render, Transform, {\n  transform(_, pulse) {\n    const view = pulse.dataflow;\n    pulse.visit(pulse.ALL, item => view.dirty(item)); // set z-index dirty flag as needed\n\n    if (pulse.fields && pulse.fields['zindex']) {\n      const item = pulse.source && pulse.source[0];\n      if (item) item.mark.zdirty = true;\n    }\n  }\n\n});\n\nconst tempBounds = new Bounds();\nfunction set(item, property, value) {\n  return item[property] === value ? 0 : (item[property] = value, 1);\n}\n\nfunction isYAxis(mark) {\n  var orient = mark.items[0].orient;\n  return orient === Left || orient === Right;\n}\n\nfunction axisIndices(datum) {\n  let index = +datum.grid;\n  return [datum.ticks ? index++ : -1, // ticks index\n  datum.labels ? index++ : -1, // labels index\n  index + +datum.domain // title index\n  ];\n}\n\nfunction axisLayout(view, axis, width, height) {\n  var item = axis.items[0],\n      datum = item.datum,\n      delta = item.translate != null ? item.translate : 0.5,\n      orient = item.orient,\n      indices = axisIndices(datum),\n      range = item.range,\n      offset = item.offset,\n      position = item.position,\n      minExtent = item.minExtent,\n      maxExtent = item.maxExtent,\n      title = datum.title && item.items[indices[2]].items[0],\n      titlePadding = item.titlePadding,\n      bounds = item.bounds,\n      dl = title && multiLineOffset(title),\n      x = 0,\n      y = 0,\n      i,\n      s;\n  tempBounds.clear().union(bounds);\n  bounds.clear();\n  if ((i = indices[0]) > -1) bounds.union(item.items[i].bounds);\n  if ((i = indices[1]) > -1) bounds.union(item.items[i].bounds); // position axis group and title\n\n  switch (orient) {\n    case Top:\n      x = position || 0;\n      y = -offset;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.y1));\n      bounds.add(0, -s).add(range, 0);\n      if (title) axisTitleLayout(view, title, s, titlePadding, dl, 0, -1, bounds);\n      break;\n\n    case Left:\n      x = -offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, -bounds.x1));\n      bounds.add(-s, 0).add(0, range);\n      if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, -1, bounds);\n      break;\n\n    case Right:\n      x = width + offset;\n      y = position || 0;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.x2));\n      bounds.add(0, 0).add(s, range);\n      if (title) axisTitleLayout(view, title, s, titlePadding, dl, 1, 1, bounds);\n      break;\n\n    case Bottom:\n      x = position || 0;\n      y = height + offset;\n      s = Math.max(minExtent, Math.min(maxExtent, bounds.y2));\n      bounds.add(0, 0).add(range, s);\n      if (title) axisTitleLayout(view, title, s, titlePadding, 0, 0, 1, bounds);\n      break;\n\n    default:\n      x = item.x;\n      y = item.y;\n  } // update bounds\n\n\n  boundStroke(bounds.translate(x, y), item);\n\n  if (set(item, 'x', x + delta) | set(item, 'y', y + delta)) {\n    item.bounds = tempBounds;\n    view.dirty(item);\n    item.bounds = bounds;\n    view.dirty(item);\n  }\n\n  return item.mark.bounds.clear().union(bounds);\n}\n\nfunction axisTitleLayout(view, title, offset, pad, dl, isYAxis, sign, bounds) {\n  const b = title.bounds;\n\n  if (title.auto) {\n    const v = sign * (offset + dl + pad);\n    let dx = 0,\n        dy = 0;\n    view.dirty(title);\n    isYAxis ? dx = (title.x || 0) - (title.x = v) : dy = (title.y || 0) - (title.y = v);\n    title.mark.bounds.clear().union(b.translate(-dx, -dy));\n    view.dirty(title);\n  }\n\n  bounds.union(b);\n}\n\nconst min = (a, b) => Math.floor(Math.min(a, b));\n\nconst max = (a, b) => Math.ceil(Math.max(a, b));\n\nfunction gridLayoutGroups(group) {\n  var groups = group.items,\n      n = groups.length,\n      i = 0,\n      mark,\n      items;\n  const views = {\n    marks: [],\n    rowheaders: [],\n    rowfooters: [],\n    colheaders: [],\n    colfooters: [],\n    rowtitle: null,\n    coltitle: null\n  }; // layout axes, gather legends, collect bounds\n\n  for (; i < n; ++i) {\n    mark = groups[i];\n    items = mark.items;\n\n    if (mark.marktype === Group) {\n      switch (mark.role) {\n        case AxisRole:\n        case LegendRole:\n        case TitleRole:\n          break;\n\n        case RowHeader:\n          views.rowheaders.push(...items);\n          break;\n\n        case RowFooter:\n          views.rowfooters.push(...items);\n          break;\n\n        case ColHeader:\n          views.colheaders.push(...items);\n          break;\n\n        case ColFooter:\n          views.colfooters.push(...items);\n          break;\n\n        case RowTitle:\n          views.rowtitle = items[0];\n          break;\n\n        case ColTitle:\n          views.coltitle = items[0];\n          break;\n\n        default:\n          views.marks.push(...items);\n      }\n    }\n  }\n\n  return views;\n}\n\nfunction bboxFlush(item) {\n  return new Bounds().set(0, 0, item.width || 0, item.height || 0);\n}\n\nfunction bboxFull(item) {\n  const b = item.bounds.clone();\n  return b.empty() ? b.set(0, 0, 0, 0) : b.translate(-(item.x || 0), -(item.y || 0));\n}\n\nfunction get(opt, key, d) {\n  const v = isObject(opt) ? opt[key] : opt;\n  return v != null ? v : d !== undefined ? d : 0;\n}\n\nfunction offsetValue(v) {\n  return v < 0 ? Math.ceil(-v) : 0;\n}\n\nfunction gridLayout(view, groups, opt) {\n  var dirty = !opt.nodirty,\n      bbox = opt.bounds === Flush ? bboxFlush : bboxFull,\n      bounds = tempBounds.set(0, 0, 0, 0),\n      alignCol = get(opt.align, Column),\n      alignRow = get(opt.align, Row),\n      padCol = get(opt.padding, Column),\n      padRow = get(opt.padding, Row),\n      ncols = opt.columns || groups.length,\n      nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n      n = groups.length,\n      xOffset = Array(n),\n      xExtent = Array(ncols),\n      xMax = 0,\n      yOffset = Array(n),\n      yExtent = Array(nrows),\n      yMax = 0,\n      dx = Array(n),\n      dy = Array(n),\n      boxes = Array(n),\n      m,\n      i,\n      c,\n      r,\n      b,\n      g,\n      px,\n      py,\n      x,\n      y,\n      offset;\n\n  for (i = 0; i < ncols; ++i) xExtent[i] = 0;\n\n  for (i = 0; i < nrows; ++i) yExtent[i] = 0; // determine offsets for each group\n\n\n  for (i = 0; i < n; ++i) {\n    g = groups[i];\n    b = boxes[i] = bbox(g);\n    g.x = g.x || 0;\n    dx[i] = 0;\n    g.y = g.y || 0;\n    dy[i] = 0;\n    c = i % ncols;\n    r = ~~(i / ncols);\n    xMax = Math.max(xMax, px = Math.ceil(b.x2));\n    yMax = Math.max(yMax, py = Math.ceil(b.y2));\n    xExtent[c] = Math.max(xExtent[c], px);\n    yExtent[r] = Math.max(yExtent[r], py);\n    xOffset[i] = padCol + offsetValue(b.x1);\n    yOffset[i] = padRow + offsetValue(b.y1);\n    if (dirty) view.dirty(groups[i]);\n  } // set initial alignment offsets\n\n\n  for (i = 0; i < n; ++i) {\n    if (i % ncols === 0) xOffset[i] = 0;\n    if (i < ncols) yOffset[i] = 0;\n  } // enforce column alignment constraints\n\n\n  if (alignCol === Each) {\n    for (c = 1; c < ncols; ++c) {\n      for (offset = 0, i = c; i < n; i += ncols) {\n        if (offset < xOffset[i]) offset = xOffset[i];\n      }\n\n      for (i = c; i < n; i += ncols) {\n        xOffset[i] = offset + xExtent[c - 1];\n      }\n    }\n  } else if (alignCol === All) {\n    for (offset = 0, i = 0; i < n; ++i) {\n      if (i % ncols && offset < xOffset[i]) offset = xOffset[i];\n    }\n\n    for (i = 0; i < n; ++i) {\n      if (i % ncols) xOffset[i] = offset + xMax;\n    }\n  } else {\n    for (alignCol = false, c = 1; c < ncols; ++c) {\n      for (i = c; i < n; i += ncols) {\n        xOffset[i] += xExtent[c - 1];\n      }\n    }\n  } // enforce row alignment constraints\n\n\n  if (alignRow === Each) {\n    for (r = 1; r < nrows; ++r) {\n      for (offset = 0, i = r * ncols, m = i + ncols; i < m; ++i) {\n        if (offset < yOffset[i]) offset = yOffset[i];\n      }\n\n      for (i = r * ncols; i < m; ++i) {\n        yOffset[i] = offset + yExtent[r - 1];\n      }\n    }\n  } else if (alignRow === All) {\n    for (offset = 0, i = ncols; i < n; ++i) {\n      if (offset < yOffset[i]) offset = yOffset[i];\n    }\n\n    for (i = ncols; i < n; ++i) {\n      yOffset[i] = offset + yMax;\n    }\n  } else {\n    for (alignRow = false, r = 1; r < nrows; ++r) {\n      for (i = r * ncols, m = i + ncols; i < m; ++i) {\n        yOffset[i] += yExtent[r - 1];\n      }\n    }\n  } // perform horizontal grid layout\n\n\n  for (x = 0, i = 0; i < n; ++i) {\n    x = xOffset[i] + (i % ncols ? x : 0);\n    dx[i] += x - groups[i].x;\n  } // perform vertical grid layout\n\n\n  for (c = 0; c < ncols; ++c) {\n    for (y = 0, i = c; i < n; i += ncols) {\n      y += yOffset[i];\n      dy[i] += y - groups[i].y;\n    }\n  } // perform horizontal centering\n\n\n  if (alignCol && get(opt.center, Column) && nrows > 1) {\n    for (i = 0; i < n; ++i) {\n      b = alignCol === All ? xMax : xExtent[i % ncols];\n      x = b - boxes[i].x2 - groups[i].x - dx[i];\n      if (x > 0) dx[i] += x / 2;\n    }\n  } // perform vertical centering\n\n\n  if (alignRow && get(opt.center, Row) && ncols !== 1) {\n    for (i = 0; i < n; ++i) {\n      b = alignRow === All ? yMax : yExtent[~~(i / ncols)];\n      y = b - boxes[i].y2 - groups[i].y - dy[i];\n      if (y > 0) dy[i] += y / 2;\n    }\n  } // position grid relative to anchor\n\n\n  for (i = 0; i < n; ++i) {\n    bounds.union(boxes[i].translate(dx[i], dy[i]));\n  }\n\n  x = get(opt.anchor, X);\n  y = get(opt.anchor, Y);\n\n  switch (get(opt.anchor, Column)) {\n    case End:\n      x -= bounds.width();\n      break;\n\n    case Middle:\n      x -= bounds.width() / 2;\n  }\n\n  switch (get(opt.anchor, Row)) {\n    case End:\n      y -= bounds.height();\n      break;\n\n    case Middle:\n      y -= bounds.height() / 2;\n  }\n\n  x = Math.round(x);\n  y = Math.round(y); // update mark positions, bounds, dirty\n\n  bounds.clear();\n\n  for (i = 0; i < n; ++i) {\n    groups[i].mark.bounds.clear();\n  }\n\n  for (i = 0; i < n; ++i) {\n    g = groups[i];\n    g.x += dx[i] += x;\n    g.y += dy[i] += y;\n    bounds.union(g.mark.bounds.union(g.bounds.translate(dx[i], dy[i])));\n    if (dirty) view.dirty(g);\n  }\n\n  return bounds;\n}\nfunction trellisLayout(view, group, opt) {\n  var views = gridLayoutGroups(group),\n      groups = views.marks,\n      bbox = opt.bounds === Flush ? boundFlush : boundFull,\n      off = opt.offset,\n      ncols = opt.columns || groups.length,\n      nrows = ncols <= 0 ? 1 : Math.ceil(groups.length / ncols),\n      cells = nrows * ncols,\n      x,\n      y,\n      x2,\n      y2,\n      anchor,\n      band,\n      offset; // -- initial grid layout\n\n  const bounds = gridLayout(view, groups, opt);\n  if (bounds.empty()) bounds.set(0, 0, 0, 0); // empty grid\n  // -- layout grid headers and footers --\n  // perform row header layout\n\n  if (views.rowheaders) {\n    band = get(opt.headerBand, Row, null);\n    x = layoutHeaders(view, views.rowheaders, groups, ncols, nrows, -get(off, 'rowHeader'), min, 0, bbox, 'x1', 0, ncols, 1, band);\n  } // perform column header layout\n\n\n  if (views.colheaders) {\n    band = get(opt.headerBand, Column, null);\n    y = layoutHeaders(view, views.colheaders, groups, ncols, ncols, -get(off, 'columnHeader'), min, 1, bbox, 'y1', 0, 1, ncols, band);\n  } // perform row footer layout\n\n\n  if (views.rowfooters) {\n    band = get(opt.footerBand, Row, null);\n    x2 = layoutHeaders(view, views.rowfooters, groups, ncols, nrows, get(off, 'rowFooter'), max, 0, bbox, 'x2', ncols - 1, ncols, 1, band);\n  } // perform column footer layout\n\n\n  if (views.colfooters) {\n    band = get(opt.footerBand, Column, null);\n    y2 = layoutHeaders(view, views.colfooters, groups, ncols, ncols, get(off, 'columnFooter'), max, 1, bbox, 'y2', cells - ncols, 1, ncols, band);\n  } // perform row title layout\n\n\n  if (views.rowtitle) {\n    anchor = get(opt.titleAnchor, Row);\n    offset = get(off, 'rowTitle');\n    offset = anchor === End ? x2 + offset : x - offset;\n    band = get(opt.titleBand, Row, 0.5);\n    layoutTitle(view, views.rowtitle, offset, 0, bounds, band);\n  } // perform column title layout\n\n\n  if (views.coltitle) {\n    anchor = get(opt.titleAnchor, Column);\n    offset = get(off, 'columnTitle');\n    offset = anchor === End ? y2 + offset : y - offset;\n    band = get(opt.titleBand, Column, 0.5);\n    layoutTitle(view, views.coltitle, offset, 1, bounds, band);\n  }\n}\n\nfunction boundFlush(item, field) {\n  return field === 'x1' ? item.x || 0 : field === 'y1' ? item.y || 0 : field === 'x2' ? (item.x || 0) + (item.width || 0) : field === 'y2' ? (item.y || 0) + (item.height || 0) : undefined;\n}\n\nfunction boundFull(item, field) {\n  return item.bounds[field];\n}\n\nfunction layoutHeaders(view, headers, groups, ncols, limit, offset, agg, isX, bound, bf, start, stride, back, band) {\n  var n = groups.length,\n      init = 0,\n      edge = 0,\n      i,\n      j,\n      k,\n      m,\n      b,\n      h,\n      g,\n      x,\n      y; // if no groups, early exit and return 0\n\n  if (!n) return init; // compute margin\n\n  for (i = start; i < n; i += stride) {\n    if (groups[i]) init = agg(init, bound(groups[i], bf));\n  } // if no headers, return margin calculation\n\n\n  if (!headers.length) return init; // check if number of headers exceeds number of rows or columns\n\n  if (headers.length > limit) {\n    view.warn('Grid headers exceed limit: ' + limit);\n    headers = headers.slice(0, limit);\n  } // apply offset\n\n\n  init += offset; // clear mark bounds for all headers\n\n  for (j = 0, m = headers.length; j < m; ++j) {\n    view.dirty(headers[j]);\n    headers[j].mark.bounds.clear();\n  } // layout each header\n\n\n  for (i = start, j = 0, m = headers.length; j < m; ++j, i += stride) {\n    h = headers[j];\n    b = h.mark.bounds; // search for nearest group to align to\n    // necessary if table has empty cells\n\n    for (k = i; k >= 0 && (g = groups[k]) == null; k -= back); // assign coordinates and update bounds\n\n\n    if (isX) {\n      x = band == null ? g.x : Math.round(g.bounds.x1 + band * g.bounds.width());\n      y = init;\n    } else {\n      x = init;\n      y = band == null ? g.y : Math.round(g.bounds.y1 + band * g.bounds.height());\n    }\n\n    b.union(h.bounds.translate(x - (h.x || 0), y - (h.y || 0)));\n    h.x = x;\n    h.y = y;\n    view.dirty(h); // update current edge of layout bounds\n\n    edge = agg(edge, b[bf]);\n  }\n\n  return edge;\n}\n\nfunction layoutTitle(view, g, offset, isX, bounds, band) {\n  if (!g) return;\n  view.dirty(g); // compute title coordinates\n\n  var x = offset,\n      y = offset;\n  isX ? x = Math.round(bounds.x1 + band * bounds.width()) : y = Math.round(bounds.y1 + band * bounds.height()); // assign coordinates and update bounds\n\n  g.bounds.translate(x - (g.x || 0), y - (g.y || 0));\n  g.mark.bounds.clear().union(g.bounds);\n  g.x = x;\n  g.y = y; // queue title for redraw\n\n  view.dirty(g);\n}\n\nfunction lookup$1(config, orient) {\n  const opt = config[orient] || {};\n  return (key, d) => opt[key] != null ? opt[key] : config[key] != null ? config[key] : d;\n} // if legends specify offset directly, use the maximum specified value\n\n\nfunction offsets(legends, value) {\n  let max = -Infinity;\n  legends.forEach(item => {\n    if (item.offset != null) max = Math.max(max, item.offset);\n  });\n  return max > -Infinity ? max : value;\n}\n\nfunction legendParams(g, orient, config, xb, yb, w, h) {\n  const _ = lookup$1(config, orient),\n        offset = offsets(g, _('offset', 0)),\n        anchor = _('anchor', Start),\n        mult = anchor === End ? 1 : anchor === Middle ? 0.5 : 0;\n\n  const p = {\n    align: Each,\n    bounds: _('bounds', Flush),\n    columns: _('direction') === 'vertical' ? 1 : g.length,\n    padding: _('margin', 8),\n    center: _('center'),\n    nodirty: true\n  };\n\n  switch (orient) {\n    case Left:\n      p.anchor = {\n        x: Math.floor(xb.x1) - offset,\n        column: End,\n        y: mult * (h || xb.height() + 2 * xb.y1),\n        row: anchor\n      };\n      break;\n\n    case Right:\n      p.anchor = {\n        x: Math.ceil(xb.x2) + offset,\n        y: mult * (h || xb.height() + 2 * xb.y1),\n        row: anchor\n      };\n      break;\n\n    case Top:\n      p.anchor = {\n        y: Math.floor(yb.y1) - offset,\n        row: End,\n        x: mult * (w || yb.width() + 2 * yb.x1),\n        column: anchor\n      };\n      break;\n\n    case Bottom:\n      p.anchor = {\n        y: Math.ceil(yb.y2) + offset,\n        x: mult * (w || yb.width() + 2 * yb.x1),\n        column: anchor\n      };\n      break;\n\n    case TopLeft:\n      p.anchor = {\n        x: offset,\n        y: offset\n      };\n      break;\n\n    case TopRight:\n      p.anchor = {\n        x: w - offset,\n        y: offset,\n        column: End\n      };\n      break;\n\n    case BottomLeft:\n      p.anchor = {\n        x: offset,\n        y: h - offset,\n        row: End\n      };\n      break;\n\n    case BottomRight:\n      p.anchor = {\n        x: w - offset,\n        y: h - offset,\n        column: End,\n        row: End\n      };\n      break;\n  }\n\n  return p;\n}\nfunction legendLayout(view, legend) {\n  var item = legend.items[0],\n      datum = item.datum,\n      orient = item.orient,\n      bounds = item.bounds,\n      x = item.x,\n      y = item.y,\n      w,\n      h; // cache current bounds for later comparison\n\n  item._bounds ? item._bounds.clear().union(bounds) : item._bounds = bounds.clone();\n  bounds.clear(); // adjust legend to accommodate padding and title\n\n  legendGroupLayout(view, item, item.items[0].items[0]); // aggregate bounds to determine size, and include origin\n\n  bounds = legendBounds(item, bounds);\n  w = 2 * item.padding;\n  h = 2 * item.padding;\n\n  if (!bounds.empty()) {\n    w = Math.ceil(bounds.width() + w);\n    h = Math.ceil(bounds.height() + h);\n  }\n\n  if (datum.type === Symbols) {\n    legendEntryLayout(item.items[0].items[0].items[0].items);\n  }\n\n  if (orient !== None) {\n    item.x = x = 0;\n    item.y = y = 0;\n  }\n\n  item.width = w;\n  item.height = h;\n  boundStroke(bounds.set(x, y, x + w, y + h), item);\n  item.mark.bounds.clear().union(bounds);\n  return item;\n}\n\nfunction legendBounds(item, b) {\n  // aggregate item bounds\n  item.items.forEach(_ => b.union(_.bounds)); // anchor to legend origin\n\n  b.x1 = item.padding;\n  b.y1 = item.padding;\n  return b;\n}\n\nfunction legendGroupLayout(view, item, entry) {\n  var pad = item.padding,\n      ex = pad - entry.x,\n      ey = pad - entry.y;\n\n  if (!item.datum.title) {\n    if (ex || ey) translate(view, entry, ex, ey);\n  } else {\n    var title = item.items[1].items[0],\n        anchor = title.anchor,\n        tpad = item.titlePadding || 0,\n        tx = pad - title.x,\n        ty = pad - title.y;\n\n    switch (title.orient) {\n      case Left:\n        ex += Math.ceil(title.bounds.width()) + tpad;\n        break;\n\n      case Right:\n      case Bottom:\n        break;\n\n      default:\n        ey += title.bounds.height() + tpad;\n    }\n\n    if (ex || ey) translate(view, entry, ex, ey);\n\n    switch (title.orient) {\n      case Left:\n        ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n        break;\n\n      case Right:\n        tx += legendTitleOffset(item, entry, title, End, 0, 0) + tpad;\n        ty += legendTitleOffset(item, entry, title, anchor, 1, 1);\n        break;\n\n      case Bottom:\n        tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n        ty += legendTitleOffset(item, entry, title, End, -1, 0, 1) + tpad;\n        break;\n\n      default:\n        tx += legendTitleOffset(item, entry, title, anchor, 0, 0);\n    }\n\n    if (tx || ty) translate(view, title, tx, ty); // translate legend if title pushes into negative coordinates\n\n    if ((tx = Math.round(title.bounds.x1 - pad)) < 0) {\n      translate(view, entry, -tx, 0);\n      translate(view, title, -tx, 0);\n    }\n  }\n}\n\nfunction legendTitleOffset(item, entry, title, anchor, y, lr, noBar) {\n  const grad = item.datum.type !== 'symbol',\n        vgrad = title.datum.vgrad,\n        e = grad && (lr || !vgrad) && !noBar ? entry.items[0] : entry,\n        s = e.bounds[y ? 'y2' : 'x2'] - item.padding,\n        u = vgrad && lr ? s : 0,\n        v = vgrad && lr ? 0 : s,\n        o = y <= 0 ? 0 : multiLineOffset(title);\n  return Math.round(anchor === Start ? u : anchor === End ? v - o : 0.5 * (s - o));\n}\n\nfunction translate(view, item, dx, dy) {\n  item.x += dx;\n  item.y += dy;\n  item.bounds.translate(dx, dy);\n  item.mark.bounds.translate(dx, dy);\n  view.dirty(item);\n}\n\nfunction legendEntryLayout(entries) {\n  // get max widths for each column\n  const widths = entries.reduce((w, g) => {\n    w[g.column] = Math.max(g.bounds.x2 - g.x, w[g.column] || 0);\n    return w;\n  }, {}); // set dimensions of legend entry groups\n\n  entries.forEach(g => {\n    g.width = widths[g.column];\n    g.height = g.bounds.y2 - g.y;\n  });\n}\n\nfunction titleLayout(view, mark, width, height, viewBounds) {\n  var group = mark.items[0],\n      frame = group.frame,\n      orient = group.orient,\n      anchor = group.anchor,\n      offset = group.offset,\n      padding = group.padding,\n      title = group.items[0].items[0],\n      subtitle = group.items[1] && group.items[1].items[0],\n      end = orient === Left || orient === Right ? height : width,\n      start = 0,\n      x = 0,\n      y = 0,\n      sx = 0,\n      sy = 0,\n      pos;\n\n  if (frame !== Group) {\n    orient === Left ? (start = viewBounds.y2, end = viewBounds.y1) : orient === Right ? (start = viewBounds.y1, end = viewBounds.y2) : (start = viewBounds.x1, end = viewBounds.x2);\n  } else if (orient === Left) {\n    start = height, end = 0;\n  }\n\n  pos = anchor === Start ? start : anchor === End ? end : (start + end) / 2;\n\n  if (subtitle && subtitle.text) {\n    // position subtitle\n    switch (orient) {\n      case Top:\n      case Bottom:\n        sy = title.bounds.height() + padding;\n        break;\n\n      case Left:\n        sx = title.bounds.width() + padding;\n        break;\n\n      case Right:\n        sx = -title.bounds.width() - padding;\n        break;\n    }\n\n    tempBounds.clear().union(subtitle.bounds);\n    tempBounds.translate(sx - (subtitle.x || 0), sy - (subtitle.y || 0));\n\n    if (set(subtitle, 'x', sx) | set(subtitle, 'y', sy)) {\n      view.dirty(subtitle);\n      subtitle.bounds.clear().union(tempBounds);\n      subtitle.mark.bounds.clear().union(tempBounds);\n      view.dirty(subtitle);\n    }\n\n    tempBounds.clear().union(subtitle.bounds);\n  } else {\n    tempBounds.clear();\n  }\n\n  tempBounds.union(title.bounds); // position title group\n\n  switch (orient) {\n    case Top:\n      x = pos;\n      y = viewBounds.y1 - tempBounds.height() - offset;\n      break;\n\n    case Left:\n      x = viewBounds.x1 - tempBounds.width() - offset;\n      y = pos;\n      break;\n\n    case Right:\n      x = viewBounds.x2 + tempBounds.width() + offset;\n      y = pos;\n      break;\n\n    case Bottom:\n      x = pos;\n      y = viewBounds.y2 + offset;\n      break;\n\n    default:\n      x = group.x;\n      y = group.y;\n  }\n\n  if (set(group, 'x', x) | set(group, 'y', y)) {\n    tempBounds.translate(x, y);\n    view.dirty(group);\n    group.bounds.clear().union(tempBounds);\n    mark.bounds.clear().union(tempBounds);\n    view.dirty(group);\n  }\n\n  return group.bounds;\n}\n\n/**\n * Layout view elements such as axes and legends.\n * Also performs size adjustments.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {object} params.mark - Scenegraph mark of groups to layout.\n */\n\nfunction ViewLayout(params) {\n  Transform.call(this, null, params);\n}\ninherits(ViewLayout, Transform, {\n  transform(_, pulse) {\n    const view = pulse.dataflow;\n\n    _.mark.items.forEach(group => {\n      if (_.layout) trellisLayout(view, group, _.layout);\n      layoutGroup(view, group, _);\n    });\n\n    return shouldReflow(_.mark.group) ? pulse.reflow() : pulse;\n  }\n\n});\n\nfunction shouldReflow(group) {\n  // We typically should reflow if layout is invoked (#2568), as child items\n  // may have resized and reflow ensures group bounds are re-calculated.\n  // However, legend entries have a special exception to avoid instability.\n  // For example, if a selected legend symbol gains a stroke on hover,\n  // we don't want to re-position subsequent elements in the legend.\n  return group && group.mark.role !== 'legend-entry';\n}\n\nfunction layoutGroup(view, group, _) {\n  var items = group.items,\n      width = Math.max(0, group.width || 0),\n      height = Math.max(0, group.height || 0),\n      viewBounds = new Bounds().set(0, 0, width, height),\n      xBounds = viewBounds.clone(),\n      yBounds = viewBounds.clone(),\n      legends = [],\n      title,\n      mark,\n      orient,\n      b,\n      i,\n      n; // layout axes, gather legends, collect bounds\n\n  for (i = 0, n = items.length; i < n; ++i) {\n    mark = items[i];\n\n    switch (mark.role) {\n      case AxisRole:\n        b = isYAxis(mark) ? xBounds : yBounds;\n        b.union(axisLayout(view, mark, width, height));\n        break;\n\n      case TitleRole:\n        title = mark;\n        break;\n\n      case LegendRole:\n        legends.push(legendLayout(view, mark));\n        break;\n\n      case FrameRole:\n      case ScopeRole:\n      case RowHeader:\n      case RowFooter:\n      case RowTitle:\n      case ColHeader:\n      case ColFooter:\n      case ColTitle:\n        xBounds.union(mark.bounds);\n        yBounds.union(mark.bounds);\n        break;\n\n      default:\n        viewBounds.union(mark.bounds);\n    }\n  } // layout legends, adjust viewBounds\n\n\n  if (legends.length) {\n    // group legends by orient\n    const l = {};\n    legends.forEach(item => {\n      orient = item.orient || Right;\n      if (orient !== None) (l[orient] || (l[orient] = [])).push(item);\n    }); // perform grid layout for each orient group\n\n    for (const orient in l) {\n      const g = l[orient];\n      gridLayout(view, g, legendParams(g, orient, _.legends, xBounds, yBounds, width, height));\n    } // update view bounds\n\n\n    legends.forEach(item => {\n      const b = item.bounds;\n\n      if (!b.equals(item._bounds)) {\n        item.bounds = item._bounds;\n        view.dirty(item); // dirty previous location\n\n        item.bounds = b;\n        view.dirty(item);\n      }\n\n      if (_.autosize && _.autosize.type === Fit) {\n        // For autosize fit, incorporate the orthogonal dimension only.\n        // Legends that overrun the chart area will then be clipped;\n        // otherwise the chart area gets reduced to nothing!\n        switch (item.orient) {\n          case Left:\n          case Right:\n            viewBounds.add(b.x1, 0).add(b.x2, 0);\n            break;\n\n          case Top:\n          case Bottom:\n            viewBounds.add(0, b.y1).add(0, b.y2);\n        }\n      } else {\n        viewBounds.union(b);\n      }\n    });\n  } // combine bounding boxes\n\n\n  viewBounds.union(xBounds).union(yBounds); // layout title, adjust bounds\n\n  if (title) {\n    viewBounds.union(titleLayout(view, title, width, height, viewBounds));\n  } // override aggregated view bounds if content is clipped\n\n\n  if (group.clip) {\n    viewBounds.set(0, 0, group.width || 0, group.height || 0);\n  } // perform size adjustment\n\n\n  viewSizeLayout(view, group, viewBounds, _);\n}\n\nfunction viewSizeLayout(view, group, viewBounds, _) {\n  const auto = _.autosize || {},\n        type = auto.type;\n  if (view._autosize < 1 || !type) return;\n  let viewWidth = view._width,\n      viewHeight = view._height,\n      width = Math.max(0, group.width || 0),\n      left = Math.max(0, Math.ceil(-viewBounds.x1)),\n      height = Math.max(0, group.height || 0),\n      top = Math.max(0, Math.ceil(-viewBounds.y1));\n  const right = Math.max(0, Math.ceil(viewBounds.x2 - width)),\n        bottom = Math.max(0, Math.ceil(viewBounds.y2 - height));\n\n  if (auto.contains === Padding) {\n    const padding = view.padding();\n    viewWidth -= padding.left + padding.right;\n    viewHeight -= padding.top + padding.bottom;\n  }\n\n  if (type === None) {\n    left = 0;\n    top = 0;\n    width = viewWidth;\n    height = viewHeight;\n  } else if (type === Fit) {\n    width = Math.max(0, viewWidth - left - right);\n    height = Math.max(0, viewHeight - top - bottom);\n  } else if (type === FitX) {\n    width = Math.max(0, viewWidth - left - right);\n    viewHeight = height + top + bottom;\n  } else if (type === FitY) {\n    viewWidth = width + left + right;\n    height = Math.max(0, viewHeight - top - bottom);\n  } else if (type === Pad) {\n    viewWidth = width + left + right;\n    viewHeight = height + top + bottom;\n  }\n\n  view._resizeView(viewWidth, viewHeight, width, height, [left, top], auto.resize);\n}\n\nexport { Bound as bound, Identifier as identifier, Mark as mark, Overlap as overlap, Render as render, ViewLayout as viewlayout };\n","import { Transform, ingest, tupleid, stableCompare } from 'vega-dataflow';\nimport { tickCount, tickFormat, validTicks, tickValues, SymbolLegend, labelFormat, labelValues, GradientLegend, scaleFraction, labelFraction, scale, isContinuous, Sequential, Linear, Time, UTC, Pow, Sqrt, Ordinal, scaleImplicit, Log, Symlog, isLogarithmic, BinOrdinal, bandSpace, isInterpolating, interpolateRange, quantizeInterpolator, interpolateColors, interpolate, Band, Point, scheme, Threshold, Quantile, Quantize, Diverging } from 'vega-scale';\nimport { inherits, isArray, error, fastmap, falsy, isFunction, constant, peek, one, toSet, isString, zoomLog, zoomPow, zoomSymlog, zoomLinear, stringValue } from 'vega-util';\nimport { sum, range } from 'd3-array';\nimport { interpolateRound, interpolate as interpolate$1 } from 'd3-interpolate';\n\n/**\n * Generates axis ticks for visualizing a spatial scale.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Scale} params.scale - The scale to generate ticks for.\n * @param {*} [params.count=10] - The approximate number of ticks, or\n *   desired tick interval, to use.\n * @param {Array<*>} [params.values] - The exact tick values to use.\n *   These must be legal domain values for the provided scale.\n *   If provided, the count argument is ignored.\n * @param {function(*):string} [params.formatSpecifier] - A format specifier\n *   to use in conjunction with scale.tickFormat. Legal values are\n *   any valid d3 4.0 format specifier.\n * @param {function(*):string} [params.format] - The format function to use.\n *   If provided, the formatSpecifier argument is ignored.\n */\n\nfunction AxisTicks(params) {\n  Transform.call(this, null, params);\n}\ninherits(AxisTicks, Transform, {\n  transform(_, pulse) {\n    if (this.value && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        ticks = this.value,\n        scale = _.scale,\n        tally = _.count == null ? _.values ? _.values.length : 10 : _.count,\n        count = tickCount(scale, tally, _.minstep),\n        format = _.format || tickFormat(locale, scale, count, _.formatSpecifier, _.formatType, !!_.values),\n        values = _.values ? validTicks(scale, _.values, count) : tickValues(scale, count);\n    if (ticks) out.rem = ticks;\n    ticks = values.map((value, i) => ingest({\n      index: i / (values.length - 1 || 1),\n      value: value,\n      label: format(value)\n    }));\n\n    if (_.extra && ticks.length) {\n      // add an extra tick pegged to the initial domain value\n      // this is used to generate axes with 'binned' domains\n      ticks.push(ingest({\n        index: -1,\n        extra: {\n          value: ticks[0].value\n        },\n        label: ''\n      }));\n    }\n\n    out.source = ticks;\n    out.add = ticks;\n    this.value = ticks;\n    return out;\n  }\n\n});\n\n/**\n * Joins a set of data elements against a set of visual items.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): object} [params.item] - An item generator function.\n * @param {function(object): *} [params.key] - The key field associating data and visual items.\n */\n\nfunction DataJoin(params) {\n  Transform.call(this, null, params);\n}\n\nfunction defaultItemCreate() {\n  return ingest({});\n}\n\nfunction newMap(key) {\n  const map = fastmap().test(t => t.exit);\n\n  map.lookup = t => map.get(key(t));\n\n  return map;\n}\n\ninherits(DataJoin, Transform, {\n  transform(_, pulse) {\n    var df = pulse.dataflow,\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        item = _.item || defaultItemCreate,\n        key = _.key || tupleid,\n        map = this.value; // prevent transient (e.g., hover) requests from\n    // cascading across marks derived from marks\n\n    if (isArray(out.encode)) {\n      out.encode = null;\n    }\n\n    if (map && (_.modified('key') || pulse.modified(key))) {\n      error('DataJoin does not support modified key function or fields.');\n    }\n\n    if (!map) {\n      pulse = pulse.addAll();\n      this.value = map = newMap(key);\n    }\n\n    pulse.visit(pulse.ADD, t => {\n      const k = key(t);\n      let x = map.get(k);\n\n      if (x) {\n        if (x.exit) {\n          map.empty--;\n          out.add.push(x);\n        } else {\n          out.mod.push(x);\n        }\n      } else {\n        x = item(t);\n        map.set(k, x);\n        out.add.push(x);\n      }\n\n      x.datum = t;\n      x.exit = false;\n    });\n    pulse.visit(pulse.MOD, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (x) {\n        x.datum = t;\n        out.mod.push(x);\n      }\n    });\n    pulse.visit(pulse.REM, t => {\n      const k = key(t),\n            x = map.get(k);\n\n      if (t === x.datum && !x.exit) {\n        out.rem.push(x);\n        x.exit = true;\n        ++map.empty;\n      }\n    });\n    if (pulse.changed(pulse.ADD_MOD)) out.modifies('datum');\n\n    if (pulse.clean() || _.clean && map.empty > df.cleanThreshold) {\n      df.runAfter(map.clean);\n    }\n\n    return out;\n  }\n\n});\n\n/**\n * Invokes encoding functions for visual items.\n * @constructor\n * @param {object} params - The parameters to the encoding functions. This\n *   parameter object will be passed through to all invoked encoding functions.\n * @param {object} [params.mod=false] - Flag indicating if tuples in the input\n *   mod set that are unmodified by encoders should be included in the output.\n * @param {object} param.encoders - The encoding functions\n * @param {function(object, object): boolean} [param.encoders.update] - Update encoding set\n * @param {function(object, object): boolean} [param.encoders.enter] - Enter encoding set\n * @param {function(object, object): boolean} [param.encoders.exit] - Exit encoding set\n */\n\nfunction Encode(params) {\n  Transform.call(this, null, params);\n}\ninherits(Encode, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ADD_REM),\n        fmod = _.mod || false,\n        encoders = _.encoders,\n        encode = pulse.encode; // if an array, the encode directive includes additional sets\n    // that must be defined in order for the primary set to be invoked\n    // e.g., only run the update set if the hover set is defined\n\n    if (isArray(encode)) {\n      if (out.changed() || encode.every(e => encoders[e])) {\n        encode = encode[0];\n        out.encode = null; // consume targeted encode directive\n      } else {\n        return pulse.StopPropagation;\n      }\n    } // marshall encoder functions\n\n\n    var reenter = encode === 'enter',\n        update = encoders.update || falsy,\n        enter = encoders.enter || falsy,\n        exit = encoders.exit || falsy,\n        set = (encode && !reenter ? encoders[encode] : update) || falsy;\n\n    if (pulse.changed(pulse.ADD)) {\n      pulse.visit(pulse.ADD, t => {\n        enter(t, _);\n        update(t, _);\n      });\n      out.modifies(enter.output);\n      out.modifies(update.output);\n\n      if (set !== falsy && set !== update) {\n        pulse.visit(pulse.ADD, t => {\n          set(t, _);\n        });\n        out.modifies(set.output);\n      }\n    }\n\n    if (pulse.changed(pulse.REM) && exit !== falsy) {\n      pulse.visit(pulse.REM, t => {\n        exit(t, _);\n      });\n      out.modifies(exit.output);\n    }\n\n    if (reenter || set !== falsy) {\n      const flag = pulse.MOD | (_.modified() ? pulse.REFLOW : 0);\n\n      if (reenter) {\n        pulse.visit(flag, t => {\n          const mod = enter(t, _) || fmod;\n          if (set(t, _) || mod) out.mod.push(t);\n        });\n        if (out.mod.length) out.modifies(enter.output);\n      } else {\n        pulse.visit(flag, t => {\n          if (set(t, _) || fmod) out.mod.push(t);\n        });\n      }\n\n      if (out.mod.length) out.modifies(set.output);\n    }\n\n    return out.changed() ? out : pulse.StopPropagation;\n  }\n\n});\n\n/**\n * Generates legend entries for visualizing a scale.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Scale} params.scale - The scale to generate items for.\n * @param {*} [params.count=5] - The approximate number of items, or\n *   desired tick interval, to use.\n * @param {*} [params.limit] - The maximum number of entries to\n *   include in a symbol legend.\n * @param {Array<*>} [params.values] - The exact tick values to use.\n *   These must be legal domain values for the provided scale.\n *   If provided, the count argument is ignored.\n * @param {string} [params.formatSpecifier] - A format specifier\n *   to use in conjunction with scale.tickFormat. Legal values are\n *   any valid D3 format specifier string.\n * @param {function(*):string} [params.format] - The format function to use.\n *   If provided, the formatSpecifier argument is ignored.\n */\n\nfunction LegendEntries(params) {\n  Transform.call(this, [], params);\n}\ninherits(LegendEntries, Transform, {\n  transform(_, pulse) {\n    if (this.value != null && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var locale = pulse.dataflow.locale(),\n        out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        items = this.value,\n        type = _.type || SymbolLegend,\n        scale = _.scale,\n        limit = +_.limit,\n        count = tickCount(scale, _.count == null ? 5 : _.count, _.minstep),\n        lskip = !!_.values || type === SymbolLegend,\n        format = _.format || labelFormat(locale, scale, count, type, _.formatSpecifier, _.formatType, lskip),\n        values = _.values || labelValues(scale, count),\n        domain,\n        fraction,\n        size,\n        offset,\n        ellipsis;\n    if (items) out.rem = items;\n\n    if (type === SymbolLegend) {\n      if (limit && values.length > limit) {\n        pulse.dataflow.warn('Symbol legend count exceeds limit, filtering items.');\n        items = values.slice(0, limit - 1);\n        ellipsis = true;\n      } else {\n        items = values;\n      }\n\n      if (isFunction(size = _.size)) {\n        // if first value maps to size zero, remove from list (vega#717)\n        if (!_.values && scale(items[0]) === 0) {\n          items = items.slice(1);\n        } // compute size offset for legend entries\n\n\n        offset = items.reduce((max, value) => Math.max(max, size(value, _)), 0);\n      } else {\n        size = constant(offset = size || 8);\n      }\n\n      items = items.map((value, index) => ingest({\n        index: index,\n        label: format(value, index, items),\n        value: value,\n        offset: offset,\n        size: size(value, _)\n      }));\n\n      if (ellipsis) {\n        ellipsis = values[items.length];\n        items.push(ingest({\n          index: items.length,\n          label: \"\\u2026\".concat(values.length - items.length, \" entries\"),\n          value: ellipsis,\n          offset: offset,\n          size: size(ellipsis, _)\n        }));\n      }\n    } else if (type === GradientLegend) {\n      domain = scale.domain(), fraction = scaleFraction(scale, domain[0], peek(domain)); // if automatic label generation produces 2 or fewer values,\n      // use the domain end points instead (fixes vega/vega#1364)\n\n      if (values.length < 3 && !_.values && domain[0] !== peek(domain)) {\n        values = [domain[0], peek(domain)];\n      }\n\n      items = values.map((value, index) => ingest({\n        index: index,\n        label: format(value, index, values),\n        value: value,\n        perc: fraction(value)\n      }));\n    } else {\n      size = values.length - 1;\n      fraction = labelFraction(scale);\n      items = values.map((value, index) => ingest({\n        index: index,\n        label: format(value, index, values),\n        value: value,\n        perc: index ? fraction(value) : 0,\n        perc2: index === size ? 1 : fraction(values[index + 1])\n      }));\n    }\n\n    out.source = items;\n    out.add = items;\n    this.value = items;\n    return out;\n  }\n\n});\n\nconst sourceX = t => t.source.x;\n\nconst sourceY = t => t.source.y;\n\nconst targetX = t => t.target.x;\n\nconst targetY = t => t.target.y;\n/**\n * Layout paths linking source and target elements.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\n\nfunction LinkPath(params) {\n  Transform.call(this, {}, params);\n}\nLinkPath.Definition = {\n  'type': 'LinkPath',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'sourceX',\n    'type': 'field',\n    'default': 'source.x'\n  }, {\n    'name': 'sourceY',\n    'type': 'field',\n    'default': 'source.y'\n  }, {\n    'name': 'targetX',\n    'type': 'field',\n    'default': 'target.x'\n  }, {\n    'name': 'targetY',\n    'type': 'field',\n    'default': 'target.y'\n  }, {\n    'name': 'orient',\n    'type': 'enum',\n    'default': 'vertical',\n    'values': ['horizontal', 'vertical', 'radial']\n  }, {\n    'name': 'shape',\n    'type': 'enum',\n    'default': 'line',\n    'values': ['line', 'arc', 'curve', 'diagonal', 'orthogonal']\n  }, {\n    'name': 'require',\n    'type': 'signal'\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'path'\n  }]\n};\ninherits(LinkPath, Transform, {\n  transform(_, pulse) {\n    var sx = _.sourceX || sourceX,\n        sy = _.sourceY || sourceY,\n        tx = _.targetX || targetX,\n        ty = _.targetY || targetY,\n        as = _.as || 'path',\n        orient = _.orient || 'vertical',\n        shape = _.shape || 'line',\n        path = Paths.get(shape + '-' + orient) || Paths.get(shape);\n\n    if (!path) {\n      error('LinkPath unsupported type: ' + _.shape + (_.orient ? '-' + _.orient : ''));\n    }\n\n    pulse.visit(pulse.SOURCE, t => {\n      t[as] = path(sx(t), sy(t), tx(t), ty(t));\n    });\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n\n});\n\nconst line = (sx, sy, tx, ty) => 'M' + sx + ',' + sy + 'L' + tx + ',' + ty;\n\nconst lineR = (sa, sr, ta, tr) => line(sr * Math.cos(sa), sr * Math.sin(sa), tr * Math.cos(ta), tr * Math.sin(ta));\n\nconst arc = (sx, sy, tx, ty) => {\n  var dx = tx - sx,\n      dy = ty - sy,\n      rr = Math.sqrt(dx * dx + dy * dy) / 2,\n      ra = 180 * Math.atan2(dy, dx) / Math.PI;\n  return 'M' + sx + ',' + sy + 'A' + rr + ',' + rr + ' ' + ra + ' 0 1' + ' ' + tx + ',' + ty;\n};\n\nconst arcR = (sa, sr, ta, tr) => arc(sr * Math.cos(sa), sr * Math.sin(sa), tr * Math.cos(ta), tr * Math.sin(ta));\n\nconst curve = (sx, sy, tx, ty) => {\n  const dx = tx - sx,\n        dy = ty - sy,\n        ix = 0.2 * (dx + dy),\n        iy = 0.2 * (dy - dx);\n  return 'M' + sx + ',' + sy + 'C' + (sx + ix) + ',' + (sy + iy) + ' ' + (tx + iy) + ',' + (ty - ix) + ' ' + tx + ',' + ty;\n};\n\nconst curveR = (sa, sr, ta, tr) => curve(sr * Math.cos(sa), sr * Math.sin(sa), tr * Math.cos(ta), tr * Math.sin(ta));\n\nconst orthoX = (sx, sy, tx, ty) => 'M' + sx + ',' + sy + 'V' + ty + 'H' + tx;\n\nconst orthoY = (sx, sy, tx, ty) => 'M' + sx + ',' + sy + 'H' + tx + 'V' + ty;\n\nconst orthoR = (sa, sr, ta, tr) => {\n  const sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        sf = Math.abs(ta - sa) > Math.PI ? ta <= sa : ta > sa;\n  return 'M' + sr * sc + ',' + sr * ss + 'A' + sr + ',' + sr + ' 0 0,' + (sf ? 1 : 0) + ' ' + sr * tc + ',' + sr * ts + 'L' + tr * tc + ',' + tr * ts;\n};\n\nconst diagonalX = (sx, sy, tx, ty) => {\n  const m = (sx + tx) / 2;\n  return 'M' + sx + ',' + sy + 'C' + m + ',' + sy + ' ' + m + ',' + ty + ' ' + tx + ',' + ty;\n};\n\nconst diagonalY = (sx, sy, tx, ty) => {\n  const m = (sy + ty) / 2;\n  return 'M' + sx + ',' + sy + 'C' + sx + ',' + m + ' ' + tx + ',' + m + ' ' + tx + ',' + ty;\n};\n\nconst diagonalR = (sa, sr, ta, tr) => {\n  const sc = Math.cos(sa),\n        ss = Math.sin(sa),\n        tc = Math.cos(ta),\n        ts = Math.sin(ta),\n        mr = (sr + tr) / 2;\n  return 'M' + sr * sc + ',' + sr * ss + 'C' + mr * sc + ',' + mr * ss + ' ' + mr * tc + ',' + mr * ts + ' ' + tr * tc + ',' + tr * ts;\n};\n\nconst Paths = fastmap({\n  'line': line,\n  'line-radial': lineR,\n  'arc': arc,\n  'arc-radial': arcR,\n  'curve': curve,\n  'curve-radial': curveR,\n  'orthogonal-horizontal': orthoX,\n  'orthogonal-vertical': orthoY,\n  'orthogonal-radial': orthoR,\n  'diagonal-horizontal': diagonalX,\n  'diagonal-vertical': diagonalY,\n  'diagonal-radial': diagonalR\n});\n\n/**\n * Pie and donut chart layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size pie segments.\n * @param {number} [params.startAngle=0] - The start angle (in radians) of the layout.\n * @param {number} [params.endAngle=2π] - The end angle (in radians) of the layout.\n * @param {boolean} [params.sort] - Boolean flag for sorting sectors by value.\n */\n\nfunction Pie(params) {\n  Transform.call(this, null, params);\n}\nPie.Definition = {\n  'type': 'Pie',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'startAngle',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'endAngle',\n    'type': 'number',\n    'default': 6.283185307179586\n  }, {\n    'name': 'sort',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['startAngle', 'endAngle']\n  }]\n};\ninherits(Pie, Transform, {\n  transform(_, pulse) {\n    var as = _.as || ['startAngle', 'endAngle'],\n        startAngle = as[0],\n        endAngle = as[1],\n        field = _.field || one,\n        start = _.startAngle || 0,\n        stop = _.endAngle != null ? _.endAngle : 2 * Math.PI,\n        data = pulse.source,\n        values = data.map(field),\n        n = values.length,\n        a = start,\n        k = (stop - start) / sum(values),\n        index = range(n),\n        i,\n        t,\n        v;\n\n    if (_.sort) {\n      index.sort((a, b) => values[a] - values[b]);\n    }\n\n    for (i = 0; i < n; ++i) {\n      v = values[index[i]];\n      t = data[index[i]];\n      t[startAngle] = a;\n      t[endAngle] = a += v * k;\n    }\n\n    this.value = values;\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n\n});\n\nconst DEFAULT_COUNT = 5;\n\nfunction includeZero(scale) {\n  const type = scale.type;\n  return !scale.bins && (type === Linear || type === Pow || type === Sqrt);\n}\n\nfunction includePad(type) {\n  return isContinuous(type) && type !== Sequential;\n}\n\nconst SKIP = toSet(['set', 'modified', 'clear', 'type', 'scheme', 'schemeExtent', 'schemeCount', 'domain', 'domainMin', 'domainMid', 'domainMax', 'domainRaw', 'domainImplicit', 'nice', 'zero', 'bins', 'range', 'rangeStep', 'round', 'reverse', 'interpolate', 'interpolateGamma']);\n/**\n * Maintains a scale function mapping data values to visual channels.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction Scale(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\ninherits(Scale, Transform, {\n  transform(_, pulse) {\n    var df = pulse.dataflow,\n        scale$1 = this.value,\n        key = scaleKey(_);\n\n    if (!scale$1 || key !== scale$1.type) {\n      this.value = scale$1 = scale(key)();\n    }\n\n    for (key in _) if (!SKIP[key]) {\n      // padding is a scale property for band/point but not others\n      if (key === 'padding' && includePad(scale$1.type)) continue; // invoke scale property setter, raise warning if not found\n\n      isFunction(scale$1[key]) ? scale$1[key](_[key]) : df.warn('Unsupported scale property: ' + key);\n    }\n\n    configureRange(scale$1, _, configureBins(scale$1, _, configureDomain(scale$1, _, df)));\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  }\n\n});\n\nfunction scaleKey(_) {\n  var t = _.type,\n      d = '',\n      n; // backwards compatibility pre Vega 5.\n\n  if (t === Sequential) return Sequential + '-' + Linear;\n\n  if (isContinuousColor(_)) {\n    n = _.rawDomain ? _.rawDomain.length : _.domain ? _.domain.length + +(_.domainMid != null) : 0;\n    d = n === 2 ? Sequential + '-' : n === 3 ? Diverging + '-' : '';\n  }\n\n  return (d + t || Linear).toLowerCase();\n}\n\nfunction isContinuousColor(_) {\n  const t = _.type;\n  return isContinuous(t) && t !== Time && t !== UTC && (_.scheme || _.range && _.range.length && _.range.every(isString));\n}\n\nfunction configureDomain(scale, _, df) {\n  // check raw domain, if provided use that and exit early\n  const raw = rawDomain(scale, _.domainRaw, df);\n  if (raw > -1) return raw;\n  var domain = _.domain,\n      type = scale.type,\n      zero = _.zero || _.zero === undefined && includeZero(scale),\n      n,\n      mid;\n  if (!domain) return 0; // adjust continuous domain for minimum pixel padding\n\n  if (includePad(type) && _.padding && domain[0] !== peek(domain)) {\n    domain = padDomain(type, domain, _.range, _.padding, _.exponent, _.constant);\n  } // adjust domain based on zero, min, max settings\n\n\n  if (zero || _.domainMin != null || _.domainMax != null || _.domainMid != null) {\n    n = (domain = domain.slice()).length - 1 || 1;\n\n    if (zero) {\n      if (domain[0] > 0) domain[0] = 0;\n      if (domain[n] < 0) domain[n] = 0;\n    }\n\n    if (_.domainMin != null) domain[0] = _.domainMin;\n    if (_.domainMax != null) domain[n] = _.domainMax;\n\n    if (_.domainMid != null) {\n      mid = _.domainMid;\n      const i = mid > domain[n] ? n + 1 : mid < domain[0] ? 0 : n;\n      if (i !== n) df.warn('Scale domainMid exceeds domain min or max.', mid);\n      domain.splice(i, 0, mid);\n    }\n  } // set the scale domain\n\n\n  scale.domain(domainCheck(type, domain, df)); // if ordinal scale domain is defined, prevent implicit\n  // domain construction as side-effect of scale lookup\n\n  if (type === Ordinal) {\n    scale.unknown(_.domainImplicit ? scaleImplicit : undefined);\n  } // perform 'nice' adjustment as requested\n\n\n  if (_.nice && scale.nice) {\n    scale.nice(_.nice !== true && tickCount(scale, _.nice) || null);\n  } // return the cardinality of the domain\n\n\n  return domain.length;\n}\n\nfunction rawDomain(scale, raw, df) {\n  if (raw) {\n    scale.domain(domainCheck(scale.type, raw, df));\n    return raw.length;\n  } else {\n    return -1;\n  }\n}\n\nfunction padDomain(type, domain, range, pad, exponent, constant) {\n  var span = Math.abs(peek(range) - range[0]),\n      frac = span / (span - 2 * pad),\n      d = type === Log ? zoomLog(domain, null, frac) : type === Sqrt ? zoomPow(domain, null, frac, 0.5) : type === Pow ? zoomPow(domain, null, frac, exponent || 1) : type === Symlog ? zoomSymlog(domain, null, frac, constant || 1) : zoomLinear(domain, null, frac);\n  domain = domain.slice();\n  domain[0] = d[0];\n  domain[domain.length - 1] = d[1];\n  return domain;\n}\n\nfunction domainCheck(type, domain, df) {\n  if (isLogarithmic(type)) {\n    // sum signs of domain values\n    // if all pos or all neg, abs(sum) === domain.length\n    var s = Math.abs(domain.reduce((s, v) => s + (v < 0 ? -1 : v > 0 ? 1 : 0), 0));\n\n    if (s !== domain.length) {\n      df.warn('Log scale domain includes zero: ' + stringValue(domain));\n    }\n  }\n\n  return domain;\n}\n\nfunction configureBins(scale, _, count) {\n  let bins = _.bins;\n\n  if (bins && !isArray(bins)) {\n    // generate bin boundary array\n    const domain = scale.domain(),\n          lo = domain[0],\n          hi = peek(domain),\n          step = bins.step;\n    let start = bins.start == null ? lo : bins.start,\n        stop = bins.stop == null ? hi : bins.stop;\n    if (!step) error('Scale bins parameter missing step property.');\n    if (start < lo) start = step * Math.ceil(lo / step);\n    if (stop > hi) stop = step * Math.floor(hi / step);\n    bins = range(start, stop + step / 2, step);\n  }\n\n  if (bins) {\n    // assign bin boundaries to scale instance\n    scale.bins = bins;\n  } else if (scale.bins) {\n    // no current bins, remove bins if previously set\n    delete scale.bins;\n  } // special handling for bin-ordinal scales\n\n\n  if (scale.type === BinOrdinal) {\n    if (!bins) {\n      // the domain specifies the bins\n      scale.bins = scale.domain();\n    } else if (!_.domain && !_.domainRaw) {\n      // the bins specify the domain\n      scale.domain(bins);\n      count = bins.length;\n    }\n  } // return domain cardinality\n\n\n  return count;\n}\n\nfunction configureRange(scale, _, count) {\n  var type = scale.type,\n      round = _.round || false,\n      range = _.range; // if range step specified, calculate full range extent\n\n  if (_.rangeStep != null) {\n    range = configureRangeStep(type, _, count);\n  } // else if a range scheme is defined, use that\n  else if (_.scheme) {\n      range = configureScheme(type, _, count);\n\n      if (isFunction(range)) {\n        if (scale.interpolator) {\n          return scale.interpolator(range);\n        } else {\n          error(\"Scale type \".concat(type, \" does not support interpolating color schemes.\"));\n        }\n      }\n    } // given a range array for an interpolating scale, convert to interpolator\n\n\n  if (range && isInterpolating(type)) {\n    return scale.interpolator(interpolateColors(flip(range, _.reverse), _.interpolate, _.interpolateGamma));\n  } // configure rounding / interpolation\n\n\n  if (range && _.interpolate && scale.interpolate) {\n    scale.interpolate(interpolate(_.interpolate, _.interpolateGamma));\n  } else if (isFunction(scale.round)) {\n    scale.round(round);\n  } else if (isFunction(scale.rangeRound)) {\n    scale.interpolate(round ? interpolateRound : interpolate$1);\n  }\n\n  if (range) scale.range(flip(range, _.reverse));\n}\n\nfunction configureRangeStep(type, _, count) {\n  if (type !== Band && type !== Point) {\n    error('Only band and point scales support rangeStep.');\n  } // calculate full range based on requested step size and padding\n\n\n  var outer = (_.paddingOuter != null ? _.paddingOuter : _.padding) || 0,\n      inner = type === Point ? 1 : (_.paddingInner != null ? _.paddingInner : _.padding) || 0;\n  return [0, _.rangeStep * bandSpace(count, inner, outer)];\n}\n\nfunction configureScheme(type, _, count) {\n  var extent = _.schemeExtent,\n      name,\n      scheme$1;\n\n  if (isArray(_.scheme)) {\n    scheme$1 = interpolateColors(_.scheme, _.interpolate, _.interpolateGamma);\n  } else {\n    name = _.scheme.toLowerCase();\n    scheme$1 = scheme(name);\n    if (!scheme$1) error(\"Unrecognized scheme name: \".concat(_.scheme));\n  } // determine size for potential discrete range\n\n\n  count = type === Threshold ? count + 1 : type === BinOrdinal ? count - 1 : type === Quantile || type === Quantize ? +_.schemeCount || DEFAULT_COUNT : count; // adjust and/or quantize scheme as appropriate\n\n  return isInterpolating(type) ? adjustScheme(scheme$1, extent, _.reverse) : isFunction(scheme$1) ? quantizeInterpolator(adjustScheme(scheme$1, extent), count) : type === Ordinal ? scheme$1 : scheme$1.slice(0, count);\n}\n\nfunction adjustScheme(scheme, extent, reverse) {\n  return isFunction(scheme) && (extent || reverse) ? interpolateRange(scheme, flip(extent || [0, 1], reverse)) : scheme;\n}\n\nfunction flip(array, reverse) {\n  return reverse ? array.slice().reverse() : array;\n}\n\n/**\n * Sorts scenegraph items in the pulse source array.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(*,*): number} [params.sort] - A comparator\n *   function for sorting tuples.\n */\n\nfunction SortItems(params) {\n  Transform.call(this, null, params);\n}\ninherits(SortItems, Transform, {\n  transform(_, pulse) {\n    const mod = _.modified('sort') || pulse.changed(pulse.ADD) || pulse.modified(_.sort.fields) || pulse.modified('datum');\n    if (mod) pulse.source.sort(stableCompare(_.sort));\n    this.modified(mod);\n    return pulse;\n  }\n\n});\n\nconst Zero = 'zero',\n      Center = 'center',\n      Normalize = 'normalize',\n      DefOutput = ['y0', 'y1'];\n/**\n * Stack layout for visualization elements.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to stack.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {function(object,object): number} [params.sort] - A comparator for stack sorting.\n * @param {string} [offset='zero'] - Stack baseline offset. One of 'zero', 'center', 'normalize'.\n */\n\nfunction Stack(params) {\n  Transform.call(this, null, params);\n}\nStack.Definition = {\n  'type': 'Stack',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'offset',\n    'type': 'enum',\n    'default': Zero,\n    'values': [Zero, Center, Normalize]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': DefOutput\n  }]\n};\ninherits(Stack, Transform, {\n  transform(_, pulse) {\n    var as = _.as || DefOutput,\n        y0 = as[0],\n        y1 = as[1],\n        sort = stableCompare(_.sort),\n        field = _.field || one,\n        stack = _.offset === Center ? stackCenter : _.offset === Normalize ? stackNormalize : stackZero,\n        groups,\n        i,\n        n,\n        max; // partition, sum, and sort the stack groups\n\n    groups = partition(pulse.source, _.groupby, sort, field); // compute stack layouts per group\n\n    for (i = 0, n = groups.length, max = groups.max; i < n; ++i) {\n      stack(groups[i], max, field, y0, y1);\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n\n});\n\nfunction stackCenter(group, max, field, y0, y1) {\n  var last = (max - group.sum) / 2,\n      m = group.length,\n      j = 0,\n      t;\n\n  for (; j < m; ++j) {\n    t = group[j];\n    t[y0] = last;\n    t[y1] = last += Math.abs(field(t));\n  }\n}\n\nfunction stackNormalize(group, max, field, y0, y1) {\n  var scale = 1 / group.sum,\n      last = 0,\n      m = group.length,\n      j = 0,\n      v = 0,\n      t;\n\n  for (; j < m; ++j) {\n    t = group[j];\n    t[y0] = last;\n    t[y1] = last = scale * (v += Math.abs(field(t)));\n  }\n}\n\nfunction stackZero(group, max, field, y0, y1) {\n  var lastPos = 0,\n      lastNeg = 0,\n      m = group.length,\n      j = 0,\n      v,\n      t;\n\n  for (; j < m; ++j) {\n    t = group[j];\n    v = +field(t);\n\n    if (v < 0) {\n      t[y0] = lastNeg;\n      t[y1] = lastNeg += v;\n    } else {\n      t[y0] = lastPos;\n      t[y1] = lastPos += v;\n    }\n  }\n}\n\nfunction partition(data, groupby, sort, field) {\n  var groups = [],\n      get = f => f(t),\n      map,\n      i,\n      n,\n      m,\n      t,\n      k,\n      g,\n      s,\n      max; // partition data points into stack groups\n\n\n  if (groupby == null) {\n    groups.push(data.slice());\n  } else {\n    for (map = {}, i = 0, n = data.length; i < n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n\n      if (!g) {\n        map[k] = g = [];\n        groups.push(g);\n      }\n\n      g.push(t);\n    }\n  } // compute sums of groups, sort groups as needed\n\n\n  for (k = 0, max = 0, m = groups.length; k < m; ++k) {\n    g = groups[k];\n\n    for (i = 0, s = 0, n = g.length; i < n; ++i) {\n      s += Math.abs(field(g[i]));\n    }\n\n    g.sum = s;\n    if (s > max) max = s;\n    if (sort) g.sort(sort);\n  }\n\n  groups.max = max;\n  return groups;\n}\n\nexport { AxisTicks as axisticks, DataJoin as datajoin, Encode as encode, LegendEntries as legendentries, LinkPath as linkpath, Pie as pie, Scale as scale, SortItems as sortitems, Stack as stack };\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default x => x;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math.js\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import { geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEquidistant, geoConicConformal, geoConicEqualArea, geoConicEquidistant, geoEqualEarth, geoEquirectangular, geoGnomonic, geoIdentity, geoMercator, geoNaturalEarth1, geoOrthographic, geoStereographic, geoTransverseMercator } from 'd3-geo';\nimport { geoMollweide } from 'd3-geo-projection';\n\nconst defaultPath = geoPath();\nconst projectionProperties = [// standard properties in d3-geo\n'clipAngle', 'clipExtent', 'scale', 'translate', 'center', 'rotate', 'parallels', 'precision', 'reflectX', 'reflectY', // extended properties in d3-geo-projections\n'coefficient', 'distance', 'fraction', 'lobes', 'parallel', 'radius', 'ratio', 'spacing', 'tilt'];\n/**\n * Augment projections with their type and a copy method.\n */\n\nfunction create(type, constructor) {\n  return function projection() {\n    const p = constructor();\n    p.type = type;\n    p.path = geoPath().projection(p);\n\n    p.copy = p.copy || function () {\n      const c = projection();\n      projectionProperties.forEach(prop => {\n        if (p[prop]) c[prop](p[prop]());\n      });\n      c.path.pointRadius(p.path.pointRadius());\n      return c;\n    };\n\n    return p;\n  };\n}\n\nfunction projection(type, proj) {\n  if (!type || typeof type !== 'string') {\n    throw new Error('Projection type must be a name string.');\n  }\n\n  type = type.toLowerCase();\n\n  if (arguments.length > 1) {\n    projections[type] = create(type, proj);\n    return this;\n  } else {\n    return projections[type] || null;\n  }\n}\nfunction getProjectionPath(proj) {\n  return proj && proj.path || defaultPath;\n}\nconst projections = {\n  // base d3-geo projection types\n  albers: geoAlbers,\n  albersusa: geoAlbersUsa,\n  azimuthalequalarea: geoAzimuthalEqualArea,\n  azimuthalequidistant: geoAzimuthalEquidistant,\n  conicconformal: geoConicConformal,\n  conicequalarea: geoConicEqualArea,\n  conicequidistant: geoConicEquidistant,\n  equalEarth: geoEqualEarth,\n  equirectangular: geoEquirectangular,\n  gnomonic: geoGnomonic,\n  identity: geoIdentity,\n  mercator: geoMercator,\n  mollweide: geoMollweide,\n  naturalEarth1: geoNaturalEarth1,\n  orthographic: geoOrthographic,\n  stereographic: geoStereographic,\n  transversemercator: geoTransverseMercator\n};\n\nfor (const key in projections) {\n  projection(key, projections[key]);\n}\n\nexport { getProjectionPath, projection, projectionProperties };\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import { Transform, rederive, ingest, replace } from 'vega-dataflow';\nimport { error, extent, inherits, identity, isArray, isFunction, isNumber, constant, array, one, accessorName, accessorFields, field, extend, toSet, zero } from 'vega-util';\nimport { range, tickStep, max, sum } from 'd3-array';\nimport { bandwidthNRD } from 'vega-statistics';\nimport { getProjectionPath, projectionProperties, projection } from 'vega-projection';\nimport { geoGraticule } from 'd3-geo';\nimport { rgb } from 'd3-color';\nimport { canvas } from 'vega-canvas';\n\nfunction noop() {}\n\nconst cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []]; // Implementation adapted from d3/d3-contour. Thanks!\n\nfunction contours () {\n  var dx = 1,\n      dy = 1,\n      smooth = smoothLinear;\n\n  function contours(values, tz) {\n    return tz.map(value => contour(values, value));\n  } // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n    isorings(values, value, ring => {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(hole => {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n    return {\n      type: 'MultiPolygon',\n      value: value,\n      coordinates: polygons\n    };\n  } // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array(),\n        fragmentByEnd = new Array(),\n        x,\n        y,\n        t0,\n        t1,\n        t2,\n        t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n\n    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t1 | t2 << 3].forEach(stitch);\n    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f,\n          g;\n\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n              start: f.start,\n              end: g.end,\n              ring: f.ring.concat(g.ring)\n            };\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n              start: g.start,\n              end: f.end,\n              ring: g.ring.concat(f.ring)\n            };\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n          start: startIndex,\n          end: endIndex,\n          ring: [start, end]\n        };\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(point => {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.floor(_[0]),\n        _1 = Math.floor(_[1]);\n\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.smooth = function (_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\nfunction area(ring) {\n  var i = 0,\n      n = ring.length,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n\n  return area;\n}\n\nfunction contains(ring, hole) {\n  var i = -1,\n      n = hole.length,\n      c;\n\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = -1;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n  }\n\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i;\n  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction quantize (k, nice, zero) {\n  return function (values) {\n    var ex = extent(values),\n        start = zero ? Math.min(ex[0], 0) : ex[0],\n        stop = ex[1],\n        span = stop - start,\n        step = nice ? tickStep(start, stop, k) : span / (k + 1);\n    return range(start + step, stop, step);\n  };\n}\n\n/**\n * Generate isocontours (level sets) based on input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   specified, the levels, nice, resolve, and zero parameters are ignored.\n * @param {number} [params.levels] - The desired number of contour levels.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified levels.\n * @param {string} [params.resolve] - The method for resolving thresholds\n *   across multiple input grids. If 'independent' (the default), threshold\n *   calculation will be performed separately for each grid. If 'shared', a\n *   single set of threshold values will be used for all input grids.\n * @param {boolean} [params.zero] - Boolean flag indicating if the contour\n *   threshold values should include zero.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n * @param {boolean} [params.scale] - Optional numerical value by which to\n *   scale the output isocontour coordinates. This parameter can be useful\n *   to scale the contours to match a desired output resolution.\n * @param {string} [params.as='contour'] - The output field in which to store\n *   the generated isocontour data (default 'contour').\n */\n\nfunction Isocontour(params) {\n  Transform.call(this, null, params);\n}\nIsocontour.Definition = {\n  'type': 'Isocontour',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'thresholds',\n    'type': 'number',\n    'array': true\n  }, {\n    'name': 'levels',\n    'type': 'number'\n  }, {\n    'name': 'nice',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'resolve',\n    'type': 'enum',\n    'values': ['shared', 'independent'],\n    'default': 'independent'\n  }, {\n    'name': 'zero',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'smooth',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'scale',\n    'type': 'number',\n    'expr': true\n  }, {\n    'name': 'translate',\n    'type': 'number',\n    'array': true,\n    'expr': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'null': true,\n    'default': 'contour'\n  }]\n};\ninherits(Isocontour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        field = _.field || identity,\n        contour = contours().smooth(_.smooth !== false),\n        tz = _.thresholds || levels(source, field, _),\n        as = _.as === null ? null : _.as || 'contour',\n        values = [];\n    source.forEach(t => {\n      const grid = field(t); // generate contour paths in GeoJSON format\n\n      const paths = contour.size([grid.width, grid.height])(grid.values, isArray(tz) ? tz : tz(grid.values)); // adjust contour path coordinates as needed\n\n      transformPaths(paths, grid, t, _); // ingest; copy source data properties to output\n\n      paths.forEach(p => {\n        values.push(rederive(t, ingest(as != null ? {\n          [as]: p\n        } : p)));\n      });\n    });\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n    return out;\n  }\n\n});\n\nfunction levels(values, f, _) {\n  const q = quantize(_.levels || 10, _.nice, _.zero !== false);\n  return _.resolve !== 'shared' ? q : q(values.map(t => max(f(t).values)));\n}\n\nfunction transformPaths(paths, grid, datum, _) {\n  let s = _.scale || grid.scale,\n      t = _.translate || grid.translate;\n  if (isFunction(s)) s = s(datum, _);\n  if (isFunction(t)) t = t(datum, _);\n  if ((s === 1 || s == null) && !t) return;\n  const sx = (isNumber(s) ? s : s[0]) || 1,\n        sy = (isNumber(s) ? s : s[1]) || 1,\n        tx = t && t[0] || 0,\n        ty = t && t[1] || 0;\n  paths.forEach(transform(grid, sx, sy, tx, ty));\n}\n\nfunction transform(grid, sx, sy, tx, ty) {\n  const x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        flip = sx * sy < 0;\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    if (flip) coordinates.reverse(); // maintain winding order\n\n    coordinates.forEach(transformPoint);\n  }\n\n  function transformPoint(coordinates) {\n    coordinates[0] = (coordinates[0] - x1) * sx + tx;\n    coordinates[1] = (coordinates[1] - y1) * sy + ty;\n  }\n\n  return function (geometry) {\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  };\n}\n\nfunction radius(bw, data, f) {\n  const v = bw >= 0 ? bw : bandwidthNRD(data, f);\n  return Math.round((Math.sqrt(4 * v * v + 1) - 1) / 2);\n}\n\nfunction number(_) {\n  return isFunction(_) ? _ : constant(+_);\n} // Implementation adapted from d3/d3-contour. Thanks!\n\n\nfunction density2D () {\n  var x = d => d[0],\n      y = d => d[1],\n      weight = one,\n      bandwidth = [-1, -1],\n      dx = 960,\n      dy = 500,\n      k = 2; // log2(cellSize)\n\n\n  function density(data, counts) {\n    const rx = radius(bandwidth[0], data, x) >> k,\n          // blur x-radius\n    ry = radius(bandwidth[1], data, y) >> k,\n          // blur y-radius\n    ox = rx ? rx + 2 : 0,\n          // x-offset padding for blur\n    oy = ry ? ry + 2 : 0,\n          // y-offset padding for blur\n    n = 2 * ox + (dx >> k),\n          // grid width\n    m = 2 * oy + (dy >> k),\n          // grid height\n    values0 = new Float32Array(n * m),\n          values1 = new Float32Array(n * m);\n    let values = values0;\n    data.forEach(d => {\n      const xi = ox + (+x(d) >> k),\n            yi = oy + (+y(d) >> k);\n\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += +weight(d);\n      }\n    });\n\n    if (rx > 0 && ry > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n      blurX(n, m, values0, values1, rx);\n      blurY(n, m, values1, values0, ry);\n    } else if (rx > 0) {\n      blurX(n, m, values0, values1, rx);\n      blurX(n, m, values1, values0, rx);\n      blurX(n, m, values0, values1, rx);\n      values = values1;\n    } else if (ry > 0) {\n      blurY(n, m, values0, values1, ry);\n      blurY(n, m, values1, values0, ry);\n      blurY(n, m, values0, values1, ry);\n      values = values1;\n    } // scale density estimates\n    // density in points per square pixel or probability density\n\n\n    const s = counts ? Math.pow(2, -2 * k) : 1 / sum(values);\n\n    for (let i = 0, sz = n * m; i < sz; ++i) values[i] *= s;\n\n    return {\n      values: values,\n      scale: 1 << k,\n      width: n,\n      height: m,\n      x1: ox,\n      y1: oy,\n      x2: ox + (dx >> k),\n      y2: oy + (dy >> k)\n    };\n  }\n\n  density.x = function (_) {\n    return arguments.length ? (x = number(_), density) : x;\n  };\n\n  density.y = function (_) {\n    return arguments.length ? (y = number(_), density) : y;\n  };\n\n  density.weight = function (_) {\n    return arguments.length ? (weight = number(_), density) : weight;\n  };\n\n  density.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = +_[0],\n        _1 = +_[1];\n\n    if (!(_0 >= 0 && _1 >= 0)) error('invalid size');\n    return dx = _0, dy = _1, density;\n  };\n\n  density.cellSize = function (_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) error('invalid cell size');\n    k = Math.floor(Math.log(_) / Math.LN2);\n    return density;\n  };\n\n  density.bandwidth = function (_) {\n    if (!arguments.length) return bandwidth;\n    _ = array(_);\n    if (_.length === 1) _ = [+_[0], +_[0]];\n    if (_.length !== 2) error('invalid bandwidth');\n    return bandwidth = _, density;\n  };\n\n  return density;\n}\n\nfunction blurX(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n\n  for (let j = 0; j < m; ++j) {\n    for (let i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source[i + j * n];\n      }\n\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source[i - w + j * n];\n        }\n\n        target[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\nfunction blurY(n, m, source, target, r) {\n  const w = (r << 1) + 1;\n\n  for (let i = 0; i < n; ++i) {\n    for (let j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source[i + j * n];\n      }\n\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source[i + (j - w) * n];\n        }\n\n        target[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\n/**\n * Perform 2D kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The [width, height] extent (in\n *   units of input pixels) over which to perform density estimation.\n * @param {function(object): number} params.x - The x-coordinate accessor.\n * @param {function(object): number} params.y - The y-coordinate accessor.\n * @param {function(object): number} [params.weight] - The weight accessor.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors\n *   to groupby.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n *   This parameter determines the level of spatial approximation. For example,\n *   the default value of 4 maps to 2x reductions in both x- and y- dimensions.\n *   A value of 1 will result in an output raster grid whose dimensions exactly\n *   matches the size parameter.\n * @param {Array<number>} [params.bandwidth] - The KDE kernel bandwidths,\n *   in pixels. The input can be a two-element array specifying separate\n *   x and y bandwidths, or a single-element array specifying both. If the\n *   bandwidth is unspecified or less than zero, the bandwidth will be\n *   automatically determined.\n * @param {boolean} [params.counts=false] - A boolean flag indicating if the\n *   output values should be probability estimates (false, default) or\n *   smoothed counts (true).\n * @param {string} [params.as='grid'] - The output field in which to store\n *   the generated raster grid (default 'grid').\n */\n\nfunction KDE2D(params) {\n  Transform.call(this, null, params);\n}\nKDE2D.Definition = {\n  'type': 'KDE2D',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2,\n    'required': true\n  }, {\n    'name': 'x',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'y',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'weight',\n    'type': 'field'\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'cellSize',\n    'type': 'number'\n  }, {\n    'name': 'bandwidth',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'counts',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'grid'\n  }]\n};\nconst PARAMS = ['x', 'y', 'weight', 'size', 'cellSize', 'bandwidth'];\nfunction params(obj, _) {\n  PARAMS.forEach(param => _[param] != null ? obj[param](_[param]) : 0);\n  return obj;\n}\ninherits(KDE2D, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) return pulse.StopPropagation;\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        source = pulse.materialize(pulse.SOURCE).source,\n        groups = partition(source, _.groupby),\n        names = (_.groupby || []).map(accessorName),\n        kde = params(density2D(), _),\n        as = _.as || 'grid',\n        values = [];\n\n    function set(t, vals) {\n      for (let i = 0; i < names.length; ++i) t[names[i]] = vals[i];\n\n      return t;\n    } // generate density raster grids\n\n\n    values = groups.map(g => ingest(set({\n      [as]: kde(g, _.counts)\n    }, g.dims)));\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = values;\n    return out;\n  }\n\n});\nfunction partition(data, groupby) {\n  var groups = [],\n      get = f => f(t),\n      map,\n      i,\n      n,\n      t,\n      k,\n      g; // partition data points into groups\n\n\n  if (groupby == null) {\n    groups.push(data);\n  } else {\n    for (map = {}, i = 0, n = data.length; i < n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n\n      if (!g) {\n        map[k] = g = [];\n        g.dims = k;\n        groups.push(g);\n      }\n\n      g.push(t);\n    }\n  }\n\n  return groups;\n}\n\n/**\n * Generate contours based on kernel-density estimation of point data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The dimensions [width, height] over which to compute contours.\n *  If the values parameter is provided, this must be the dimensions of the input data.\n *  If density estimation is performed, this is the output view dimensions in pixels.\n * @param {Array<number>} [params.values] - An array of numeric values representing an\n *  width x height grid of values over which to compute contours. If unspecified, this\n *  transform will instead attempt to compute contours for the kernel density estimate\n *  using values drawn from data tuples in the input pulse.\n * @param {function(object): number} [params.x] - The pixel x-coordinate accessor for density estimation.\n * @param {function(object): number} [params.y] - The pixel y-coordinate accessor for density estimation.\n * @param {function(object): number} [params.weight] - The data point weight accessor for density estimation.\n * @param {number} [params.cellSize] - Contour density calculation cell size.\n * @param {number} [params.bandwidth] - Kernel density estimation bandwidth.\n * @param {Array<number>} [params.thresholds] - Contour threshold array. If\n *   this parameter is set, the count and nice parameters will be ignored.\n * @param {number} [params.count] - The desired number of contours.\n * @param {boolean} [params.nice] - Boolean flag indicating if the contour\n *   threshold values should be automatically aligned to \"nice\"\n *   human-friendly values. Setting this flag may cause the number of\n *   thresholds to deviate from the specified count.\n * @param {boolean} [params.smooth] - Boolean flag indicating if the contour\n *   polygons should be smoothed using linear interpolation. The default is\n *   true. The parameter is ignored when using density estimation.\n */\n\nfunction Contour(params) {\n  Transform.call(this, null, params);\n}\nContour.Definition = {\n  'type': 'Contour',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2,\n    'required': true\n  }, {\n    'name': 'values',\n    'type': 'number',\n    'array': true\n  }, {\n    'name': 'x',\n    'type': 'field'\n  }, {\n    'name': 'y',\n    'type': 'field'\n  }, {\n    'name': 'weight',\n    'type': 'field'\n  }, {\n    'name': 'cellSize',\n    'type': 'number'\n  }, {\n    'name': 'bandwidth',\n    'type': 'number'\n  }, {\n    'name': 'count',\n    'type': 'number'\n  }, {\n    'name': 'nice',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'thresholds',\n    'type': 'number',\n    'array': true\n  }, {\n    'name': 'smooth',\n    'type': 'boolean',\n    'default': true\n  }]\n};\ninherits(Contour, Transform, {\n  transform(_, pulse) {\n    if (this.value && !pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS),\n        contour = contours().smooth(_.smooth !== false),\n        values = _.values,\n        thresh = _.thresholds || quantize(_.count || 10, _.nice, !!values),\n        size = _.size,\n        grid,\n        post;\n\n    if (!values) {\n      values = pulse.materialize(pulse.SOURCE).source;\n      grid = params(density2D(), _)(values, true);\n      post = transform(grid, grid.scale || 1, grid.scale || 1, 0, 0);\n      size = [grid.width, grid.height];\n      values = grid.values;\n    }\n\n    thresh = isArray(thresh) ? thresh : thresh(values);\n    values = contour.size(size)(values, thresh);\n    if (post) values.forEach(post);\n    if (this.value) out.rem = this.value;\n    this.value = out.source = out.add = (values || []).map(ingest);\n    return out;\n  }\n\n});\n\nconst Feature = 'Feature';\nconst FeatureCollection = 'FeatureCollection';\nconst MultiPoint = 'MultiPoint';\n\n/**\n * Consolidate an array of [longitude, latitude] points or GeoJSON features\n * into a combined GeoJSON object. This transform is particularly useful for\n * combining geo data for a Projection's fit argument. The resulting GeoJSON\n * data is available as this transform's value. Input pulses are unchanged.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} [params.fields] - A two-element array\n *   of field accessors for the longitude and latitude values.\n * @param {function(object): *} params.geojson - A field accessor for\n *   retrieving GeoJSON feature data.\n */\n\nfunction GeoJSON(params) {\n  Transform.call(this, null, params);\n}\nGeoJSON.Definition = {\n  'type': 'GeoJSON',\n  'metadata': {},\n  'params': [{\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'geojson',\n    'type': 'field'\n  }]\n};\ninherits(GeoJSON, Transform, {\n  transform(_, pulse) {\n    var features = this._features,\n        points = this._points,\n        fields = _.fields,\n        lon = fields && fields[0],\n        lat = fields && fields[1],\n        geojson = _.geojson || !fields && identity,\n        flag = pulse.ADD,\n        mod;\n    mod = _.modified() || pulse.changed(pulse.REM) || pulse.modified(accessorFields(geojson)) || lon && pulse.modified(accessorFields(lon)) || lat && pulse.modified(accessorFields(lat));\n\n    if (!this.value || mod) {\n      flag = pulse.SOURCE;\n      this._features = features = [];\n      this._points = points = [];\n    }\n\n    if (geojson) {\n      pulse.visit(flag, t => features.push(geojson(t)));\n    }\n\n    if (lon && lat) {\n      pulse.visit(flag, t => {\n        var x = lon(t),\n            y = lat(t);\n\n        if (x != null && y != null && (x = +x) === x && (y = +y) === y) {\n          points.push([x, y]);\n        }\n      });\n      features = features.concat({\n        type: Feature,\n        geometry: {\n          type: MultiPoint,\n          coordinates: points\n        }\n      });\n    }\n\n    this.value = {\n      type: FeatureCollection,\n      features: features\n    };\n  }\n\n});\n\n/**\n * Map GeoJSON data to an SVG path string.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='path'] - The output field in which to store\n *   the generated path data (default 'path').\n */\n\nfunction GeoPath(params) {\n  Transform.call(this, null, params);\n}\nGeoPath.Definition = {\n  'type': 'GeoPath',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'projection',\n    'type': 'projection'\n  }, {\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'pointRadius',\n    'type': 'number',\n    'expr': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'path'\n  }]\n};\ninherits(GeoPath, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        path = this.value,\n        field = _.field || identity,\n        as = _.as || 'path',\n        flag = out.SOURCE;\n\n    if (!path || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = path = getProjectionPath(_.projection);\n      out.materialize().reflow();\n    } else {\n      flag = field === identity || pulse.modified(field.fields) ? out.ADD_MOD : out.ADD;\n    }\n\n    const prev = initPath(path, _.pointRadius);\n    out.visit(flag, t => t[as] = path(field(t)));\n    path.pointRadius(prev);\n    return out.modifies(as);\n  }\n\n});\n\nfunction initPath(path, pointRadius) {\n  const prev = path.pointRadius();\n  path.context(null);\n\n  if (pointRadius != null) {\n    path.pointRadius(pointRadius);\n  }\n\n  return prev;\n}\n\n/**\n * Geo-code a longitude/latitude point to an x/y coordinate.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {Array<function(object): *>} params.fields - A two-element array of\n *   field accessors for the longitude and latitude values.\n * @param {Array<string>} [params.as] - A two-element array of field names\n *   under which to store the result. Defaults to ['x','y'].\n */\n\nfunction GeoPoint(params) {\n  Transform.call(this, null, params);\n}\nGeoPoint.Definition = {\n  'type': 'GeoPoint',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'projection',\n    'type': 'projection',\n    'required': true\n  }, {\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'required': true,\n    'length': 2\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 2,\n    'default': ['x', 'y']\n  }]\n};\ninherits(GeoPoint, Transform, {\n  transform(_, pulse) {\n    var proj = _.projection,\n        lon = _.fields[0],\n        lat = _.fields[1],\n        as = _.as || ['x', 'y'],\n        x = as[0],\n        y = as[1],\n        mod;\n\n    function set(t) {\n      const xy = proj([lon(t), lat(t)]);\n\n      if (xy) {\n        t[x] = xy[0];\n        t[y] = xy[1];\n      } else {\n        t[x] = undefined;\n        t[y] = undefined;\n      }\n    }\n\n    if (_.modified()) {\n      // parameters updated, reflow\n      pulse = pulse.materialize().reflow(true).visit(pulse.SOURCE, set);\n    } else {\n      mod = pulse.modified(lon.fields) || pulse.modified(lat.fields);\n      pulse.visit(mod ? pulse.ADD_MOD : pulse.ADD, set);\n    }\n\n    return pulse.modifies(as);\n  }\n\n});\n\n/**\n * Annotate items with a geopath shape generator.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(number, number): *} params.projection - The cartographic\n *   projection to apply.\n * @param {function(object): *} [params.field] - The field with GeoJSON data,\n *   or null if the tuple itself is a GeoJSON feature.\n * @param {string} [params.as='shape'] - The output field in which to store\n *   the generated path data (default 'shape').\n */\n\nfunction GeoShape(params) {\n  Transform.call(this, null, params);\n}\nGeoShape.Definition = {\n  'type': 'GeoShape',\n  'metadata': {\n    'modifies': true,\n    'nomod': true\n  },\n  'params': [{\n    'name': 'projection',\n    'type': 'projection'\n  }, {\n    'name': 'field',\n    'type': 'field',\n    'default': 'datum'\n  }, {\n    'name': 'pointRadius',\n    'type': 'number',\n    'expr': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'shape'\n  }]\n};\ninherits(GeoShape, Transform, {\n  transform(_, pulse) {\n    var out = pulse.fork(pulse.ALL),\n        shape = this.value,\n        as = _.as || 'shape',\n        flag = out.ADD;\n\n    if (!shape || _.modified()) {\n      // parameters updated, reset and reflow\n      this.value = shape = shapeGenerator(getProjectionPath(_.projection), _.field || field('datum'), _.pointRadius);\n      out.materialize().reflow();\n      flag = out.SOURCE;\n    }\n\n    out.visit(flag, t => t[as] = shape);\n    return out.modifies(as);\n  }\n\n});\n\nfunction shapeGenerator(path, field, pointRadius) {\n  const shape = pointRadius == null ? _ => path(field(_)) : _ => {\n    var prev = path.pointRadius(),\n        value = path.pointRadius(pointRadius)(field(_));\n    path.pointRadius(prev);\n    return value;\n  };\n\n  shape.context = _ => {\n    path.context(_);\n    return shape;\n  };\n\n  return shape;\n}\n\n/**\n * GeoJSON feature generator for creating graticules.\n * @constructor\n */\n\nfunction Graticule(params) {\n  Transform.call(this, [], params);\n  this.generator = geoGraticule();\n}\nGraticule.Definition = {\n  'type': 'Graticule',\n  'metadata': {\n    'changes': true,\n    'generates': true\n  },\n  'params': [{\n    'name': 'extent',\n    'type': 'array',\n    'array': true,\n    'length': 2,\n    'content': {\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }\n  }, {\n    'name': 'extentMajor',\n    'type': 'array',\n    'array': true,\n    'length': 2,\n    'content': {\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }\n  }, {\n    'name': 'extentMinor',\n    'type': 'array',\n    'array': true,\n    'length': 2,\n    'content': {\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }\n  }, {\n    'name': 'step',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'stepMajor',\n    'type': 'number',\n    'array': true,\n    'length': 2,\n    'default': [90, 360]\n  }, {\n    'name': 'stepMinor',\n    'type': 'number',\n    'array': true,\n    'length': 2,\n    'default': [10, 10]\n  }, {\n    'name': 'precision',\n    'type': 'number',\n    'default': 2.5\n  }]\n};\ninherits(Graticule, Transform, {\n  transform(_, pulse) {\n    var src = this.value,\n        gen = this.generator,\n        t;\n\n    if (!src.length || _.modified()) {\n      for (const prop in _) {\n        if (isFunction(gen[prop])) {\n          gen[prop](_[prop]);\n        }\n      }\n    }\n\n    t = gen();\n\n    if (src.length) {\n      pulse.mod.push(replace(src[0], t));\n    } else {\n      pulse.add.push(ingest(t));\n    }\n\n    src[0] = t;\n    return pulse;\n  }\n\n});\n\n/**\n * Render a heatmap image for input raster grid data.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} [params.field] - The field with raster grid\n *   data. If unspecified, the tuple itself is interpreted as a raster grid.\n * @param {string} [params.color] - A constant color value or function for\n *   individual pixel color. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {number} [params.opacity] - A constant opacity value or function for\n *   individual pixel opacity. If a function, it will be invoked with an input\n *   object that includes $x, $y, $value, and $max fields for the grid.\n * @param {string} [params.resolve] - The method for resolving maximum values\n *   across multiple input grids. If 'independent' (the default), maximum\n *   calculation will be performed separately for each grid. If 'shared',\n *   a single global maximum will be used for all input grids.\n * @param {string} [params.as='image'] - The output field in which to store\n *   the generated bitmap canvas images (default 'image').\n */\n\nfunction Heatmap(params) {\n  Transform.call(this, null, params);\n}\nHeatmap.Definition = {\n  'type': 'heatmap',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'color',\n    'type': 'string',\n    'expr': true\n  }, {\n    'name': 'opacity',\n    'type': 'number',\n    'expr': true\n  }, {\n    'name': 'resolve',\n    'type': 'enum',\n    'values': ['shared', 'independent'],\n    'default': 'independent'\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'image'\n  }]\n};\ninherits(Heatmap, Transform, {\n  transform(_, pulse) {\n    if (!pulse.changed() && !_.modified()) {\n      return pulse.StopPropagation;\n    }\n\n    var source = pulse.materialize(pulse.SOURCE).source,\n        shared = _.resolve === 'shared',\n        field = _.field || identity,\n        opacity = opacity_(_.opacity, _),\n        color = color_(_.color, _),\n        as = _.as || 'image',\n        obj = {\n      $x: 0,\n      $y: 0,\n      $value: 0,\n      $max: shared ? max(source.map(t => max(field(t).values))) : 0\n    };\n    source.forEach(t => {\n      const v = field(t); // build proxy data object\n\n      const o = extend({}, t, obj); // set maximum value if not globally shared\n\n      if (!shared) o.$max = max(v.values || []); // generate canvas image\n      // optimize color/opacity if not pixel-dependent\n\n      t[as] = toCanvas(v, o, color.dep ? color : constant(color(o)), opacity.dep ? opacity : constant(opacity(o)));\n    });\n    return pulse.reflow(true).modifies(as);\n  }\n\n}); // get image color function\n\nfunction color_(color, _) {\n  let f;\n\n  if (isFunction(color)) {\n    f = obj => rgb(color(obj, _));\n\n    f.dep = dependency(color);\n  } else {\n    // default to mid-grey\n    f = constant(rgb(color || '#888'));\n  }\n\n  return f;\n} // get image opacity function\n\n\nfunction opacity_(opacity, _) {\n  let f;\n\n  if (isFunction(opacity)) {\n    f = obj => opacity(obj, _);\n\n    f.dep = dependency(opacity);\n  } else if (opacity) {\n    f = constant(opacity);\n  } else {\n    // default to [0, max] opacity gradient\n    f = obj => obj.$value / obj.$max || 0;\n\n    f.dep = true;\n  }\n\n  return f;\n} // check if function depends on individual pixel data\n\n\nfunction dependency(f) {\n  if (!isFunction(f)) return false;\n  const set = toSet(accessorFields(f));\n  return set.$x || set.$y || set.$value || set.$max;\n} // render raster grid to canvas\n\n\nfunction toCanvas(grid, obj, color, opacity) {\n  const n = grid.width,\n        m = grid.height,\n        x1 = grid.x1 || 0,\n        y1 = grid.y1 || 0,\n        x2 = grid.x2 || n,\n        y2 = grid.y2 || m,\n        val = grid.values,\n        value = val ? i => val[i] : zero,\n        can = canvas(x2 - x1, y2 - y1),\n        ctx = can.getContext('2d'),\n        img = ctx.getImageData(0, 0, x2 - x1, y2 - y1),\n        pix = img.data;\n\n  for (let j = y1, k = 0; j < y2; ++j) {\n    obj.$y = j - y1;\n\n    for (let i = x1, r = j * n; i < x2; ++i, k += 4) {\n      obj.$x = i - x1;\n      obj.$value = value(i + r);\n      const v = color(obj);\n      pix[k + 0] = v.r;\n      pix[k + 1] = v.g;\n      pix[k + 2] = v.b;\n      pix[k + 3] = ~~(255 * opacity(obj));\n    }\n  }\n\n  ctx.putImageData(img, 0, 0);\n  return can;\n}\n\n/**\n * Maintains a cartographic projection.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction Projection(params) {\n  Transform.call(this, null, params);\n  this.modified(true); // always treat as modified\n}\ninherits(Projection, Transform, {\n  transform(_, pulse) {\n    let proj = this.value;\n\n    if (!proj || _.modified('type')) {\n      this.value = proj = create(_.type);\n      projectionProperties.forEach(prop => {\n        if (_[prop] != null) set(proj, prop, _[prop]);\n      });\n    } else {\n      projectionProperties.forEach(prop => {\n        if (_.modified(prop)) set(proj, prop, _[prop]);\n      });\n    }\n\n    if (_.pointRadius != null) proj.path.pointRadius(_.pointRadius);\n    if (_.fit) fit(proj, _);\n    return pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n  }\n\n});\n\nfunction fit(proj, _) {\n  const data = collectGeoJSON(_.fit);\n  _.extent ? proj.fitExtent(_.extent, data) : _.size ? proj.fitSize(_.size, data) : 0;\n}\n\nfunction create(type) {\n  const constructor = projection((type || 'mercator').toLowerCase());\n  if (!constructor) error('Unrecognized projection type: ' + type);\n  return constructor();\n}\n\nfunction set(proj, key, value) {\n  if (isFunction(proj[key])) proj[key](value);\n}\n\nfunction collectGeoJSON(data) {\n  data = array(data);\n  return data.length === 1 ? data[0] : {\n    type: FeatureCollection,\n    features: data.reduce((a, f) => a.concat(featurize(f)), [])\n  };\n}\n\nfunction featurize(f) {\n  return f.type === FeatureCollection ? f.features : array(f).filter(d => d != null).map(d => d.type === Feature ? d : {\n    type: Feature,\n    geometry: d\n  });\n}\n\nexport { Contour as contour, GeoJSON as geojson, GeoPath as geopath, GeoPoint as geopoint, GeoShape as geoshape, Graticule as graticule, Heatmap as heatmap, Isocontour as isocontour, KDE2D as kde2d, Projection as projection };\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import { Transform } from 'vega-dataflow';\nimport { inherits, array, isFunction, accessorFields, hasOwnProperty, error } from 'vega-util';\nimport { forceSimulation, forceCenter, forceCollide, forceManyBody, forceLink, forceX, forceY } from 'd3-force';\n\nconst ForceMap = {\n  center: forceCenter,\n  collide: forceCollide,\n  nbody: forceManyBody,\n  link: forceLink,\n  x: forceX,\n  y: forceY\n};\nconst Forces = 'forces',\n      ForceParams = ['alpha', 'alphaMin', 'alphaTarget', 'velocityDecay', 'forces'],\n      ForceConfig = ['static', 'iterations'],\n      ForceOutput = ['x', 'y', 'vx', 'vy'];\n/**\n * Force simulation layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<object>} params.forces - The forces to apply.\n */\n\nfunction Force(params) {\n  Transform.call(this, null, params);\n}\nForce.Definition = {\n  'type': 'Force',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'static',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'restart',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'iterations',\n    'type': 'number',\n    'default': 300\n  }, {\n    'name': 'alpha',\n    'type': 'number',\n    'default': 1\n  }, {\n    'name': 'alphaMin',\n    'type': 'number',\n    'default': 0.001\n  }, {\n    'name': 'alphaTarget',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'velocityDecay',\n    'type': 'number',\n    'default': 0.4\n  }, {\n    'name': 'forces',\n    'type': 'param',\n    'array': true,\n    'params': [{\n      'key': {\n        'force': 'center'\n      },\n      'params': [{\n        'name': 'x',\n        'type': 'number',\n        'default': 0\n      }, {\n        'name': 'y',\n        'type': 'number',\n        'default': 0\n      }]\n    }, {\n      'key': {\n        'force': 'collide'\n      },\n      'params': [{\n        'name': 'radius',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.7\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'nbody'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': -30\n      }, {\n        'name': 'theta',\n        'type': 'number',\n        'default': 0.9\n      }, {\n        'name': 'distanceMin',\n        'type': 'number',\n        'default': 1\n      }, {\n        'name': 'distanceMax',\n        'type': 'number'\n      }]\n    }, {\n      'key': {\n        'force': 'link'\n      },\n      'params': [{\n        'name': 'links',\n        'type': 'data'\n      }, {\n        'name': 'id',\n        'type': 'field'\n      }, {\n        'name': 'distance',\n        'type': 'number',\n        'default': 30,\n        'expr': true\n      }, {\n        'name': 'strength',\n        'type': 'number',\n        'expr': true\n      }, {\n        'name': 'iterations',\n        'type': 'number',\n        'default': 1\n      }]\n    }, {\n      'key': {\n        'force': 'x'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'x',\n        'type': 'field'\n      }]\n    }, {\n      'key': {\n        'force': 'y'\n      },\n      'params': [{\n        'name': 'strength',\n        'type': 'number',\n        'default': 0.1\n      }, {\n        'name': 'y',\n        'type': 'field'\n      }]\n    }]\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'modify': false,\n    'default': ForceOutput\n  }]\n};\ninherits(Force, Transform, {\n  transform(_, pulse) {\n    var sim = this.value,\n        change = pulse.changed(pulse.ADD_REM),\n        params = _.modified(ForceParams),\n        iters = _.iterations || 300; // configure simulation\n\n\n    if (!sim) {\n      this.value = sim = simulation(pulse.source, _);\n      sim.on('tick', rerun(pulse.dataflow, this));\n\n      if (!_.static) {\n        change = true;\n        sim.tick(); // ensure we run on init\n      }\n\n      pulse.modifies('index');\n    } else {\n      if (change) {\n        pulse.modifies('index');\n        sim.nodes(pulse.source);\n      }\n\n      if (params || pulse.changed(pulse.MOD)) {\n        setup(sim, _, 0, pulse);\n      }\n    } // run simulation\n\n\n    if (params || change || _.modified(ForceConfig) || pulse.changed() && _.restart) {\n      sim.alpha(Math.max(sim.alpha(), _.alpha || 1)).alphaDecay(1 - Math.pow(sim.alphaMin(), 1 / iters));\n\n      if (_.static) {\n        for (sim.stop(); --iters >= 0;) sim.tick();\n      } else {\n        if (sim.stopped()) sim.restart();\n        if (!change) return pulse.StopPropagation; // defer to sim ticks\n      }\n    }\n\n    return this.finish(_, pulse);\n  },\n\n  finish(_, pulse) {\n    const dataflow = pulse.dataflow; // inspect dependencies, touch link source data\n\n    for (let args = this._argops, j = 0, m = args.length, arg; j < m; ++j) {\n      arg = args[j];\n\n      if (arg.name !== Forces || arg.op._argval.force !== 'link') {\n        continue;\n      }\n\n      for (var ops = arg.op._argops, i = 0, n = ops.length, op; i < n; ++i) {\n        if (ops[i].name === 'links' && (op = ops[i].op.source)) {\n          dataflow.pulse(op, dataflow.changeset().reflow());\n          break;\n        }\n      }\n    } // reflow all nodes\n\n\n    return pulse.reflow(_.modified()).modifies(ForceOutput);\n  }\n\n});\n\nfunction rerun(df, op) {\n  return () => df.touch(op).run();\n}\n\nfunction simulation(nodes, _) {\n  const sim = forceSimulation(nodes),\n        stop = sim.stop,\n        restart = sim.restart;\n  let stopped = false;\n\n  sim.stopped = () => stopped;\n\n  sim.restart = () => (stopped = false, restart());\n\n  sim.stop = () => (stopped = true, stop());\n\n  return setup(sim, _, true).on('end', () => stopped = true);\n}\n\nfunction setup(sim, _, init, pulse) {\n  var f = array(_.forces),\n      i,\n      n,\n      p,\n      name;\n\n  for (i = 0, n = ForceParams.length; i < n; ++i) {\n    p = ForceParams[i];\n    if (p !== Forces && _.modified(p)) sim[p](_[p]);\n  }\n\n  for (i = 0, n = f.length; i < n; ++i) {\n    name = Forces + i;\n    p = init || _.modified(Forces, i) ? getForce(f[i]) : pulse && modified(f[i], pulse) ? sim.force(name) : null;\n    if (p) sim.force(name, p);\n  }\n\n  for (n = sim.numForces || 0; i < n; ++i) {\n    sim.force(Forces + i, null); // remove\n  }\n\n  sim.numForces = f.length;\n  return sim;\n}\n\nfunction modified(f, pulse) {\n  var k, v;\n\n  for (k in f) {\n    if (isFunction(v = f[k]) && pulse.modified(accessorFields(v))) return 1;\n  }\n\n  return 0;\n}\n\nfunction getForce(_) {\n  var f, p;\n\n  if (!hasOwnProperty(ForceMap, _.force)) {\n    error('Unrecognized force: ' + _.force);\n  }\n\n  f = ForceMap[_.force]();\n\n  for (p in _) {\n    if (isFunction(f[p])) setForceParam(f[p], _[p], _);\n  }\n\n  return f;\n}\n\nfunction setForceParam(f, v, _) {\n  f(isFunction(v) ? d => v(d, _) : v);\n}\n\nexport { Force as force };\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","import { Transform, isTuple, ingest, tupleid, stableCompare } from 'vega-dataflow';\nimport { inherits, error, array, one, truthy, hasOwnProperty } from 'vega-util';\nimport { hierarchy, pack, partition, stratify, tree, cluster, treemap, treemapBinary, treemapDice, treemapSlice, treemapSliceDice, treemapSquarify, treemapResquarify } from 'd3-hierarchy';\n\n// Build lookup table mapping tuple keys to tree node instances\nfunction lookup (tree, key, filter) {\n  const map = {};\n  tree.each(node => {\n    const t = node.data;\n    if (filter(t)) map[key(t)] = node;\n  });\n  tree.lookup = map;\n  return tree;\n}\n\n/**\n * Nest tuples into a tree structure, grouped by key values.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} params.keys - The key fields to nest by, in order.\n * @param {boolean} [params.generate=false] - A boolean flag indicating if\n *   non-leaf nodes generated by this transform should be included in the\n *   output. The default (false) includes only the input data (leaf nodes)\n *   in the data stream.\n */\n\nfunction Nest(params) {\n  Transform.call(this, null, params);\n}\nNest.Definition = {\n  'type': 'Nest',\n  'metadata': {\n    'treesource': true,\n    'changes': true\n  },\n  'params': [{\n    'name': 'keys',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'generate',\n    'type': 'boolean'\n  }]\n};\n\nconst children = n => n.values;\n\ninherits(Nest, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Nest transform requires an upstream data source.');\n    }\n\n    var gen = _.generate,\n        mod = _.modified(),\n        out = pulse.clone(),\n        tree = this.value;\n\n    if (!tree || mod || pulse.changed()) {\n      // collect nodes to remove\n      if (tree) {\n        tree.each(node => {\n          if (node.children && isTuple(node.data)) {\n            out.rem.push(node.data);\n          }\n        });\n      } // generate new tree structure\n\n\n      this.value = tree = hierarchy({\n        values: array(_.keys).reduce((n, k) => {\n          n.key(k);\n          return n;\n        }, nest()).entries(out.source)\n      }, children); // collect nodes to add\n\n      if (gen) {\n        tree.each(node => {\n          if (node.children) {\n            node = ingest(node.data);\n            out.add.push(node);\n            out.source.push(node);\n          }\n        });\n      } // build lookup table\n\n\n      lookup(tree, tupleid, tupleid);\n    }\n\n    out.source.root = tree;\n    return out;\n  }\n\n});\n\nfunction nest() {\n  const keys = [],\n        nest = {\n    entries: array => entries(apply(array, 0), 0),\n    key: d => (keys.push(d), nest)\n  };\n\n  function apply(array, depth) {\n    if (depth >= keys.length) {\n      return array;\n    }\n\n    const n = array.length,\n          key = keys[depth++],\n          valuesByKey = {},\n          result = {};\n    let i = -1,\n        keyValue,\n        value,\n        values;\n\n    while (++i < n) {\n      keyValue = key(value = array[i]) + '';\n\n      if (values = valuesByKey[keyValue]) {\n        values.push(value);\n      } else {\n        valuesByKey[keyValue] = [value];\n      }\n    }\n\n    for (keyValue in valuesByKey) {\n      result[keyValue] = apply(valuesByKey[keyValue], depth);\n    }\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    const array = [];\n\n    for (const key in map) {\n      array.push({\n        key,\n        values: entries(map[key], depth)\n      });\n    }\n\n    return array;\n  }\n\n  return nest;\n}\n\n/**\n * Abstract class for tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction HierarchyLayout(params) {\n  Transform.call(this, null, params);\n}\n\nconst defaultSeparation = (a, b) => a.parent === b.parent ? 1 : 2;\n\ninherits(HierarchyLayout, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source || !pulse.source.root) {\n      error(this.constructor.name + ' transform requires a backing tree data source.');\n    }\n\n    const layout = this.layout(_.method),\n          fields = this.fields,\n          root = pulse.source.root,\n          as = _.as || fields;\n    if (_.field) root.sum(_.field);else root.count();\n    if (_.sort) root.sort(stableCompare(_.sort, d => d.data));\n    setParams(layout, this.params, _);\n\n    if (layout.separation) {\n      layout.separation(_.separation !== false ? defaultSeparation : one);\n    }\n\n    try {\n      this.value = layout(root);\n    } catch (err) {\n      error(err);\n    }\n\n    root.each(node => setFields(node, fields, as));\n    return pulse.reflow(_.modified()).modifies(as).modifies('leaf');\n  }\n\n});\n\nfunction setParams(layout, params, _) {\n  for (let p, i = 0, n = params.length; i < n; ++i) {\n    p = params[i];\n    if (p in _) layout[p](_[p]);\n  }\n}\n\nfunction setFields(node, fields, as) {\n  const t = node.data,\n        n = fields.length - 1;\n\n  for (let i = 0; i < n; ++i) {\n    t[as[i]] = node[fields[i]];\n  }\n\n  t[as[n]] = node.children ? node.children.length : 0;\n}\n\nconst Output = ['x', 'y', 'r', 'depth', 'children'];\n/**\n * Packed circle tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\n\nfunction Pack(params) {\n  HierarchyLayout.call(this, params);\n}\nPack.Definition = {\n  'type': 'Pack',\n  'metadata': {\n    'tree': true,\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'padding',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'radius',\n    'type': 'field',\n    'default': null\n  }, {\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': Output.length,\n    'default': Output\n  }]\n};\ninherits(Pack, HierarchyLayout, {\n  layout: pack,\n  params: ['radius', 'size', 'padding'],\n  fields: Output\n});\n\nconst Output$1 = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n/**\n * Partition tree layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\n\nfunction Partition(params) {\n  HierarchyLayout.call(this, params);\n}\nPartition.Definition = {\n  'type': 'Partition',\n  'metadata': {\n    'tree': true,\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'padding',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'round',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': Output$1.length,\n    'default': Output$1\n  }]\n};\ninherits(Partition, HierarchyLayout, {\n  layout: partition,\n  params: ['size', 'round', 'padding'],\n  fields: Output$1\n});\n\n/**\n * Stratify a collection of tuples into a tree structure based on\n * id and parent id fields.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.key - Unique key field for each tuple.\n * @param {function(object): *} params.parentKey - Field with key for parent tuple.\n */\n\nfunction Stratify(params) {\n  Transform.call(this, null, params);\n}\nStratify.Definition = {\n  'type': 'Stratify',\n  'metadata': {\n    'treesource': true\n  },\n  'params': [{\n    'name': 'key',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'parentKey',\n    'type': 'field',\n    'required': true\n  }]\n};\ninherits(Stratify, Transform, {\n  transform(_, pulse) {\n    if (!pulse.source) {\n      error('Stratify transform requires an upstream data source.');\n    }\n\n    let tree = this.value;\n\n    const mod = _.modified(),\n          out = pulse.fork(pulse.ALL).materialize(pulse.SOURCE),\n          run = !tree || mod || pulse.changed(pulse.ADD_REM) || pulse.modified(_.key.fields) || pulse.modified(_.parentKey.fields); // prevent upstream source pollution\n\n\n    out.source = out.source.slice();\n\n    if (run) {\n      tree = out.source.length ? lookup(stratify().id(_.key).parentId(_.parentKey)(out.source), _.key, truthy) : lookup(stratify()([{}]), _.key, _.key);\n    }\n\n    out.source.root = this.value = tree;\n    return out;\n  }\n\n});\n\nconst Layouts = {\n  tidy: tree,\n  cluster: cluster\n};\nconst Output$2 = ['x', 'y', 'depth', 'children'];\n/**\n * Tree layout. Depending on the method parameter, performs either\n * Reingold-Tilford 'tidy' layout or dendrogram 'cluster' layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction Tree(params) {\n  HierarchyLayout.call(this, params);\n}\nTree.Definition = {\n  'type': 'Tree',\n  'metadata': {\n    'tree': true,\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'method',\n    'type': 'enum',\n    'default': 'tidy',\n    'values': ['tidy', 'cluster']\n  }, {\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'nodeSize',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'separation',\n    'type': 'boolean',\n    'default': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': Output$2.length,\n    'default': Output$2\n  }]\n};\ninherits(Tree, HierarchyLayout, {\n  /**\n   * Tree layout generator. Supports both 'tidy' and 'cluster' layouts.\n   */\n  layout(method) {\n    const m = method || 'tidy';\n    if (hasOwnProperty(Layouts, m)) return Layouts[m]();else error('Unrecognized Tree layout method: ' + m);\n  },\n\n  params: ['size', 'nodeSize'],\n  fields: Output$2\n});\n\n/**\n * Generate tuples representing links between tree nodes.\n * The resulting tuples will contain 'source' and 'target' fields,\n * which point to parent and child node tuples, respectively.\n * @constructor\n * @param {object} params - The parameters for this operator.\n */\n\nfunction TreeLinks(params) {\n  Transform.call(this, [], params);\n}\nTreeLinks.Definition = {\n  'type': 'TreeLinks',\n  'metadata': {\n    'tree': true,\n    'generates': true,\n    'changes': true\n  },\n  'params': []\n};\ninherits(TreeLinks, Transform, {\n  transform(_, pulse) {\n    const links = this.value,\n          tree = pulse.source && pulse.source.root,\n          out = pulse.fork(pulse.NO_SOURCE),\n          lut = {};\n    if (!tree) error('TreeLinks transform requires a tree data source.');\n\n    if (pulse.changed(pulse.ADD_REM)) {\n      // remove previous links\n      out.rem = links; // build lookup table of valid tuples\n\n      pulse.visit(pulse.SOURCE, t => lut[tupleid(t)] = 1); // generate links for all edges incident on valid tuples\n\n      tree.each(node => {\n        const t = node.data,\n              p = node.parent && node.parent.data;\n\n        if (p && lut[tupleid(t)] && lut[tupleid(p)]) {\n          out.add.push(ingest({\n            source: p,\n            target: t\n          }));\n        }\n      });\n      this.value = out.add;\n    } else if (pulse.changed(pulse.MOD)) {\n      // build lookup table of modified tuples\n      pulse.visit(pulse.MOD, t => lut[tupleid(t)] = 1); // gather links incident on modified tuples\n\n      links.forEach(link => {\n        if (lut[tupleid(link.source)] || lut[tupleid(link.target)]) {\n          out.mod.push(link);\n        }\n      });\n    }\n\n    return out;\n  }\n\n});\n\nconst Tiles = {\n  binary: treemapBinary,\n  dice: treemapDice,\n  slice: treemapSlice,\n  slicedice: treemapSliceDice,\n  squarify: treemapSquarify,\n  resquarify: treemapResquarify\n};\nconst Output$3 = ['x0', 'y0', 'x1', 'y1', 'depth', 'children'];\n/**\n * Treemap layout.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.field - The value field to size nodes.\n */\n\nfunction Treemap(params) {\n  HierarchyLayout.call(this, params);\n}\nTreemap.Definition = {\n  'type': 'Treemap',\n  'metadata': {\n    'tree': true,\n    'modifies': true\n  },\n  'params': [{\n    'name': 'field',\n    'type': 'field'\n  }, {\n    'name': 'sort',\n    'type': 'compare'\n  }, {\n    'name': 'method',\n    'type': 'enum',\n    'default': 'squarify',\n    'values': ['squarify', 'resquarify', 'binary', 'dice', 'slice', 'slicedice']\n  }, {\n    'name': 'padding',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingInner',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingOuter',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingTop',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingRight',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingBottom',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'paddingLeft',\n    'type': 'number',\n    'default': 0\n  }, {\n    'name': 'ratio',\n    'type': 'number',\n    'default': 1.618033988749895\n  }, {\n    'name': 'round',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': Output$3.length,\n    'default': Output$3\n  }]\n};\ninherits(Treemap, HierarchyLayout, {\n  /**\n   * Treemap layout generator. Adds 'method' and 'ratio' parameters\n   * to configure the underlying tile method.\n   */\n  layout() {\n    const x = treemap();\n\n    x.ratio = _ => {\n      const t = x.tile();\n      if (t.ratio) x.tile(t.ratio(_));\n    };\n\n    x.method = _ => {\n      if (hasOwnProperty(Tiles, _)) x.tile(Tiles[_]);else error('Unrecognized Treemap layout method: ' + _);\n    };\n\n    return x;\n  },\n\n  params: ['method', 'ratio', 'size', 'round', 'padding', 'paddingInner', 'paddingOuter', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft'],\n  fields: Output$3\n});\n\nexport { Nest as nest, Pack as pack, Partition as partition, Stratify as stratify, Tree as tree, TreeLinks as treelinks, Treemap as treemap };\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","import { canvas } from 'vega-canvas';\nimport { rederive, Transform } from 'vega-dataflow';\nimport { Marks, textMetrics } from 'vega-scenegraph';\nimport { inherits, isFunction, error, array } from 'vega-util';\n\nconst ALPHA_MASK = 0xff000000; // alpha value equivalent to opacity 0.0625\n\nconst INSIDE_OPACITY_IN_ALPHA = 0x10000000;\nconst INSIDE_OPACITY = 0.0625;\nfunction baseBitmaps($, data) {\n  const bitmap = $.bitmap(); // when there is no base mark but data points are to be avoided\n\n  (data || []).forEach(d => bitmap.set($(d.boundary[0]), $(d.boundary[3])));\n  return [bitmap, undefined];\n}\nfunction markBitmaps($, avoidMarks, labelInside, isGroupArea) {\n  // create canvas\n  const width = $.width,\n        height = $.height,\n        border = labelInside || isGroupArea,\n        context = canvas(width, height).getContext('2d'); // render all marks to be avoided into canvas\n\n  avoidMarks.forEach(items => draw(context, items, border)); // get canvas buffer, create bitmaps\n\n  const buffer = new Uint32Array(context.getImageData(0, 0, width, height).data.buffer),\n        layer1 = $.bitmap(),\n        layer2 = border && $.bitmap(); // populate bitmap layers\n\n  let x, y, u, v, alpha;\n\n  for (y = 0; y < height; ++y) {\n    for (x = 0; x < width; ++x) {\n      alpha = buffer[y * width + x] & ALPHA_MASK;\n\n      if (alpha) {\n        u = $(x);\n        v = $(y);\n        if (!isGroupArea) layer1.set(u, v); // update interior bitmap\n\n        if (border && alpha ^ INSIDE_OPACITY_IN_ALPHA) layer2.set(u, v); // update border bitmap\n      }\n    }\n  }\n\n  return [layer1, layer2];\n}\n\nfunction draw(context, items, interior) {\n  if (!items.length) return;\n  const type = items[0].mark.marktype;\n\n  if (type === 'group') {\n    items.forEach(group => {\n      group.items.forEach(mark => draw(context, mark.items, interior));\n    });\n  } else {\n    Marks[type].draw(context, {\n      items: interior ? items.map(prepare) : items\n    });\n  }\n}\n/**\n * Prepare item before drawing into canvas (setting stroke and opacity)\n * @param {object} source item to be prepared\n * @returns prepared item\n */\n\n\nfunction prepare(source) {\n  const item = rederive(source, {});\n\n  if (item.stroke) {\n    item.strokeOpacity = 1;\n  }\n\n  if (item.fill) {\n    item.fillOpacity = INSIDE_OPACITY;\n    item.stroke = '#000';\n    item.strokeOpacity = 1;\n    item.strokeWidth = 2;\n  }\n\n  return item;\n}\n\nconst DIV = 5,\n      // bit shift from x, y index to bit vector array index\nMOD = 31,\n      // bit mask for index lookup within a bit vector\nSIZE = 32,\n      // individual bit vector size\nRIGHT0 = new Uint32Array(SIZE + 1),\n      // left-anchored bit vectors, full -> 0\nRIGHT1 = new Uint32Array(SIZE + 1); // right-anchored bit vectors, 0 -> full\n\nRIGHT1[0] = 0;\nRIGHT0[0] = ~RIGHT1[0];\n\nfor (let i = 1; i <= SIZE; ++i) {\n  RIGHT1[i] = RIGHT1[i - 1] << 1 | 1;\n  RIGHT0[i] = ~RIGHT1[i];\n}\n\nfunction Bitmap (w, h) {\n  const array = new Uint32Array(~~((w * h + SIZE) / SIZE));\n\n  function _set(index, mask) {\n    array[index] |= mask;\n  }\n\n  function _clear(index, mask) {\n    array[index] &= mask;\n  }\n\n  return {\n    array: array,\n    get: (x, y) => {\n      const index = y * w + x;\n      return array[index >>> DIV] & 1 << (index & MOD);\n    },\n    set: (x, y) => {\n      const index = y * w + x;\n\n      _set(index >>> DIV, 1 << (index & MOD));\n    },\n    clear: (x, y) => {\n      const index = y * w + x;\n\n      _clear(index >>> DIV, ~(1 << (index & MOD)));\n    },\n    getRange: (x, y, x2, y2) => {\n      let r = y2,\n          start,\n          end,\n          indexStart,\n          indexEnd;\n\n      for (; r >= y; --r) {\n        start = r * w + x;\n        end = r * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n\n        if (indexStart === indexEnd) {\n          if (array[indexStart] & RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]) {\n            return true;\n          }\n        } else {\n          if (array[indexStart] & RIGHT0[start & MOD]) return true;\n          if (array[indexEnd] & RIGHT1[(end & MOD) + 1]) return true;\n\n          for (let i = indexStart + 1; i < indexEnd; ++i) {\n            if (array[i]) return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    setRange: (x, y, x2, y2) => {\n      let start, end, indexStart, indexEnd, i;\n\n      for (; y <= y2; ++y) {\n        start = y * w + x;\n        end = y * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n\n        if (indexStart === indexEnd) {\n          _set(indexStart, RIGHT0[start & MOD] & RIGHT1[(end & MOD) + 1]);\n        } else {\n          _set(indexStart, RIGHT0[start & MOD]);\n\n          _set(indexEnd, RIGHT1[(end & MOD) + 1]);\n\n          for (i = indexStart + 1; i < indexEnd; ++i) _set(i, 0xffffffff);\n        }\n      }\n    },\n    clearRange: (x, y, x2, y2) => {\n      let start, end, indexStart, indexEnd, i;\n\n      for (; y <= y2; ++y) {\n        start = y * w + x;\n        end = y * w + x2;\n        indexStart = start >>> DIV;\n        indexEnd = end >>> DIV;\n\n        if (indexStart === indexEnd) {\n          _clear(indexStart, RIGHT1[start & MOD] | RIGHT0[(end & MOD) + 1]);\n        } else {\n          _clear(indexStart, RIGHT1[start & MOD]);\n\n          _clear(indexEnd, RIGHT0[(end & MOD) + 1]);\n\n          for (i = indexStart + 1; i < indexEnd; ++i) _clear(i, 0);\n        }\n      }\n    },\n    outOfBounds: (x, y, x2, y2) => x < 0 || y < 0 || y2 >= h || x2 >= w\n  };\n}\n\nfunction scaler (width, height, padding) {\n  const ratio = Math.max(1, Math.sqrt(width * height / 1e6)),\n        w = ~~((width + 2 * padding + ratio) / ratio),\n        h = ~~((height + 2 * padding + ratio) / ratio),\n        scale = _ => ~~((_ + padding) / ratio);\n\n  scale.invert = _ => _ * ratio - padding;\n\n  scale.bitmap = () => Bitmap(w, h);\n\n  scale.ratio = ratio;\n  scale.padding = padding;\n  scale.width = width;\n  scale.height = height;\n  return scale;\n}\n\nfunction placeAreaLabelNaive ($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n        height = $.height; // try to place a label within an input area mark\n\n  return function (d) {\n    const items = d.datum.datum.items[markIndex].items,\n          // area points\n    n = items.length,\n          // number of points\n    textHeight = d.datum.fontSize,\n          // label width\n    textWidth = textMetrics.width(d.datum, d.datum.text); // label height\n\n    let maxAreaWidth = 0,\n        x1,\n        x2,\n        y1,\n        y2,\n        x,\n        y,\n        areaWidth; // for each area sample point\n\n    for (let i = 0; i < n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n      x = (x1 + x2) / 2;\n      y = (y1 + y2) / 2;\n      areaWidth = Math.abs(x2 - x1 + y2 - y1);\n\n      if (areaWidth >= maxAreaWidth) {\n        maxAreaWidth = areaWidth;\n        d.x = x;\n        d.y = y;\n      }\n    }\n\n    x = textWidth / 2;\n    y = textHeight / 2;\n    x1 = d.x - x;\n    x2 = d.x + x;\n    y1 = d.y - y;\n    y2 = d.y + y;\n    d.align = 'center';\n\n    if (x1 < 0 && x2 <= width) {\n      d.align = 'left';\n    } else if (0 <= x1 && width < x2) {\n      d.align = 'right';\n    }\n\n    d.baseline = 'middle';\n\n    if (y1 < 0 && y2 <= height) {\n      d.baseline = 'top';\n    } else if (0 <= y1 && height < y2) {\n      d.baseline = 'bottom';\n    }\n\n    return true;\n  };\n}\n\nfunction outOfBounds(x, y, textWidth, textHeight, width, height) {\n  let r = textWidth / 2;\n  return x - r < 0 || x + r > width || y - (r = textHeight / 2) < 0 || y + r > height;\n}\nfunction collision($, x, y, textHeight, textWidth, h, bm0, bm1) {\n  const w = textWidth * h / (textHeight * 2),\n        x1 = $(x - w),\n        x2 = $(x + w),\n        y1 = $(y - (h = h / 2)),\n        y2 = $(y + h);\n  return bm0.outOfBounds(x1, y1, x2, y2) || bm0.getRange(x1, y1, x2, y2) || bm1 && bm1.getRange(x1, y1, x2, y2);\n}\n\nfunction placeAreaLabelReducedSearch ($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n        height = $.height,\n        bm0 = bitmaps[0],\n        // where labels have been placed\n  bm1 = bitmaps[1]; // area outlines\n\n  function tryLabel(_x, _y, maxSize, textWidth, textHeight) {\n    const x = $.invert(_x),\n          y = $.invert(_y);\n    let lo = maxSize,\n        hi = height,\n        mid;\n\n    if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n      // if the label fits at the current sample point,\n      // perform binary search to find the largest font size that fits\n      while (hi - lo >= 1) {\n        mid = (lo + hi) / 2;\n\n        if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n          hi = mid;\n        } else {\n          lo = mid;\n        }\n      } // place label if current lower bound exceeds prior max font size\n\n\n      if (lo > maxSize) {\n        return [x, y, lo, true];\n      }\n    }\n  } // try to place a label within an input area mark\n\n\n  return function (d) {\n    const items = d.datum.datum.items[markIndex].items,\n          // area points\n    n = items.length,\n          // number of points\n    textHeight = d.datum.fontSize,\n          // label width\n    textWidth = textMetrics.width(d.datum, d.datum.text); // label height\n\n    let maxSize = avoidBaseMark ? textHeight : 0,\n        labelPlaced = false,\n        labelPlaced2 = false,\n        maxAreaWidth = 0,\n        x1,\n        x2,\n        y1,\n        y2,\n        x,\n        y,\n        _x,\n        _y,\n        _x1,\n        _xMid,\n        _x2,\n        _y1,\n        _yMid,\n        _y2,\n        areaWidth,\n        result,\n        swapTmp; // for each area sample point\n\n\n    for (let i = 0; i < n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2;\n\n      if (x1 > x2) {\n        swapTmp = x1;\n        x1 = x2;\n        x2 = swapTmp;\n      }\n\n      if (y1 > y2) {\n        swapTmp = y1;\n        y1 = y2;\n        y2 = swapTmp;\n      }\n\n      _x1 = $(x1);\n      _x2 = $(x2);\n      _xMid = ~~((_x1 + _x2) / 2);\n      _y1 = $(y1);\n      _y2 = $(y2);\n      _yMid = ~~((_y1 + _y2) / 2); // search along the line from mid point between the 2 border to lower border\n\n      for (_x = _xMid; _x >= _x1; --_x) {\n        for (_y = _yMid; _y >= _y1; --_y) {\n          result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n          if (result) {\n            [d.x, d.y, maxSize, labelPlaced] = result;\n          }\n        }\n      } // search along the line from mid point between the 2 border to upper border\n\n\n      for (_x = _xMid; _x <= _x2; ++_x) {\n        for (_y = _yMid; _y <= _y2; ++_y) {\n          result = tryLabel(_x, _y, maxSize, textWidth, textHeight);\n\n          if (result) {\n            [d.x, d.y, maxSize, labelPlaced] = result;\n          }\n        }\n      } // place label at slice center if not placed through other means\n      // and if we're not avoiding overlap with other areas\n\n\n      if (!labelPlaced && !avoidBaseMark) {\n        // one span is zero, hence we can add\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n        if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n          labelPlaced2 = true;\n        }\n      }\n    } // record current label placement information, update label bitmap\n\n\n    if (labelPlaced || labelPlaced2) {\n      x = textWidth / 2;\n      y = textHeight / 2;\n      bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n      d.align = 'center';\n      d.baseline = 'middle';\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nconst X_DIR = [-1, -1, 1, 1];\nconst Y_DIR = [-1, 1, -1, 1];\nfunction placeAreaLabelFloodFill ($, bitmaps, avoidBaseMark, markIndex) {\n  const width = $.width,\n        height = $.height,\n        bm0 = bitmaps[0],\n        // where labels have been placed\n  bm1 = bitmaps[1],\n        // area outlines\n  bm2 = $.bitmap(); // flood-fill visitations\n  // try to place a label within an input area mark\n\n  return function (d) {\n    const items = d.datum.datum.items[markIndex].items,\n          // area points\n    n = items.length,\n          // number of points\n    textHeight = d.datum.fontSize,\n          // label width\n    textWidth = textMetrics.width(d.datum, d.datum.text),\n          // label height\n    stack = []; // flood fill stack\n\n    let maxSize = avoidBaseMark ? textHeight : 0,\n        labelPlaced = false,\n        labelPlaced2 = false,\n        maxAreaWidth = 0,\n        x1,\n        x2,\n        y1,\n        y2,\n        x,\n        y,\n        _x,\n        _y,\n        lo,\n        hi,\n        mid,\n        areaWidth; // for each area sample point\n\n\n    for (let i = 0; i < n; ++i) {\n      x1 = items[i].x;\n      y1 = items[i].y;\n      x2 = items[i].x2 === undefined ? x1 : items[i].x2;\n      y2 = items[i].y2 === undefined ? y1 : items[i].y2; // add scaled center point to stack\n\n      stack.push([$((x1 + x2) / 2), $((y1 + y2) / 2)]); // perform flood fill, visit points\n\n      while (stack.length) {\n        [_x, _y] = stack.pop(); // exit if point already marked\n\n        if (bm0.get(_x, _y) || bm1.get(_x, _y) || bm2.get(_x, _y)) continue; // mark point in flood fill bitmap\n        // add search points for all (in bound) directions\n\n        bm2.set(_x, _y);\n\n        for (let j = 0; j < 4; ++j) {\n          x = _x + X_DIR[j];\n          y = _y + Y_DIR[j];\n          if (!bm2.outOfBounds(x, y, x, y)) stack.push([x, y]);\n        } // unscale point back to x, y space\n\n\n        x = $.invert(_x);\n        y = $.invert(_y);\n        lo = maxSize;\n        hi = height; // TODO: make this bound smaller\n\n        if (!outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, lo, bm0, bm1) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n          // if the label fits at the current sample point,\n          // perform binary search to find the largest font size that fits\n          while (hi - lo >= 1) {\n            mid = (lo + hi) / 2;\n\n            if (collision($, x, y, textHeight, textWidth, mid, bm0, bm1)) {\n              hi = mid;\n            } else {\n              lo = mid;\n            }\n          } // place label if current lower bound exceeds prior max font size\n\n\n          if (lo > maxSize) {\n            d.x = x;\n            d.y = y;\n            maxSize = lo;\n            labelPlaced = true;\n          }\n        }\n      } // place label at slice center if not placed through other means\n      // and if we're not avoiding overlap with other areas\n\n\n      if (!labelPlaced && !avoidBaseMark) {\n        // one span is zero, hence we can add\n        areaWidth = Math.abs(x2 - x1 + y2 - y1);\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2; // place label if it fits and improves the max area width\n\n        if (areaWidth >= maxAreaWidth && !outOfBounds(x, y, textWidth, textHeight, width, height) && !collision($, x, y, textHeight, textWidth, textHeight, bm0, null)) {\n          maxAreaWidth = areaWidth;\n          d.x = x;\n          d.y = y;\n          labelPlaced2 = true;\n        }\n      }\n    } // record current label placement information, update label bitmap\n\n\n    if (labelPlaced || labelPlaced2) {\n      x = textWidth / 2;\n      y = textHeight / 2;\n      bm0.setRange($(d.x - x), $(d.y - y), $(d.x + x), $(d.y + y));\n      d.align = 'center';\n      d.baseline = 'middle';\n      return true;\n    } else {\n      return false;\n    }\n  };\n}\n\nconst Aligns = ['right', 'center', 'left'],\n      Baselines = ['bottom', 'middle', 'top'];\nfunction placeMarkLabel ($, bitmaps, anchors, offsets) {\n  const width = $.width,\n        height = $.height,\n        bm0 = bitmaps[0],\n        bm1 = bitmaps[1],\n        n = offsets.length;\n  return function (d) {\n    const boundary = d.boundary,\n          textHeight = d.datum.fontSize; // can not be placed if the mark is not visible in the graph bound\n\n    if (boundary[2] < 0 || boundary[5] < 0 || boundary[0] > width || boundary[3] > height) {\n      return false;\n    }\n\n    let textWidth = 0,\n        dx,\n        dy,\n        isInside,\n        sizeFactor,\n        insideFactor,\n        x1,\n        x2,\n        y1,\n        y2,\n        xc,\n        yc,\n        _x1,\n        _x2,\n        _y1,\n        _y2; // for each anchor and offset\n\n\n    for (let i = 0; i < n; ++i) {\n      dx = (anchors[i] & 0x3) - 1;\n      dy = (anchors[i] >>> 0x2 & 0x3) - 1;\n      isInside = dx === 0 && dy === 0 || offsets[i] < 0;\n      sizeFactor = dx && dy ? Math.SQRT1_2 : 1;\n      insideFactor = offsets[i] < 0 ? -1 : 1;\n      x1 = boundary[1 + dx] + offsets[i] * dx * sizeFactor;\n      yc = boundary[4 + dy] + insideFactor * textHeight * dy / 2 + offsets[i] * dy * sizeFactor;\n      y1 = yc - textHeight / 2;\n      y2 = yc + textHeight / 2;\n      _x1 = $(x1);\n      _y1 = $(y1);\n      _y2 = $(y2);\n\n      if (!textWidth) {\n        // to avoid finding width of text label,\n        if (!test(_x1, _x1, _y1, _y2, bm0, bm1, x1, x1, y1, y2, boundary, isInside)) {\n          // skip this anchor/offset option if we fail to place a label with 1px width\n          continue;\n        } else {\n          // Otherwise, find the label width\n          textWidth = textMetrics.width(d.datum, d.datum.text);\n        }\n      }\n\n      xc = x1 + insideFactor * textWidth * dx / 2;\n      x1 = xc - textWidth / 2;\n      x2 = xc + textWidth / 2;\n      _x1 = $(x1);\n      _x2 = $(x2);\n\n      if (test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside)) {\n        // place label if the position is placeable\n        d.x = !dx ? xc : dx * insideFactor < 0 ? x2 : x1;\n        d.y = !dy ? yc : dy * insideFactor < 0 ? y2 : y1;\n        d.align = Aligns[dx * insideFactor + 1];\n        d.baseline = Baselines[dy * insideFactor + 1];\n        bm0.setRange(_x1, _y1, _x2, _y2);\n        return true;\n      }\n    }\n\n    return false;\n  };\n} // Test if a label with the given dimensions can be added without overlap\n\nfunction test(_x1, _x2, _y1, _y2, bm0, bm1, x1, x2, y1, y2, boundary, isInside) {\n  return !(bm0.outOfBounds(_x1, _y1, _x2, _y2) || (isInside && bm1 ? bm1.getRange(_x1, _y1, _x2, _y2) || !isInMarkBound(x1, y1, x2, y2, boundary) : bm0.getRange(_x1, _y1, _x2, _y2)));\n}\n\nfunction isInMarkBound(x1, y1, x2, y2, boundary) {\n  return boundary[0] <= x1 && x2 <= boundary[2] && boundary[3] <= y1 && y2 <= boundary[5];\n}\n\nconst TOP = 0x0,\n      MIDDLE = 0x4,\n      BOTTOM = 0x8,\n      LEFT = 0x0,\n      CENTER = 0x1,\n      RIGHT = 0x2; // Mapping from text anchor to number representation\n\nconst anchorCode = {\n  'top-left': TOP + LEFT,\n  'top': TOP + CENTER,\n  'top-right': TOP + RIGHT,\n  'left': MIDDLE + LEFT,\n  'middle': MIDDLE + CENTER,\n  'right': MIDDLE + RIGHT,\n  'bottom-left': BOTTOM + LEFT,\n  'bottom': BOTTOM + CENTER,\n  'bottom-right': BOTTOM + RIGHT\n};\nconst placeAreaLabel = {\n  'naive': placeAreaLabelNaive,\n  'reduced-search': placeAreaLabelReducedSearch,\n  'floodfill': placeAreaLabelFloodFill\n};\nfunction labelLayout (texts, size, compare, offset, anchor, avoidMarks, avoidBaseMark, lineAnchor, markIndex, padding, method) {\n  // early exit for empty data\n  if (!texts.length) return texts;\n  const positions = Math.max(offset.length, anchor.length),\n        offsets = getOffsets(offset, positions),\n        anchors = getAnchors(anchor, positions),\n        marktype = markType(texts[0].datum),\n        grouptype = marktype === 'group' && texts[0].datum.items[markIndex].marktype,\n        isGroupArea = grouptype === 'area',\n        boundary = markBoundary(marktype, grouptype, lineAnchor, markIndex),\n        $ = scaler(size[0], size[1], padding),\n        isNaiveGroupArea = isGroupArea && method === 'naive'; // prepare text mark data for placing\n\n  const data = texts.map(d => ({\n    datum: d,\n    opacity: 0,\n    x: undefined,\n    y: undefined,\n    align: undefined,\n    baseline: undefined,\n    boundary: boundary(d)\n  }));\n  let bitmaps;\n\n  if (!isNaiveGroupArea) {\n    // sort labels in priority order, if comparator is provided\n    if (compare) {\n      data.sort((a, b) => compare(a.datum, b.datum));\n    } // flag indicating if label can be placed inside its base mark\n\n\n    let labelInside = false;\n\n    for (let i = 0; i < anchors.length && !labelInside; ++i) {\n      // label inside if anchor is at center\n      // label inside if offset to be inside the mark bound\n      labelInside = anchors[i] === 0x5 || offsets[i] < 0;\n    } // extract data information from base mark when base mark is to be avoided\n    // base mark is implicitly avoided if it is a group area\n\n\n    if (marktype && (avoidBaseMark || isGroupArea)) {\n      avoidMarks = [texts.map(d => d.datum)].concat(avoidMarks);\n    } // generate bitmaps for layout calculation\n\n\n    bitmaps = avoidMarks.length ? markBitmaps($, avoidMarks, labelInside, isGroupArea) : baseBitmaps($, avoidBaseMark && data);\n  } // generate label placement function\n\n\n  const place = isGroupArea ? placeAreaLabel[method]($, bitmaps, avoidBaseMark, markIndex) : placeMarkLabel($, bitmaps, anchors, offsets); // place all labels\n\n  data.forEach(d => d.opacity = +place(d));\n  return data;\n}\n\nfunction getOffsets(_, count) {\n  const offsets = new Float64Array(count),\n        n = _.length;\n\n  for (let i = 0; i < n; ++i) offsets[i] = _[i] || 0;\n\n  for (let i = n; i < count; ++i) offsets[i] = offsets[n - 1];\n\n  return offsets;\n}\n\nfunction getAnchors(_, count) {\n  const anchors = new Int8Array(count),\n        n = _.length;\n\n  for (let i = 0; i < n; ++i) anchors[i] |= anchorCode[_[i]];\n\n  for (let i = n; i < count; ++i) anchors[i] = anchors[n - 1];\n\n  return anchors;\n}\n\nfunction markType(item) {\n  return item && item.mark && item.mark.marktype;\n}\n/**\n * Factory function for function for getting base mark boundary, depending\n * on mark and group type. When mark type is undefined, line or area: boundary\n * is the coordinate of each data point. When base mark is grouped line,\n * boundary is either at the beginning or end of the line depending on the\n * value of lineAnchor. Otherwise, use bounds of base mark.\n */\n\n\nfunction markBoundary(marktype, grouptype, lineAnchor, markIndex) {\n  const xy = d => [d.x, d.x, d.x, d.y, d.y, d.y];\n\n  if (!marktype) {\n    return xy; // no reactive geometry\n  } else if (marktype === 'line' || marktype === 'area') {\n    return d => xy(d.datum);\n  } else if (grouptype === 'line') {\n    return d => {\n      const items = d.datum.items[markIndex].items;\n      return xy(items.length ? items[lineAnchor === 'start' ? 0 : items.length - 1] : {\n        x: NaN,\n        y: NaN\n      });\n    };\n  } else {\n    return d => {\n      const b = d.datum.bounds;\n      return [b.x1, (b.x1 + b.x2) / 2, b.x2, b.y1, (b.y1 + b.y2) / 2, b.y2];\n    };\n  }\n}\n\nconst Output = ['x', 'y', 'opacity', 'align', 'baseline'];\nconst Anchors = ['top-left', 'left', 'bottom-left', 'top', 'bottom', 'top-right', 'right', 'bottom-right'];\n/**\n * Compute text label layout to annotate marks.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<number>} params.size - The size of the layout, provided as a [width, height] array.\n * @param {function(*,*): number} [params.sort] - An optional\n *   comparator function for sorting label data in priority order.\n * @param {Array<string>} [params.anchor] - Label anchor points relative to the base mark bounding box.\n *   The available options are 'top-left', 'left', 'bottom-left', 'top',\n *   'bottom', 'top-right', 'right', 'bottom-right', 'middle'.\n * @param {Array<number>} [params.offset] - Label offsets (in pixels) from the base mark bounding box.\n *   This parameter  is parallel to the list of anchor points.\n * @param {number} [params.padding=0] - The amount (in pixels) that a label may exceed the layout size.\n * @param {string} [params.lineAnchor='end'] - For group line mark labels only, indicates the anchor\n *   position for labels. One of 'start' or 'end'.\n * @param {string} [params.markIndex=0] - For group mark labels only, an index indicating\n *   which mark within the group should be labeled.\n * @param {Array<number>} [params.avoidMarks] - A list of additional mark names for which the label\n *   layout should avoid overlap.\n * @param {boolean} [params.avoidBaseMark=true] - Boolean flag indicating if labels should avoid\n *   overlap with the underlying base mark being labeled.\n * @param {string} [params.method='naive'] - For area make labels only, a method for\n *   place labels. One of 'naive', 'reduced-search', or 'floodfill'.\n * @param {Array<string>} [params.as] - The output fields written by the transform.\n *   The default is ['x', 'y', 'opacity', 'align', 'baseline'].\n */\n\nfunction Label(params) {\n  Transform.call(this, null, params);\n}\nLabel.Definition = {\n  type: 'Label',\n  metadata: {\n    modifies: true\n  },\n  params: [{\n    name: 'size',\n    type: 'number',\n    array: true,\n    length: 2,\n    required: true\n  }, {\n    name: 'sort',\n    type: 'compare'\n  }, {\n    name: 'anchor',\n    type: 'string',\n    array: true,\n    default: Anchors\n  }, {\n    name: 'offset',\n    type: 'number',\n    array: true,\n    default: [1]\n  }, {\n    name: 'padding',\n    type: 'number',\n    default: 0\n  }, {\n    name: 'lineAnchor',\n    type: 'string',\n    values: ['start', 'end'],\n    default: 'end'\n  }, {\n    name: 'markIndex',\n    type: 'number',\n    default: 0\n  }, {\n    name: 'avoidBaseMark',\n    type: 'boolean',\n    default: true\n  }, {\n    name: 'avoidMarks',\n    type: 'data',\n    array: true\n  }, {\n    name: 'method',\n    type: 'string',\n    default: 'naive'\n  }, {\n    name: 'as',\n    type: 'string',\n    array: true,\n    length: Output.length,\n    default: Output\n  }]\n};\ninherits(Label, Transform, {\n  transform(_, pulse) {\n    function modp(param) {\n      const p = _[param];\n      return isFunction(p) && pulse.modified(p.fields);\n    }\n\n    const mod = _.modified();\n\n    if (!(mod || pulse.changed(pulse.ADD_REM) || modp('sort'))) return;\n\n    if (!_.size || _.size.length !== 2) {\n      error('Size parameter should be specified as a [width, height] array.');\n    }\n\n    const as = _.as || Output; // run label layout\n\n    labelLayout(pulse.materialize(pulse.SOURCE).source, _.size, _.sort, array(_.offset || 1), array(_.anchor || Anchors), _.avoidMarks || [], _.avoidBaseMark === false ? false : true, _.lineAnchor || 'end', _.markIndex || 0, _.padding || 0, _.method || 'naive').forEach(l => {\n      // write layout results to data stream\n      const t = l.datum;\n      t[as[0]] = l.x;\n      t[as[1]] = l.y;\n      t[as[2]] = l.opacity;\n      t[as[3]] = l.align;\n      t[as[4]] = l.baseline;\n    });\n    return pulse.reflow(mod).modifies(as);\n  }\n\n});\n\nexport { Label as label };\n","import { regressionLoess, sampleCurve, regressionLinear, regressionLog, regressionExp, regressionPow, regressionQuad, regressionPoly } from 'vega-statistics';\nimport { Transform, ingest } from 'vega-dataflow';\nimport { inherits, accessorName, hasOwnProperty, error, extent } from 'vega-util';\n\nfunction partition (data, groupby) {\n  var groups = [],\n      get = function (f) {\n    return f(t);\n  },\n      map,\n      i,\n      n,\n      t,\n      k,\n      g; // partition data points into stack groups\n\n\n  if (groupby == null) {\n    groups.push(data);\n  } else {\n    for (map = {}, i = 0, n = data.length; i < n; ++i) {\n      t = data[i];\n      k = groupby.map(get);\n      g = map[k];\n\n      if (!g) {\n        map[k] = g = [];\n        g.dims = k;\n        groups.push(g);\n      }\n\n      g.push(t);\n    }\n  }\n\n  return groups;\n}\n\n/**\n * Compute locally-weighted regression fits for one or more data groups.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.x - An accessor for the predictor data field.\n * @param {function(object): *} params.y - An accessor for the predicted data field.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {number} [params.bandwidth=0.3] - The loess bandwidth.\n */\n\nfunction Loess(params) {\n  Transform.call(this, null, params);\n}\nLoess.Definition = {\n  'type': 'Loess',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'x',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'y',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'bandwidth',\n    'type': 'number',\n    'default': 0.3\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true\n  }]\n};\ninherits(Loess, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n\n    if (!this.value || pulse.changed() || _.modified()) {\n      const source = pulse.materialize(pulse.SOURCE).source,\n            groups = partition(source, _.groupby),\n            names = (_.groupby || []).map(accessorName),\n            m = names.length,\n            as = _.as || [accessorName(_.x), accessorName(_.y)],\n            values = [];\n      groups.forEach(g => {\n        regressionLoess(g, _.x, _.y, _.bandwidth || 0.3).forEach(p => {\n          const t = {};\n\n          for (let i = 0; i < m; ++i) {\n            t[names[i]] = g.dims[i];\n          }\n\n          t[as[0]] = p[0];\n          t[as[1]] = p[1];\n          values.push(ingest(t));\n        });\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.add = out.source = values;\n    }\n\n    return out;\n  }\n\n});\n\nconst Methods = {\n  linear: regressionLinear,\n  log: regressionLog,\n  exp: regressionExp,\n  pow: regressionPow,\n  quad: regressionQuad,\n  poly: regressionPoly\n};\n\nconst degreesOfFreedom = (method, order) => method === 'poly' ? order : method === 'quad' ? 2 : 1;\n/**\n * Compute regression fits for one or more data groups.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {function(object): *} params.x - An accessor for the predictor data field.\n * @param {function(object): *} params.y - An accessor for the predicted data field.\n * @param {string} [params.method='linear'] - The regression method to apply.\n * @param {Array<function(object): *>} [params.groupby] - An array of accessors to groupby.\n * @param {Array<number>} [params.extent] - The domain extent over which to plot the regression line.\n * @param {number} [params.order=3] - The polynomial order. Only applies to the 'poly' method.\n */\n\n\nfunction Regression(params) {\n  Transform.call(this, null, params);\n}\nRegression.Definition = {\n  'type': 'Regression',\n  'metadata': {\n    'generates': true\n  },\n  'params': [{\n    'name': 'x',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'y',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'groupby',\n    'type': 'field',\n    'array': true\n  }, {\n    'name': 'method',\n    'type': 'string',\n    'default': 'linear',\n    'values': Object.keys(Methods)\n  }, {\n    'name': 'order',\n    'type': 'number',\n    'default': 3\n  }, {\n    'name': 'extent',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'params',\n    'type': 'boolean',\n    'default': false\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true\n  }]\n};\ninherits(Regression, Transform, {\n  transform(_, pulse) {\n    const out = pulse.fork(pulse.NO_SOURCE | pulse.NO_FIELDS);\n\n    if (!this.value || pulse.changed() || _.modified()) {\n      const source = pulse.materialize(pulse.SOURCE).source,\n            groups = partition(source, _.groupby),\n            names = (_.groupby || []).map(accessorName),\n            method = _.method || 'linear',\n            order = _.order || 3,\n            dof = degreesOfFreedom(method, order),\n            as = _.as || [accessorName(_.x), accessorName(_.y)],\n            fit = Methods[method],\n            values = [];\n      let domain = _.extent;\n\n      if (!hasOwnProperty(Methods, method)) {\n        error('Invalid regression method: ' + method);\n      }\n\n      if (domain != null) {\n        if (method === 'log' && domain[0] <= 0) {\n          pulse.dataflow.warn('Ignoring extent with values <= 0 for log regression.');\n          domain = null;\n        }\n      }\n\n      groups.forEach(g => {\n        const n = g.length;\n\n        if (n <= dof) {\n          pulse.dataflow.warn('Skipping regression with more parameters than data points.');\n          return;\n        }\n\n        const model = fit(g, _.x, _.y, order);\n\n        if (_.params) {\n          // if parameter vectors requested return those\n          values.push(ingest({\n            keys: g.dims,\n            coef: model.coef,\n            rSquared: model.rSquared\n          }));\n          return;\n        }\n\n        const dom = domain || extent(g, _.x),\n              add = p => {\n          const t = {};\n\n          for (let i = 0; i < names.length; ++i) {\n            t[names[i]] = g.dims[i];\n          }\n\n          t[as[0]] = p[0];\n          t[as[1]] = p[1];\n          values.push(ingest(t));\n        };\n\n        if (method === 'linear') {\n          // for linear regression we only need the end points\n          dom.forEach(x => add([x, model.predict(x)]));\n        } else {\n          // otherwise return trend line sample points\n          sampleCurve(model.predict, dom, 25, 200).forEach(add);\n        }\n      });\n      if (this.value) out.rem = this.value;\n      this.value = out.add = out.source = values;\n    }\n\n    return out;\n  }\n\n});\n\nexport { Loess as loess, Regression as regression };\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","import { Transform } from 'vega-dataflow';\nimport { inherits } from 'vega-util';\nimport { Delaunay } from 'd3-delaunay';\n\nfunction Voronoi(params) {\n  Transform.call(this, null, params);\n}\nVoronoi.Definition = {\n  'type': 'Voronoi',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'x',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'y',\n    'type': 'field',\n    'required': true\n  }, {\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'extent',\n    'type': 'array',\n    'array': true,\n    'length': 2,\n    'default': [[-1e5, -1e5], [1e5, 1e5]],\n    'content': {\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'default': 'path'\n  }]\n};\nconst defaultExtent = [-1e5, -1e5, 1e5, 1e5];\ninherits(Voronoi, Transform, {\n  transform(_, pulse) {\n    const as = _.as || 'path',\n          data = pulse.source; // nothing to do if no data\n\n    if (!data || !data.length) return pulse; // configure and construct voronoi diagram\n\n    let s = _.size;\n    s = s ? [0, 0, s[0], s[1]] : (s = _.extent) ? [s[0][0], s[0][1], s[1][0], s[1][1]] : defaultExtent;\n    const voronoi = this.value = Delaunay.from(data, _.x, _.y).voronoi(s); // map polygons to paths\n\n    for (let i = 0, n = data.length; i < n; ++i) {\n      const polygon = voronoi.cellPolygon(i);\n      data[i][as] = polygon ? toPathString(polygon) : null;\n    }\n\n    return pulse.reflow(_.modified()).modifies(as);\n  }\n\n}); // suppress duplicated end point vertices\n\nfunction toPathString(p) {\n  const x = p[0][0],\n        y = p[0][1];\n  let n = p.length - 1;\n\n  for (; p[n][0] === x && p[n][1] === y; --n);\n\n  return 'M' + p.slice(0, n + 1).join('L') + 'Z';\n}\n\nexport { Voronoi as voronoi };\n","import { canvas } from 'vega-canvas';\nimport { Transform } from 'vega-dataflow';\nimport { inherits, error, isFunction, constant, extent } from 'vega-util';\nimport { scale } from 'vega-scale';\nimport { random } from 'vega-statistics';\n\n/*\nCopyright (c) 2013, Jason Davies.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n  * The name Jason Davies may not be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL JASON DAVIES BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\nfunction cloud () {\n  var size = [256, 256],\n      text,\n      font,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      rotate,\n      padding,\n      spiral = archimedeanSpiral,\n      words = [],\n      random = Math.random,\n      cloud = {};\n\n  cloud.layout = function () {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(d => ({\n      text: text(d),\n      font: font(d),\n      style: fontStyle(d),\n      weight: fontWeight(d),\n      rotate: rotate(d),\n      size: ~~(fontSize(d) + 1e-14),\n      padding: padding(d),\n      xoff: 0,\n      yoff: 0,\n      x1: 0,\n      y1: 0,\n      x0: 0,\n      y0: 0,\n      hasText: false,\n      sprite: null,\n      datum: d\n    })).sort((a, b) => b.size - a.size);\n\n    while (++i < n) {\n      var d = data[i];\n      d.x = size[0] * (random() + .5) >> 1;\n      d.y = size[1] * (random() + .5) >> 1;\n      cloudSprite(contextAndRatio, d, data, i);\n\n      if (d.hasText && place(board, d, bounds)) {\n        tags.push(d);\n        if (bounds) cloudBounds(bounds, d);else bounds = [{\n          x: d.x + d.x0,\n          y: d.y + d.y0\n        }, {\n          x: d.x + d.x1,\n          y: d.y + d.y1\n        }]; // Temporary hack\n\n        d.x -= size[0] >> 1;\n        d.y -= size[1] >> 1;\n      }\n    }\n\n    return tags;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext('2d').getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    var context = canvas.getContext('2d');\n    context.fillStyle = context.strokeStyle = 'red';\n    context.textAlign = 'center';\n    return {\n      context: context,\n      ratio: ratio\n    };\n  }\n\n  function place(board, tag, bounds) {\n    var startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.\n\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n\n          for (var j = 0; j < h; j++) {\n            last = 0;\n\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n\n            x += sw;\n          }\n\n          tag.sprite = null;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  cloud.words = function (_) {\n    if (arguments.length) {\n      words = _;\n      return cloud;\n    } else {\n      return words;\n    }\n  };\n\n  cloud.size = function (_) {\n    if (arguments.length) {\n      size = [+_[0], +_[1]];\n      return cloud;\n    } else {\n      return size;\n    }\n  };\n\n  cloud.font = function (_) {\n    if (arguments.length) {\n      font = functor(_);\n      return cloud;\n    } else {\n      return font;\n    }\n  };\n\n  cloud.fontStyle = function (_) {\n    if (arguments.length) {\n      fontStyle = functor(_);\n      return cloud;\n    } else {\n      return fontStyle;\n    }\n  };\n\n  cloud.fontWeight = function (_) {\n    if (arguments.length) {\n      fontWeight = functor(_);\n      return cloud;\n    } else {\n      return fontWeight;\n    }\n  };\n\n  cloud.rotate = function (_) {\n    if (arguments.length) {\n      rotate = functor(_);\n      return cloud;\n    } else {\n      return rotate;\n    }\n  };\n\n  cloud.text = function (_) {\n    if (arguments.length) {\n      text = functor(_);\n      return cloud;\n    } else {\n      return text;\n    }\n  };\n\n  cloud.spiral = function (_) {\n    if (arguments.length) {\n      spiral = spirals[_] || _;\n      return cloud;\n    } else {\n      return spiral;\n    }\n  };\n\n  cloud.fontSize = function (_) {\n    if (arguments.length) {\n      fontSize = functor(_);\n      return cloud;\n    } else {\n      return fontSize;\n    }\n  };\n\n  cloud.padding = function (_) {\n    if (arguments.length) {\n      padding = functor(_);\n      return cloud;\n    } else {\n      return padding;\n    }\n  };\n\n  cloud.random = function (_) {\n    if (arguments.length) {\n      random = _;\n      return cloud;\n    } else {\n      return random;\n    }\n  };\n\n  return cloud;\n} // Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\n\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length,\n      w,\n      w32,\n      h,\n      i,\n      j;\n  --di;\n\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + ' ' + d.weight + ' ' + ~~((d.size + 1) / ratio) + 'px ' + d.font;\n    w = c.measureText(d.text + 'm').width * ratio;\n    h = d.size << 1;\n\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n\n    if (h > maxh) maxh = h;\n\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n\n    if (d.padding) {\n      c.lineWidth = 2 * d.padding;\n      c.strokeText(d.text, 0, 0);\n    }\n\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    w = d.width;\n    w32 = w >> 5;\n    h = d.y1 - d.y0; // Zero the buffer\n\n    for (i = 0; i < h * w32; i++) sprite[i] = 0;\n\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n\n    for (j = 0; j < h; j++) {\n      for (i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n} // Use mask-based collision detection.\n\n\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n\n  for (var j = 0; j < h; j++) {\n    last = 0;\n\n    for (var i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n\n    x += sw;\n  }\n\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function (t) {\n    var sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.\n\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n\n      case 1:\n        y += dy;\n        break;\n\n      case 2:\n        x -= dx;\n        break;\n\n      default:\n        y -= dy;\n        break;\n    }\n\n    return [x, y];\n  };\n} // TODO reuse arrays?\n\n\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n\n  while (++i < n) a[i] = 0;\n\n  return a;\n}\n\nfunction functor(d) {\n  return typeof d === 'function' ? d : function () {\n    return d;\n  };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};\n\nconst Output = ['x', 'y', 'font', 'fontSize', 'fontStyle', 'fontWeight', 'angle'];\nconst Params = ['text', 'font', 'rotate', 'fontSize', 'fontStyle', 'fontWeight'];\nfunction Wordcloud(params) {\n  Transform.call(this, cloud(), params);\n}\nWordcloud.Definition = {\n  'type': 'Wordcloud',\n  'metadata': {\n    'modifies': true\n  },\n  'params': [{\n    'name': 'size',\n    'type': 'number',\n    'array': true,\n    'length': 2\n  }, {\n    'name': 'font',\n    'type': 'string',\n    'expr': true,\n    'default': 'sans-serif'\n  }, {\n    'name': 'fontStyle',\n    'type': 'string',\n    'expr': true,\n    'default': 'normal'\n  }, {\n    'name': 'fontWeight',\n    'type': 'string',\n    'expr': true,\n    'default': 'normal'\n  }, {\n    'name': 'fontSize',\n    'type': 'number',\n    'expr': true,\n    'default': 14\n  }, {\n    'name': 'fontSizeRange',\n    'type': 'number',\n    'array': 'nullable',\n    'default': [10, 50]\n  }, {\n    'name': 'rotate',\n    'type': 'number',\n    'expr': true,\n    'default': 0\n  }, {\n    'name': 'text',\n    'type': 'field'\n  }, {\n    'name': 'spiral',\n    'type': 'string',\n    'values': ['archimedean', 'rectangular']\n  }, {\n    'name': 'padding',\n    'type': 'number',\n    'expr': true\n  }, {\n    'name': 'as',\n    'type': 'string',\n    'array': true,\n    'length': 7,\n    'default': Output\n  }]\n};\ninherits(Wordcloud, Transform, {\n  transform(_, pulse) {\n    if (_.size && !(_.size[0] && _.size[1])) {\n      error('Wordcloud size dimensions must be non-zero.');\n    }\n\n    function modp(param) {\n      const p = _[param];\n      return isFunction(p) && pulse.modified(p.fields);\n    }\n\n    const mod = _.modified();\n\n    if (!(mod || pulse.changed(pulse.ADD_REM) || Params.some(modp))) return;\n    const data = pulse.materialize(pulse.SOURCE).source,\n          layout = this.value,\n          as = _.as || Output;\n    let fontSize = _.fontSize || 14,\n        range;\n    isFunction(fontSize) ? range = _.fontSizeRange : fontSize = constant(fontSize); // create font size scaling function as needed\n\n    if (range) {\n      const fsize = fontSize,\n            sizeScale = scale('sqrt')().domain(extent(data, fsize)).range(range);\n\n      fontSize = x => sizeScale(fsize(x));\n    }\n\n    data.forEach(t => {\n      t[as[0]] = NaN;\n      t[as[1]] = NaN;\n      t[as[3]] = 0;\n    }); // configure layout\n\n    const words = layout.words(data).text(_.text).size(_.size || [500, 500]).padding(_.padding || 1).spiral(_.spiral || 'archimedean').rotate(_.rotate || 0).font(_.font || 'sans-serif').fontStyle(_.fontStyle || 'normal').fontWeight(_.fontWeight || 'normal').fontSize(fontSize).random(random).layout();\n    const size = layout.size(),\n          dx = size[0] >> 1,\n          dy = size[1] >> 1,\n          n = words.length;\n\n    for (let i = 0, w, t; i < n; ++i) {\n      w = words[i];\n      t = w.datum;\n      t[as[0]] = w.x + dx;\n      t[as[1]] = w.y + dy;\n      t[as[2]] = w.font;\n      t[as[3]] = w.size;\n      t[as[4]] = w.style;\n      t[as[5]] = w.weight;\n      t[as[6]] = w.rotate;\n    }\n\n    return pulse.reflow(mod).modifies(as);\n  }\n\n});\n\nexport { Wordcloud as wordcloud };\n","import { permute, bisectLeft, bisectRight } from 'd3-array';\nimport { Transform } from 'vega-dataflow';\nimport { inherits } from 'vega-util';\n\nconst array8 = n => new Uint8Array(n);\nconst array16 = n => new Uint16Array(n);\nconst array32 = n => new Uint32Array(n);\n\n/**\n * Maintains CrossFilter state.\n */\n\nfunction Bitmaps() {\n  let width = 8,\n      data = [],\n      seen = array32(0),\n      curr = array(0, width),\n      prev = array(0, width);\n  return {\n    data: () => data,\n    seen: () => seen = lengthen(seen, data.length),\n\n    add(array) {\n      for (let i = 0, j = data.length, n = array.length, t; i < n; ++i) {\n        t = array[i];\n        t._index = j++;\n        data.push(t);\n      }\n    },\n\n    remove(num, map) {\n      // map: index -> boolean (true => remove)\n      const n = data.length,\n            copy = Array(n - num),\n            reindex = data; // reuse old data array for index map\n\n      let t, i, j; // seek forward to first removal\n\n      for (i = 0; !map[i] && i < n; ++i) {\n        copy[i] = data[i];\n        reindex[i] = i;\n      } // condense arrays\n\n\n      for (j = i; i < n; ++i) {\n        t = data[i];\n\n        if (!map[i]) {\n          reindex[i] = j;\n          curr[j] = curr[i];\n          prev[j] = prev[i];\n          copy[j] = t;\n          t._index = j++;\n        } else {\n          reindex[i] = -1;\n        }\n\n        curr[i] = 0; // clear unused bits\n      }\n\n      data = copy;\n      return reindex;\n    },\n\n    size: () => data.length,\n    curr: () => curr,\n    prev: () => prev,\n    reset: k => prev[k] = curr[k],\n    all: () => width < 0x101 ? 0xff : width < 0x10001 ? 0xffff : 0xffffffff,\n\n    set(k, one) {\n      curr[k] |= one;\n    },\n\n    clear(k, one) {\n      curr[k] &= ~one;\n    },\n\n    resize(n, m) {\n      const k = curr.length;\n\n      if (n > k || m > width) {\n        width = Math.max(m, width);\n        curr = array(n, width, curr);\n        prev = array(n, width);\n      }\n    }\n\n  };\n}\n\nfunction lengthen(array, length, copy) {\n  if (array.length >= length) return array;\n  copy = copy || new array.constructor(length);\n  copy.set(array);\n  return copy;\n}\n\nfunction array(n, m, array) {\n  const copy = (m < 0x101 ? array8 : m < 0x10001 ? array16 : array32)(n);\n  if (array) copy.set(array);\n  return copy;\n}\n\nfunction Dimension (index, i, query) {\n  const bit = 1 << i;\n  return {\n    one: bit,\n    zero: ~bit,\n    range: query.slice(),\n    bisect: index.bisect,\n    index: index.index,\n    size: index.size,\n\n    onAdd(added, curr) {\n      const dim = this,\n            range = dim.bisect(dim.range, added.value),\n            idx = added.index,\n            lo = range[0],\n            hi = range[1],\n            n1 = idx.length;\n      let i;\n\n      for (i = 0; i < lo; ++i) curr[idx[i]] |= bit;\n\n      for (i = hi; i < n1; ++i) curr[idx[i]] |= bit;\n\n      return dim;\n    }\n\n  };\n}\n\n/**\n * Maintains a list of values, sorted by key.\n */\n\nfunction SortedIndex() {\n  let index = array32(0),\n      value = [],\n      size = 0;\n\n  function insert(key, data, base) {\n    if (!data.length) return [];\n    const n0 = size,\n          n1 = data.length,\n          addi = array32(n1);\n    let addv = Array(n1),\n        oldv,\n        oldi,\n        i;\n\n    for (i = 0; i < n1; ++i) {\n      addv[i] = key(data[i]);\n      addi[i] = i;\n    }\n\n    addv = sort(addv, addi);\n\n    if (n0) {\n      oldv = value;\n      oldi = index;\n      value = Array(n0 + n1);\n      index = array32(n0 + n1);\n      merge(base, oldv, oldi, n0, addv, addi, n1, value, index);\n    } else {\n      if (base > 0) for (i = 0; i < n1; ++i) {\n        addi[i] += base;\n      }\n      value = addv;\n      index = addi;\n    }\n\n    size = n0 + n1;\n    return {\n      index: addi,\n      value: addv\n    };\n  }\n\n  function remove(num, map) {\n    // map: index -> remove\n    const n = size;\n    let idx, i, j; // seek forward to first removal\n\n    for (i = 0; !map[index[i]] && i < n; ++i); // condense index and value arrays\n\n\n    for (j = i; i < n; ++i) {\n      if (!map[idx = index[i]]) {\n        index[j] = idx;\n        value[j] = value[i];\n        ++j;\n      }\n    }\n\n    size = n - num;\n  }\n\n  function reindex(map) {\n    for (let i = 0, n = size; i < n; ++i) {\n      index[i] = map[index[i]];\n    }\n  }\n\n  function bisect(range, array) {\n    let n;\n\n    if (array) {\n      n = array.length;\n    } else {\n      array = value;\n      n = size;\n    }\n\n    return [bisectLeft(array, range[0], 0, n), bisectRight(array, range[1], 0, n)];\n  }\n\n  return {\n    insert: insert,\n    remove: remove,\n    bisect: bisect,\n    reindex: reindex,\n    index: () => index,\n    size: () => size\n  };\n}\n\nfunction sort(values, index) {\n  values.sort.call(index, (a, b) => {\n    const x = values[a],\n          y = values[b];\n    return x < y ? -1 : x > y ? 1 : 0;\n  });\n  return permute(values, index);\n}\n\nfunction merge(base, value0, index0, n0, value1, index1, n1, value, index) {\n  let i0 = 0,\n      i1 = 0,\n      i;\n\n  for (i = 0; i0 < n0 && i1 < n1; ++i) {\n    if (value0[i0] < value1[i1]) {\n      value[i] = value0[i0];\n      index[i] = index0[i0++];\n    } else {\n      value[i] = value1[i1];\n      index[i] = index1[i1++] + base;\n    }\n  }\n\n  for (; i0 < n0; ++i0, ++i) {\n    value[i] = value0[i0];\n    index[i] = index0[i0];\n  }\n\n  for (; i1 < n1; ++i1, ++i) {\n    value[i] = value1[i1];\n    index[i] = index1[i1] + base;\n  }\n}\n\n/**\n * An indexed multi-dimensional filter.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {Array<function(object): *>} params.fields - An array of dimension accessors to filter.\n * @param {Array} params.query - An array of per-dimension range queries.\n */\n\nfunction CrossFilter(params) {\n  Transform.call(this, Bitmaps(), params);\n  this._indices = null;\n  this._dims = null;\n}\nCrossFilter.Definition = {\n  'type': 'CrossFilter',\n  'metadata': {},\n  'params': [{\n    'name': 'fields',\n    'type': 'field',\n    'array': true,\n    'required': true\n  }, {\n    'name': 'query',\n    'type': 'array',\n    'array': true,\n    'required': true,\n    'content': {\n      'type': 'number',\n      'array': true,\n      'length': 2\n    }\n  }]\n};\ninherits(CrossFilter, Transform, {\n  transform(_, pulse) {\n    if (!this._dims) {\n      return this.init(_, pulse);\n    } else {\n      var init = _.modified('fields') || _.fields.some(f => pulse.modified(f.fields));\n\n      return init ? this.reinit(_, pulse) : this.eval(_, pulse);\n    }\n  },\n\n  init(_, pulse) {\n    const fields = _.fields,\n          query = _.query,\n          indices = this._indices = {},\n          dims = this._dims = [],\n          m = query.length;\n    let i = 0,\n        key,\n        index; // instantiate indices and dimensions\n\n    for (; i < m; ++i) {\n      key = fields[i].fname;\n      index = indices[key] || (indices[key] = SortedIndex());\n      dims.push(Dimension(index, i, query[i]));\n    }\n\n    return this.eval(_, pulse);\n  },\n\n  reinit(_, pulse) {\n    const output = pulse.materialize().fork(),\n          fields = _.fields,\n          query = _.query,\n          indices = this._indices,\n          dims = this._dims,\n          bits = this.value,\n          curr = bits.curr(),\n          prev = bits.prev(),\n          all = bits.all(),\n          out = output.rem = output.add,\n          mod = output.mod,\n          m = query.length,\n          adds = {};\n    let add, index, key, mods, remMap, modMap, i, n, f; // set prev to current state\n\n    prev.set(curr); // if pulse has remove tuples, process them first\n\n    if (pulse.rem.length) {\n      remMap = this.remove(_, pulse, output);\n    } // if pulse has added tuples, add them to state\n\n\n    if (pulse.add.length) {\n      bits.add(pulse.add);\n    } // if pulse has modified tuples, create an index map\n\n\n    if (pulse.mod.length) {\n      modMap = {};\n\n      for (mods = pulse.mod, i = 0, n = mods.length; i < n; ++i) {\n        modMap[mods[i]._index] = 1;\n      }\n    } // re-initialize indices as needed, update curr bitmap\n\n\n    for (i = 0; i < m; ++i) {\n      f = fields[i];\n\n      if (!dims[i] || _.modified('fields', i) || pulse.modified(f.fields)) {\n        key = f.fname;\n\n        if (!(add = adds[key])) {\n          indices[key] = index = SortedIndex();\n          adds[key] = add = index.insert(f, pulse.source, 0);\n        }\n\n        dims[i] = Dimension(index, i, query[i]).onAdd(add, curr);\n      }\n    } // visit each tuple\n    // if filter state changed, push index to add/rem\n    // else if in mod and passes a filter, push index to mod\n\n\n    for (i = 0, n = bits.data().length; i < n; ++i) {\n      if (remMap[i]) {\n        // skip if removed tuple\n        continue;\n      } else if (prev[i] !== curr[i]) {\n        // add if state changed\n        out.push(i);\n      } else if (modMap[i] && curr[i] !== all) {\n        // otherwise, pass mods through\n        mod.push(i);\n      }\n    }\n\n    bits.mask = (1 << m) - 1;\n    return output;\n  },\n\n  eval(_, pulse) {\n    const output = pulse.materialize().fork(),\n          m = this._dims.length;\n    let mask = 0;\n\n    if (pulse.rem.length) {\n      this.remove(_, pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    if (_.modified('query') && !_.modified('fields')) {\n      mask |= this.update(_, pulse, output);\n    }\n\n    if (pulse.add.length) {\n      this.insert(_, pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    if (pulse.mod.length) {\n      this.modify(pulse, output);\n      mask |= (1 << m) - 1;\n    }\n\n    this.value.mask = mask;\n    return output;\n  },\n\n  insert(_, pulse, output) {\n    const tuples = pulse.add,\n          bits = this.value,\n          dims = this._dims,\n          indices = this._indices,\n          fields = _.fields,\n          adds = {},\n          out = output.add,\n          n = bits.size() + tuples.length,\n          m = dims.length;\n    let k = bits.size(),\n        j,\n        key,\n        add; // resize bitmaps and add tuples as needed\n\n    bits.resize(n, m);\n    bits.add(tuples);\n    const curr = bits.curr(),\n          prev = bits.prev(),\n          all = bits.all(); // add to dimensional indices\n\n    for (j = 0; j < m; ++j) {\n      key = fields[j].fname;\n      add = adds[key] || (adds[key] = indices[key].insert(fields[j], tuples, k));\n      dims[j].onAdd(add, curr);\n    } // set previous filters, output if passes at least one filter\n\n\n    for (; k < n; ++k) {\n      prev[k] = all;\n      if (curr[k] !== all) out.push(k);\n    }\n  },\n\n  modify(pulse, output) {\n    const out = output.mod,\n          bits = this.value,\n          curr = bits.curr(),\n          all = bits.all(),\n          tuples = pulse.mod;\n    let i, n, k;\n\n    for (i = 0, n = tuples.length; i < n; ++i) {\n      k = tuples[i]._index;\n      if (curr[k] !== all) out.push(k);\n    }\n  },\n\n  remove(_, pulse, output) {\n    const indices = this._indices,\n          bits = this.value,\n          curr = bits.curr(),\n          prev = bits.prev(),\n          all = bits.all(),\n          map = {},\n          out = output.rem,\n          tuples = pulse.rem;\n    let i, n, k, f; // process tuples, output if passes at least one filter\n\n    for (i = 0, n = tuples.length; i < n; ++i) {\n      k = tuples[i]._index;\n      map[k] = 1; // build index map\n\n      prev[k] = f = curr[k];\n      curr[k] = all;\n      if (f !== all) out.push(k);\n    } // remove from dimensional indices\n\n\n    for (k in indices) {\n      indices[k].remove(n, map);\n    }\n\n    this.reindex(pulse, n, map);\n    return map;\n  },\n\n  // reindex filters and indices after propagation completes\n  reindex(pulse, num, map) {\n    const indices = this._indices,\n          bits = this.value;\n    pulse.runAfter(() => {\n      const indexMap = bits.remove(num, map);\n\n      for (const key in indices) indices[key].reindex(indexMap);\n    });\n  },\n\n  update(_, pulse, output) {\n    const dims = this._dims,\n          query = _.query,\n          stamp = pulse.stamp,\n          m = dims.length;\n    let mask = 0,\n        i,\n        q; // survey how many queries have changed\n\n    output.filters = 0;\n\n    for (q = 0; q < m; ++q) {\n      if (_.modified('query', q)) {\n        i = q;\n        ++mask;\n      }\n    }\n\n    if (mask === 1) {\n      // only one query changed, use more efficient update\n      mask = dims[i].one;\n      this.incrementOne(dims[i], query[i], output.add, output.rem);\n    } else {\n      // multiple queries changed, perform full record keeping\n      for (q = 0, mask = 0; q < m; ++q) {\n        if (!_.modified('query', q)) continue;\n        mask |= dims[q].one;\n        this.incrementAll(dims[q], query[q], stamp, output.add);\n        output.rem = output.add; // duplicate add/rem for downstream resolve\n      }\n    }\n\n    return mask;\n  },\n\n  incrementAll(dim, query, stamp, out) {\n    const bits = this.value,\n          seen = bits.seen(),\n          curr = bits.curr(),\n          prev = bits.prev(),\n          index = dim.index(),\n          old = dim.bisect(dim.range),\n          range = dim.bisect(query),\n          lo1 = range[0],\n          hi1 = range[1],\n          lo0 = old[0],\n          hi0 = old[1],\n          one = dim.one;\n    let i, j, k; // Fast incremental update based on previous lo index.\n\n    if (lo1 < lo0) {\n      for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n        k = index[i];\n\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n\n        curr[k] ^= one;\n      }\n    } else if (lo1 > lo0) {\n      for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n        k = index[i];\n\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n\n        curr[k] ^= one;\n      }\n    } // Fast incremental update based on previous hi index.\n\n\n    if (hi1 > hi0) {\n      for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n        k = index[i];\n\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n\n        curr[k] ^= one;\n      }\n    } else if (hi1 < hi0) {\n      for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n        k = index[i];\n\n        if (seen[k] !== stamp) {\n          prev[k] = curr[k];\n          seen[k] = stamp;\n          out.push(k);\n        }\n\n        curr[k] ^= one;\n      }\n    }\n\n    dim.range = query.slice();\n  },\n\n  incrementOne(dim, query, add, rem) {\n    const bits = this.value,\n          curr = bits.curr(),\n          index = dim.index(),\n          old = dim.bisect(dim.range),\n          range = dim.bisect(query),\n          lo1 = range[0],\n          hi1 = range[1],\n          lo0 = old[0],\n          hi0 = old[1],\n          one = dim.one;\n    let i, j, k; // Fast incremental update based on previous lo index.\n\n    if (lo1 < lo0) {\n      for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        add.push(k);\n      }\n    } else if (lo1 > lo0) {\n      for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        rem.push(k);\n      }\n    } // Fast incremental update based on previous hi index.\n\n\n    if (hi1 > hi0) {\n      for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        add.push(k);\n      }\n    } else if (hi1 < hi0) {\n      for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n        k = index[i];\n        curr[k] ^= one;\n        rem.push(k);\n      }\n    }\n\n    dim.range = query.slice();\n  }\n\n});\n\n/**\n * Selectively filters tuples by resolving against a filter bitmap.\n * Useful for processing the output of a cross-filter transform.\n * @constructor\n * @param {object} params - The parameters for this operator.\n * @param {object} params.ignore - A bit mask indicating which filters to ignore.\n * @param {object} params.filter - The per-tuple filter bitmaps. Typically this\n *   parameter value is a reference to a {@link CrossFilter} transform.\n */\n\nfunction ResolveFilter(params) {\n  Transform.call(this, null, params);\n}\nResolveFilter.Definition = {\n  'type': 'ResolveFilter',\n  'metadata': {},\n  'params': [{\n    'name': 'ignore',\n    'type': 'number',\n    'required': true,\n    'description': 'A bit mask indicating which filters to ignore.'\n  }, {\n    'name': 'filter',\n    'type': 'object',\n    'required': true,\n    'description': 'Per-tuple filter bitmaps from a CrossFilter transform.'\n  }]\n};\ninherits(ResolveFilter, Transform, {\n  transform(_, pulse) {\n    const ignore = ~(_.ignore || 0),\n          // bit mask where zeros -> dims to ignore\n    bitmap = _.filter,\n          mask = bitmap.mask; // exit early if no relevant filter changes\n\n    if ((mask & ignore) === 0) return pulse.StopPropagation;\n\n    const output = pulse.fork(pulse.ALL),\n          data = bitmap.data(),\n          curr = bitmap.curr(),\n          prev = bitmap.prev(),\n          pass = k => !(curr[k] & ignore) ? data[k] : null; // propagate all mod tuples that pass the filter\n\n\n    output.filter(output.MOD, pass); // determine add & rem tuples via filter functions\n    // for efficiency, we do *not* populate new arrays,\n    // instead we add filter functions applied downstream\n\n    if (!(mask & mask - 1)) {\n      // only one filter changed\n      output.filter(output.ADD, pass);\n      output.filter(output.REM, k => (curr[k] & ignore) === mask ? data[k] : null);\n    } else {\n      // multiple filters changed\n      output.filter(output.ADD, k => {\n        const c = curr[k] & ignore,\n              f = !c && c ^ prev[k] & ignore;\n        return f ? data[k] : null;\n      });\n      output.filter(output.REM, k => {\n        const c = curr[k] & ignore,\n              f = c && !(c ^ (c ^ prev[k] & ignore));\n        return f ? data[k] : null;\n      });\n    } // add filter to source data in case of reflow...\n\n\n    return output.filter(output.SOURCE, t => pass(t._index));\n  }\n\n});\n\nexport { CrossFilter as crossfilter, ResolveFilter as resolvefilter };\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import { error, toSet, isFunction, isString, hasOwnProperty } from 'vega-util';\n\nconst RawCode = 'RawCode';\nconst Literal = 'Literal';\nconst Property = 'Property';\nconst Identifier = 'Identifier';\nconst ArrayExpression = 'ArrayExpression';\nconst BinaryExpression = 'BinaryExpression';\nconst CallExpression = 'CallExpression';\nconst ConditionalExpression = 'ConditionalExpression';\nconst LogicalExpression = 'LogicalExpression';\nconst MemberExpression = 'MemberExpression';\nconst ObjectExpression = 'ObjectExpression';\nconst UnaryExpression = 'UnaryExpression';\nfunction ASTNode(type) {\n  this.type = type;\n}\n\nASTNode.prototype.visit = function (visitor) {\n  let c, i, n;\n  if (visitor(this)) return 1;\n\n  for (c = children(this), i = 0, n = c.length; i < n; ++i) {\n    if (c[i].visit(visitor)) return 1;\n  }\n};\n\nfunction children(node) {\n  switch (node.type) {\n    case ArrayExpression:\n      return node.elements;\n\n    case BinaryExpression:\n    case LogicalExpression:\n      return [node.left, node.right];\n\n    case CallExpression:\n      return [node.callee].concat(node.arguments);\n\n    case ConditionalExpression:\n      return [node.test, node.consequent, node.alternate];\n\n    case MemberExpression:\n      return [node.object, node.property];\n\n    case ObjectExpression:\n      return node.properties;\n\n    case Property:\n      return [node.key, node.value];\n\n    case UnaryExpression:\n      return [node.argument];\n\n    case Identifier:\n    case Literal:\n    case RawCode:\n    default:\n      return [];\n  }\n}\n\n/*\n  The following expression parser is based on Esprima (http://esprima.org/).\n  Original header comment and license for Esprima is included here:\n\n  Copyright (C) 2013 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2013 Thaddee Tyl <thaddee.tyl@gmail.com>\n  Copyright (C) 2013 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n  Copyright (C) 2012 Mathias Bynens <mathias@qiwi.be>\n  Copyright (C) 2012 Joost-Wim Boekesteijn <joost-wim@boekesteijn.nl>\n  Copyright (C) 2012 Kris Kowal <kris.kowal@cixar.com>\n  Copyright (C) 2012 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Arpad Borsos <arpad.borsos@googlemail.com>\n  Copyright (C) 2011 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nvar TokenName, source, index, length, lookahead;\nvar TokenBooleanLiteral = 1,\n    TokenEOF = 2,\n    TokenIdentifier = 3,\n    TokenKeyword = 4,\n    TokenNullLiteral = 5,\n    TokenNumericLiteral = 6,\n    TokenPunctuator = 7,\n    TokenStringLiteral = 8,\n    TokenRegularExpression = 9;\nTokenName = {};\nTokenName[TokenBooleanLiteral] = 'Boolean';\nTokenName[TokenEOF] = '<end>';\nTokenName[TokenIdentifier] = 'Identifier';\nTokenName[TokenKeyword] = 'Keyword';\nTokenName[TokenNullLiteral] = 'Null';\nTokenName[TokenNumericLiteral] = 'Numeric';\nTokenName[TokenPunctuator] = 'Punctuator';\nTokenName[TokenStringLiteral] = 'String';\nTokenName[TokenRegularExpression] = 'RegularExpression';\nvar SyntaxArrayExpression = 'ArrayExpression',\n    SyntaxBinaryExpression = 'BinaryExpression',\n    SyntaxCallExpression = 'CallExpression',\n    SyntaxConditionalExpression = 'ConditionalExpression',\n    SyntaxIdentifier = 'Identifier',\n    SyntaxLiteral = 'Literal',\n    SyntaxLogicalExpression = 'LogicalExpression',\n    SyntaxMemberExpression = 'MemberExpression',\n    SyntaxObjectExpression = 'ObjectExpression',\n    SyntaxProperty = 'Property',\n    SyntaxUnaryExpression = 'UnaryExpression'; // Error messages should be identical to V8.\n\nvar MessageUnexpectedToken = 'Unexpected token %0',\n    MessageUnexpectedNumber = 'Unexpected number',\n    MessageUnexpectedString = 'Unexpected string',\n    MessageUnexpectedIdentifier = 'Unexpected identifier',\n    MessageUnexpectedReserved = 'Unexpected reserved word',\n    MessageUnexpectedEOS = 'Unexpected end of input',\n    MessageInvalidRegExp = 'Invalid regular expression',\n    MessageUnterminatedRegExp = 'Invalid regular expression: missing /',\n    MessageStrictOctalLiteral = 'Octal literals are not allowed in strict mode.',\n    MessageStrictDuplicateProperty = 'Duplicate data property in object literal not allowed in strict mode';\nvar ILLEGAL = 'ILLEGAL',\n    DISABLED = 'Disabled.'; // See also tools/generate-unicode-regex.py.\n\nvar RegexNonAsciiIdentifierStart = new RegExp('[\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0370-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0620-\\\\u064A\\\\u066E\\\\u066F\\\\u0671-\\\\u06D3\\\\u06D5\\\\u06E5\\\\u06E6\\\\u06EE\\\\u06EF\\\\u06FA-\\\\u06FC\\\\u06FF\\\\u0710\\\\u0712-\\\\u072F\\\\u074D-\\\\u07A5\\\\u07B1\\\\u07CA-\\\\u07EA\\\\u07F4\\\\u07F5\\\\u07FA\\\\u0800-\\\\u0815\\\\u081A\\\\u0824\\\\u0828\\\\u0840-\\\\u0858\\\\u08A0-\\\\u08B2\\\\u0904-\\\\u0939\\\\u093D\\\\u0950\\\\u0958-\\\\u0961\\\\u0971-\\\\u0980\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BD\\\\u09CE\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E1\\\\u09F0\\\\u09F1\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A72-\\\\u0A74\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABD\\\\u0AD0\\\\u0AE0\\\\u0AE1\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3D\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B61\\\\u0B71\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BD0\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D\\\\u0C58\\\\u0C59\\\\u0C60\\\\u0C61\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBD\\\\u0CDE\\\\u0CE0\\\\u0CE1\\\\u0CF1\\\\u0CF2\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D\\\\u0D4E\\\\u0D60\\\\u0D61\\\\u0D7A-\\\\u0D7F\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0E01-\\\\u0E30\\\\u0E32\\\\u0E33\\\\u0E40-\\\\u0E46\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB0\\\\u0EB2\\\\u0EB3\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F40-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F88-\\\\u0F8C\\\\u1000-\\\\u102A\\\\u103F\\\\u1050-\\\\u1055\\\\u105A-\\\\u105D\\\\u1061\\\\u1065\\\\u1066\\\\u106E-\\\\u1070\\\\u1075-\\\\u1081\\\\u108E\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1711\\\\u1720-\\\\u1731\\\\u1740-\\\\u1751\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1780-\\\\u17B3\\\\u17D7\\\\u17DC\\\\u1820-\\\\u1877\\\\u1880-\\\\u18A8\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1950-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19C1-\\\\u19C7\\\\u1A00-\\\\u1A16\\\\u1A20-\\\\u1A54\\\\u1AA7\\\\u1B05-\\\\u1B33\\\\u1B45-\\\\u1B4B\\\\u1B83-\\\\u1BA0\\\\u1BAE\\\\u1BAF\\\\u1BBA-\\\\u1BE5\\\\u1C00-\\\\u1C23\\\\u1C4D-\\\\u1C4F\\\\u1C5A-\\\\u1C7D\\\\u1CE9-\\\\u1CEC\\\\u1CEE-\\\\u1CF1\\\\u1CF5\\\\u1CF6\\\\u1D00-\\\\u1DBF\\\\u1E00-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CEE\\\\u2CF2\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D80-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u3029\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA61F\\\\uA62A\\\\uA62B\\\\uA640-\\\\uA66E\\\\uA67F-\\\\uA69D\\\\uA6A0-\\\\uA6EF\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA801\\\\uA803-\\\\uA805\\\\uA807-\\\\uA80A\\\\uA80C-\\\\uA822\\\\uA840-\\\\uA873\\\\uA882-\\\\uA8B3\\\\uA8F2-\\\\uA8F7\\\\uA8FB\\\\uA90A-\\\\uA925\\\\uA930-\\\\uA946\\\\uA960-\\\\uA97C\\\\uA984-\\\\uA9B2\\\\uA9CF\\\\uA9E0-\\\\uA9E4\\\\uA9E6-\\\\uA9EF\\\\uA9FA-\\\\uA9FE\\\\uAA00-\\\\uAA28\\\\uAA40-\\\\uAA42\\\\uAA44-\\\\uAA4B\\\\uAA60-\\\\uAA76\\\\uAA7A\\\\uAA7E-\\\\uAAAF\\\\uAAB1\\\\uAAB5\\\\uAAB6\\\\uAAB9-\\\\uAABD\\\\uAAC0\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEA\\\\uAAF2-\\\\uAAF4\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABE2\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D\\\\uFB1F-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF21-\\\\uFF3A\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]'),\n    // eslint-disable-next-line no-misleading-character-class\nRegexNonAsciiIdentifierPart = new RegExp('[\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\\\u02C1\\\\u02C6-\\\\u02D1\\\\u02E0-\\\\u02E4\\\\u02EC\\\\u02EE\\\\u0300-\\\\u0374\\\\u0376\\\\u0377\\\\u037A-\\\\u037D\\\\u037F\\\\u0386\\\\u0388-\\\\u038A\\\\u038C\\\\u038E-\\\\u03A1\\\\u03A3-\\\\u03F5\\\\u03F7-\\\\u0481\\\\u0483-\\\\u0487\\\\u048A-\\\\u052F\\\\u0531-\\\\u0556\\\\u0559\\\\u0561-\\\\u0587\\\\u0591-\\\\u05BD\\\\u05BF\\\\u05C1\\\\u05C2\\\\u05C4\\\\u05C5\\\\u05C7\\\\u05D0-\\\\u05EA\\\\u05F0-\\\\u05F2\\\\u0610-\\\\u061A\\\\u0620-\\\\u0669\\\\u066E-\\\\u06D3\\\\u06D5-\\\\u06DC\\\\u06DF-\\\\u06E8\\\\u06EA-\\\\u06FC\\\\u06FF\\\\u0710-\\\\u074A\\\\u074D-\\\\u07B1\\\\u07C0-\\\\u07F5\\\\u07FA\\\\u0800-\\\\u082D\\\\u0840-\\\\u085B\\\\u08A0-\\\\u08B2\\\\u08E4-\\\\u0963\\\\u0966-\\\\u096F\\\\u0971-\\\\u0983\\\\u0985-\\\\u098C\\\\u098F\\\\u0990\\\\u0993-\\\\u09A8\\\\u09AA-\\\\u09B0\\\\u09B2\\\\u09B6-\\\\u09B9\\\\u09BC-\\\\u09C4\\\\u09C7\\\\u09C8\\\\u09CB-\\\\u09CE\\\\u09D7\\\\u09DC\\\\u09DD\\\\u09DF-\\\\u09E3\\\\u09E6-\\\\u09F1\\\\u0A01-\\\\u0A03\\\\u0A05-\\\\u0A0A\\\\u0A0F\\\\u0A10\\\\u0A13-\\\\u0A28\\\\u0A2A-\\\\u0A30\\\\u0A32\\\\u0A33\\\\u0A35\\\\u0A36\\\\u0A38\\\\u0A39\\\\u0A3C\\\\u0A3E-\\\\u0A42\\\\u0A47\\\\u0A48\\\\u0A4B-\\\\u0A4D\\\\u0A51\\\\u0A59-\\\\u0A5C\\\\u0A5E\\\\u0A66-\\\\u0A75\\\\u0A81-\\\\u0A83\\\\u0A85-\\\\u0A8D\\\\u0A8F-\\\\u0A91\\\\u0A93-\\\\u0AA8\\\\u0AAA-\\\\u0AB0\\\\u0AB2\\\\u0AB3\\\\u0AB5-\\\\u0AB9\\\\u0ABC-\\\\u0AC5\\\\u0AC7-\\\\u0AC9\\\\u0ACB-\\\\u0ACD\\\\u0AD0\\\\u0AE0-\\\\u0AE3\\\\u0AE6-\\\\u0AEF\\\\u0B01-\\\\u0B03\\\\u0B05-\\\\u0B0C\\\\u0B0F\\\\u0B10\\\\u0B13-\\\\u0B28\\\\u0B2A-\\\\u0B30\\\\u0B32\\\\u0B33\\\\u0B35-\\\\u0B39\\\\u0B3C-\\\\u0B44\\\\u0B47\\\\u0B48\\\\u0B4B-\\\\u0B4D\\\\u0B56\\\\u0B57\\\\u0B5C\\\\u0B5D\\\\u0B5F-\\\\u0B63\\\\u0B66-\\\\u0B6F\\\\u0B71\\\\u0B82\\\\u0B83\\\\u0B85-\\\\u0B8A\\\\u0B8E-\\\\u0B90\\\\u0B92-\\\\u0B95\\\\u0B99\\\\u0B9A\\\\u0B9C\\\\u0B9E\\\\u0B9F\\\\u0BA3\\\\u0BA4\\\\u0BA8-\\\\u0BAA\\\\u0BAE-\\\\u0BB9\\\\u0BBE-\\\\u0BC2\\\\u0BC6-\\\\u0BC8\\\\u0BCA-\\\\u0BCD\\\\u0BD0\\\\u0BD7\\\\u0BE6-\\\\u0BEF\\\\u0C00-\\\\u0C03\\\\u0C05-\\\\u0C0C\\\\u0C0E-\\\\u0C10\\\\u0C12-\\\\u0C28\\\\u0C2A-\\\\u0C39\\\\u0C3D-\\\\u0C44\\\\u0C46-\\\\u0C48\\\\u0C4A-\\\\u0C4D\\\\u0C55\\\\u0C56\\\\u0C58\\\\u0C59\\\\u0C60-\\\\u0C63\\\\u0C66-\\\\u0C6F\\\\u0C81-\\\\u0C83\\\\u0C85-\\\\u0C8C\\\\u0C8E-\\\\u0C90\\\\u0C92-\\\\u0CA8\\\\u0CAA-\\\\u0CB3\\\\u0CB5-\\\\u0CB9\\\\u0CBC-\\\\u0CC4\\\\u0CC6-\\\\u0CC8\\\\u0CCA-\\\\u0CCD\\\\u0CD5\\\\u0CD6\\\\u0CDE\\\\u0CE0-\\\\u0CE3\\\\u0CE6-\\\\u0CEF\\\\u0CF1\\\\u0CF2\\\\u0D01-\\\\u0D03\\\\u0D05-\\\\u0D0C\\\\u0D0E-\\\\u0D10\\\\u0D12-\\\\u0D3A\\\\u0D3D-\\\\u0D44\\\\u0D46-\\\\u0D48\\\\u0D4A-\\\\u0D4E\\\\u0D57\\\\u0D60-\\\\u0D63\\\\u0D66-\\\\u0D6F\\\\u0D7A-\\\\u0D7F\\\\u0D82\\\\u0D83\\\\u0D85-\\\\u0D96\\\\u0D9A-\\\\u0DB1\\\\u0DB3-\\\\u0DBB\\\\u0DBD\\\\u0DC0-\\\\u0DC6\\\\u0DCA\\\\u0DCF-\\\\u0DD4\\\\u0DD6\\\\u0DD8-\\\\u0DDF\\\\u0DE6-\\\\u0DEF\\\\u0DF2\\\\u0DF3\\\\u0E01-\\\\u0E3A\\\\u0E40-\\\\u0E4E\\\\u0E50-\\\\u0E59\\\\u0E81\\\\u0E82\\\\u0E84\\\\u0E87\\\\u0E88\\\\u0E8A\\\\u0E8D\\\\u0E94-\\\\u0E97\\\\u0E99-\\\\u0E9F\\\\u0EA1-\\\\u0EA3\\\\u0EA5\\\\u0EA7\\\\u0EAA\\\\u0EAB\\\\u0EAD-\\\\u0EB9\\\\u0EBB-\\\\u0EBD\\\\u0EC0-\\\\u0EC4\\\\u0EC6\\\\u0EC8-\\\\u0ECD\\\\u0ED0-\\\\u0ED9\\\\u0EDC-\\\\u0EDF\\\\u0F00\\\\u0F18\\\\u0F19\\\\u0F20-\\\\u0F29\\\\u0F35\\\\u0F37\\\\u0F39\\\\u0F3E-\\\\u0F47\\\\u0F49-\\\\u0F6C\\\\u0F71-\\\\u0F84\\\\u0F86-\\\\u0F97\\\\u0F99-\\\\u0FBC\\\\u0FC6\\\\u1000-\\\\u1049\\\\u1050-\\\\u109D\\\\u10A0-\\\\u10C5\\\\u10C7\\\\u10CD\\\\u10D0-\\\\u10FA\\\\u10FC-\\\\u1248\\\\u124A-\\\\u124D\\\\u1250-\\\\u1256\\\\u1258\\\\u125A-\\\\u125D\\\\u1260-\\\\u1288\\\\u128A-\\\\u128D\\\\u1290-\\\\u12B0\\\\u12B2-\\\\u12B5\\\\u12B8-\\\\u12BE\\\\u12C0\\\\u12C2-\\\\u12C5\\\\u12C8-\\\\u12D6\\\\u12D8-\\\\u1310\\\\u1312-\\\\u1315\\\\u1318-\\\\u135A\\\\u135D-\\\\u135F\\\\u1380-\\\\u138F\\\\u13A0-\\\\u13F4\\\\u1401-\\\\u166C\\\\u166F-\\\\u167F\\\\u1681-\\\\u169A\\\\u16A0-\\\\u16EA\\\\u16EE-\\\\u16F8\\\\u1700-\\\\u170C\\\\u170E-\\\\u1714\\\\u1720-\\\\u1734\\\\u1740-\\\\u1753\\\\u1760-\\\\u176C\\\\u176E-\\\\u1770\\\\u1772\\\\u1773\\\\u1780-\\\\u17D3\\\\u17D7\\\\u17DC\\\\u17DD\\\\u17E0-\\\\u17E9\\\\u180B-\\\\u180D\\\\u1810-\\\\u1819\\\\u1820-\\\\u1877\\\\u1880-\\\\u18AA\\\\u18B0-\\\\u18F5\\\\u1900-\\\\u191E\\\\u1920-\\\\u192B\\\\u1930-\\\\u193B\\\\u1946-\\\\u196D\\\\u1970-\\\\u1974\\\\u1980-\\\\u19AB\\\\u19B0-\\\\u19C9\\\\u19D0-\\\\u19D9\\\\u1A00-\\\\u1A1B\\\\u1A20-\\\\u1A5E\\\\u1A60-\\\\u1A7C\\\\u1A7F-\\\\u1A89\\\\u1A90-\\\\u1A99\\\\u1AA7\\\\u1AB0-\\\\u1ABD\\\\u1B00-\\\\u1B4B\\\\u1B50-\\\\u1B59\\\\u1B6B-\\\\u1B73\\\\u1B80-\\\\u1BF3\\\\u1C00-\\\\u1C37\\\\u1C40-\\\\u1C49\\\\u1C4D-\\\\u1C7D\\\\u1CD0-\\\\u1CD2\\\\u1CD4-\\\\u1CF6\\\\u1CF8\\\\u1CF9\\\\u1D00-\\\\u1DF5\\\\u1DFC-\\\\u1F15\\\\u1F18-\\\\u1F1D\\\\u1F20-\\\\u1F45\\\\u1F48-\\\\u1F4D\\\\u1F50-\\\\u1F57\\\\u1F59\\\\u1F5B\\\\u1F5D\\\\u1F5F-\\\\u1F7D\\\\u1F80-\\\\u1FB4\\\\u1FB6-\\\\u1FBC\\\\u1FBE\\\\u1FC2-\\\\u1FC4\\\\u1FC6-\\\\u1FCC\\\\u1FD0-\\\\u1FD3\\\\u1FD6-\\\\u1FDB\\\\u1FE0-\\\\u1FEC\\\\u1FF2-\\\\u1FF4\\\\u1FF6-\\\\u1FFC\\\\u200C\\\\u200D\\\\u203F\\\\u2040\\\\u2054\\\\u2071\\\\u207F\\\\u2090-\\\\u209C\\\\u20D0-\\\\u20DC\\\\u20E1\\\\u20E5-\\\\u20F0\\\\u2102\\\\u2107\\\\u210A-\\\\u2113\\\\u2115\\\\u2119-\\\\u211D\\\\u2124\\\\u2126\\\\u2128\\\\u212A-\\\\u212D\\\\u212F-\\\\u2139\\\\u213C-\\\\u213F\\\\u2145-\\\\u2149\\\\u214E\\\\u2160-\\\\u2188\\\\u2C00-\\\\u2C2E\\\\u2C30-\\\\u2C5E\\\\u2C60-\\\\u2CE4\\\\u2CEB-\\\\u2CF3\\\\u2D00-\\\\u2D25\\\\u2D27\\\\u2D2D\\\\u2D30-\\\\u2D67\\\\u2D6F\\\\u2D7F-\\\\u2D96\\\\u2DA0-\\\\u2DA6\\\\u2DA8-\\\\u2DAE\\\\u2DB0-\\\\u2DB6\\\\u2DB8-\\\\u2DBE\\\\u2DC0-\\\\u2DC6\\\\u2DC8-\\\\u2DCE\\\\u2DD0-\\\\u2DD6\\\\u2DD8-\\\\u2DDE\\\\u2DE0-\\\\u2DFF\\\\u2E2F\\\\u3005-\\\\u3007\\\\u3021-\\\\u302F\\\\u3031-\\\\u3035\\\\u3038-\\\\u303C\\\\u3041-\\\\u3096\\\\u3099\\\\u309A\\\\u309D-\\\\u309F\\\\u30A1-\\\\u30FA\\\\u30FC-\\\\u30FF\\\\u3105-\\\\u312D\\\\u3131-\\\\u318E\\\\u31A0-\\\\u31BA\\\\u31F0-\\\\u31FF\\\\u3400-\\\\u4DB5\\\\u4E00-\\\\u9FCC\\\\uA000-\\\\uA48C\\\\uA4D0-\\\\uA4FD\\\\uA500-\\\\uA60C\\\\uA610-\\\\uA62B\\\\uA640-\\\\uA66F\\\\uA674-\\\\uA67D\\\\uA67F-\\\\uA69D\\\\uA69F-\\\\uA6F1\\\\uA717-\\\\uA71F\\\\uA722-\\\\uA788\\\\uA78B-\\\\uA78E\\\\uA790-\\\\uA7AD\\\\uA7B0\\\\uA7B1\\\\uA7F7-\\\\uA827\\\\uA840-\\\\uA873\\\\uA880-\\\\uA8C4\\\\uA8D0-\\\\uA8D9\\\\uA8E0-\\\\uA8F7\\\\uA8FB\\\\uA900-\\\\uA92D\\\\uA930-\\\\uA953\\\\uA960-\\\\uA97C\\\\uA980-\\\\uA9C0\\\\uA9CF-\\\\uA9D9\\\\uA9E0-\\\\uA9FE\\\\uAA00-\\\\uAA36\\\\uAA40-\\\\uAA4D\\\\uAA50-\\\\uAA59\\\\uAA60-\\\\uAA76\\\\uAA7A-\\\\uAAC2\\\\uAADB-\\\\uAADD\\\\uAAE0-\\\\uAAEF\\\\uAAF2-\\\\uAAF6\\\\uAB01-\\\\uAB06\\\\uAB09-\\\\uAB0E\\\\uAB11-\\\\uAB16\\\\uAB20-\\\\uAB26\\\\uAB28-\\\\uAB2E\\\\uAB30-\\\\uAB5A\\\\uAB5C-\\\\uAB5F\\\\uAB64\\\\uAB65\\\\uABC0-\\\\uABEA\\\\uABEC\\\\uABED\\\\uABF0-\\\\uABF9\\\\uAC00-\\\\uD7A3\\\\uD7B0-\\\\uD7C6\\\\uD7CB-\\\\uD7FB\\\\uF900-\\\\uFA6D\\\\uFA70-\\\\uFAD9\\\\uFB00-\\\\uFB06\\\\uFB13-\\\\uFB17\\\\uFB1D-\\\\uFB28\\\\uFB2A-\\\\uFB36\\\\uFB38-\\\\uFB3C\\\\uFB3E\\\\uFB40\\\\uFB41\\\\uFB43\\\\uFB44\\\\uFB46-\\\\uFBB1\\\\uFBD3-\\\\uFD3D\\\\uFD50-\\\\uFD8F\\\\uFD92-\\\\uFDC7\\\\uFDF0-\\\\uFDFB\\\\uFE00-\\\\uFE0F\\\\uFE20-\\\\uFE2D\\\\uFE33\\\\uFE34\\\\uFE4D-\\\\uFE4F\\\\uFE70-\\\\uFE74\\\\uFE76-\\\\uFEFC\\\\uFF10-\\\\uFF19\\\\uFF21-\\\\uFF3A\\\\uFF3F\\\\uFF41-\\\\uFF5A\\\\uFF66-\\\\uFFBE\\\\uFFC2-\\\\uFFC7\\\\uFFCA-\\\\uFFCF\\\\uFFD2-\\\\uFFD7\\\\uFFDA-\\\\uFFDC]'); // Ensure the condition is true, otherwise throw an error.\n// This is only to have a better contract semantic, i.e. another safety net\n// to catch a logic error. The condition shall be fulfilled in normal case.\n// Do NOT use this to enforce a certain condition on any user input.\n\nfunction assert(condition, message) {\n  /* istanbul ignore next */\n  if (!condition) {\n    throw new Error('ASSERT: ' + message);\n  }\n}\n\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 && ch <= 0x39; // 0..9\n}\n\nfunction isHexDigit(ch) {\n  return '0123456789abcdefABCDEF'.indexOf(ch) >= 0;\n}\n\nfunction isOctalDigit(ch) {\n  return '01234567'.indexOf(ch) >= 0;\n} // 7.2 White Space\n\n\nfunction isWhiteSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0B || ch === 0x0C || ch === 0xA0 || ch >= 0x1680 && [0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(ch) >= 0;\n} // 7.3 Line Terminators\n\n\nfunction isLineTerminator(ch) {\n  return ch === 0x0A || ch === 0x0D || ch === 0x2028 || ch === 0x2029;\n} // 7.6 Identifier Names and Identifiers\n\n\nfunction isIdentifierStart(ch) {\n  return ch === 0x24 || ch === 0x5F || // $ (dollar) and _ (underscore)\n  ch >= 0x41 && ch <= 0x5A || // A..Z\n  ch >= 0x61 && ch <= 0x7A || // a..z\n  ch === 0x5C || // \\ (backslash)\n  ch >= 0x80 && RegexNonAsciiIdentifierStart.test(String.fromCharCode(ch));\n}\n\nfunction isIdentifierPart(ch) {\n  return ch === 0x24 || ch === 0x5F || // $ (dollar) and _ (underscore)\n  ch >= 0x41 && ch <= 0x5A || // A..Z\n  ch >= 0x61 && ch <= 0x7A || // a..z\n  ch >= 0x30 && ch <= 0x39 || // 0..9\n  ch === 0x5C || // \\ (backslash)\n  ch >= 0x80 && RegexNonAsciiIdentifierPart.test(String.fromCharCode(ch));\n} // 7.6.1.1 Keywords\n\n\nconst keywords = {\n  'if': 1,\n  'in': 1,\n  'do': 1,\n  'var': 1,\n  'for': 1,\n  'new': 1,\n  'try': 1,\n  'let': 1,\n  'this': 1,\n  'else': 1,\n  'case': 1,\n  'void': 1,\n  'with': 1,\n  'enum': 1,\n  'while': 1,\n  'break': 1,\n  'catch': 1,\n  'throw': 1,\n  'const': 1,\n  'yield': 1,\n  'class': 1,\n  'super': 1,\n  'return': 1,\n  'typeof': 1,\n  'delete': 1,\n  'switch': 1,\n  'export': 1,\n  'import': 1,\n  'public': 1,\n  'static': 1,\n  'default': 1,\n  'finally': 1,\n  'extends': 1,\n  'package': 1,\n  'private': 1,\n  'function': 1,\n  'continue': 1,\n  'debugger': 1,\n  'interface': 1,\n  'protected': 1,\n  'instanceof': 1,\n  'implements': 1\n};\n\nfunction skipComment() {\n  while (index < length) {\n    const ch = source.charCodeAt(index);\n\n    if (isWhiteSpace(ch) || isLineTerminator(ch)) {\n      ++index;\n    } else {\n      break;\n    }\n  }\n}\n\nfunction scanHexEscape(prefix) {\n  var i,\n      len,\n      ch,\n      code = 0;\n  len = prefix === 'u' ? 4 : 2;\n\n  for (i = 0; i < len; ++i) {\n    if (index < length && isHexDigit(source[index])) {\n      ch = source[index++];\n      code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n    } else {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n  }\n\n  return String.fromCharCode(code);\n}\n\nfunction scanUnicodeCodePointEscape() {\n  var ch, code, cu1, cu2;\n  ch = source[index];\n  code = 0; // At least, one hex digit is required.\n\n  if (ch === '}') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  while (index < length) {\n    ch = source[index++];\n\n    if (!isHexDigit(ch)) {\n      break;\n    }\n\n    code = code * 16 + '0123456789abcdef'.indexOf(ch.toLowerCase());\n  }\n\n  if (code > 0x10FFFF || ch !== '}') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  } // UTF-16 Encoding\n\n\n  if (code <= 0xFFFF) {\n    return String.fromCharCode(code);\n  }\n\n  cu1 = (code - 0x10000 >> 10) + 0xD800;\n  cu2 = (code - 0x10000 & 1023) + 0xDC00;\n  return String.fromCharCode(cu1, cu2);\n}\n\nfunction getEscapedIdentifier() {\n  var ch, id;\n  ch = source.charCodeAt(index++);\n  id = String.fromCharCode(ch); // '\\u' (U+005C, U+0075) denotes an escaped character.\n\n  if (ch === 0x5C) {\n    if (source.charCodeAt(index) !== 0x75) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n\n    ++index;\n    ch = scanHexEscape('u');\n\n    if (!ch || ch === '\\\\' || !isIdentifierStart(ch.charCodeAt(0))) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n\n    id = ch;\n  }\n\n  while (index < length) {\n    ch = source.charCodeAt(index);\n\n    if (!isIdentifierPart(ch)) {\n      break;\n    }\n\n    ++index;\n    id += String.fromCharCode(ch); // '\\u' (U+005C, U+0075) denotes an escaped character.\n\n    if (ch === 0x5C) {\n      id = id.substr(0, id.length - 1);\n\n      if (source.charCodeAt(index) !== 0x75) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n\n      ++index;\n      ch = scanHexEscape('u');\n\n      if (!ch || ch === '\\\\' || !isIdentifierPart(ch.charCodeAt(0))) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n\n      id += ch;\n    }\n  }\n\n  return id;\n}\n\nfunction getIdentifier() {\n  var start, ch;\n  start = index++;\n\n  while (index < length) {\n    ch = source.charCodeAt(index);\n\n    if (ch === 0x5C) {\n      // Blackslash (U+005C) marks Unicode escape sequence.\n      index = start;\n      return getEscapedIdentifier();\n    }\n\n    if (isIdentifierPart(ch)) {\n      ++index;\n    } else {\n      break;\n    }\n  }\n\n  return source.slice(start, index);\n}\n\nfunction scanIdentifier() {\n  var start, id, type;\n  start = index; // Backslash (U+005C) starts an escaped character.\n\n  id = source.charCodeAt(index) === 0x5C ? getEscapedIdentifier() : getIdentifier(); // There is no keyword or literal with only one character.\n  // Thus, it must be an identifier.\n\n  if (id.length === 1) {\n    type = TokenIdentifier;\n  } else if (keywords.hasOwnProperty(id)) {\n    // eslint-disable-line no-prototype-builtins\n    type = TokenKeyword;\n  } else if (id === 'null') {\n    type = TokenNullLiteral;\n  } else if (id === 'true' || id === 'false') {\n    type = TokenBooleanLiteral;\n  } else {\n    type = TokenIdentifier;\n  }\n\n  return {\n    type: type,\n    value: id,\n    start: start,\n    end: index\n  };\n} // 7.7 Punctuators\n\n\nfunction scanPunctuator() {\n  var start = index,\n      code = source.charCodeAt(index),\n      code2,\n      ch1 = source[index],\n      ch2,\n      ch3,\n      ch4;\n\n  switch (code) {\n    // Check for most common single-character punctuators.\n    case 0x2E: // . dot\n\n    case 0x28: // ( open bracket\n\n    case 0x29: // ) close bracket\n\n    case 0x3B: // ; semicolon\n\n    case 0x2C: // , comma\n\n    case 0x7B: // { open curly brace\n\n    case 0x7D: // } close curly brace\n\n    case 0x5B: // [\n\n    case 0x5D: // ]\n\n    case 0x3A: // :\n\n    case 0x3F: // ?\n\n    case 0x7E:\n      // ~\n      ++index;\n      return {\n        type: TokenPunctuator,\n        value: String.fromCharCode(code),\n        start: start,\n        end: index\n      };\n\n    default:\n      code2 = source.charCodeAt(index + 1); // '=' (U+003D) marks an assignment or comparison operator.\n\n      if (code2 === 0x3D) {\n        switch (code) {\n          case 0x2B: // +\n\n          case 0x2D: // -\n\n          case 0x2F: // /\n\n          case 0x3C: // <\n\n          case 0x3E: // >\n\n          case 0x5E: // ^\n\n          case 0x7C: // |\n\n          case 0x25: // %\n\n          case 0x26: // &\n\n          case 0x2A:\n            // *\n            index += 2;\n            return {\n              type: TokenPunctuator,\n              value: String.fromCharCode(code) + String.fromCharCode(code2),\n              start: start,\n              end: index\n            };\n\n          case 0x21: // !\n\n          case 0x3D:\n            // =\n            index += 2; // !== and ===\n\n            if (source.charCodeAt(index) === 0x3D) {\n              ++index;\n            }\n\n            return {\n              type: TokenPunctuator,\n              value: source.slice(start, index),\n              start: start,\n              end: index\n            };\n        }\n      }\n\n  } // 4-character punctuator: >>>=\n\n\n  ch4 = source.substr(index, 4);\n\n  if (ch4 === '>>>=') {\n    index += 4;\n    return {\n      type: TokenPunctuator,\n      value: ch4,\n      start: start,\n      end: index\n    };\n  } // 3-character punctuators: === !== >>> <<= >>=\n\n\n  ch3 = ch4.substr(0, 3);\n\n  if (ch3 === '>>>' || ch3 === '<<=' || ch3 === '>>=') {\n    index += 3;\n    return {\n      type: TokenPunctuator,\n      value: ch3,\n      start: start,\n      end: index\n    };\n  } // Other 2-character punctuators: ++ -- << >> && ||\n\n\n  ch2 = ch3.substr(0, 2);\n\n  if (ch1 === ch2[1] && '+-<>&|'.indexOf(ch1) >= 0 || ch2 === '=>') {\n    index += 2;\n    return {\n      type: TokenPunctuator,\n      value: ch2,\n      start: start,\n      end: index\n    };\n  }\n\n  if (ch2 === '//') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  } // 1-character punctuators: < > = ! + - * % & | ^ /\n\n\n  if ('<>=!+-*%&|^/'.indexOf(ch1) >= 0) {\n    ++index;\n    return {\n      type: TokenPunctuator,\n      value: ch1,\n      start: start,\n      end: index\n    };\n  }\n\n  throwError({}, MessageUnexpectedToken, ILLEGAL);\n} // 7.8.3 Numeric Literals\n\n\nfunction scanHexLiteral(start) {\n  let number = '';\n\n  while (index < length) {\n    if (!isHexDigit(source[index])) {\n      break;\n    }\n\n    number += source[index++];\n  }\n\n  if (number.length === 0) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseInt('0x' + number, 16),\n    start: start,\n    end: index\n  };\n}\n\nfunction scanOctalLiteral(start) {\n  let number = '0' + source[index++];\n\n  while (index < length) {\n    if (!isOctalDigit(source[index])) {\n      break;\n    }\n\n    number += source[index++];\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index)) || isDecimalDigit(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseInt(number, 8),\n    octal: true,\n    start: start,\n    end: index\n  };\n}\n\nfunction scanNumericLiteral() {\n  var number, start, ch;\n  ch = source[index];\n  assert(isDecimalDigit(ch.charCodeAt(0)) || ch === '.', 'Numeric literal must start with a decimal digit or a decimal point');\n  start = index;\n  number = '';\n\n  if (ch !== '.') {\n    number = source[index++];\n    ch = source[index]; // Hex number starts with '0x'.\n    // Octal number starts with '0'.\n\n    if (number === '0') {\n      if (ch === 'x' || ch === 'X') {\n        ++index;\n        return scanHexLiteral(start);\n      }\n\n      if (isOctalDigit(ch)) {\n        return scanOctalLiteral(start);\n      } // decimal number starts with '0' such as '09' is illegal.\n\n\n      if (ch && isDecimalDigit(ch.charCodeAt(0))) {\n        throwError({}, MessageUnexpectedToken, ILLEGAL);\n      }\n    }\n\n    while (isDecimalDigit(source.charCodeAt(index))) {\n      number += source[index++];\n    }\n\n    ch = source[index];\n  }\n\n  if (ch === '.') {\n    number += source[index++];\n\n    while (isDecimalDigit(source.charCodeAt(index))) {\n      number += source[index++];\n    }\n\n    ch = source[index];\n  }\n\n  if (ch === 'e' || ch === 'E') {\n    number += source[index++];\n    ch = source[index];\n\n    if (ch === '+' || ch === '-') {\n      number += source[index++];\n    }\n\n    if (isDecimalDigit(source.charCodeAt(index))) {\n      while (isDecimalDigit(source.charCodeAt(index))) {\n        number += source[index++];\n      }\n    } else {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    }\n  }\n\n  if (isIdentifierStart(source.charCodeAt(index))) {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenNumericLiteral,\n    value: parseFloat(number),\n    start: start,\n    end: index\n  };\n} // 7.8.4 String Literals\n\n\nfunction scanStringLiteral() {\n  var str = '',\n      quote,\n      start,\n      ch,\n      code,\n      octal = false;\n  quote = source[index];\n  assert(quote === '\\'' || quote === '\"', 'String literal must starts with a quote');\n  start = index;\n  ++index;\n\n  while (index < length) {\n    ch = source[index++];\n\n    if (ch === quote) {\n      quote = '';\n      break;\n    } else if (ch === '\\\\') {\n      ch = source[index++];\n\n      if (!ch || !isLineTerminator(ch.charCodeAt(0))) {\n        switch (ch) {\n          case 'u':\n          case 'x':\n            if (source[index] === '{') {\n              ++index;\n              str += scanUnicodeCodePointEscape();\n            } else {\n              str += scanHexEscape(ch);\n            }\n\n            break;\n\n          case 'n':\n            str += '\\n';\n            break;\n\n          case 'r':\n            str += '\\r';\n            break;\n\n          case 't':\n            str += '\\t';\n            break;\n\n          case 'b':\n            str += '\\b';\n            break;\n\n          case 'f':\n            str += '\\f';\n            break;\n\n          case 'v':\n            str += '\\x0B';\n            break;\n\n          default:\n            if (isOctalDigit(ch)) {\n              code = '01234567'.indexOf(ch); // \\0 is not octal escape sequence\n\n              if (code !== 0) {\n                octal = true;\n              }\n\n              if (index < length && isOctalDigit(source[index])) {\n                octal = true;\n                code = code * 8 + '01234567'.indexOf(source[index++]); // 3 digits are only allowed when string starts\n                // with 0, 1, 2, 3\n\n                if ('0123'.indexOf(ch) >= 0 && index < length && isOctalDigit(source[index])) {\n                  code = code * 8 + '01234567'.indexOf(source[index++]);\n                }\n              }\n\n              str += String.fromCharCode(code);\n            } else {\n              str += ch;\n            }\n\n            break;\n        }\n      } else {\n        if (ch === '\\r' && source[index] === '\\n') {\n          ++index;\n        }\n      }\n    } else if (isLineTerminator(ch.charCodeAt(0))) {\n      break;\n    } else {\n      str += ch;\n    }\n  }\n\n  if (quote !== '') {\n    throwError({}, MessageUnexpectedToken, ILLEGAL);\n  }\n\n  return {\n    type: TokenStringLiteral,\n    value: str,\n    octal: octal,\n    start: start,\n    end: index\n  };\n}\n\nfunction testRegExp(pattern, flags) {\n  let tmp = pattern;\n\n  if (flags.indexOf('u') >= 0) {\n    // Replace each astral symbol and every Unicode code point\n    // escape sequence with a single ASCII symbol to avoid throwing on\n    // regular expressions that are only valid in combination with the\n    // `/u` flag.\n    // Note: replacing with the ASCII symbol `x` might cause false\n    // negatives in unlikely scenarios. For example, `[\\u{61}-b]` is a\n    // perfectly valid pattern that is equivalent to `[a-b]`, but it\n    // would be replaced by `[x-b]` which throws an error.\n    tmp = tmp.replace(/\\\\u\\{([0-9a-fA-F]+)\\}/g, ($0, $1) => {\n      if (parseInt($1, 16) <= 0x10FFFF) {\n        return 'x';\n      }\n\n      throwError({}, MessageInvalidRegExp);\n    }).replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, 'x');\n  } // First, detect invalid regular expressions.\n\n\n  try {\n    new RegExp(tmp);\n  } catch (e) {\n    throwError({}, MessageInvalidRegExp);\n  } // Return a regular expression object for this pattern-flag pair, or\n  // `null` in case the current environment doesn't support the flags it\n  // uses.\n\n\n  try {\n    return new RegExp(pattern, flags);\n  } catch (exception) {\n    return null;\n  }\n}\n\nfunction scanRegExpBody() {\n  var ch, str, classMarker, terminated, body;\n  ch = source[index];\n  assert(ch === '/', 'Regular expression literal must start with a slash');\n  str = source[index++];\n  classMarker = false;\n  terminated = false;\n\n  while (index < length) {\n    ch = source[index++];\n    str += ch;\n\n    if (ch === '\\\\') {\n      ch = source[index++]; // ECMA-262 7.8.5\n\n      if (isLineTerminator(ch.charCodeAt(0))) {\n        throwError({}, MessageUnterminatedRegExp);\n      }\n\n      str += ch;\n    } else if (isLineTerminator(ch.charCodeAt(0))) {\n      throwError({}, MessageUnterminatedRegExp);\n    } else if (classMarker) {\n      if (ch === ']') {\n        classMarker = false;\n      }\n    } else {\n      if (ch === '/') {\n        terminated = true;\n        break;\n      } else if (ch === '[') {\n        classMarker = true;\n      }\n    }\n  }\n\n  if (!terminated) {\n    throwError({}, MessageUnterminatedRegExp);\n  } // Exclude leading and trailing slash.\n\n\n  body = str.substr(1, str.length - 2);\n  return {\n    value: body,\n    literal: str\n  };\n}\n\nfunction scanRegExpFlags() {\n  var ch, str, flags;\n  str = '';\n  flags = '';\n\n  while (index < length) {\n    ch = source[index];\n\n    if (!isIdentifierPart(ch.charCodeAt(0))) {\n      break;\n    }\n\n    ++index;\n\n    if (ch === '\\\\' && index < length) {\n      throwError({}, MessageUnexpectedToken, ILLEGAL);\n    } else {\n      flags += ch;\n      str += ch;\n    }\n  }\n\n  if (flags.search(/[^gimuy]/g) >= 0) {\n    throwError({}, MessageInvalidRegExp, flags);\n  }\n\n  return {\n    value: flags,\n    literal: str\n  };\n}\n\nfunction scanRegExp() {\n  var start, body, flags, value;\n  lookahead = null;\n  skipComment();\n  start = index;\n  body = scanRegExpBody();\n  flags = scanRegExpFlags();\n  value = testRegExp(body.value, flags.value);\n  return {\n    literal: body.literal + flags.literal,\n    value: value,\n    regex: {\n      pattern: body.value,\n      flags: flags.value\n    },\n    start: start,\n    end: index\n  };\n}\n\nfunction isIdentifierName(token) {\n  return token.type === TokenIdentifier || token.type === TokenKeyword || token.type === TokenBooleanLiteral || token.type === TokenNullLiteral;\n}\n\nfunction advance() {\n  skipComment();\n\n  if (index >= length) {\n    return {\n      type: TokenEOF,\n      start: index,\n      end: index\n    };\n  }\n\n  const ch = source.charCodeAt(index);\n\n  if (isIdentifierStart(ch)) {\n    return scanIdentifier();\n  } // Very common: ( and ) and ;\n\n\n  if (ch === 0x28 || ch === 0x29 || ch === 0x3B) {\n    return scanPunctuator();\n  } // String literal starts with single quote (U+0027) or double quote (U+0022).\n\n\n  if (ch === 0x27 || ch === 0x22) {\n    return scanStringLiteral();\n  } // Dot (.) U+002E can also start a floating-point number, hence the need\n  // to check the next character.\n\n\n  if (ch === 0x2E) {\n    if (isDecimalDigit(source.charCodeAt(index + 1))) {\n      return scanNumericLiteral();\n    }\n\n    return scanPunctuator();\n  }\n\n  if (isDecimalDigit(ch)) {\n    return scanNumericLiteral();\n  }\n\n  return scanPunctuator();\n}\n\nfunction lex() {\n  const token = lookahead;\n  index = token.end;\n  lookahead = advance();\n  index = token.end;\n  return token;\n}\n\nfunction peek() {\n  const pos = index;\n  lookahead = advance();\n  index = pos;\n}\n\nfunction finishArrayExpression(elements) {\n  const node = new ASTNode(SyntaxArrayExpression);\n  node.elements = elements;\n  return node;\n}\n\nfunction finishBinaryExpression(operator, left, right) {\n  const node = new ASTNode(operator === '||' || operator === '&&' ? SyntaxLogicalExpression : SyntaxBinaryExpression);\n  node.operator = operator;\n  node.left = left;\n  node.right = right;\n  return node;\n}\n\nfunction finishCallExpression(callee, args) {\n  const node = new ASTNode(SyntaxCallExpression);\n  node.callee = callee;\n  node.arguments = args;\n  return node;\n}\n\nfunction finishConditionalExpression(test, consequent, alternate) {\n  const node = new ASTNode(SyntaxConditionalExpression);\n  node.test = test;\n  node.consequent = consequent;\n  node.alternate = alternate;\n  return node;\n}\n\nfunction finishIdentifier(name) {\n  const node = new ASTNode(SyntaxIdentifier);\n  node.name = name;\n  return node;\n}\n\nfunction finishLiteral(token) {\n  const node = new ASTNode(SyntaxLiteral);\n  node.value = token.value;\n  node.raw = source.slice(token.start, token.end);\n\n  if (token.regex) {\n    if (node.raw === '//') {\n      node.raw = '/(?:)/';\n    }\n\n    node.regex = token.regex;\n  }\n\n  return node;\n}\n\nfunction finishMemberExpression(accessor, object, property) {\n  const node = new ASTNode(SyntaxMemberExpression);\n  node.computed = accessor === '[';\n  node.object = object;\n  node.property = property;\n  if (!node.computed) property.member = true;\n  return node;\n}\n\nfunction finishObjectExpression(properties) {\n  const node = new ASTNode(SyntaxObjectExpression);\n  node.properties = properties;\n  return node;\n}\n\nfunction finishProperty(kind, key, value) {\n  const node = new ASTNode(SyntaxProperty);\n  node.key = key;\n  node.value = value;\n  node.kind = kind;\n  return node;\n}\n\nfunction finishUnaryExpression(operator, argument) {\n  const node = new ASTNode(SyntaxUnaryExpression);\n  node.operator = operator;\n  node.argument = argument;\n  node.prefix = true;\n  return node;\n} // Throw an exception\n\n\nfunction throwError(token, messageFormat) {\n  var error,\n      args = Array.prototype.slice.call(arguments, 2),\n      msg = messageFormat.replace(/%(\\d)/g, (whole, index) => {\n    assert(index < args.length, 'Message reference must be in range');\n    return args[index];\n  });\n  error = new Error(msg);\n  error.index = index;\n  error.description = msg;\n  throw error;\n} // Throw an exception because of the token.\n\n\nfunction throwUnexpected(token) {\n  if (token.type === TokenEOF) {\n    throwError(token, MessageUnexpectedEOS);\n  }\n\n  if (token.type === TokenNumericLiteral) {\n    throwError(token, MessageUnexpectedNumber);\n  }\n\n  if (token.type === TokenStringLiteral) {\n    throwError(token, MessageUnexpectedString);\n  }\n\n  if (token.type === TokenIdentifier) {\n    throwError(token, MessageUnexpectedIdentifier);\n  }\n\n  if (token.type === TokenKeyword) {\n    throwError(token, MessageUnexpectedReserved);\n  } // BooleanLiteral, NullLiteral, or Punctuator.\n\n\n  throwError(token, MessageUnexpectedToken, token.value);\n} // Expect the next token to match the specified punctuator.\n// If not, an exception will be thrown.\n\n\nfunction expect(value) {\n  const token = lex();\n\n  if (token.type !== TokenPunctuator || token.value !== value) {\n    throwUnexpected(token);\n  }\n} // Return true if the next token matches the specified punctuator.\n\n\nfunction match(value) {\n  return lookahead.type === TokenPunctuator && lookahead.value === value;\n} // Return true if the next token matches the specified keyword\n\n\nfunction matchKeyword(keyword) {\n  return lookahead.type === TokenKeyword && lookahead.value === keyword;\n} // 11.1.4 Array Initialiser\n\n\nfunction parseArrayInitialiser() {\n  const elements = [];\n  index = lookahead.start;\n  expect('[');\n\n  while (!match(']')) {\n    if (match(',')) {\n      lex();\n      elements.push(null);\n    } else {\n      elements.push(parseConditionalExpression());\n\n      if (!match(']')) {\n        expect(',');\n      }\n    }\n  }\n\n  lex();\n  return finishArrayExpression(elements);\n} // 11.1.5 Object Initialiser\n\n\nfunction parseObjectPropertyKey() {\n  index = lookahead.start;\n  const token = lex(); // Note: This function is called only from parseObjectProperty(), where\n  // EOF and Punctuator tokens are already filtered out.\n\n  if (token.type === TokenStringLiteral || token.type === TokenNumericLiteral) {\n    if (token.octal) {\n      throwError(token, MessageStrictOctalLiteral);\n    }\n\n    return finishLiteral(token);\n  }\n\n  return finishIdentifier(token.value);\n}\n\nfunction parseObjectProperty() {\n  var token, key, id, value;\n  index = lookahead.start;\n  token = lookahead;\n\n  if (token.type === TokenIdentifier) {\n    id = parseObjectPropertyKey();\n    expect(':');\n    value = parseConditionalExpression();\n    return finishProperty('init', id, value);\n  }\n\n  if (token.type === TokenEOF || token.type === TokenPunctuator) {\n    throwUnexpected(token);\n  } else {\n    key = parseObjectPropertyKey();\n    expect(':');\n    value = parseConditionalExpression();\n    return finishProperty('init', key, value);\n  }\n}\n\nfunction parseObjectInitialiser() {\n  var properties = [],\n      property,\n      name,\n      key,\n      map = {},\n      toString = String;\n  index = lookahead.start;\n  expect('{');\n\n  while (!match('}')) {\n    property = parseObjectProperty();\n\n    if (property.key.type === SyntaxIdentifier) {\n      name = property.key.name;\n    } else {\n      name = toString(property.key.value);\n    }\n\n    key = '$' + name;\n\n    if (Object.prototype.hasOwnProperty.call(map, key)) {\n      throwError({}, MessageStrictDuplicateProperty);\n    } else {\n      map[key] = true;\n    }\n\n    properties.push(property);\n\n    if (!match('}')) {\n      expect(',');\n    }\n  }\n\n  expect('}');\n  return finishObjectExpression(properties);\n} // 11.1.6 The Grouping Operator\n\n\nfunction parseGroupExpression() {\n  expect('(');\n  const expr = parseExpression();\n  expect(')');\n  return expr;\n} // 11.1 Primary Expressions\n\n\nconst legalKeywords = {\n  'if': 1\n};\n\nfunction parsePrimaryExpression() {\n  var type, token, expr;\n\n  if (match('(')) {\n    return parseGroupExpression();\n  }\n\n  if (match('[')) {\n    return parseArrayInitialiser();\n  }\n\n  if (match('{')) {\n    return parseObjectInitialiser();\n  }\n\n  type = lookahead.type;\n  index = lookahead.start;\n\n  if (type === TokenIdentifier || legalKeywords[lookahead.value]) {\n    expr = finishIdentifier(lex().value);\n  } else if (type === TokenStringLiteral || type === TokenNumericLiteral) {\n    if (lookahead.octal) {\n      throwError(lookahead, MessageStrictOctalLiteral);\n    }\n\n    expr = finishLiteral(lex());\n  } else if (type === TokenKeyword) {\n    throw new Error(DISABLED);\n  } else if (type === TokenBooleanLiteral) {\n    token = lex();\n    token.value = token.value === 'true';\n    expr = finishLiteral(token);\n  } else if (type === TokenNullLiteral) {\n    token = lex();\n    token.value = null;\n    expr = finishLiteral(token);\n  } else if (match('/') || match('/=')) {\n    expr = finishLiteral(scanRegExp());\n    peek();\n  } else {\n    throwUnexpected(lex());\n  }\n\n  return expr;\n} // 11.2 Left-Hand-Side Expressions\n\n\nfunction parseArguments() {\n  const args = [];\n  expect('(');\n\n  if (!match(')')) {\n    while (index < length) {\n      args.push(parseConditionalExpression());\n\n      if (match(')')) {\n        break;\n      }\n\n      expect(',');\n    }\n  }\n\n  expect(')');\n  return args;\n}\n\nfunction parseNonComputedProperty() {\n  index = lookahead.start;\n  const token = lex();\n\n  if (!isIdentifierName(token)) {\n    throwUnexpected(token);\n  }\n\n  return finishIdentifier(token.value);\n}\n\nfunction parseNonComputedMember() {\n  expect('.');\n  return parseNonComputedProperty();\n}\n\nfunction parseComputedMember() {\n  expect('[');\n  const expr = parseExpression();\n  expect(']');\n  return expr;\n}\n\nfunction parseLeftHandSideExpressionAllowCall() {\n  var expr, args, property;\n  expr = parsePrimaryExpression();\n\n  for (;;) {\n    if (match('.')) {\n      property = parseNonComputedMember();\n      expr = finishMemberExpression('.', expr, property);\n    } else if (match('(')) {\n      args = parseArguments();\n      expr = finishCallExpression(expr, args);\n    } else if (match('[')) {\n      property = parseComputedMember();\n      expr = finishMemberExpression('[', expr, property);\n    } else {\n      break;\n    }\n  }\n\n  return expr;\n} // 11.3 Postfix Expressions\n\n\nfunction parsePostfixExpression() {\n  const expr = parseLeftHandSideExpressionAllowCall();\n\n  if (lookahead.type === TokenPunctuator) {\n    if (match('++') || match('--')) {\n      throw new Error(DISABLED);\n    }\n  }\n\n  return expr;\n} // 11.4 Unary Operators\n\n\nfunction parseUnaryExpression() {\n  var token, expr;\n\n  if (lookahead.type !== TokenPunctuator && lookahead.type !== TokenKeyword) {\n    expr = parsePostfixExpression();\n  } else if (match('++') || match('--')) {\n    throw new Error(DISABLED);\n  } else if (match('+') || match('-') || match('~') || match('!')) {\n    token = lex();\n    expr = parseUnaryExpression();\n    expr = finishUnaryExpression(token.value, expr);\n  } else if (matchKeyword('delete') || matchKeyword('void') || matchKeyword('typeof')) {\n    throw new Error(DISABLED);\n  } else {\n    expr = parsePostfixExpression();\n  }\n\n  return expr;\n}\n\nfunction binaryPrecedence(token) {\n  let prec = 0;\n\n  if (token.type !== TokenPunctuator && token.type !== TokenKeyword) {\n    return 0;\n  }\n\n  switch (token.value) {\n    case '||':\n      prec = 1;\n      break;\n\n    case '&&':\n      prec = 2;\n      break;\n\n    case '|':\n      prec = 3;\n      break;\n\n    case '^':\n      prec = 4;\n      break;\n\n    case '&':\n      prec = 5;\n      break;\n\n    case '==':\n    case '!=':\n    case '===':\n    case '!==':\n      prec = 6;\n      break;\n\n    case '<':\n    case '>':\n    case '<=':\n    case '>=':\n    case 'instanceof':\n    case 'in':\n      prec = 7;\n      break;\n\n    case '<<':\n    case '>>':\n    case '>>>':\n      prec = 8;\n      break;\n\n    case '+':\n    case '-':\n      prec = 9;\n      break;\n\n    case '*':\n    case '/':\n    case '%':\n      prec = 11;\n      break;\n  }\n\n  return prec;\n} // 11.5 Multiplicative Operators\n// 11.6 Additive Operators\n// 11.7 Bitwise Shift Operators\n// 11.8 Relational Operators\n// 11.9 Equality Operators\n// 11.10 Binary Bitwise Operators\n// 11.11 Binary Logical Operators\n\n\nfunction parseBinaryExpression() {\n  var marker, markers, expr, token, prec, stack, right, operator, left, i;\n  marker = lookahead;\n  left = parseUnaryExpression();\n  token = lookahead;\n  prec = binaryPrecedence(token);\n\n  if (prec === 0) {\n    return left;\n  }\n\n  token.prec = prec;\n  lex();\n  markers = [marker, lookahead];\n  right = parseUnaryExpression();\n  stack = [left, token, right];\n\n  while ((prec = binaryPrecedence(lookahead)) > 0) {\n    // Reduce: make a binary expression from the three topmost entries.\n    while (stack.length > 2 && prec <= stack[stack.length - 2].prec) {\n      right = stack.pop();\n      operator = stack.pop().value;\n      left = stack.pop();\n      markers.pop();\n      expr = finishBinaryExpression(operator, left, right);\n      stack.push(expr);\n    } // Shift.\n\n\n    token = lex();\n    token.prec = prec;\n    stack.push(token);\n    markers.push(lookahead);\n    expr = parseUnaryExpression();\n    stack.push(expr);\n  } // Final reduce to clean-up the stack.\n\n\n  i = stack.length - 1;\n  expr = stack[i];\n  markers.pop();\n\n  while (i > 1) {\n    markers.pop();\n    expr = finishBinaryExpression(stack[i - 1].value, stack[i - 2], expr);\n    i -= 2;\n  }\n\n  return expr;\n} // 11.12 Conditional Operator\n\n\nfunction parseConditionalExpression() {\n  var expr, consequent, alternate;\n  expr = parseBinaryExpression();\n\n  if (match('?')) {\n    lex();\n    consequent = parseConditionalExpression();\n    expect(':');\n    alternate = parseConditionalExpression();\n    expr = finishConditionalExpression(expr, consequent, alternate);\n  }\n\n  return expr;\n} // 11.14 Comma Operator\n\n\nfunction parseExpression() {\n  const expr = parseConditionalExpression();\n\n  if (match(',')) {\n    throw new Error(DISABLED); // no sequence expressions\n  }\n\n  return expr;\n}\n\nfunction parser (code) {\n  source = code;\n  index = 0;\n  length = source.length;\n  lookahead = null;\n  peek();\n  const expr = parseExpression();\n\n  if (lookahead.type !== TokenEOF) {\n    throw new Error('Unexpect token after expression.');\n  }\n\n  return expr;\n}\n\nvar Constants = {\n  NaN: 'NaN',\n  E: 'Math.E',\n  LN2: 'Math.LN2',\n  LN10: 'Math.LN10',\n  LOG2E: 'Math.LOG2E',\n  LOG10E: 'Math.LOG10E',\n  PI: 'Math.PI',\n  SQRT1_2: 'Math.SQRT1_2',\n  SQRT2: 'Math.SQRT2',\n  MIN_VALUE: 'Number.MIN_VALUE',\n  MAX_VALUE: 'Number.MAX_VALUE'\n};\n\nfunction Functions (codegen) {\n  function fncall(name, args, cast, type) {\n    let obj = codegen(args[0]);\n\n    if (cast) {\n      obj = cast + '(' + obj + ')';\n      if (cast.lastIndexOf('new ', 0) === 0) obj = '(' + obj + ')';\n    }\n\n    return obj + '.' + name + (type < 0 ? '' : type === 0 ? '()' : '(' + args.slice(1).map(codegen).join(',') + ')');\n  }\n\n  function fn(name, cast, type) {\n    return args => fncall(name, args, cast, type);\n  }\n\n  const DATE = 'new Date',\n        STRING = 'String',\n        REGEXP = 'RegExp';\n  return {\n    // MATH functions\n    isNaN: 'Number.isNaN',\n    isFinite: 'Number.isFinite',\n    abs: 'Math.abs',\n    acos: 'Math.acos',\n    asin: 'Math.asin',\n    atan: 'Math.atan',\n    atan2: 'Math.atan2',\n    ceil: 'Math.ceil',\n    cos: 'Math.cos',\n    exp: 'Math.exp',\n    floor: 'Math.floor',\n    log: 'Math.log',\n    max: 'Math.max',\n    min: 'Math.min',\n    pow: 'Math.pow',\n    random: 'Math.random',\n    round: 'Math.round',\n    sin: 'Math.sin',\n    sqrt: 'Math.sqrt',\n    tan: 'Math.tan',\n    clamp: function (args) {\n      if (args.length < 3) error('Missing arguments to clamp function.');\n      if (args.length > 3) error('Too many arguments to clamp function.');\n      const a = args.map(codegen);\n      return 'Math.max(' + a[1] + ', Math.min(' + a[2] + ',' + a[0] + '))';\n    },\n    // DATE functions\n    now: 'Date.now',\n    utc: 'Date.UTC',\n    datetime: DATE,\n    date: fn('getDate', DATE, 0),\n    day: fn('getDay', DATE, 0),\n    year: fn('getFullYear', DATE, 0),\n    month: fn('getMonth', DATE, 0),\n    hours: fn('getHours', DATE, 0),\n    minutes: fn('getMinutes', DATE, 0),\n    seconds: fn('getSeconds', DATE, 0),\n    milliseconds: fn('getMilliseconds', DATE, 0),\n    time: fn('getTime', DATE, 0),\n    timezoneoffset: fn('getTimezoneOffset', DATE, 0),\n    utcdate: fn('getUTCDate', DATE, 0),\n    utcday: fn('getUTCDay', DATE, 0),\n    utcyear: fn('getUTCFullYear', DATE, 0),\n    utcmonth: fn('getUTCMonth', DATE, 0),\n    utchours: fn('getUTCHours', DATE, 0),\n    utcminutes: fn('getUTCMinutes', DATE, 0),\n    utcseconds: fn('getUTCSeconds', DATE, 0),\n    utcmilliseconds: fn('getUTCMilliseconds', DATE, 0),\n    // sequence functions\n    length: fn('length', null, -1),\n    // STRING functions\n    parseFloat: 'parseFloat',\n    parseInt: 'parseInt',\n    upper: fn('toUpperCase', STRING, 0),\n    lower: fn('toLowerCase', STRING, 0),\n    substring: fn('substring', STRING),\n    split: fn('split', STRING),\n    trim: fn('trim', STRING, 0),\n    // REGEXP functions\n    regexp: REGEXP,\n    test: fn('test', REGEXP),\n    // Control Flow functions\n    if: function (args) {\n      if (args.length < 3) error('Missing arguments to if function.');\n      if (args.length > 3) error('Too many arguments to if function.');\n      const a = args.map(codegen);\n      return '(' + a[0] + '?' + a[1] + ':' + a[2] + ')';\n    }\n  };\n}\n\nfunction stripQuotes(s) {\n  const n = s && s.length - 1;\n  return n && (s[0] === '\"' && s[n] === '\"' || s[0] === '\\'' && s[n] === '\\'') ? s.slice(1, -1) : s;\n}\n\nfunction codegen (opt) {\n  opt = opt || {};\n  const allowed = opt.allowed ? toSet(opt.allowed) : {},\n        forbidden = opt.forbidden ? toSet(opt.forbidden) : {},\n        constants = opt.constants || Constants,\n        functions = (opt.functions || Functions)(visit),\n        globalvar = opt.globalvar,\n        fieldvar = opt.fieldvar,\n        outputGlobal = isFunction(globalvar) ? globalvar : id => \"\".concat(globalvar, \"[\\\"\").concat(id, \"\\\"]\");\n  let globals = {},\n      fields = {},\n      memberDepth = 0;\n\n  function visit(ast) {\n    if (isString(ast)) return ast;\n    const generator = Generators[ast.type];\n    if (generator == null) error('Unsupported type: ' + ast.type);\n    return generator(ast);\n  }\n\n  const Generators = {\n    Literal: n => n.raw,\n    Identifier: n => {\n      const id = n.name;\n\n      if (memberDepth > 0) {\n        return id;\n      } else if (hasOwnProperty(forbidden, id)) {\n        return error('Illegal identifier: ' + id);\n      } else if (hasOwnProperty(constants, id)) {\n        return constants[id];\n      } else if (hasOwnProperty(allowed, id)) {\n        return id;\n      } else {\n        globals[id] = 1;\n        return outputGlobal(id);\n      }\n    },\n    MemberExpression: n => {\n      const d = !n.computed,\n            o = visit(n.object);\n      if (d) memberDepth += 1;\n      const p = visit(n.property);\n\n      if (o === fieldvar) {\n        // strip quotes to sanitize field name (#1653)\n        fields[stripQuotes(p)] = 1;\n      }\n\n      if (d) memberDepth -= 1;\n      return o + (d ? '.' + p : '[' + p + ']');\n    },\n    CallExpression: n => {\n      if (n.callee.type !== 'Identifier') {\n        error('Illegal callee type: ' + n.callee.type);\n      }\n\n      const callee = n.callee.name,\n            args = n.arguments,\n            fn = hasOwnProperty(functions, callee) && functions[callee];\n      if (!fn) error('Unrecognized function: ' + callee);\n      return isFunction(fn) ? fn(args) : fn + '(' + args.map(visit).join(',') + ')';\n    },\n    ArrayExpression: n => '[' + n.elements.map(visit).join(',') + ']',\n    BinaryExpression: n => '(' + visit(n.left) + ' ' + n.operator + ' ' + visit(n.right) + ')',\n    UnaryExpression: n => '(' + n.operator + visit(n.argument) + ')',\n    ConditionalExpression: n => '(' + visit(n.test) + '?' + visit(n.consequent) + ':' + visit(n.alternate) + ')',\n    LogicalExpression: n => '(' + visit(n.left) + n.operator + visit(n.right) + ')',\n    ObjectExpression: n => '{' + n.properties.map(visit).join(',') + '}',\n    Property: n => {\n      memberDepth += 1;\n      const k = visit(n.key);\n      memberDepth -= 1;\n      return k + ':' + visit(n.value);\n    }\n  };\n\n  function codegen(ast) {\n    const result = {\n      code: visit(ast),\n      globals: Object.keys(globals),\n      fields: Object.keys(fields)\n    };\n    globals = {};\n    fields = {};\n    return result;\n  }\n\n  codegen.functions = functions;\n  codegen.constants = constants;\n  return codegen;\n}\n\nexport { ASTNode, ArrayExpression, BinaryExpression, CallExpression, ConditionalExpression, Identifier, Literal, LogicalExpression, MemberExpression, ObjectExpression, Property, RawCode, UnaryExpression, codegen, Constants as constants, Functions as functions, parser as parse };\n","import { field, isDate, toNumber, isArray, inrange, extend, array, error, peek, hasOwnProperty } from 'vega-util';\nimport { Literal } from 'vega-expression';\n\nfunction ascending (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector (f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n    }\n\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n    }\n\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {\n    left,\n    center,\n    right\n  };\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n\nconst Intersect = 'intersect';\nconst Union = 'union';\nconst VlMulti = 'vlMulti';\nconst VlPoint = 'vlPoint';\nconst Or = 'or';\nconst And = 'and';\n\nconst SELECTION_ID = '_vgsid_',\n      TYPE_ENUM = 'E',\n      TYPE_RANGE_INC = 'R',\n      TYPE_RANGE_EXC = 'R-E',\n      TYPE_RANGE_LE = 'R-LE',\n      TYPE_RANGE_RE = 'R-RE',\n      UNIT_INDEX = 'index:unit'; // TODO: revisit date coercion?\n\nfunction testPoint(datum, entry) {\n  var fields = entry.fields,\n      values = entry.values,\n      n = fields.length,\n      i = 0,\n      dval,\n      f;\n\n  for (; i < n; ++i) {\n    f = fields[i];\n    f.getter = field.getter || field(f.field);\n    dval = f.getter(datum);\n    if (isDate(dval)) dval = toNumber(dval);\n    if (isDate(values[i])) values[i] = toNumber(values[i]);\n    if (isDate(values[i][0])) values[i] = values[i].map(toNumber);\n\n    if (f.type === TYPE_ENUM) {\n      // Enumerated fields can either specify individual values (single/multi selections)\n      // or an array of values (interval selections).\n      if (isArray(values[i]) ? values[i].indexOf(dval) < 0 : dval !== values[i]) {\n        return false;\n      }\n    } else {\n      if (f.type === TYPE_RANGE_INC) {\n        if (!inrange(dval, values[i])) return false;\n      } else if (f.type === TYPE_RANGE_RE) {\n        // Discrete selection of bins test within the range [bin_start, bin_end).\n        if (!inrange(dval, values[i], true, false)) return false;\n      } else if (f.type === TYPE_RANGE_EXC) {\n        // 'R-E'/'R-LE' included for completeness.\n        if (!inrange(dval, values[i], false, false)) return false;\n      } else if (f.type === TYPE_RANGE_LE) {\n        if (!inrange(dval, values[i], false, true)) return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Tests if a tuple is contained within an interactive selection.\n * @param {string} name - The name of the data set representing the selection.\n *  Tuples in the dataset are of the form\n *  {unit: string, fields: array<fielddef>, values: array<*>}.\n *  Fielddef is of the form\n *  {field: string, channel: string, type: 'E' | 'R'} where\n *  'type' identifies whether tuples in the dataset enumerate\n *  values for the field, or specify a continuous range.\n * @param {object} datum - The tuple to test for inclusion.\n * @param {string} op - The set operation for combining selections.\n *   One of 'intersect' or 'union' (default).\n * @return {boolean} - True if the datum is in the selection, false otherwise.\n */\n\n\nfunction selectionTest(name, datum, op) {\n  var data = this.context.data[name],\n      entries = data ? data.values.value : [],\n      unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n      intersect = op === Intersect,\n      n = entries.length,\n      i = 0,\n      entry,\n      miss,\n      count,\n      unit,\n      b;\n\n  for (; i < n; ++i) {\n    entry = entries[i];\n\n    if (unitIdx && intersect) {\n      // multi selections union within the same unit and intersect across units.\n      miss = miss || {};\n      count = miss[unit = entry.unit] || 0; // if we've already matched this unit, skip.\n\n      if (count === -1) continue;\n      b = testPoint(datum, entry);\n      miss[unit] = b ? -1 : ++count; // if we match and there are no other units return true\n      // if we've missed against all tuples in this unit return false\n\n      if (b && unitIdx.size === 1) return true;\n      if (!b && count === unitIdx.get(unit).count) return false;\n    } else {\n      b = testPoint(datum, entry); // if we find a miss and we do require intersection return false\n      // if we find a match and we don't require intersection return true\n\n      if (intersect ^ b) return b;\n    }\n  } // if intersecting and we made it here, then we saw no misses\n  // if not intersecting, then we saw no matches\n  // if no active selections, return false\n\n\n  return n && intersect;\n}\nconst selectionId = field(SELECTION_ID),\n      bisect = bisector(selectionId),\n      bisectLeft = bisect.left,\n      bisectRight = bisect.right;\nfunction selectionIdTest(name, datum, op) {\n  const data = this.context.data[name],\n        entries = data ? data.values.value : [],\n        unitIdx = data ? data[UNIT_INDEX] && data[UNIT_INDEX].value : undefined,\n        intersect = op === Intersect,\n        value = selectionId(datum),\n        index = bisectLeft(entries, value);\n  if (index === entries.length) return false;\n  if (selectionId(entries[index]) !== value) return false;\n\n  if (unitIdx && intersect) {\n    if (unitIdx.size === 1) return true;\n    if (bisectRight(entries, value) - index < unitIdx.size) return false;\n  }\n\n  return true;\n}\n\n/**\n * Maps an array of scene graph items to an array of selection tuples.\n * @param {string} name  - The name of the dataset representing the selection.\n * @param {string} unit  - The name of the unit view.\n *\n * @returns {array} An array of selection entries for the given unit.\n */\n\nfunction selectionTuples(array, base) {\n  return array.map(x => extend({\n    values: base.fields.map(f => (f.getter || (f.getter = field(f.field)))(x.datum))\n  }, base));\n}\n\n/**\n * Resolves selection for use as a scale domain or reads via the API.\n * @param {string} name - The name of the dataset representing the selection\n * @param {string} [op='union'] - The set operation for combining selections.\n *                 One of 'intersect' or 'union' (default).\n * @param {boolean} isMulti - Identifies a \"multi\" selection to perform more\n *                 expensive resolution computation.\n * @param {boolean} vl5 - With Vega-Lite v5, \"multi\" selections are now called \"point\"\n *                 selections, and thus the resolved tuple should reflect this name.\n *                 This parameter allows us to reflect this change without triggering\n *                 a major version bump for Vega.\n * @returns {object} An object of selected fields and values.\n */\n\nfunction selectionResolve(name, op, isMulti, vl5) {\n  var data = this.context.data[name],\n      entries = data ? data.values.value : [],\n      resolved = {},\n      multiRes = {},\n      types = {},\n      entry,\n      fields,\n      values,\n      unit,\n      field,\n      res,\n      resUnit,\n      type,\n      union,\n      n = entries.length,\n      i = 0,\n      j,\n      m; // First union all entries within the same unit.\n\n  for (; i < n; ++i) {\n    entry = entries[i];\n    unit = entry.unit;\n    fields = entry.fields;\n    values = entry.values;\n\n    for (j = 0, m = fields.length; j < m; ++j) {\n      field = fields[j];\n      res = resolved[field.field] || (resolved[field.field] = {});\n      resUnit = res[unit] || (res[unit] = []);\n      types[field.field] = type = field.type.charAt(0);\n      union = ops[type + '_union'];\n      res[unit] = union(resUnit, array(values[j]));\n    } // If the same multi-selection is repeated over views and projected over\n    // an encoding, it may operate over different fields making it especially\n    // tricky to reliably resolve it. At best, we can de-dupe identical entries\n    // but doing so may be more computationally expensive than it is worth.\n    // Instead, for now, we simply transform our store representation into\n    // a more human-friendly one.\n\n\n    if (isMulti) {\n      resUnit = multiRes[unit] || (multiRes[unit] = []);\n      resUnit.push(array(values).reduce((obj, curr, j) => (obj[fields[j].field] = curr, obj), {}));\n    }\n  } // Then resolve fields across units as per the op.\n\n\n  op = op || Union;\n  Object.keys(resolved).forEach(field => {\n    resolved[field] = Object.keys(resolved[field]).map(unit => resolved[field][unit]).reduce((acc, curr) => acc === undefined ? curr : ops[types[field] + '_' + op](acc, curr));\n  });\n  entries = Object.keys(multiRes);\n\n  if (isMulti && entries.length) {\n    const key = vl5 ? VlPoint : VlMulti;\n    resolved[key] = op === Union ? {\n      [Or]: entries.reduce((acc, k) => (acc.push(...multiRes[k]), acc), [])\n    } : {\n      [And]: entries.map(k => ({\n        [Or]: multiRes[k]\n      }))\n    };\n  }\n\n  return resolved;\n}\nvar ops = {\n  E_union: function (base, value) {\n    if (!base.length) return value;\n    var i = 0,\n        n = value.length;\n\n    for (; i < n; ++i) if (base.indexOf(value[i]) < 0) base.push(value[i]);\n\n    return base;\n  },\n  E_intersect: function (base, value) {\n    return !base.length ? value : base.filter(v => value.indexOf(v) >= 0);\n  },\n  R_union: function (base, value) {\n    var lo = toNumber(value[0]),\n        hi = toNumber(value[1]);\n\n    if (lo > hi) {\n      lo = value[1];\n      hi = value[0];\n    }\n\n    if (!base.length) return [lo, hi];\n    if (base[0] > lo) base[0] = lo;\n    if (base[1] < hi) base[1] = hi;\n    return base;\n  },\n  R_intersect: function (base, value) {\n    var lo = toNumber(value[0]),\n        hi = toNumber(value[1]);\n\n    if (lo > hi) {\n      lo = value[1];\n      hi = value[0];\n    }\n\n    if (!base.length) return [lo, hi];\n\n    if (hi < base[0] || base[1] < lo) {\n      return [];\n    } else {\n      if (base[0] < lo) base[0] = lo;\n      if (base[1] > hi) base[1] = hi;\n    }\n\n    return base;\n  }\n};\n\nconst DataPrefix = ':',\n      IndexPrefix = '@';\nfunction selectionVisitor(name, args, scope, params) {\n  if (args[0].type !== Literal) error('First argument to selection functions must be a string literal.');\n  const data = args[0].value,\n        op = args.length >= 2 && peek(args).value,\n        field = 'unit',\n        indexName = IndexPrefix + field,\n        dataName = DataPrefix + data; // eslint-disable-next-line no-prototype-builtins\n\n  if (op === Intersect && !hasOwnProperty(params, indexName)) {\n    params[indexName] = scope.getData(data).indataRef(scope, field);\n  } // eslint-disable-next-line no-prototype-builtins\n\n\n  if (!hasOwnProperty(params, dataName)) {\n    params[dataName] = scope.getData(data).tuplesRef();\n  }\n}\n\nexport { selectionIdTest, selectionResolve, selectionTest, selectionTuples, selectionVisitor };\n","import { truthy, error, hasOwnProperty, isFunction, isString, stringValue, extend, isArray, isObject, field, peek, identity, array as array$1, isBoolean, isDate, isNumber, isRegExp, toBoolean, toDate, toNumber, toString, flush, lerp, pad, span, inrange, truncate, quarter, utcquarter, extent, clampRange, panLinear, panLog, panPow, panSymlog, zoomLinear, zoomLog, zoomPow, zoomSymlog } from 'vega-util';\nimport { Literal, constants, codegen, functions, parse, CallExpression } from 'vega-expression';\nimport { geoBounds as geoBounds$1, geoCentroid as geoCentroid$1, geoArea as geoArea$1 } from 'd3-geo';\nimport { rgb, lab, hcl, hsl } from 'd3-color';\nimport { isTuple } from 'vega-dataflow';\nimport { bandSpace, scale as scale$1, scaleFraction } from 'vega-scale';\nimport { Gradient, pathRender, pathParse, Bounds, intersect as intersect$1 } from 'vega-scenegraph';\nimport { selectionVisitor, selectionTest, selectionIdTest, selectionResolve, selectionTuples } from 'vega-selections';\nimport { random, cumulativeNormal, cumulativeLogNormal, cumulativeUniform, densityNormal, densityLogNormal, densityUniform, quantileNormal, quantileLogNormal, quantileUniform, sampleNormal, sampleLogNormal, sampleUniform } from 'vega-statistics';\nimport { utcOffset, utcSequence, timeOffset, timeSequence, timeUnitSpecifier, week, utcweek, dayofyear, utcdayofyear } from 'vega-time';\nimport { range as range$1 } from 'd3-array';\n\nfunction data(name) {\n  const data = this.context.data[name];\n  return data ? data.values.value : [];\n}\nfunction indata(name, field, value) {\n  const index = this.context.data[name]['index:' + field],\n        entry = index ? index.value.get(value) : undefined;\n  return entry ? entry.count : entry;\n}\nfunction setdata(name, tuples) {\n  const df = this.context.dataflow,\n        data = this.context.data[name],\n        input = data.input;\n  df.pulse(input, df.changeset().remove(truthy).insert(tuples));\n  return 1;\n}\n\nfunction encode (item, name, retval) {\n  if (item) {\n    const df = this.context.dataflow,\n          target = item.mark.source;\n    df.pulse(target, df.changeset().encode(item, name));\n  }\n\n  return retval !== undefined ? retval : item;\n}\n\nconst wrap = method => function (value, spec) {\n  const locale = this.context.dataflow.locale();\n  return locale[method](spec)(value);\n};\n\nconst format = wrap('format');\nconst timeFormat = wrap('timeFormat');\nconst utcFormat = wrap('utcFormat');\nconst timeParse = wrap('timeParse');\nconst utcParse = wrap('utcParse');\nconst dateObj = new Date(2000, 0, 1);\n\nfunction time(month, day, specifier) {\n  if (!Number.isInteger(month) || !Number.isInteger(day)) return '';\n  dateObj.setYear(2000);\n  dateObj.setMonth(month);\n  dateObj.setDate(day);\n  return timeFormat.call(this, dateObj, specifier);\n}\n\nfunction monthFormat(month) {\n  return time.call(this, month, 1, '%B');\n}\nfunction monthAbbrevFormat(month) {\n  return time.call(this, month, 1, '%b');\n}\nfunction dayFormat(day) {\n  return time.call(this, 0, 2 + day, '%A');\n}\nfunction dayAbbrevFormat(day) {\n  return time.call(this, 0, 2 + day, '%a');\n}\n\nconst DataPrefix = ':';\nconst IndexPrefix = '@';\nconst ScalePrefix = '%';\nconst SignalPrefix = '$';\n\nfunction dataVisitor(name, args, scope, params) {\n  if (args[0].type !== Literal) {\n    error('First argument to data functions must be a string literal.');\n  }\n\n  const data = args[0].value,\n        dataName = DataPrefix + data;\n\n  if (!hasOwnProperty(dataName, params)) {\n    try {\n      params[dataName] = scope.getData(data).tuplesRef();\n    } catch (err) {// if data set does not exist, there's nothing to track\n    }\n  }\n}\nfunction indataVisitor(name, args, scope, params) {\n  if (args[0].type !== Literal) error('First argument to indata must be a string literal.');\n  if (args[1].type !== Literal) error('Second argument to indata must be a string literal.');\n  const data = args[0].value,\n        field = args[1].value,\n        indexName = IndexPrefix + field;\n\n  if (!hasOwnProperty(indexName, params)) {\n    params[indexName] = scope.getData(data).indataRef(scope, field);\n  }\n}\nfunction scaleVisitor(name, args, scope, params) {\n  if (args[0].type === Literal) {\n    // add scale dependency\n    addScaleDependency(scope, params, args[0].value);\n  } else {\n    // indirect scale lookup; add all scales as parameters\n    for (name in scope.scales) {\n      addScaleDependency(scope, params, name);\n    }\n  }\n}\n\nfunction addScaleDependency(scope, params, name) {\n  const scaleName = ScalePrefix + name;\n\n  if (!hasOwnProperty(params, scaleName)) {\n    try {\n      params[scaleName] = scope.scaleRef(name);\n    } catch (err) {// TODO: error handling? warning?\n    }\n  }\n}\n\nfunction getScale(name, ctx) {\n  let s;\n  return isFunction(name) ? name : isString(name) ? (s = ctx.scales[name]) && s.value : undefined;\n}\nfunction internalScaleFunctions(codegen, fnctx, visitors) {\n  // add helper method to the 'this' expression function context\n  fnctx.__bandwidth = s => s && s.bandwidth ? s.bandwidth() : 0; // register AST visitors for internal scale functions\n\n\n  visitors._bandwidth = scaleVisitor;\n  visitors._range = scaleVisitor;\n  visitors._scale = scaleVisitor; // resolve scale reference directly to the signal hash argument\n\n  const ref = arg => '_[' + (arg.type === Literal ? stringValue(ScalePrefix + arg.value) : stringValue(ScalePrefix) + '+' + codegen(arg)) + ']'; // define and return internal scale function code generators\n  // these internal functions are called by mark encoders\n\n\n  return {\n    _bandwidth: args => \"this.__bandwidth(\".concat(ref(args[0]), \")\"),\n    _range: args => \"\".concat(ref(args[0]), \".range()\"),\n    _scale: args => \"\".concat(ref(args[0]), \"(\").concat(codegen(args[1]), \")\")\n  };\n}\n\nfunction geoMethod(methodName, globalMethod) {\n  return function (projection, geojson, group) {\n    if (projection) {\n      // projection defined, use it\n      const p = getScale(projection, (group || this).context);\n      return p && p.path[methodName](geojson);\n    } else {\n      // projection undefined, use global method\n      return globalMethod(geojson);\n    }\n  };\n}\n\nconst geoArea = geoMethod('area', geoArea$1);\nconst geoBounds = geoMethod('bounds', geoBounds$1);\nconst geoCentroid = geoMethod('centroid', geoCentroid$1);\n\nfunction inScope (item) {\n  const group = this.context.group;\n  let value = false;\n  if (group) while (item) {\n    if (item === group) {\n      value = true;\n      break;\n    }\n\n    item = item.mark.group;\n  }\n  return value;\n}\n\nfunction log(df, method, args) {\n  try {\n    df[method].apply(df, ['EXPRESSION'].concat([].slice.call(args)));\n  } catch (err) {\n    df.warn(err);\n  }\n\n  return args[args.length - 1];\n}\n\nfunction warn() {\n  return log(this.context.dataflow, 'warn', arguments);\n}\nfunction info() {\n  return log(this.context.dataflow, 'info', arguments);\n}\nfunction debug() {\n  return log(this.context.dataflow, 'debug', arguments);\n}\n\nfunction channel_luminance_value(channelValue) {\n  const val = channelValue / 255;\n\n  if (val <= 0.03928) {\n    return val / 12.92;\n  }\n\n  return Math.pow((val + 0.055) / 1.055, 2.4);\n}\n\nfunction luminance(color) {\n  const c = rgb(color),\n        r = channel_luminance_value(c.r),\n        g = channel_luminance_value(c.g),\n        b = channel_luminance_value(c.b);\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n} // https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n\nfunction contrast(color1, color2) {\n  const lum1 = luminance(color1),\n        lum2 = luminance(color2),\n        lumL = Math.max(lum1, lum2),\n        lumD = Math.min(lum1, lum2);\n  return (lumL + 0.05) / (lumD + 0.05);\n}\n\nfunction merge () {\n  const args = [].slice.call(arguments);\n  args.unshift({});\n  return extend(...args);\n}\n\nfunction equal(a, b) {\n  return a === b || a !== a && b !== b ? true : isArray(a) ? isArray(b) && a.length === b.length ? equalArray(a, b) : false : isObject(a) && isObject(b) ? equalObject(a, b) : false;\n}\n\nfunction equalArray(a, b) {\n  for (let i = 0, n = a.length; i < n; ++i) {\n    if (!equal(a[i], b[i])) return false;\n  }\n\n  return true;\n}\n\nfunction equalObject(a, b) {\n  for (const key in a) {\n    if (!equal(a[key], b[key])) return false;\n  }\n\n  return true;\n}\n\nfunction removePredicate(props) {\n  return _ => equalObject(props, _);\n}\n\nfunction modify (name, insert, remove, toggle, modify, values) {\n  const df = this.context.dataflow,\n        data = this.context.data[name],\n        input = data.input,\n        stamp = df.stamp();\n  let changes = data.changes,\n      predicate,\n      key;\n\n  if (df._trigger === false || !(input.value.length || insert || toggle)) {\n    // nothing to do!\n    return 0;\n  }\n\n  if (!changes || changes.stamp < stamp) {\n    data.changes = changes = df.changeset();\n    changes.stamp = stamp;\n    df.runAfter(() => {\n      data.modified = true;\n      df.pulse(input, changes).run();\n    }, true, 1);\n  }\n\n  if (remove) {\n    predicate = remove === true ? truthy : isArray(remove) || isTuple(remove) ? remove : removePredicate(remove);\n    changes.remove(predicate);\n  }\n\n  if (insert) {\n    changes.insert(insert);\n  }\n\n  if (toggle) {\n    predicate = removePredicate(toggle);\n\n    if (input.value.some(predicate)) {\n      changes.remove(predicate);\n    } else {\n      changes.insert(toggle);\n    }\n  }\n\n  if (modify) {\n    for (key in values) {\n      changes.modify(modify, key, values[key]);\n    }\n  }\n\n  return 1;\n}\n\nfunction pinchDistance(event) {\n  const t = event.touches,\n        dx = t[0].clientX - t[1].clientX,\n        dy = t[0].clientY - t[1].clientY;\n  return Math.sqrt(dx * dx + dy * dy);\n}\nfunction pinchAngle(event) {\n  const t = event.touches;\n  return Math.atan2(t[0].clientY - t[1].clientY, t[0].clientX - t[1].clientX);\n}\n\nconst accessors = {};\nfunction pluck (data, name) {\n  const accessor = accessors[name] || (accessors[name] = field(name));\n  return isArray(data) ? data.map(accessor) : accessor(data);\n}\n\nfunction array(seq) {\n  return isArray(seq) || ArrayBuffer.isView(seq) ? seq : null;\n}\n\nfunction sequence(seq) {\n  return array(seq) || (isString(seq) ? seq : null);\n}\n\nfunction join(seq, ...args) {\n  return array(seq).join(...args);\n}\nfunction indexof(seq, ...args) {\n  return sequence(seq).indexOf(...args);\n}\nfunction lastindexof(seq, ...args) {\n  return sequence(seq).lastIndexOf(...args);\n}\nfunction slice(seq, ...args) {\n  return sequence(seq).slice(...args);\n}\nfunction replace(str, pattern, repl) {\n  if (isFunction(repl)) error('Function argument passed to replace.');\n  return String(str).replace(pattern, repl);\n}\nfunction reverse(seq) {\n  return array(seq).slice().reverse();\n}\n\nfunction bandspace(count, paddingInner, paddingOuter) {\n  return bandSpace(count || 0, paddingInner || 0, paddingOuter || 0);\n}\nfunction bandwidth(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.bandwidth ? s.bandwidth() : 0;\n}\nfunction copy(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.copy() : undefined;\n}\nfunction domain(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s.domain() : [];\n}\nfunction invert(name, range, group) {\n  const s = getScale(name, (group || this).context);\n  return !s ? undefined : isArray(range) ? (s.invertRange || s.invert)(range) : (s.invert || s.invertExtent)(range);\n}\nfunction range(name, group) {\n  const s = getScale(name, (group || this).context);\n  return s && s.range ? s.range() : [];\n}\nfunction scale(name, value, group) {\n  const s = getScale(name, (group || this).context);\n  return s ? s(value) : undefined;\n}\n\nfunction scaleGradient (scale, p0, p1, count, group) {\n  scale = getScale(scale, (group || this).context);\n  const gradient = Gradient(p0, p1);\n  let stops = scale.domain(),\n      min = stops[0],\n      max = peek(stops),\n      fraction = identity;\n\n  if (!(max - min)) {\n    // expand scale if domain has zero span, fix #1479\n    scale = (scale.interpolator ? scale$1('sequential')().interpolator(scale.interpolator()) : scale$1('linear')().interpolate(scale.interpolate()).range(scale.range())).domain([min = 0, max = 1]);\n  } else {\n    fraction = scaleFraction(scale, min, max);\n  }\n\n  if (scale.ticks) {\n    stops = scale.ticks(+count || 15);\n    if (min !== stops[0]) stops.unshift(min);\n    if (max !== peek(stops)) stops.push(max);\n  }\n\n  stops.forEach(_ => gradient.stop(fraction(_), scale(_)));\n  return gradient;\n}\n\nfunction geoShape(projection, geojson, group) {\n  const p = getScale(projection, (group || this).context);\n  return function (context) {\n    return p ? p.path.context(context)(geojson) : '';\n  };\n}\nfunction pathShape(path) {\n  let p = null;\n  return function (context) {\n    return context ? pathRender(context, p = p || pathParse(path)) : path;\n  };\n}\n\nconst datum = d => d.data;\n\nfunction treeNodes(name, context) {\n  const tree = data.call(context, name);\n  return tree.root && tree.root.lookup || {};\n}\n\nfunction treePath(name, source, target) {\n  const nodes = treeNodes(name, this),\n        s = nodes[source],\n        t = nodes[target];\n  return s && t ? s.path(t).map(datum) : undefined;\n}\nfunction treeAncestors(name, node) {\n  const n = treeNodes(name, this)[node];\n  return n ? n.ancestors().map(datum) : undefined;\n}\n\nconst _window = () => typeof window !== 'undefined' && window || null;\n\nfunction screen() {\n  const w = _window();\n\n  return w ? w.screen : {};\n}\nfunction windowSize() {\n  const w = _window();\n\n  return w ? [w.innerWidth, w.innerHeight] : [undefined, undefined];\n}\nfunction containerSize() {\n  const view = this.context.dataflow,\n        el = view.container && view.container();\n  return el ? [el.clientWidth, el.clientHeight] : [undefined, undefined];\n}\n\nfunction intersect (b, opt, group) {\n  if (!b) return [];\n  const [u, v] = b,\n        box = new Bounds().set(u[0], u[1], v[0], v[1]),\n        scene = group || this.context.dataflow.scenegraph().root;\n  return intersect$1(scene, box, filter(opt));\n}\n\nfunction filter(opt) {\n  let p = null;\n\n  if (opt) {\n    const types = array$1(opt.marktype),\n          names = array$1(opt.markname);\n\n    p = _ => (!types.length || types.some(t => _.marktype === t)) && (!names.length || names.some(s => _.name === s));\n  }\n\n  return p;\n}\n\nconst functionContext = {\n  random() {\n    return random();\n  },\n\n  // override default\n  cumulativeNormal,\n  cumulativeLogNormal,\n  cumulativeUniform,\n  densityNormal,\n  densityLogNormal,\n  densityUniform,\n  quantileNormal,\n  quantileLogNormal,\n  quantileUniform,\n  sampleNormal,\n  sampleLogNormal,\n  sampleUniform,\n  isArray,\n  isBoolean,\n  isDate,\n\n  isDefined(_) {\n    return _ !== undefined;\n  },\n\n  isNumber,\n  isObject,\n  isRegExp,\n  isString,\n  isTuple,\n\n  isValid(_) {\n    return _ != null && _ === _;\n  },\n\n  toBoolean,\n  toDate,\n  toNumber,\n  toString,\n  indexof,\n  join,\n  lastindexof,\n  replace,\n  reverse,\n  slice,\n  flush,\n  lerp,\n  merge,\n  pad,\n  peek,\n  pluck,\n  span,\n  inrange,\n  truncate,\n  rgb,\n  lab,\n  hcl,\n  hsl,\n  luminance,\n  contrast,\n  sequence: range$1,\n  format,\n  utcFormat,\n  utcParse,\n  utcOffset,\n  utcSequence,\n  timeFormat,\n  timeParse,\n  timeOffset,\n  timeSequence,\n  timeUnitSpecifier,\n  monthFormat,\n  monthAbbrevFormat,\n  dayFormat,\n  dayAbbrevFormat,\n  quarter,\n  utcquarter,\n  week,\n  utcweek,\n  dayofyear,\n  utcdayofyear,\n  warn,\n  info,\n  debug,\n  extent,\n  inScope,\n  intersect,\n  clampRange,\n  pinchDistance,\n  pinchAngle,\n  screen,\n  containerSize,\n  windowSize,\n  bandspace,\n  setdata,\n  pathShape,\n  panLinear,\n  panLog,\n  panPow,\n  panSymlog,\n  zoomLinear,\n  zoomLog,\n  zoomPow,\n  zoomSymlog,\n  encode,\n  modify\n};\nconst eventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'],\n      // event functions\neventPrefix = 'event.vega.',\n      // event function prefix\nthisPrefix = 'this.',\n      // function context prefix\nastVisitors = {}; // AST visitors for dependency analysis\n// export code generator parameters\n\nconst codegenParams = {\n  forbidden: ['_'],\n  allowed: ['datum', 'event', 'item'],\n  fieldvar: 'datum',\n  globalvar: id => \"_[\".concat(stringValue(SignalPrefix + id), \"]\"),\n  functions: buildFunctions,\n  constants: constants,\n  visitors: astVisitors\n}; // export code generator\n\nconst codeGenerator = codegen(codegenParams); // Build expression function registry\n\nfunction buildFunctions(codegen) {\n  const fn = functions(codegen);\n  eventFunctions.forEach(name => fn[name] = eventPrefix + name);\n\n  for (const name in functionContext) {\n    fn[name] = thisPrefix + name;\n  }\n\n  extend(fn, internalScaleFunctions(codegen, functionContext, astVisitors));\n  return fn;\n} // Register an expression function\n\n\nfunction expressionFunction(name, fn, visitor) {\n  if (arguments.length === 1) {\n    return functionContext[name];\n  } // register with the functionContext\n\n\n  functionContext[name] = fn; // if there is an astVisitor register that, too\n\n  if (visitor) astVisitors[name] = visitor; // if the code generator has already been initialized,\n  // we need to also register the function with it\n\n  if (codeGenerator) codeGenerator.functions[name] = thisPrefix + name;\n  return this;\n} // register expression functions with ast visitors\n\nexpressionFunction('bandwidth', bandwidth, scaleVisitor);\nexpressionFunction('copy', copy, scaleVisitor);\nexpressionFunction('domain', domain, scaleVisitor);\nexpressionFunction('range', range, scaleVisitor);\nexpressionFunction('invert', invert, scaleVisitor);\nexpressionFunction('scale', scale, scaleVisitor);\nexpressionFunction('gradient', scaleGradient, scaleVisitor);\nexpressionFunction('geoArea', geoArea, scaleVisitor);\nexpressionFunction('geoBounds', geoBounds, scaleVisitor);\nexpressionFunction('geoCentroid', geoCentroid, scaleVisitor);\nexpressionFunction('geoShape', geoShape, scaleVisitor);\nexpressionFunction('indata', indata, indataVisitor);\nexpressionFunction('data', data, dataVisitor);\nexpressionFunction('treePath', treePath, dataVisitor);\nexpressionFunction('treeAncestors', treeAncestors, dataVisitor); // register Vega-Lite selection functions\n\nexpressionFunction('vlSelectionTest', selectionTest, selectionVisitor);\nexpressionFunction('vlSelectionIdTest', selectionIdTest, selectionVisitor);\nexpressionFunction('vlSelectionResolve', selectionResolve, selectionVisitor);\nexpressionFunction('vlSelectionTuples', selectionTuples);\n\nfunction parser (expr, scope) {\n  const params = {}; // parse the expression to an abstract syntax tree (ast)\n\n  let ast;\n\n  try {\n    expr = isString(expr) ? expr : stringValue(expr) + '';\n    ast = parse(expr);\n  } catch (err) {\n    error('Expression parse error: ' + expr);\n  } // analyze ast function calls for dependencies\n\n\n  ast.visit(node => {\n    if (node.type !== CallExpression) return;\n    const name = node.callee.name,\n          visit = codegenParams.visitors[name];\n    if (visit) visit(name, node.arguments, scope, params);\n  }); // perform code generation\n\n  const gen = codeGenerator(ast); // collect signal dependencies\n\n  gen.globals.forEach(name => {\n    const signalName = SignalPrefix + name;\n\n    if (!hasOwnProperty(params, signalName) && scope.getSignal(name)) {\n      params[signalName] = scope.signalRef(name);\n    }\n  }); // return generated expression code and dependencies\n\n  return {\n    $expr: extend({\n      code: gen.code\n    }, scope.options.ast ? {\n      ast\n    } : null),\n    $fields: gen.fields,\n    $params: params\n  };\n}\n\nexport { DataPrefix, IndexPrefix, ScalePrefix, SignalPrefix, bandspace, bandwidth, codeGenerator, codegenParams, containerSize, contrast, copy, data, dataVisitor, dayAbbrevFormat, dayFormat, debug, domain, encode, expressionFunction, format, functionContext, geoArea, geoBounds, geoCentroid, geoShape, inScope, indata, indataVisitor, indexof, info, invert, join, lastindexof, luminance, merge, modify, monthAbbrevFormat, monthFormat, parser as parseExpression, pathShape, pinchAngle, pinchDistance, pluck, range, replace, reverse, scale, scaleGradient, scaleVisitor, screen, setdata, slice, timeFormat, timeParse, treeAncestors, treePath, utcFormat, utcParse, warn, windowSize };\n","import { toSet, stringValue, error, isArray, isObject, hasOwnProperty, accessor, key, field, array, compare, truthy } from 'vega-util';\nimport { tupleid } from 'vega-dataflow';\n\n/**\n * Parse a serialized dataflow specification.\n */\nfunction parse (spec) {\n  const ctx = this,\n        operators = spec.operators || []; // parse background\n\n  if (spec.background) {\n    ctx.background = spec.background;\n  } // parse event configuration\n\n\n  if (spec.eventConfig) {\n    ctx.eventConfig = spec.eventConfig;\n  } // parse locale configuration\n\n\n  if (spec.locale) {\n    ctx.locale = spec.locale;\n  } // parse operators\n\n\n  operators.forEach(entry => ctx.parseOperator(entry)); // parse operator parameters\n\n  operators.forEach(entry => ctx.parseOperatorParameters(entry)); // parse streams\n\n  (spec.streams || []).forEach(entry => ctx.parseStream(entry)); // parse updates\n\n  (spec.updates || []).forEach(entry => ctx.parseUpdate(entry));\n  return ctx.resolve();\n}\n\nconst Skip = toSet(['rule']),\n      Swap = toSet(['group', 'image', 'rect']);\nfunction adjustSpatial(encode, marktype) {\n  let code = '';\n  if (Skip[marktype]) return code;\n\n  if (encode.x2) {\n    if (encode.x) {\n      if (Swap[marktype]) {\n        code += 'if(o.x>o.x2)$=o.x,o.x=o.x2,o.x2=$;';\n      }\n\n      code += 'o.width=o.x2-o.x;';\n    } else {\n      code += 'o.x=o.x2-(o.width||0);';\n    }\n  }\n\n  if (encode.xc) {\n    code += 'o.x=o.xc-(o.width||0)/2;';\n  }\n\n  if (encode.y2) {\n    if (encode.y) {\n      if (Swap[marktype]) {\n        code += 'if(o.y>o.y2)$=o.y,o.y=o.y2,o.y2=$;';\n      }\n\n      code += 'o.height=o.y2-o.y;';\n    } else {\n      code += 'o.y=o.y2-(o.height||0);';\n    }\n  }\n\n  if (encode.yc) {\n    code += 'o.y=o.yc-(o.height||0)/2;';\n  }\n\n  return code;\n}\nfunction canonicalType(type) {\n  return (type + '').toLowerCase();\n}\nfunction isOperator(type) {\n  return canonicalType(type) === 'operator';\n}\nfunction isCollect(type) {\n  return canonicalType(type) === 'collect';\n}\n\nfunction expression(ctx, args, code) {\n  // wrap code in return statement if expression does not terminate\n  if (code[code.length - 1] !== ';') {\n    code = 'return(' + code + ');';\n  }\n\n  const fn = Function(...args.concat(code));\n  return ctx && ctx.functions ? fn.bind(ctx.functions) : fn;\n} // generate code for comparing a single field\n\n\nfunction _compare(u, v, lt, gt) {\n  return \"((u = \".concat(u, \") < (v = \").concat(v, \") || u == null) && v != null ? \").concat(lt, \"\\n  : (u > v || v == null) && u != null ? \").concat(gt, \"\\n  : ((v = v instanceof Date ? +v : v), (u = u instanceof Date ? +u : u)) !== u && v === v ? \").concat(lt, \"\\n  : v !== v && u === u ? \").concat(gt, \" : \");\n}\n\nvar expressionCodegen = {\n  /**\n   * Parse an expression used to update an operator value.\n   */\n  operator: (ctx, expr) => expression(ctx, ['_'], expr.code),\n\n  /**\n   * Parse an expression provided as an operator parameter value.\n   */\n  parameter: (ctx, expr) => expression(ctx, ['datum', '_'], expr.code),\n\n  /**\n   * Parse an expression applied to an event stream.\n   */\n  event: (ctx, expr) => expression(ctx, ['event'], expr.code),\n\n  /**\n   * Parse an expression used to handle an event-driven operator update.\n   */\n  handler: (ctx, expr) => {\n    const code = \"var datum=event.item&&event.item.datum;return \".concat(expr.code, \";\");\n    return expression(ctx, ['_', 'event'], code);\n  },\n\n  /**\n   * Parse an expression that performs visual encoding.\n   */\n  encode: (ctx, encode) => {\n    const {\n      marktype,\n      channels\n    } = encode;\n    let code = 'var o=item,datum=o.datum,m=0,$;';\n\n    for (const name in channels) {\n      const o = 'o[' + stringValue(name) + ']';\n      code += \"$=\".concat(channels[name].code, \";if(\").concat(o, \"!==$)\").concat(o, \"=$,m=1;\");\n    }\n\n    code += adjustSpatial(channels, marktype);\n    code += 'return m;';\n    return expression(ctx, ['item', '_'], code);\n  },\n\n  /**\n   * Optimized code generators for access and comparison.\n   */\n  codegen: {\n    get(path) {\n      const ref = \"[\".concat(path.map(stringValue).join(']['), \"]\");\n      const get = Function('_', \"return _\".concat(ref, \";\"));\n      get.path = ref;\n      return get;\n    },\n\n    comparator(fields, orders) {\n      let t;\n\n      const map = (f, i) => {\n        const o = orders[i];\n        let u, v;\n\n        if (f.path) {\n          u = \"a\".concat(f.path);\n          v = \"b\".concat(f.path);\n        } else {\n          (t = t || {})['f' + i] = f;\n          u = \"this.f\".concat(i, \"(a)\");\n          v = \"this.f\".concat(i, \"(b)\");\n        }\n\n        return _compare(u, v, -o, o);\n      };\n\n      const fn = Function('a', 'b', 'var u, v; return ' + fields.map(map).join('') + '0;');\n      return t ? fn.bind(t) : fn;\n    }\n\n  }\n};\n\n/**\n * Parse a dataflow operator.\n */\n\nfunction parseOperator(spec) {\n  const ctx = this;\n\n  if (isOperator(spec.type) || !spec.type) {\n    ctx.operator(spec, spec.update ? ctx.operatorExpression(spec.update) : null);\n  } else {\n    ctx.transform(spec, spec.type);\n  }\n}\n/**\n * Parse and assign operator parameters.\n */\n\nfunction parseOperatorParameters(spec) {\n  const ctx = this;\n\n  if (spec.params) {\n    const op = ctx.get(spec.id);\n    if (!op) error('Invalid operator id: ' + spec.id);\n    ctx.dataflow.connect(op, op.parameters(ctx.parseParameters(spec.params), spec.react, spec.initonly));\n  }\n}\n\n/**\n * Parse a set of operator parameters.\n */\n\nfunction parseParameters(spec, params) {\n  params = params || {};\n  const ctx = this;\n\n  for (const key in spec) {\n    const value = spec[key];\n    params[key] = isArray(value) ? value.map(v => parseParameter(v, ctx, params)) : parseParameter(value, ctx, params);\n  }\n\n  return params;\n}\n/**\n * Parse a single parameter.\n */\n\nfunction parseParameter(spec, ctx, params) {\n  if (!spec || !isObject(spec)) return spec;\n\n  for (let i = 0, n = PARSERS.length, p; i < n; ++i) {\n    p = PARSERS[i];\n\n    if (hasOwnProperty(spec, p.key)) {\n      return p.parse(spec, ctx, params);\n    }\n  }\n\n  return spec;\n}\n/** Reference parsers. */\n\n\nvar PARSERS = [{\n  key: '$ref',\n  parse: getOperator\n}, {\n  key: '$key',\n  parse: getKey\n}, {\n  key: '$expr',\n  parse: getExpression\n}, {\n  key: '$field',\n  parse: getField\n}, {\n  key: '$encode',\n  parse: getEncode\n}, {\n  key: '$compare',\n  parse: getCompare\n}, {\n  key: '$context',\n  parse: getContext\n}, {\n  key: '$subflow',\n  parse: getSubflow\n}, {\n  key: '$tupleid',\n  parse: getTupleId\n}];\n/**\n * Resolve an operator reference.\n */\n\nfunction getOperator(_, ctx) {\n  return ctx.get(_.$ref) || error('Operator not defined: ' + _.$ref);\n}\n/**\n * Resolve an expression reference.\n */\n\n\nfunction getExpression(_, ctx, params) {\n  if (_.$params) {\n    // parse expression parameters\n    ctx.parseParameters(_.$params, params);\n  }\n\n  const k = 'e:' + _.$expr.code + '_' + _.$name;\n  return ctx.fn[k] || (ctx.fn[k] = accessor(ctx.parameterExpression(_.$expr), _.$fields, _.$name));\n}\n/**\n * Resolve a key accessor reference.\n */\n\n\nfunction getKey(_, ctx) {\n  const k = 'k:' + _.$key + '_' + !!_.$flat;\n  return ctx.fn[k] || (ctx.fn[k] = key(_.$key, _.$flat, ctx.expr.codegen));\n}\n/**\n * Resolve a field accessor reference.\n */\n\n\nfunction getField(_, ctx) {\n  if (!_.$field) return null;\n  const k = 'f:' + _.$field + '_' + _.$name;\n  return ctx.fn[k] || (ctx.fn[k] = field(_.$field, _.$name, ctx.expr.codegen));\n}\n/**\n * Resolve a comparator function reference.\n */\n\n\nfunction getCompare(_, ctx) {\n  // As of Vega 5.5.3, $tupleid sort is no longer used.\n  // Keep here for now for backwards compatibility.\n  const k = 'c:' + _.$compare + '_' + _.$order,\n        c = array(_.$compare).map(_ => _ && _.$tupleid ? tupleid : _);\n  return ctx.fn[k] || (ctx.fn[k] = compare(c, _.$order, ctx.expr.codegen));\n}\n/**\n * Resolve an encode operator reference.\n */\n\n\nfunction getEncode(_, ctx) {\n  const spec = _.$encode,\n        encode = {};\n\n  for (const name in spec) {\n    const enc = spec[name];\n    encode[name] = accessor(ctx.encodeExpression(enc.$expr), enc.$fields);\n    encode[name].output = enc.$output;\n  }\n\n  return encode;\n}\n/**\n * Resolve a context reference.\n */\n\n\nfunction getContext(_, ctx) {\n  return ctx;\n}\n/**\n * Resolve a recursive subflow specification.\n */\n\n\nfunction getSubflow(_, ctx) {\n  const spec = _.$subflow;\n  return function (dataflow, key, parent) {\n    const subctx = ctx.fork().parse(spec),\n          op = subctx.get(spec.operators[0].id),\n          p = subctx.signals.parent;\n    if (p) p.set(parent);\n\n    op.detachSubflow = () => ctx.detach(subctx);\n\n    return op;\n  };\n}\n/**\n * Resolve a tuple id reference.\n */\n\n\nfunction getTupleId() {\n  return tupleid;\n}\n\n/**\n * Parse an event stream specification.\n */\n\nfunction parseStream (spec) {\n  var ctx = this,\n      filter = spec.filter != null ? ctx.eventExpression(spec.filter) : undefined,\n      stream = spec.stream != null ? ctx.get(spec.stream) : undefined,\n      args;\n\n  if (spec.source) {\n    stream = ctx.events(spec.source, spec.type, filter);\n  } else if (spec.merge) {\n    args = spec.merge.map(_ => ctx.get(_));\n    stream = args[0].merge.apply(args[0], args.slice(1));\n  }\n\n  if (spec.between) {\n    args = spec.between.map(_ => ctx.get(_));\n    stream = stream.between(args[0], args[1]);\n  }\n\n  if (spec.filter) {\n    stream = stream.filter(filter);\n  }\n\n  if (spec.throttle != null) {\n    stream = stream.throttle(+spec.throttle);\n  }\n\n  if (spec.debounce != null) {\n    stream = stream.debounce(+spec.debounce);\n  }\n\n  if (stream == null) {\n    error('Invalid stream definition: ' + JSON.stringify(spec));\n  }\n\n  if (spec.consume) stream.consume(true);\n  ctx.stream(spec, stream);\n}\n\n/**\n * Parse an event-driven operator update.\n */\n\nfunction parseUpdate (spec) {\n  var ctx = this,\n      srcid = isObject(srcid = spec.source) ? srcid.$ref : srcid,\n      source = ctx.get(srcid),\n      target = null,\n      update = spec.update,\n      params = undefined;\n  if (!source) error('Source not defined: ' + spec.source);\n  target = spec.target && spec.target.$expr ? ctx.eventExpression(spec.target.$expr) : ctx.get(spec.target);\n\n  if (update && update.$expr) {\n    if (update.$params) {\n      params = ctx.parseParameters(update.$params);\n    }\n\n    update = ctx.handlerExpression(update.$expr);\n  }\n\n  ctx.update(spec, source, target, update, params);\n}\n\nconst SKIP = {\n  skip: true\n};\nfunction getState(options) {\n  var ctx = this,\n      state = {};\n\n  if (options.signals) {\n    var signals = state.signals = {};\n    Object.keys(ctx.signals).forEach(key => {\n      const op = ctx.signals[key];\n\n      if (options.signals(key, op)) {\n        signals[key] = op.value;\n      }\n    });\n  }\n\n  if (options.data) {\n    var data = state.data = {};\n    Object.keys(ctx.data).forEach(key => {\n      const dataset = ctx.data[key];\n\n      if (options.data(key, dataset)) {\n        data[key] = dataset.input.value;\n      }\n    });\n  }\n\n  if (ctx.subcontext && options.recurse !== false) {\n    state.subcontext = ctx.subcontext.map(ctx => ctx.getState(options));\n  }\n\n  return state;\n}\nfunction setState(state) {\n  var ctx = this,\n      df = ctx.dataflow,\n      data = state.data,\n      signals = state.signals;\n  Object.keys(signals || {}).forEach(key => {\n    df.update(ctx.signals[key], signals[key], SKIP);\n  });\n  Object.keys(data || {}).forEach(key => {\n    df.pulse(ctx.data[key].input, df.changeset().remove(truthy).insert(data[key]));\n  });\n  (state.subcontext || []).forEach((substate, i) => {\n    const subctx = ctx.subcontext[i];\n    if (subctx) subctx.setState(substate);\n  });\n}\n\n/**\n * Context objects store the current parse state.\n * Enables lookup of parsed operators, event streams, accessors, etc.\n * Provides a 'fork' method for creating child contexts for subflows.\n */\n\nfunction context (df, transforms, functions, expr) {\n  return new Context(df, transforms, functions, expr);\n}\n\nfunction Context(df, transforms, functions, expr) {\n  this.dataflow = df;\n  this.transforms = transforms;\n  this.events = df.events.bind(df);\n  this.expr = expr || expressionCodegen, this.signals = {};\n  this.scales = {};\n  this.nodes = {};\n  this.data = {};\n  this.fn = {};\n\n  if (functions) {\n    this.functions = Object.create(functions);\n    this.functions.context = this;\n  }\n}\n\nfunction Subcontext(ctx) {\n  this.dataflow = ctx.dataflow;\n  this.transforms = ctx.transforms;\n  this.events = ctx.events;\n  this.expr = ctx.expr;\n  this.signals = Object.create(ctx.signals);\n  this.scales = Object.create(ctx.scales);\n  this.nodes = Object.create(ctx.nodes);\n  this.data = Object.create(ctx.data);\n  this.fn = Object.create(ctx.fn);\n\n  if (ctx.functions) {\n    this.functions = Object.create(ctx.functions);\n    this.functions.context = this;\n  }\n}\n\nContext.prototype = Subcontext.prototype = {\n  fork() {\n    const ctx = new Subcontext(this);\n    (this.subcontext || (this.subcontext = [])).push(ctx);\n    return ctx;\n  },\n\n  detach(ctx) {\n    this.subcontext = this.subcontext.filter(c => c !== ctx); // disconnect all nodes in the subcontext\n    // wipe out targets first for better efficiency\n\n    const keys = Object.keys(ctx.nodes);\n\n    for (const key of keys) ctx.nodes[key]._targets = null;\n\n    for (const key of keys) ctx.nodes[key].detach();\n\n    ctx.nodes = null;\n  },\n\n  get(id) {\n    return this.nodes[id];\n  },\n\n  set(id, node) {\n    return this.nodes[id] = node;\n  },\n\n  add(spec, op) {\n    const ctx = this,\n          df = ctx.dataflow,\n          data = spec.value;\n    ctx.set(spec.id, op);\n\n    if (isCollect(spec.type) && data) {\n      if (data.$ingest) {\n        df.ingest(op, data.$ingest, data.$format);\n      } else if (data.$request) {\n        df.preload(op, data.$request, data.$format);\n      } else {\n        df.pulse(op, df.changeset().insert(data));\n      }\n    }\n\n    if (spec.root) {\n      ctx.root = op;\n    }\n\n    if (spec.parent) {\n      let p = ctx.get(spec.parent.$ref);\n\n      if (p) {\n        df.connect(p, [op]);\n        op.targets().add(p);\n      } else {\n        (ctx.unresolved = ctx.unresolved || []).push(() => {\n          p = ctx.get(spec.parent.$ref);\n          df.connect(p, [op]);\n          op.targets().add(p);\n        });\n      }\n    }\n\n    if (spec.signal) {\n      ctx.signals[spec.signal] = op;\n    }\n\n    if (spec.scale) {\n      ctx.scales[spec.scale] = op;\n    }\n\n    if (spec.data) {\n      for (const name in spec.data) {\n        const data = ctx.data[name] || (ctx.data[name] = {});\n        spec.data[name].forEach(role => data[role] = op);\n      }\n    }\n  },\n\n  resolve() {\n    (this.unresolved || []).forEach(fn => fn());\n    delete this.unresolved;\n    return this;\n  },\n\n  operator(spec, update) {\n    this.add(spec, this.dataflow.add(spec.value, update));\n  },\n\n  transform(spec, type) {\n    this.add(spec, this.dataflow.add(this.transforms[canonicalType(type)]));\n  },\n\n  stream(spec, stream) {\n    this.set(spec.id, stream);\n  },\n\n  update(spec, stream, target, update, params) {\n    this.dataflow.on(stream, target, update, params, spec.options);\n  },\n\n  // expression parsing\n  operatorExpression(expr) {\n    return this.expr.operator(this, expr);\n  },\n\n  parameterExpression(expr) {\n    return this.expr.parameter(this, expr);\n  },\n\n  eventExpression(expr) {\n    return this.expr.event(this, expr);\n  },\n\n  handlerExpression(expr) {\n    return this.expr.handler(this, expr);\n  },\n\n  encodeExpression(encode) {\n    return this.expr.encode(this, encode);\n  },\n\n  // parse methods\n  parse,\n  parseOperator,\n  parseOperatorParameters,\n  parseParameters,\n  parseStream,\n  parseUpdate,\n  // state methods\n  getState,\n  setState\n};\n\nexport { context };\n","import { isString, hasOwnProperty, error, truthy, constant, extend, isArray, toSet, array, isObject, debounce, isDate, inherits, stringValue } from 'vega-util';\nimport { changeset, isChangeSet, EventStream, transforms, Dataflow, asyncCallback } from 'vega-dataflow';\nimport { point, renderModule, CanvasHandler, RenderType, Scenegraph } from 'vega-scenegraph';\nimport { tickStep } from 'd3-array';\nimport { functionContext } from 'vega-functions';\nimport { context } from 'vega-runtime';\nimport { interval } from 'd3-timer';\nimport { locale } from 'vega-format';\n\n// initialize aria role and label attributes\nfunction initializeAria(view) {\n  const el = view.container();\n\n  if (el) {\n    el.setAttribute('role', 'graphics-document');\n    el.setAttribute('aria-roleDescription', 'visualization');\n    ariaLabel(el, view.description());\n  }\n} // update aria-label if we have a DOM container element\n\nfunction ariaLabel(el, desc) {\n  if (el) desc == null ? el.removeAttribute('aria-label') : el.setAttribute('aria-label', desc);\n}\n\nfunction background (view) {\n  // respond to background signal\n  view.add(null, _ => {\n    view._background = _.bg;\n    view._resize = 1;\n    return _.bg;\n  }, {\n    bg: view._signals.background\n  });\n}\n\nconst Default = 'default';\nfunction cursor (view) {\n  // get cursor signal, add to dataflow if needed\n  const cursor = view._signals.cursor || (view._signals.cursor = view.add({\n    user: Default,\n    item: null\n  })); // evaluate cursor on each mousemove event\n\n  view.on(view.events('view', 'mousemove'), cursor, (_, event) => {\n    const value = cursor.value,\n          user = value ? isString(value) ? value : value.user : Default,\n          item = event.item && event.item.cursor || null;\n    return value && user === value.user && item == value.item ? value : {\n      user: user,\n      item: item\n    };\n  }); // when cursor signal updates, set visible cursor\n\n  view.add(null, function (_) {\n    let user = _.cursor,\n        item = this.value;\n\n    if (!isString(user)) {\n      item = user.item;\n      user = user.user;\n    }\n\n    setCursor(view, user && user !== Default ? user : item || user);\n    return item;\n  }, {\n    cursor: cursor\n  });\n}\nfunction setCursor(view, cursor) {\n  const el = view.globalCursor() ? typeof document !== 'undefined' && document.body : view.container();\n\n  if (el) {\n    return cursor == null ? el.style.removeProperty('cursor') : el.style.cursor = cursor;\n  }\n}\n\nfunction dataref(view, name) {\n  var data = view._runtime.data;\n\n  if (!hasOwnProperty(data, name)) {\n    error('Unrecognized data set: ' + name);\n  }\n\n  return data[name];\n}\nfunction data(name, values) {\n  return arguments.length < 2 ? dataref(this, name).values.value : change.call(this, name, changeset().remove(truthy).insert(values));\n}\nfunction change(name, changes) {\n  if (!isChangeSet(changes)) {\n    error('Second argument to changes must be a changeset.');\n  }\n\n  const dataset = dataref(this, name);\n  dataset.modified = true;\n  return this.pulse(dataset.input, changes);\n}\nfunction insert(name, _) {\n  return change.call(this, name, changeset().insert(_));\n}\nfunction remove(name, _) {\n  return change.call(this, name, changeset().remove(_));\n}\n\nfunction width(view) {\n  var padding = view.padding();\n  return Math.max(0, view._viewWidth + padding.left + padding.right);\n}\nfunction height(view) {\n  var padding = view.padding();\n  return Math.max(0, view._viewHeight + padding.top + padding.bottom);\n}\nfunction offset(view) {\n  var padding = view.padding(),\n      origin = view._origin;\n  return [padding.left + origin[0], padding.top + origin[1]];\n}\nfunction resizeRenderer(view) {\n  var origin = offset(view),\n      w = width(view),\n      h = height(view);\n\n  view._renderer.background(view.background());\n\n  view._renderer.resize(w, h, origin);\n\n  view._handler.origin(origin);\n\n  view._resizeListeners.forEach(handler => {\n    try {\n      handler(w, h);\n    } catch (error) {\n      view.error(error);\n    }\n  });\n}\n\n/**\n * Extend an event with additional view-specific methods.\n * Adds a new property ('vega') to an event that provides a number\n * of methods for querying information about the current interaction.\n * The vega object provides the following methods:\n *   view - Returns the backing View instance.\n *   item - Returns the currently active scenegraph item (if any).\n *   group - Returns the currently active scenegraph group (if any).\n *     This method accepts a single string-typed argument indicating the name\n *     of the desired parent group. The scenegraph will be traversed from\n *     the item up towards the root to search for a matching group. If no\n *     argument is provided the enclosing group for the active item is\n *     returned, unless the item it itself a group, in which case it is\n *     returned directly.\n *   xy - Returns a two-element array containing the x and y coordinates for\n *     mouse or touch events. For touch events, this is based on the first\n *     elements in the changedTouches array. This method accepts a single\n *     argument: either an item instance or mark name that should serve as\n *     the reference coordinate system. If no argument is provided the\n *     top-level view coordinate system is assumed.\n *   x - Returns the current x-coordinate, accepts the same arguments as xy.\n *   y - Returns the current y-coordinate, accepts the same arguments as xy.\n * @param {Event} event - The input event to extend.\n * @param {Item} item - The currently active scenegraph item (if any).\n * @return {Event} - The extended input event.\n */\n\nfunction eventExtend (view, event, item) {\n  var r = view._renderer,\n      el = r && r.canvas(),\n      p,\n      e,\n      translate;\n\n  if (el) {\n    translate = offset(view);\n    e = event.changedTouches ? event.changedTouches[0] : event;\n    p = point(e, el);\n    p[0] -= translate[0];\n    p[1] -= translate[1];\n  }\n\n  event.dataflow = view;\n  event.item = item;\n  event.vega = extension(view, item, p);\n  return event;\n}\n\nfunction extension(view, item, point) {\n  const itemGroup = item ? item.mark.marktype === 'group' ? item : item.mark.group : null;\n\n  function group(name) {\n    var g = itemGroup,\n        i;\n    if (name) for (i = item; i; i = i.mark.group) {\n      if (i.mark.name === name) {\n        g = i;\n        break;\n      }\n    }\n    return g && g.mark && g.mark.interactive ? g : {};\n  }\n\n  function xy(item) {\n    if (!item) return point;\n    if (isString(item)) item = group(item);\n    const p = point.slice();\n\n    while (item) {\n      p[0] -= item.x || 0;\n      p[1] -= item.y || 0;\n      item = item.mark && item.mark.group;\n    }\n\n    return p;\n  }\n\n  return {\n    view: constant(view),\n    item: constant(item || {}),\n    group: group,\n    xy: xy,\n    x: item => xy(item)[0],\n    y: item => xy(item)[1]\n  };\n}\n\nconst VIEW = 'view',\n      TIMER = 'timer',\n      WINDOW = 'window',\n      NO_TRAP = {\n  trap: false\n};\n/**\n * Initialize event handling configuration.\n * @param {object} config - The configuration settings.\n * @return {object}\n */\n\nfunction initializeEventConfig(config) {\n  const events = extend({\n    defaults: {}\n  }, config);\n\n  const unpack = (obj, keys) => {\n    keys.forEach(k => {\n      if (isArray(obj[k])) obj[k] = toSet(obj[k]);\n    });\n  };\n\n  unpack(events.defaults, ['prevent', 'allow']);\n  unpack(events, ['view', 'window', 'selector']);\n  return events;\n}\nfunction trackEventListener(view, sources, type, handler) {\n  view._eventListeners.push({\n    type: type,\n    sources: array(sources),\n    handler: handler\n  });\n}\n\nfunction prevent(view, type) {\n  var def = view._eventConfig.defaults,\n      prevent = def.prevent,\n      allow = def.allow;\n  return prevent === false || allow === true ? false : prevent === true || allow === false ? true : prevent ? prevent[type] : allow ? !allow[type] : view.preventDefault();\n}\n\nfunction permit(view, key, type) {\n  const rule = view._eventConfig && view._eventConfig[key];\n\n  if (rule === false || isObject(rule) && !rule[type]) {\n    view.warn(`Blocked ${key} ${type} event listener.`);\n    return false;\n  }\n\n  return true;\n}\n/**\n * Create a new event stream from an event source.\n * @param {object} source - The event source to monitor.\n * @param {string} type - The event type.\n * @param {function(object): boolean} [filter] - Event filter function.\n * @return {EventStream}\n */\n\n\nfunction events(source, type, filter) {\n  var view = this,\n      s = new EventStream(filter),\n      send = function (e, item) {\n    view.runAsync(null, () => {\n      if (source === VIEW && prevent(view, type)) {\n        e.preventDefault();\n      }\n\n      s.receive(eventExtend(view, e, item));\n    });\n  },\n      sources;\n\n  if (source === TIMER) {\n    if (permit(view, 'timer', type)) {\n      view.timer(send, type);\n    }\n  } else if (source === VIEW) {\n    if (permit(view, 'view', type)) {\n      // send traps errors, so use {trap: false} option\n      view.addEventListener(type, send, NO_TRAP);\n    }\n  } else {\n    if (source === WINDOW) {\n      if (permit(view, 'window', type) && typeof window !== 'undefined') {\n        sources = [window];\n      }\n    } else if (typeof document !== 'undefined') {\n      if (permit(view, 'selector', type)) {\n        sources = document.querySelectorAll(source);\n      }\n    }\n\n    if (!sources) {\n      view.warn('Can not resolve event source: ' + source);\n    } else {\n      for (var i = 0, n = sources.length; i < n; ++i) {\n        sources[i].addEventListener(type, send);\n      }\n\n      trackEventListener(view, sources, type, send);\n    }\n  }\n\n  return s;\n}\n\nfunction itemFilter(event) {\n  return event.item;\n}\n\nfunction markTarget(event) {\n  // grab upstream collector feeding the mark operator\n  return event.item.mark.source;\n}\n\nfunction invoke(name) {\n  return function (_, event) {\n    return event.vega.view().changeset().encode(event.item, name);\n  };\n}\n\nfunction hover (hoverSet, leaveSet) {\n  hoverSet = [hoverSet || 'hover'];\n  leaveSet = [leaveSet || 'update', hoverSet[0]]; // invoke hover set upon mouseover\n\n  this.on(this.events('view', 'mouseover', itemFilter), markTarget, invoke(hoverSet)); // invoke leave set upon mouseout\n\n  this.on(this.events('view', 'mouseout', itemFilter), markTarget, invoke(leaveSet));\n  return this;\n}\n\n/**\n * Finalize a View instance that is being removed.\n * Cancel any running timers.\n * Remove all external event listeners.\n * Remove any currently displayed tooltip.\n */\nfunction finalize () {\n  var tooltip = this._tooltip,\n      timers = this._timers,\n      listeners = this._eventListeners,\n      n,\n      m,\n      e;\n  n = timers.length;\n\n  while (--n >= 0) {\n    timers[n].stop();\n  }\n\n  n = listeners.length;\n\n  while (--n >= 0) {\n    e = listeners[n];\n    m = e.sources.length;\n\n    while (--m >= 0) {\n      e.sources[m].removeEventListener(e.type, e.handler);\n    }\n  }\n\n  if (tooltip) {\n    tooltip.call(this, this._handler, null, null, null);\n  }\n\n  return this;\n}\n\nfunction element (tag, attr, text) {\n  const el = document.createElement(tag);\n\n  for (const key in attr) el.setAttribute(key, attr[key]);\n\n  if (text != null) el.textContent = text;\n  return el;\n}\n\nconst BindClass = 'vega-bind',\n      NameClass = 'vega-bind-name',\n      RadioClass = 'vega-bind-radio';\n/**\n * Bind a signal to an external HTML input element. The resulting two-way\n * binding will propagate input changes to signals, and propagate signal\n * changes to the input element state. If this view instance has no parent\n * element, we assume the view is headless and no bindings are created.\n * @param {Element|string} el - The parent DOM element to which the input\n *   element should be appended as a child. If string-valued, this argument\n *   will be treated as a CSS selector. If null or undefined, the parent\n *   element of this view will be used as the element.\n * @param {object} param - The binding parameters which specify the signal\n *   to bind to, the input element type, and type-specific configuration.\n * @return {View} - This view instance.\n */\n\nfunction bind (view, el, binding) {\n  if (!el) return;\n  const param = binding.param;\n  let bind = binding.state;\n\n  if (!bind) {\n    bind = binding.state = {\n      elements: null,\n      active: false,\n      set: null,\n      update: value => {\n        if (value != view.signal(param.signal)) {\n          view.runAsync(null, () => {\n            bind.source = true;\n            view.signal(param.signal, value);\n          });\n        }\n      }\n    };\n\n    if (param.debounce) {\n      bind.update = debounce(param.debounce, bind.update);\n    }\n  }\n\n  const create = param.input == null && param.element ? target : generate;\n  create(bind, el, param, view);\n\n  if (!bind.active) {\n    view.on(view._signals[param.signal], null, () => {\n      bind.source ? bind.source = false : bind.set(view.signal(param.signal));\n    });\n    bind.active = true;\n  }\n\n  return bind;\n}\n/**\n * Bind the signal to an external EventTarget.\n */\n\nfunction target(bind, node, param, view) {\n  const type = param.event || 'input';\n\n  const handler = () => bind.update(node.value); // initialize signal value to external input value\n\n\n  view.signal(param.signal, node.value); // listen for changes on the element\n\n  node.addEventListener(type, handler); // register with view, so we can remove it upon finalization\n\n  trackEventListener(view, node, type, handler); // propagate change to element\n\n  bind.set = value => {\n    node.value = value;\n    node.dispatchEvent(event(type));\n  };\n}\n\nfunction event(type) {\n  return typeof Event !== 'undefined' ? new Event(type) : {\n    type\n  };\n}\n/**\n * Generate an HTML input form element and bind it to a signal.\n */\n\n\nfunction generate(bind, el, param, view) {\n  const value = view.signal(param.signal);\n  const div = element('div', {\n    'class': BindClass\n  });\n  const wrapper = param.input === 'radio' ? div : div.appendChild(element('label'));\n  wrapper.appendChild(element('span', {\n    'class': NameClass\n  }, param.name || param.signal));\n  el.appendChild(div);\n  let input = form;\n\n  switch (param.input) {\n    case 'checkbox':\n      input = checkbox;\n      break;\n\n    case 'select':\n      input = select;\n      break;\n\n    case 'radio':\n      input = radio;\n      break;\n\n    case 'range':\n      input = range;\n      break;\n  }\n\n  input(bind, wrapper, param, value);\n}\n/**\n * Generates an arbitrary input form element.\n * The input type is controlled via user-provided parameters.\n */\n\n\nfunction form(bind, el, param, value) {\n  const node = element('input');\n\n  for (const key in param) {\n    if (key !== 'signal' && key !== 'element') {\n      node.setAttribute(key === 'input' ? 'type' : key, param[key]);\n    }\n  }\n\n  node.setAttribute('name', param.signal);\n  node.value = value;\n  el.appendChild(node);\n  node.addEventListener('input', () => bind.update(node.value));\n  bind.elements = [node];\n\n  bind.set = value => node.value = value;\n}\n/**\n * Generates a checkbox input element.\n */\n\n\nfunction checkbox(bind, el, param, value) {\n  const attr = {\n    type: 'checkbox',\n    name: param.signal\n  };\n  if (value) attr.checked = true;\n  const node = element('input', attr);\n  el.appendChild(node);\n  node.addEventListener('change', () => bind.update(node.checked));\n  bind.elements = [node];\n\n  bind.set = value => node.checked = !!value || null;\n}\n/**\n * Generates a selection list input element.\n */\n\n\nfunction select(bind, el, param, value) {\n  const node = element('select', {\n    name: param.signal\n  }),\n        labels = param.labels || [];\n  param.options.forEach((option, i) => {\n    const attr = {\n      value: option\n    };\n    if (valuesEqual(option, value)) attr.selected = true;\n    node.appendChild(element('option', attr, (labels[i] || option) + ''));\n  });\n  el.appendChild(node);\n  node.addEventListener('change', () => {\n    bind.update(param.options[node.selectedIndex]);\n  });\n  bind.elements = [node];\n\n  bind.set = value => {\n    for (let i = 0, n = param.options.length; i < n; ++i) {\n      if (valuesEqual(param.options[i], value)) {\n        node.selectedIndex = i;\n        return;\n      }\n    }\n  };\n}\n/**\n * Generates a radio button group.\n */\n\n\nfunction radio(bind, el, param, value) {\n  const group = element('span', {\n    'class': RadioClass\n  }),\n        labels = param.labels || [];\n  el.appendChild(group);\n  bind.elements = param.options.map((option, i) => {\n    const attr = {\n      type: 'radio',\n      name: param.signal,\n      value: option\n    };\n    if (valuesEqual(option, value)) attr.checked = true;\n    const input = element('input', attr);\n    input.addEventListener('change', () => bind.update(option));\n    const label = element('label', {}, (labels[i] || option) + '');\n    label.prepend(input);\n    group.appendChild(label);\n    return input;\n  });\n\n  bind.set = value => {\n    const nodes = bind.elements,\n          n = nodes.length;\n\n    for (let i = 0; i < n; ++i) {\n      if (valuesEqual(nodes[i].value, value)) nodes[i].checked = true;\n    }\n  };\n}\n/**\n * Generates a slider input element.\n */\n\n\nfunction range(bind, el, param, value) {\n  value = value !== undefined ? value : (+param.max + +param.min) / 2;\n  const max = param.max != null ? param.max : Math.max(100, +value) || 100,\n        min = param.min || Math.min(0, max, +value) || 0,\n        step = param.step || tickStep(min, max, 100);\n  const node = element('input', {\n    type: 'range',\n    name: param.signal,\n    min: min,\n    max: max,\n    step: step\n  });\n  node.value = value;\n  const span = element('span', {}, +value);\n  el.appendChild(node);\n  el.appendChild(span);\n\n  const update = () => {\n    span.textContent = node.value;\n    bind.update(+node.value);\n  }; // subscribe to both input and change\n\n\n  node.addEventListener('input', update);\n  node.addEventListener('change', update);\n  bind.elements = [node];\n\n  bind.set = value => {\n    node.value = value;\n    span.textContent = value;\n  };\n}\n\nfunction valuesEqual(a, b) {\n  return a === b || a + '' === b + '';\n}\n\nfunction initializeRenderer (view, r, el, constructor, scaleFactor, opt) {\n  r = r || new constructor(view.loader());\n  return r.initialize(el, width(view), height(view), offset(view), scaleFactor, opt).background(view.background());\n}\n\nfunction trap (view, fn) {\n  return !fn ? null : function () {\n    try {\n      fn.apply(this, arguments);\n    } catch (error) {\n      view.error(error);\n    }\n  };\n}\n\nfunction initializeHandler (view, prevHandler, el, constructor) {\n  // instantiate scenegraph handler\n  const handler = new constructor(view.loader(), trap(view, view.tooltip())).scene(view.scenegraph().root).initialize(el, offset(view), view); // transfer event handlers\n\n  if (prevHandler) {\n    prevHandler.handlers().forEach(h => {\n      handler.on(h.type, h.handler);\n    });\n  }\n\n  return handler;\n}\n\nfunction initialize (el, elBind) {\n  const view = this,\n        type = view._renderType,\n        config = view._eventConfig.bind,\n        module = renderModule(type); // containing dom element\n\n  el = view._el = el ? lookup(view, el, true) : null; // initialize aria attributes\n\n  initializeAria(view); // select appropriate renderer & handler\n\n  if (!module) view.error('Unrecognized renderer type: ' + type);\n  const Handler = module.handler || CanvasHandler,\n        Renderer = el ? module.renderer : module.headless; // initialize renderer and input handler\n\n  view._renderer = !Renderer ? null : initializeRenderer(view, view._renderer, el, Renderer);\n  view._handler = initializeHandler(view, view._handler, el, Handler);\n  view._redraw = true; // initialize signal bindings\n\n  if (el && config !== 'none') {\n    elBind = elBind ? view._elBind = lookup(view, elBind, true) : el.appendChild(element('form', {\n      'class': 'vega-bindings'\n    }));\n\n    view._bind.forEach(_ => {\n      if (_.param.element && config !== 'container') {\n        _.element = lookup(view, _.param.element, !!_.param.input);\n      }\n    });\n\n    view._bind.forEach(_ => {\n      bind(view, _.element || elBind, _);\n    });\n  }\n\n  return view;\n}\n\nfunction lookup(view, el, clear) {\n  if (typeof el === 'string') {\n    if (typeof document !== 'undefined') {\n      el = document.querySelector(el);\n\n      if (!el) {\n        view.error('Signal bind element not found: ' + el);\n        return null;\n      }\n    } else {\n      view.error('DOM document instance not found.');\n      return null;\n    }\n  }\n\n  if (el && clear) {\n    try {\n      el.innerHTML = '';\n    } catch (e) {\n      el = null;\n      view.error(e);\n    }\n  }\n\n  return el;\n}\n\nconst number = _ => +_ || 0;\n\nconst paddingObject = _ => ({\n  top: _,\n  bottom: _,\n  left: _,\n  right: _\n});\n\nfunction padding (_) {\n  return isObject(_) ? {\n    top: number(_.top),\n    bottom: number(_.bottom),\n    left: number(_.left),\n    right: number(_.right)\n  } : paddingObject(number(_));\n}\n\n/**\n * Render the current scene in a headless fashion.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A Promise that resolves to a renderer.\n */\n\nasync function renderHeadless (view, type, scaleFactor, opt) {\n  const module = renderModule(type),\n        ctr = module && module.headless;\n  if (!ctr) error('Unrecognized renderer type: ' + type);\n  await view.runAsync();\n  return initializeRenderer(view, null, null, ctr, scaleFactor, opt).renderAsync(view._scenegraph.root);\n}\n\n/**\n * Produce an image URL for the visualization. Depending on the type\n * parameter, the generated URL contains data for either a PNG or SVG image.\n * The URL can be used (for example) to download images of the visualization.\n * This method is asynchronous, returning a Promise instance.\n * @param {string} type - The image type. One of 'svg', 'png' or 'canvas'.\n *   The 'canvas' and 'png' types are synonyms for a PNG image.\n * @return {Promise} - A promise that resolves to an image URL.\n */\n\nasync function renderToImageURL (type, scaleFactor) {\n  if (type !== RenderType.Canvas && type !== RenderType.SVG && type !== RenderType.PNG) {\n    error('Unrecognized image type: ' + type);\n  }\n\n  const r = await renderHeadless(this, type, scaleFactor);\n  return type === RenderType.SVG ? toBlobURL(r.svg(), 'image/svg+xml') : r.canvas().toDataURL('image/png');\n}\n\nfunction toBlobURL(data, mime) {\n  const blob = new Blob([data], {\n    type: mime\n  });\n  return window.URL.createObjectURL(blob);\n}\n\n/**\n * Produce a Canvas instance containing a rendered visualization.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A promise that resolves to a Canvas instance.\n */\n\nasync function renderToCanvas (scaleFactor, opt) {\n  const r = await renderHeadless(this, RenderType.Canvas, scaleFactor, opt);\n  return r.canvas();\n}\n\n/**\n * Produce a rendered SVG string of the visualization.\n * This method is asynchronous, returning a Promise instance.\n * @return {Promise} - A promise that resolves to an SVG string.\n */\n\nasync function renderToSVG (scaleFactor) {\n  const r = await renderHeadless(this, RenderType.SVG, scaleFactor);\n  return r.svg();\n}\n\nfunction runtime (view, spec, expr) {\n  return context(view, transforms, functionContext, expr).parse(spec);\n}\n\nfunction scale(name) {\n  var scales = this._runtime.scales;\n\n  if (!hasOwnProperty(scales, name)) {\n    error('Unrecognized scale or projection: ' + name);\n  }\n\n  return scales[name].value;\n}\n\nvar Width = 'width',\n    Height = 'height',\n    Padding = 'padding',\n    Skip = {\n  skip: true\n};\nfunction viewWidth(view, width) {\n  var a = view.autosize(),\n      p = view.padding();\n  return width - (a && a.contains === Padding ? p.left + p.right : 0);\n}\nfunction viewHeight(view, height) {\n  var a = view.autosize(),\n      p = view.padding();\n  return height - (a && a.contains === Padding ? p.top + p.bottom : 0);\n}\nfunction initializeResize(view) {\n  var s = view._signals,\n      w = s[Width],\n      h = s[Height],\n      p = s[Padding];\n\n  function resetSize() {\n    view._autosize = view._resize = 1;\n  } // respond to width signal\n\n\n  view._resizeWidth = view.add(null, _ => {\n    view._width = _.size;\n    view._viewWidth = viewWidth(view, _.size);\n    resetSize();\n  }, {\n    size: w\n  }); // respond to height signal\n\n  view._resizeHeight = view.add(null, _ => {\n    view._height = _.size;\n    view._viewHeight = viewHeight(view, _.size);\n    resetSize();\n  }, {\n    size: h\n  }); // respond to padding signal\n\n  const resizePadding = view.add(null, resetSize, {\n    pad: p\n  }); // set rank to run immediately after source signal\n\n  view._resizeWidth.rank = w.rank + 1;\n  view._resizeHeight.rank = h.rank + 1;\n  resizePadding.rank = p.rank + 1;\n}\nfunction resizeView(viewWidth, viewHeight, width, height, origin, auto) {\n  this.runAfter(view => {\n    let rerun = 0; // reset autosize flag\n\n    view._autosize = 0; // width value changed: update signal, skip resize op\n\n    if (view.width() !== width) {\n      rerun = 1;\n      view.signal(Width, width, Skip); // set width, skip update calc\n\n      view._resizeWidth.skip(true); // skip width resize handler\n\n    } // height value changed: update signal, skip resize op\n\n\n    if (view.height() !== height) {\n      rerun = 1;\n      view.signal(Height, height, Skip); // set height, skip update calc\n\n      view._resizeHeight.skip(true); // skip height resize handler\n\n    } // view width changed: update view property, set resize flag\n\n\n    if (view._viewWidth !== viewWidth) {\n      view._resize = 1;\n      view._viewWidth = viewWidth;\n    } // view height changed: update view property, set resize flag\n\n\n    if (view._viewHeight !== viewHeight) {\n      view._resize = 1;\n      view._viewHeight = viewHeight;\n    } // origin changed: update view property, set resize flag\n\n\n    if (view._origin[0] !== origin[0] || view._origin[1] !== origin[1]) {\n      view._resize = 1;\n      view._origin = origin;\n    } // run dataflow on width/height signal change\n\n\n    if (rerun) view.run('enter');\n    if (auto) view.runAfter(v => v.resize());\n  }, false, 1);\n}\n\n/**\n * Get the current view state, consisting of signal values and/or data sets.\n * @param {object} [options] - Options flags indicating which state to export.\n *   If unspecified, all signals and data sets will be exported.\n * @param {function(string, Operator):boolean} [options.signals] - Optional\n *   predicate function for testing if a signal should be included in the\n *   exported state. If unspecified, all signals will be included, except for\n *   those named 'parent' or those which refer to a Transform value.\n * @param {function(string, object):boolean} [options.data] - Optional\n *   predicate function for testing if a data set's input should be included\n *   in the exported state. If unspecified, all data sets that have been\n *   explicitly modified will be included.\n * @param {boolean} [options.recurse=true] - Flag indicating if the exported\n *   state should recursively include state from group mark sub-contexts.\n * @return {object} - An object containing the exported state values.\n */\n\nfunction getState(options) {\n  return this._runtime.getState(options || {\n    data: dataTest,\n    signals: signalTest,\n    recurse: true\n  });\n}\n\nfunction dataTest(name, data) {\n  return data.modified && isArray(data.input.value) && name.indexOf('_:vega:_');\n}\n\nfunction signalTest(name, op) {\n  return !(name === 'parent' || op instanceof transforms.proxy);\n}\n/**\n * Sets the current view state and updates the view by invoking run.\n * @param {object} state - A state object containing signal and/or\n *   data set values, following the format used by the getState method.\n * @return {View} - This view instance.\n */\n\n\nfunction setState(state) {\n  this.runAsync(null, v => {\n    v._trigger = false;\n\n    v._runtime.setState(state);\n  }, v => {\n    v._trigger = true;\n  });\n  return this;\n}\n\nfunction timer (callback, delay) {\n  function tick(elapsed) {\n    callback({\n      timestamp: Date.now(),\n      elapsed: elapsed\n    });\n  }\n\n  this._timers.push(interval(tick, delay));\n}\n\nfunction defaultTooltip (handler, event, item, value) {\n  const el = handler.element();\n  if (el) el.setAttribute('title', formatTooltip(value));\n}\n\nfunction formatTooltip(value) {\n  return value == null ? '' : isArray(value) ? formatArray(value) : isObject(value) && !isDate(value) ? formatObject(value) : value + '';\n}\n\nfunction formatObject(obj) {\n  return Object.keys(obj).map(key => {\n    const v = obj[key];\n    return key + ': ' + (isArray(v) ? formatArray(v) : formatValue(v));\n  }).join('\\n');\n}\n\nfunction formatArray(value) {\n  return '[' + value.map(formatValue).join(', ') + ']';\n}\n\nfunction formatValue(value) {\n  return isArray(value) ? '[\\u2026]' : isObject(value) && !isDate(value) ? '{\\u2026}' : value;\n}\n\n/**\n * Create a new View instance from a Vega dataflow runtime specification.\n * The generated View will not immediately be ready for display. Callers\n * should also invoke the initialize method (e.g., to set the parent\n * DOM element in browser-based deployment) and then invoke the run\n * method to evaluate the dataflow graph. Rendering will automatically\n * be performed upon dataflow runs.\n * @constructor\n * @param {object} spec - The Vega dataflow runtime specification.\n */\n\nfunction View(spec, options) {\n  const view = this;\n  options = options || {};\n  Dataflow.call(view);\n  if (options.loader) view.loader(options.loader);\n  if (options.logger) view.logger(options.logger);\n  if (options.logLevel != null) view.logLevel(options.logLevel);\n\n  if (options.locale || spec.locale) {\n    const loc = extend({}, spec.locale, options.locale);\n    view.locale(locale(loc.number, loc.time));\n  }\n\n  view._el = null;\n  view._elBind = null;\n  view._renderType = options.renderer || RenderType.Canvas;\n  view._scenegraph = new Scenegraph();\n  const root = view._scenegraph.root; // initialize renderer, handler and event management\n\n  view._renderer = null;\n  view._tooltip = options.tooltip || defaultTooltip, view._redraw = true;\n  view._handler = new CanvasHandler().scene(root);\n  view._globalCursor = false;\n  view._preventDefault = false;\n  view._timers = [];\n  view._eventListeners = [];\n  view._resizeListeners = []; // initialize event configuration\n\n  view._eventConfig = initializeEventConfig(spec.eventConfig);\n  view.globalCursor(view._eventConfig.globalCursor); // initialize dataflow graph\n\n  const ctx = runtime(view, spec, options.expr);\n  view._runtime = ctx;\n  view._signals = ctx.signals;\n  view._bind = (spec.bindings || []).map(_ => ({\n    state: null,\n    param: extend({}, _)\n  })); // initialize scenegraph\n\n  if (ctx.root) ctx.root.set(root);\n  root.source = ctx.data.root.input;\n  view.pulse(ctx.data.root.input, view.changeset().insert(root.items)); // initialize view size\n\n  view._width = view.width();\n  view._height = view.height();\n  view._viewWidth = viewWidth(view, view._width);\n  view._viewHeight = viewHeight(view, view._height);\n  view._origin = [0, 0];\n  view._resize = 0;\n  view._autosize = 1;\n  initializeResize(view); // initialize background color\n\n  background(view); // initialize cursor\n\n  cursor(view); // initialize view description\n\n  view.description(spec.description); // initialize hover proessing, if requested\n\n  if (options.hover) view.hover(); // initialize DOM container(s) and renderer\n\n  if (options.container) view.initialize(options.container, options.bind);\n}\n\nfunction lookupSignal(view, name) {\n  return hasOwnProperty(view._signals, name) ? view._signals[name] : error('Unrecognized signal name: ' + stringValue(name));\n}\n\nfunction findOperatorHandler(op, handler) {\n  const h = (op._targets || []).filter(op => op._update && op._update.handler === handler);\n  return h.length ? h[0] : null;\n}\n\nfunction addOperatorListener(view, name, op, handler) {\n  let h = findOperatorHandler(op, handler);\n\n  if (!h) {\n    h = trap(view, () => handler(name, op.value));\n    h.handler = handler;\n    view.on(op, null, h);\n  }\n\n  return view;\n}\n\nfunction removeOperatorListener(view, op, handler) {\n  const h = findOperatorHandler(op, handler);\n  if (h) op._targets.remove(h);\n  return view;\n}\n\ninherits(View, Dataflow, {\n  // -- DATAFLOW / RENDERING ----\n  async evaluate(encode, prerun, postrun) {\n    // evaluate dataflow and prerun\n    await Dataflow.prototype.evaluate.call(this, encode, prerun); // render as needed\n\n    if (this._redraw || this._resize) {\n      try {\n        if (this._renderer) {\n          if (this._resize) {\n            this._resize = 0;\n            resizeRenderer(this);\n          }\n\n          await this._renderer.renderAsync(this._scenegraph.root);\n        }\n\n        this._redraw = false;\n      } catch (e) {\n        this.error(e);\n      }\n    } // evaluate postrun\n\n\n    if (postrun) asyncCallback(this, postrun);\n    return this;\n  },\n\n  dirty(item) {\n    this._redraw = true;\n    this._renderer && this._renderer.dirty(item);\n  },\n\n  // -- GET / SET ----\n  description(text) {\n    if (arguments.length) {\n      const desc = text != null ? text + '' : null;\n      if (desc !== this._desc) ariaLabel(this._el, this._desc = desc);\n      return this;\n    }\n\n    return this._desc;\n  },\n\n  container() {\n    return this._el;\n  },\n\n  scenegraph() {\n    return this._scenegraph;\n  },\n\n  origin() {\n    return this._origin.slice();\n  },\n\n  signal(name, value, options) {\n    const op = lookupSignal(this, name);\n    return arguments.length === 1 ? op.value : this.update(op, value, options);\n  },\n\n  width(_) {\n    return arguments.length ? this.signal('width', _) : this.signal('width');\n  },\n\n  height(_) {\n    return arguments.length ? this.signal('height', _) : this.signal('height');\n  },\n\n  padding(_) {\n    return arguments.length ? this.signal('padding', padding(_)) : padding(this.signal('padding'));\n  },\n\n  autosize(_) {\n    return arguments.length ? this.signal('autosize', _) : this.signal('autosize');\n  },\n\n  background(_) {\n    return arguments.length ? this.signal('background', _) : this.signal('background');\n  },\n\n  renderer(type) {\n    if (!arguments.length) return this._renderType;\n    if (!renderModule(type)) error('Unrecognized renderer type: ' + type);\n\n    if (type !== this._renderType) {\n      this._renderType = type;\n\n      this._resetRenderer();\n    }\n\n    return this;\n  },\n\n  tooltip(handler) {\n    if (!arguments.length) return this._tooltip;\n\n    if (handler !== this._tooltip) {\n      this._tooltip = handler;\n\n      this._resetRenderer();\n    }\n\n    return this;\n  },\n\n  loader(loader) {\n    if (!arguments.length) return this._loader;\n\n    if (loader !== this._loader) {\n      Dataflow.prototype.loader.call(this, loader);\n\n      this._resetRenderer();\n    }\n\n    return this;\n  },\n\n  resize() {\n    // set flag to perform autosize\n    this._autosize = 1; // touch autosize signal to ensure top-level ViewLayout runs\n\n    return this.touch(lookupSignal(this, 'autosize'));\n  },\n\n  _resetRenderer() {\n    if (this._renderer) {\n      this._renderer = null;\n      this.initialize(this._el, this._elBind);\n    }\n  },\n\n  // -- SIZING ----\n  _resizeView: resizeView,\n\n  // -- EVENT HANDLING ----\n  addEventListener(type, handler, options) {\n    let callback = handler;\n\n    if (!(options && options.trap === false)) {\n      // wrap callback in error handler\n      callback = trap(this, handler);\n      callback.raw = handler;\n    }\n\n    this._handler.on(type, callback);\n\n    return this;\n  },\n\n  removeEventListener(type, handler) {\n    var handlers = this._handler.handlers(type),\n        i = handlers.length,\n        h,\n        t; // search registered handlers, remove if match found\n\n\n    while (--i >= 0) {\n      t = handlers[i].type;\n      h = handlers[i].handler;\n\n      if (type === t && (handler === h || handler === h.raw)) {\n        this._handler.off(t, h);\n\n        break;\n      }\n    }\n\n    return this;\n  },\n\n  addResizeListener(handler) {\n    const l = this._resizeListeners;\n\n    if (l.indexOf(handler) < 0) {\n      // add handler if it isn't already registered\n      // note: error trapping handled elsewhere, so\n      // no need to wrap handlers here\n      l.push(handler);\n    }\n\n    return this;\n  },\n\n  removeResizeListener(handler) {\n    var l = this._resizeListeners,\n        i = l.indexOf(handler);\n\n    if (i >= 0) {\n      l.splice(i, 1);\n    }\n\n    return this;\n  },\n\n  addSignalListener(name, handler) {\n    return addOperatorListener(this, name, lookupSignal(this, name), handler);\n  },\n\n  removeSignalListener(name, handler) {\n    return removeOperatorListener(this, lookupSignal(this, name), handler);\n  },\n\n  addDataListener(name, handler) {\n    return addOperatorListener(this, name, dataref(this, name).values, handler);\n  },\n\n  removeDataListener(name, handler) {\n    return removeOperatorListener(this, dataref(this, name).values, handler);\n  },\n\n  globalCursor(_) {\n    if (arguments.length) {\n      if (this._globalCursor !== !!_) {\n        const prev = setCursor(this, null); // clear previous cursor\n\n        this._globalCursor = !!_;\n        if (prev) setCursor(this, prev); // swap cursor\n      }\n\n      return this;\n    } else {\n      return this._globalCursor;\n    }\n  },\n\n  preventDefault(_) {\n    if (arguments.length) {\n      this._preventDefault = _;\n      return this;\n    } else {\n      return this._preventDefault;\n    }\n  },\n\n  timer,\n  events,\n  finalize,\n  hover,\n  // -- DATA ----\n  data,\n  change,\n  insert,\n  remove,\n  // -- SCALES --\n  scale,\n  // -- INITIALIZATION ----\n  initialize,\n  // -- HEADLESS RENDERING ----\n  toImageURL: renderToImageURL,\n  toCanvas: renderToCanvas,\n  toSVG: renderToSVG,\n  // -- SAVE / RESTORE STATE ----\n  getState,\n  setState\n});\n\nexport { View };\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n","const VIEW = 'view',\n      LBRACK = '[',\n      RBRACK = ']',\n      LBRACE = '{',\n      RBRACE = '}',\n      COLON = ':',\n      COMMA = ',',\n      NAME = '@',\n      GT = '>',\n      ILLEGAL = /[[\\]{}]/,\n      DEFAULT_MARKS = {\n  '*': 1,\n  arc: 1,\n  area: 1,\n  group: 1,\n  image: 1,\n  line: 1,\n  path: 1,\n  rect: 1,\n  rule: 1,\n  shape: 1,\n  symbol: 1,\n  text: 1,\n  trail: 1\n};\nlet DEFAULT_SOURCE, MARKS;\n/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\n\nfunction eventSelector (selector, source, marks) {\n  DEFAULT_SOURCE = source || VIEW;\n  MARKS = marks || DEFAULT_MARKS;\n  return parseMerge(selector.trim()).map(parseSelector);\n}\n\nfunction isMarkType(type) {\n  return MARKS[type];\n}\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  const n = s.length;\n  let count = 0,\n      c;\n\n  for (; i < n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;else if (popChar && popChar.indexOf(c) >= 0) --count;else if (pushChar && pushChar.indexOf(c) >= 0) ++count;\n  }\n\n  return i;\n}\n\nfunction parseMerge(s) {\n  const output = [],\n        n = s.length;\n  let start = 0,\n      i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '[' ? parseBetween(s) : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  const n = s.length;\n  let i = 1,\n      b;\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(1, i));\n\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n  const stream = parseSelector(s.slice(1).trim());\n\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  const stream = {\n    source: DEFAULT_SOURCE\n  },\n        source = [];\n  let throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0,\n      j,\n      filter; // extract throttle from end\n\n  if (s[n - 1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i + 1, n - 1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n\n    i = 0;\n  }\n\n  if (!n) throw s; // set name flag based on first char\n\n  if (s[0] === NAME) markname = ++i; // extract first part of multi-part stream selector\n\n  j = find(s, i, COLON);\n\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  } // extract remaining part of stream selector\n\n\n  i = find(s, i, LBRACK);\n\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  } // extract filters\n\n\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n - 1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  } // marshall event stream specification\n\n\n  if (!(n = source.length) || ILLEGAL.test(source[n - 1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1);\n  }\n\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  const a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(_ => {\n    const x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}\n\nexport { eventSelector as selector };\n","import { isObject, isArray, extend, hasOwnProperty, array, stringValue, peek, isString, error, splitAccessPath, mergeConfig } from 'vega-util';\nimport { parseExpression } from 'vega-functions';\nimport { selector } from 'vega-event-selector';\nimport { isValidScaleType, isDiscrete, isQuantile, isDiscretizing, isContinuous } from 'vega-scale';\nimport { definition as definition$1 } from 'vega-dataflow';\n\nfunction parseAutosize (spec) {\n  return isObject(spec) ? spec : {\n    type: spec || 'pad'\n  };\n}\n\nconst number = _ => +_ || 0;\n\nconst paddingObject = _ => ({\n  top: _,\n  bottom: _,\n  left: _,\n  right: _\n});\n\nfunction parsePadding (spec) {\n  return !isObject(spec) ? paddingObject(number(spec)) : spec.signal ? spec : {\n    top: number(spec.top),\n    bottom: number(spec.bottom),\n    left: number(spec.left),\n    right: number(spec.right)\n  };\n}\n\nconst encoder = _ => isObject(_) && !isArray(_) ? extend({}, _) : {\n  value: _\n};\nfunction addEncode(object, name, value, set) {\n  if (value != null) {\n    const isEncoder = isObject(value) && !isArray(value) || isArray(value) && value.length && isObject(value[0]); // Always assign signal to update, even if the signal is from the enter block\n\n    if (isEncoder) {\n      object.update[name] = value;\n    } else {\n      object[set || 'enter'][name] = {\n        value: value\n      };\n    }\n\n    return 1;\n  } else {\n    return 0;\n  }\n}\nfunction addEncoders(object, enter, update) {\n  for (const name in enter) {\n    addEncode(object, name, enter[name]);\n  }\n\n  for (const name in update) {\n    addEncode(object, name, update[name], 'update');\n  }\n}\nfunction extendEncode(encode, extra, skip) {\n  for (const name in extra) {\n    if (skip && hasOwnProperty(skip, name)) continue;\n    encode[name] = extend(encode[name] || {}, extra[name]);\n  }\n\n  return encode;\n}\nfunction has(key, encode) {\n  return encode && (encode.enter && encode.enter[key] || encode.update && encode.update[key]);\n}\n\nconst MarkRole = 'mark';\nconst FrameRole = 'frame';\nconst ScopeRole = 'scope';\nconst AxisRole = 'axis';\nconst AxisDomainRole = 'axis-domain';\nconst AxisGridRole = 'axis-grid';\nconst AxisLabelRole = 'axis-label';\nconst AxisTickRole = 'axis-tick';\nconst AxisTitleRole = 'axis-title';\nconst LegendRole = 'legend';\nconst LegendBandRole = 'legend-band';\nconst LegendEntryRole = 'legend-entry';\nconst LegendGradientRole = 'legend-gradient';\nconst LegendLabelRole = 'legend-label';\nconst LegendSymbolRole = 'legend-symbol';\nconst LegendTitleRole = 'legend-title';\nconst TitleRole = 'title';\nconst TitleTextRole = 'title-text';\nconst TitleSubtitleRole = 'title-subtitle';\n\nfunction applyDefaults (encode, type, role, style, config) {\n  const defaults = {},\n        enter = {};\n  let update, key, skip, props; // if text mark, apply global lineBreak settings (#2370)\n\n  key = 'lineBreak';\n\n  if (type === 'text' && config[key] != null && !has(key, encode)) {\n    applyDefault(defaults, key, config[key]);\n  } // ignore legend and axis roles\n\n\n  if (role == 'legend' || String(role).startsWith('axis')) {\n    role = null;\n  } // resolve mark config\n\n\n  props = role === FrameRole ? config.group : role === MarkRole ? extend({}, config.mark, config[type]) : null;\n\n  for (key in props) {\n    // do not apply defaults if relevant fields are defined\n    skip = has(key, encode) || (key === 'fill' || key === 'stroke') && (has('fill', encode) || has('stroke', encode));\n    if (!skip) applyDefault(defaults, key, props[key]);\n  } // resolve styles, apply with increasing precedence\n\n\n  array(style).forEach(name => {\n    const props = config.style && config.style[name];\n\n    for (const key in props) {\n      if (!has(key, encode)) {\n        applyDefault(defaults, key, props[key]);\n      }\n    }\n  });\n  encode = extend({}, encode); // defensive copy\n\n  for (key in defaults) {\n    props = defaults[key];\n\n    if (props.signal) {\n      (update = update || {})[key] = props;\n    } else {\n      enter[key] = props;\n    }\n  }\n\n  encode.enter = extend(enter, encode.enter);\n  if (update) encode.update = extend(update, encode.update);\n  return encode;\n}\n\nfunction applyDefault(defaults, key, value) {\n  defaults[key] = value && value.signal ? {\n    signal: value.signal\n  } : {\n    value: value\n  };\n}\n\nconst scaleRef = scale => isString(scale) ? stringValue(scale) : scale.signal ? \"(\".concat(scale.signal, \")\") : field(scale);\n\nfunction entry(enc) {\n  if (enc.gradient != null) {\n    return gradient(enc);\n  }\n\n  let value = enc.signal ? \"(\".concat(enc.signal, \")\") : enc.color ? color(enc.color) : enc.field != null ? field(enc.field) : enc.value !== undefined ? stringValue(enc.value) : undefined;\n\n  if (enc.scale != null) {\n    value = scale(enc, value);\n  }\n\n  if (value === undefined) {\n    value = null;\n  }\n\n  if (enc.exponent != null) {\n    value = \"pow(\".concat(value, \",\").concat(property(enc.exponent), \")\");\n  }\n\n  if (enc.mult != null) {\n    value += \"*\".concat(property(enc.mult));\n  }\n\n  if (enc.offset != null) {\n    value += \"+\".concat(property(enc.offset));\n  }\n\n  if (enc.round) {\n    value = \"round(\".concat(value, \")\");\n  }\n\n  return value;\n}\n\nconst _color = (type, x, y, z) => \"(\".concat(type, \"(\").concat([x, y, z].map(entry).join(','), \")+'')\");\n\nfunction color(enc) {\n  return enc.c ? _color('hcl', enc.h, enc.c, enc.l) : enc.h || enc.s ? _color('hsl', enc.h, enc.s, enc.l) : enc.l || enc.a ? _color('lab', enc.l, enc.a, enc.b) : enc.r || enc.g || enc.b ? _color('rgb', enc.r, enc.g, enc.b) : null;\n}\n\nfunction gradient(enc) {\n  // map undefined to null; expression lang does not allow undefined\n  const args = [enc.start, enc.stop, enc.count].map(_ => _ == null ? null : stringValue(_)); // trim null inputs from the end\n\n  while (args.length && peek(args) == null) args.pop();\n\n  args.unshift(scaleRef(enc.gradient));\n  return \"gradient(\".concat(args.join(','), \")\");\n}\n\nfunction property(property) {\n  return isObject(property) ? '(' + entry(property) + ')' : property;\n}\n\nfunction field(ref) {\n  return resolveField(isObject(ref) ? ref : {\n    datum: ref\n  });\n}\n\nfunction resolveField(ref) {\n  let object, level, field;\n\n  if (ref.signal) {\n    object = 'datum';\n    field = ref.signal;\n  } else if (ref.group || ref.parent) {\n    level = Math.max(1, ref.level || 1);\n    object = 'item';\n\n    while (level-- > 0) {\n      object += '.mark.group';\n    }\n\n    if (ref.parent) {\n      field = ref.parent;\n      object += '.datum';\n    } else {\n      field = ref.group;\n    }\n  } else if (ref.datum) {\n    object = 'datum';\n    field = ref.datum;\n  } else {\n    error('Invalid field reference: ' + stringValue(ref));\n  }\n\n  if (!ref.signal) {\n    field = isString(field) ? splitAccessPath(field).map(stringValue).join('][') : resolveField(field);\n  }\n\n  return object + '[' + field + ']';\n}\n\nfunction scale(enc, value) {\n  const scale = scaleRef(enc.scale);\n\n  if (enc.range != null) {\n    // pull value from scale range\n    value = \"lerp(_range(\".concat(scale, \"), \").concat(+enc.range, \")\");\n  } else {\n    // run value through scale and/or pull scale bandwidth\n    if (value !== undefined) value = \"_scale(\".concat(scale, \", \").concat(value, \")\");\n\n    if (enc.band) {\n      value = (value ? value + '+' : '') + \"_bandwidth(\".concat(scale, \")\") + (+enc.band === 1 ? '' : '*' + property(enc.band));\n\n      if (enc.extra) {\n        // include logic to handle extraneous elements\n        value = \"(datum.extra ? _scale(\".concat(scale, \", datum.extra.value) : \").concat(value, \")\");\n      }\n    }\n\n    if (value == null) value = '0';\n  }\n\n  return value;\n}\n\nfunction rule (enc) {\n  let code = '';\n  enc.forEach(rule => {\n    const value = entry(rule);\n    code += rule.test ? \"(\".concat(rule.test, \")?\").concat(value, \":\") : value;\n  }); // if no else clause, terminate with null (#1366)\n\n  if (peek(code) === ':') {\n    code += 'null';\n  }\n\n  return code;\n}\n\nfunction parseEncode (encode, type, role, style, scope, params) {\n  const enc = {};\n  params = params || {};\n  params.encoders = {\n    $encode: enc\n  };\n  encode = applyDefaults(encode, type, role, style, scope.config);\n\n  for (const key in encode) {\n    enc[key] = parseBlock(encode[key], type, params, scope);\n  }\n\n  return params;\n}\n\nfunction parseBlock(block, marktype, params, scope) {\n  const channels = {},\n        fields = {};\n\n  for (const name in block) {\n    if (block[name] != null) {\n      // skip any null entries\n      channels[name] = parse(expr(block[name]), scope, params, fields);\n    }\n  }\n\n  return {\n    $expr: {\n      marktype,\n      channels\n    },\n    $fields: Object.keys(fields),\n    $output: Object.keys(block)\n  };\n}\n\nfunction expr(enc) {\n  return isArray(enc) ? rule(enc) : entry(enc);\n}\n\nfunction parse(code, scope, params, fields) {\n  const expr = parseExpression(code, scope);\n  expr.$fields.forEach(name => fields[name] = 1);\n  extend(params, expr.$params);\n  return expr.$expr;\n}\n\nconst OUTER = 'outer',\n      OUTER_INVALID = ['value', 'update', 'init', 'react', 'bind'];\n\nfunction outerError(prefix, name) {\n  error(prefix + ' for \"outer\" push: ' + stringValue(name));\n}\n\nfunction parseSignal (signal, scope) {\n  const name = signal.name;\n\n  if (signal.push === OUTER) {\n    // signal must already be defined, raise error if not\n    if (!scope.signals[name]) outerError('No prior signal definition', name); // signal push must not use properties reserved for standard definition\n\n    OUTER_INVALID.forEach(prop => {\n      if (signal[prop] !== undefined) outerError('Invalid property ', prop);\n    });\n  } else {\n    // define a new signal in the current scope\n    const op = scope.addSignal(name, signal.value);\n    if (signal.react === false) op.react = false;\n    if (signal.bind) scope.addBinding(name, signal.bind);\n  }\n}\n\nfunction Entry(type, value, params, parent) {\n  this.id = -1;\n  this.type = type;\n  this.value = value;\n  this.params = params;\n  if (parent) this.parent = parent;\n}\nfunction entry$1(type, value, params, parent) {\n  return new Entry(type, value, params, parent);\n}\nfunction operator(value, params) {\n  return entry$1('operator', value, params);\n} // -----\n\nfunction ref(op) {\n  const ref = {\n    $ref: op.id\n  }; // if operator not yet registered, cache ref to resolve later\n\n  if (op.id < 0) (op.refs = op.refs || []).push(ref);\n  return ref;\n}\nfunction fieldRef(field, name) {\n  return name ? {\n    $field: field,\n    $name: name\n  } : {\n    $field: field\n  };\n}\nconst keyFieldRef = fieldRef('key');\nfunction compareRef(fields, orders) {\n  return {\n    $compare: fields,\n    $order: orders\n  };\n}\nfunction keyRef(fields, flat) {\n  const ref = {\n    $key: fields\n  };\n  if (flat) ref.$flat = true;\n  return ref;\n} // -----\n\nconst Ascending = 'ascending';\nconst Descending = 'descending';\nfunction sortKey(sort) {\n  return !isObject(sort) ? '' : (sort.order === Descending ? '-' : '+') + aggrField(sort.op, sort.field);\n}\nfunction aggrField(op, field) {\n  return (op && op.signal ? '$' + op.signal : op || '') + (op && field ? '_' : '') + (field && field.signal ? '$' + field.signal : field || '');\n} // -----\n\nconst Scope = 'scope';\nconst View = 'view';\nfunction isSignal(_) {\n  return _ && _.signal;\n}\nfunction isExpr(_) {\n  return _ && _.expr;\n}\nfunction hasSignal(_) {\n  if (isSignal(_)) return true;\n  if (isObject(_)) for (const key in _) {\n    if (hasSignal(_[key])) return true;\n  }\n  return false;\n}\nfunction value(specValue, defaultValue) {\n  return specValue != null ? specValue : defaultValue;\n}\nfunction deref(v) {\n  return v && v.signal || v;\n}\n\nconst Timer = 'timer';\nfunction parseStream(stream, scope) {\n  const method = stream.merge ? mergeStream : stream.stream ? nestedStream : stream.type ? eventStream : error('Invalid stream specification: ' + stringValue(stream));\n  return method(stream, scope);\n}\n\nfunction eventSource(source) {\n  return source === Scope ? View : source || View;\n}\n\nfunction mergeStream(stream, scope) {\n  const list = stream.merge.map(s => parseStream(s, scope)),\n        entry = streamParameters({\n    merge: list\n  }, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction nestedStream(stream, scope) {\n  const id = parseStream(stream.stream, scope),\n        entry = streamParameters({\n    stream: id\n  }, stream, scope);\n  return scope.addStream(entry).id;\n}\n\nfunction eventStream(stream, scope) {\n  let id;\n\n  if (stream.type === Timer) {\n    id = scope.event(Timer, stream.throttle);\n    stream = {\n      between: stream.between,\n      filter: stream.filter\n    };\n  } else {\n    id = scope.event(eventSource(stream.source), stream.type);\n  }\n\n  const entry = streamParameters({\n    stream: id\n  }, stream, scope);\n  return Object.keys(entry).length === 1 ? id : scope.addStream(entry).id;\n}\n\nfunction streamParameters(entry, stream, scope) {\n  let param = stream.between;\n\n  if (param) {\n    if (param.length !== 2) {\n      error('Stream \"between\" parameter must have 2 entries: ' + stringValue(stream));\n    }\n\n    entry.between = [parseStream(param[0], scope), parseStream(param[1], scope)];\n  }\n\n  param = stream.filter ? [].concat(stream.filter) : [];\n\n  if (stream.marktype || stream.markname || stream.markrole) {\n    // add filter for mark type, name and/or role\n    param.push(filterMark(stream.marktype, stream.markname, stream.markrole));\n  }\n\n  if (stream.source === Scope) {\n    // add filter to limit events from sub-scope only\n    param.push('inScope(event.item)');\n  }\n\n  if (param.length) {\n    entry.filter = parseExpression('(' + param.join(')&&(') + ')', scope).$expr;\n  }\n\n  if ((param = stream.throttle) != null) {\n    entry.throttle = +param;\n  }\n\n  if ((param = stream.debounce) != null) {\n    entry.debounce = +param;\n  }\n\n  if (stream.consume) {\n    entry.consume = true;\n  }\n\n  return entry;\n}\n\nfunction filterMark(type, name, role) {\n  const item = 'event.item';\n  return item + (type && type !== '*' ? '&&' + item + '.mark.marktype===\\'' + type + '\\'' : '') + (role ? '&&' + item + '.mark.role===\\'' + role + '\\'' : '') + (name ? '&&' + item + '.mark.name===\\'' + name + '\\'' : '');\n}\n\nconst OP_VALUE_EXPR = {\n  code: '_.$value',\n  ast: {\n    type: 'Identifier',\n    value: 'value'\n  }\n};\nfunction parseUpdate (spec, scope, target) {\n  const encode = spec.encode,\n        entry = {\n    target: target\n  };\n  let events = spec.events,\n      update = spec.update,\n      sources = [];\n\n  if (!events) {\n    error('Signal update missing events specification.');\n  } // interpret as an event selector string\n\n\n  if (isString(events)) {\n    events = selector(events, scope.isSubscope() ? Scope : View);\n  } // separate event streams from signal updates\n\n\n  events = array(events).filter(s => s.signal || s.scale ? (sources.push(s), 0) : 1); // merge internal operator listeners\n\n  if (sources.length > 1) {\n    sources = [mergeSources(sources)];\n  } // merge event streams, include as source\n\n\n  if (events.length) {\n    sources.push(events.length > 1 ? {\n      merge: events\n    } : events[0]);\n  }\n\n  if (encode != null) {\n    if (update) error('Signal encode and update are mutually exclusive.');\n    update = 'encode(item(),' + stringValue(encode) + ')';\n  } // resolve update value\n\n\n  entry.update = isString(update) ? parseExpression(update, scope) : update.expr != null ? parseExpression(update.expr, scope) : update.value != null ? update.value : update.signal != null ? {\n    $expr: OP_VALUE_EXPR,\n    $params: {\n      $value: scope.signalRef(update.signal)\n    }\n  } : error('Invalid signal update specification.');\n\n  if (spec.force) {\n    entry.options = {\n      force: true\n    };\n  }\n\n  sources.forEach(source => scope.addUpdate(extend(streamSource(source, scope), entry)));\n}\n\nfunction streamSource(stream, scope) {\n  return {\n    source: stream.signal ? scope.signalRef(stream.signal) : stream.scale ? scope.scaleRef(stream.scale) : parseStream(stream, scope)\n  };\n}\n\nfunction mergeSources(sources) {\n  return {\n    signal: '[' + sources.map(s => s.scale ? 'scale(\"' + s.scale + '\")' : s.signal) + ']'\n  };\n}\n\nfunction parseSignalUpdates (signal, scope) {\n  const op = scope.getSignal(signal.name);\n  let expr = signal.update;\n\n  if (signal.init) {\n    if (expr) {\n      error('Signals can not include both init and update expressions.');\n    } else {\n      expr = signal.init;\n      op.initonly = true;\n    }\n  }\n\n  if (expr) {\n    expr = parseExpression(expr, scope);\n    op.update = expr.$expr;\n    op.params = expr.$params;\n  }\n\n  if (signal.on) {\n    signal.on.forEach(_ => parseUpdate(_, scope, op.id));\n  }\n}\n\nconst transform = name => (params, value, parent) => entry$1(name, value, params || undefined, parent);\n\nconst Aggregate = transform('aggregate');\nconst AxisTicks = transform('axisticks');\nconst Bound = transform('bound');\nconst Collect = transform('collect');\nconst Compare = transform('compare');\nconst DataJoin = transform('datajoin');\nconst Encode = transform('encode');\nconst Expression = transform('expression');\nconst Facet = transform('facet');\nconst Field = transform('field');\nconst Key = transform('key');\nconst LegendEntries = transform('legendentries');\nconst Load = transform('load');\nconst Mark = transform('mark');\nconst MultiExtent = transform('multiextent');\nconst MultiValues = transform('multivalues');\nconst Overlap = transform('overlap');\nconst Params = transform('params');\nconst PreFacet = transform('prefacet');\nconst Projection = transform('projection');\nconst Proxy = transform('proxy');\nconst Relay = transform('relay');\nconst Render = transform('render');\nconst Scale = transform('scale');\nconst Sieve = transform('sieve');\nconst SortItems = transform('sortitems');\nconst ViewLayout = transform('viewlayout');\nconst Values = transform('values');\n\nlet FIELD_REF_ID = 0;\nconst MULTIDOMAIN_SORT_OPS = {\n  min: 'min',\n  max: 'max',\n  count: 'sum'\n};\nfunction initScale(spec, scope) {\n  const type = spec.type || 'linear';\n\n  if (!isValidScaleType(type)) {\n    error('Unrecognized scale type: ' + stringValue(type));\n  }\n\n  scope.addScale(spec.name, {\n    type,\n    domain: undefined\n  });\n}\nfunction parseScale(spec, scope) {\n  const params = scope.getScale(spec.name).params;\n  let key;\n  params.domain = parseScaleDomain(spec.domain, spec, scope);\n\n  if (spec.range != null) {\n    params.range = parseScaleRange(spec, scope, params);\n  }\n\n  if (spec.interpolate != null) {\n    parseScaleInterpolate(spec.interpolate, params);\n  }\n\n  if (spec.nice != null) {\n    params.nice = parseScaleNice(spec.nice);\n  }\n\n  if (spec.bins != null) {\n    params.bins = parseScaleBins(spec.bins, scope);\n  }\n\n  for (key in spec) {\n    if (hasOwnProperty(params, key) || key === 'name') continue;\n    params[key] = parseLiteral(spec[key], scope);\n  }\n}\n\nfunction parseLiteral(v, scope) {\n  return !isObject(v) ? v : v.signal ? scope.signalRef(v.signal) : error('Unsupported object: ' + stringValue(v));\n}\n\nfunction parseArray(v, scope) {\n  return v.signal ? scope.signalRef(v.signal) : v.map(v => parseLiteral(v, scope));\n}\n\nfunction dataLookupError(name) {\n  error('Can not find data set: ' + stringValue(name));\n} // -- SCALE DOMAIN ----\n\n\nfunction parseScaleDomain(domain, spec, scope) {\n  if (!domain) {\n    if (spec.domainMin != null || spec.domainMax != null) {\n      error('No scale domain defined for domainMin/domainMax to override.');\n    }\n\n    return; // default domain\n  }\n\n  return domain.signal ? scope.signalRef(domain.signal) : (isArray(domain) ? explicitDomain : domain.fields ? multipleDomain : singularDomain)(domain, spec, scope);\n}\n\nfunction explicitDomain(domain, spec, scope) {\n  return domain.map(v => parseLiteral(v, scope));\n}\n\nfunction singularDomain(domain, spec, scope) {\n  const data = scope.getData(domain.data);\n  if (!data) dataLookupError(domain.data);\n  return isDiscrete(spec.type) ? data.valuesRef(scope, domain.field, parseSort(domain.sort, false)) : isQuantile(spec.type) ? data.domainRef(scope, domain.field) : data.extentRef(scope, domain.field);\n}\n\nfunction multipleDomain(domain, spec, scope) {\n  const data = domain.data,\n        fields = domain.fields.reduce((dom, d) => {\n    d = isString(d) ? {\n      data: data,\n      field: d\n    } : isArray(d) || d.signal ? fieldRef$1(d, scope) : d;\n    dom.push(d);\n    return dom;\n  }, []);\n  return (isDiscrete(spec.type) ? ordinalMultipleDomain : isQuantile(spec.type) ? quantileMultipleDomain : numericMultipleDomain)(domain, scope, fields);\n}\n\nfunction fieldRef$1(data, scope) {\n  const name = '_:vega:_' + FIELD_REF_ID++,\n        coll = Collect({});\n\n  if (isArray(data)) {\n    coll.value = {\n      $ingest: data\n    };\n  } else if (data.signal) {\n    const code = 'setdata(' + stringValue(name) + ',' + data.signal + ')';\n    coll.params.input = scope.signalRef(code);\n  }\n\n  scope.addDataPipeline(name, [coll, Sieve({})]);\n  return {\n    data: name,\n    field: 'data'\n  };\n}\n\nfunction ordinalMultipleDomain(domain, scope, fields) {\n  const sort = parseSort(domain.sort, true);\n  let a, v; // get value counts for each domain field\n\n  const counts = fields.map(f => {\n    const data = scope.getData(f.data);\n    if (!data) dataLookupError(f.data);\n    return data.countsRef(scope, f.field, sort);\n  }); // aggregate the results from each domain field\n\n  const p = {\n    groupby: keyFieldRef,\n    pulse: counts\n  };\n\n  if (sort) {\n    a = sort.op || 'count';\n    v = sort.field ? aggrField(a, sort.field) : 'count';\n    p.ops = [MULTIDOMAIN_SORT_OPS[a]];\n    p.fields = [scope.fieldRef(v)];\n    p.as = [v];\n  }\n\n  a = scope.add(Aggregate(p)); // collect aggregate output\n\n  const c = scope.add(Collect({\n    pulse: ref(a)\n  })); // extract values for combined domain\n\n  v = scope.add(Values({\n    field: keyFieldRef,\n    sort: scope.sortRef(sort),\n    pulse: ref(c)\n  }));\n  return ref(v);\n}\n\nfunction parseSort(sort, multidomain) {\n  if (sort) {\n    if (!sort.field && !sort.op) {\n      if (isObject(sort)) sort.field = 'key';else sort = {\n        field: 'key'\n      };\n    } else if (!sort.field && sort.op !== 'count') {\n      error('No field provided for sort aggregate op: ' + sort.op);\n    } else if (multidomain && sort.field) {\n      if (sort.op && !MULTIDOMAIN_SORT_OPS[sort.op]) {\n        error('Multiple domain scales can not be sorted using ' + sort.op);\n      }\n    }\n  }\n\n  return sort;\n}\n\nfunction quantileMultipleDomain(domain, scope, fields) {\n  // get value arrays for each domain field\n  const values = fields.map(f => {\n    const data = scope.getData(f.data);\n    if (!data) dataLookupError(f.data);\n    return data.domainRef(scope, f.field);\n  }); // combine value arrays\n\n  return ref(scope.add(MultiValues({\n    values: values\n  })));\n}\n\nfunction numericMultipleDomain(domain, scope, fields) {\n  // get extents for each domain field\n  const extents = fields.map(f => {\n    const data = scope.getData(f.data);\n    if (!data) dataLookupError(f.data);\n    return data.extentRef(scope, f.field);\n  }); // combine extents\n\n  return ref(scope.add(MultiExtent({\n    extents: extents\n  })));\n} // -- SCALE BINS -----\n\n\nfunction parseScaleBins(v, scope) {\n  return v.signal || isArray(v) ? parseArray(v, scope) : scope.objectProperty(v);\n} // -- SCALE NICE -----\n\n\nfunction parseScaleNice(nice) {\n  return isObject(nice) ? {\n    interval: parseLiteral(nice.interval),\n    step: parseLiteral(nice.step)\n  } : parseLiteral(nice);\n} // -- SCALE INTERPOLATION -----\n\n\nfunction parseScaleInterpolate(interpolate, params) {\n  params.interpolate = parseLiteral(interpolate.type || interpolate);\n\n  if (interpolate.gamma != null) {\n    params.interpolateGamma = parseLiteral(interpolate.gamma);\n  }\n} // -- SCALE RANGE -----\n\n\nfunction parseScaleRange(spec, scope, params) {\n  const config = scope.config.range;\n  let range = spec.range;\n\n  if (range.signal) {\n    return scope.signalRef(range.signal);\n  } else if (isString(range)) {\n    if (config && hasOwnProperty(config, range)) {\n      spec = extend({}, spec, {\n        range: config[range]\n      });\n      return parseScaleRange(spec, scope, params);\n    } else if (range === 'width') {\n      range = [0, {\n        signal: 'width'\n      }];\n    } else if (range === 'height') {\n      range = isDiscrete(spec.type) ? [0, {\n        signal: 'height'\n      }] : [{\n        signal: 'height'\n      }, 0];\n    } else {\n      error('Unrecognized scale range value: ' + stringValue(range));\n    }\n  } else if (range.scheme) {\n    params.scheme = isArray(range.scheme) ? parseArray(range.scheme, scope) : parseLiteral(range.scheme, scope);\n    if (range.extent) params.schemeExtent = parseArray(range.extent, scope);\n    if (range.count) params.schemeCount = parseLiteral(range.count, scope);\n    return;\n  } else if (range.step) {\n    params.rangeStep = parseLiteral(range.step, scope);\n    return;\n  } else if (isDiscrete(spec.type) && !isArray(range)) {\n    return parseScaleDomain(range, spec, scope);\n  } else if (!isArray(range)) {\n    error('Unsupported range type: ' + stringValue(range));\n  }\n\n  return range.map(v => (isArray(v) ? parseArray : parseLiteral)(v, scope));\n}\n\nfunction parseProjection (proj, scope) {\n  const config = scope.config.projection || {},\n        params = {};\n\n  for (const name in proj) {\n    if (name === 'name') continue;\n    params[name] = parseParameter(proj[name], name, scope);\n  } // apply projection defaults from config\n\n\n  for (const name in config) {\n    if (params[name] == null) {\n      params[name] = parseParameter(config[name], name, scope);\n    }\n  }\n\n  scope.addProjection(proj.name, params);\n}\n\nfunction parseParameter(_, name, scope) {\n  return isArray(_) ? _.map(_ => parseParameter(_, name, scope)) : !isObject(_) ? _ : _.signal ? scope.signalRef(_.signal) : name === 'fit' ? _ : error('Unsupported parameter object: ' + stringValue(_));\n}\n\nconst Top = 'top';\nconst Left = 'left';\nconst Right = 'right';\nconst Bottom = 'bottom';\nconst Center = 'center';\nconst Vertical = 'vertical';\nconst Start = 'start';\nconst Middle = 'middle';\nconst End = 'end';\nconst Index = 'index';\nconst Label = 'label';\nconst Offset = 'offset';\nconst Perc = 'perc';\nconst Perc2 = 'perc2';\nconst Value = 'value';\nconst GuideLabelStyle = 'guide-label';\nconst GuideTitleStyle = 'guide-title';\nconst GroupTitleStyle = 'group-title';\nconst GroupSubtitleStyle = 'group-subtitle';\nconst Symbols = 'symbol';\nconst Gradient = 'gradient';\nconst Discrete = 'discrete';\nconst Size = 'size';\nconst Shape = 'shape';\nconst Fill = 'fill';\nconst Stroke = 'stroke';\nconst StrokeWidth = 'strokeWidth';\nconst StrokeDash = 'strokeDash';\nconst Opacity = 'opacity'; // Encoding channels supported by legends\n// In priority order of 'canonical' scale\n\nconst LegendScales = [Size, Shape, Fill, Stroke, StrokeWidth, StrokeDash, Opacity];\nconst Skip = {\n  name: 1,\n  style: 1,\n  interactive: 1\n};\nconst zero = {\n  value: 0\n};\nconst one = {\n  value: 1\n};\n\nconst GroupMark = 'group';\nconst RectMark = 'rect';\nconst RuleMark = 'rule';\nconst SymbolMark = 'symbol';\nconst TextMark = 'text';\n\nfunction guideGroup (mark) {\n  mark.type = GroupMark;\n  mark.interactive = mark.interactive || false;\n  return mark;\n}\n\nfunction lookup(spec, config) {\n  const _ = (name, dflt) => value(spec[name], value(config[name], dflt));\n\n  _.isVertical = s => Vertical === value(spec.direction, config.direction || (s ? config.symbolDirection : config.gradientDirection));\n\n  _.gradientLength = () => value(spec.gradientLength, config.gradientLength || config.gradientWidth);\n\n  _.gradientThickness = () => value(spec.gradientThickness, config.gradientThickness || config.gradientHeight);\n\n  _.entryColumns = () => value(spec.columns, value(config.columns, +_.isVertical(true)));\n\n  return _;\n}\nfunction getEncoding(name, encode) {\n  const v = encode && (encode.update && encode.update[name] || encode.enter && encode.enter[name]);\n  return v && v.signal ? v : v ? v.value : null;\n}\nfunction getStyle(name, scope, style) {\n  const s = scope.config.style[style];\n  return s && s[name];\n}\nfunction anchorExpr(s, e, m) {\n  return \"item.anchor === '\".concat(Start, \"' ? \").concat(s, \" : item.anchor === '\").concat(End, \"' ? \").concat(e, \" : \").concat(m);\n}\nconst alignExpr = anchorExpr(stringValue(Left), stringValue(Right), stringValue(Center));\nfunction tickBand(_) {\n  const v = _('tickBand');\n\n  let offset = _('tickOffset'),\n      band,\n      extra;\n\n  if (!v) {\n    // if no tick band entry, fall back on other properties\n    band = _('bandPosition');\n    extra = _('tickExtra');\n  } else if (v.signal) {\n    // if signal, augment code to interpret values\n    band = {\n      signal: \"(\".concat(v.signal, \") === 'extent' ? 1 : 0.5\")\n    };\n    extra = {\n      signal: \"(\".concat(v.signal, \") === 'extent'\")\n    };\n\n    if (!isObject(offset)) {\n      offset = {\n        signal: \"(\".concat(v.signal, \") === 'extent' ? 0 : \").concat(offset)\n      };\n    }\n  } else if (v === 'extent') {\n    // if constant, simply set values\n    band = 1;\n    extra = true;\n    offset = 0;\n  } else {\n    band = 0.5;\n    extra = false;\n  }\n\n  return {\n    extra,\n    band,\n    offset\n  };\n}\nfunction extendOffset(value, offset) {\n  return !offset ? value : !value ? offset : !isObject(value) ? {\n    value,\n    offset\n  } : Object.assign({}, value, {\n    offset: extendOffset(value.offset, offset)\n  });\n}\n\nfunction guideMark (mark, extras) {\n  if (extras) {\n    mark.name = extras.name;\n    mark.style = extras.style || mark.style;\n    mark.interactive = !!extras.interactive;\n    mark.encode = extendEncode(mark.encode, extras, Skip);\n  } else {\n    mark.interactive = false;\n  }\n\n  return mark;\n}\n\nfunction legendGradient (spec, scale, config, userEncode) {\n  const _ = lookup(spec, config),\n        vertical = _.isVertical(),\n        thickness = _.gradientThickness(),\n        length = _.gradientLength();\n\n  let enter, start, stop, width, height;\n\n  if (vertical) {\n    start = [0, 1];\n    stop = [0, 0];\n    width = thickness;\n    height = length;\n  } else {\n    start = [0, 0];\n    stop = [1, 0];\n    width = length;\n    height = thickness;\n  }\n\n  const encode = {\n    enter: enter = {\n      opacity: zero,\n      x: zero,\n      y: zero,\n      width: encoder(width),\n      height: encoder(height)\n    },\n    update: extend({}, enter, {\n      opacity: one,\n      fill: {\n        gradient: scale,\n        start: start,\n        stop: stop\n      }\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark({\n    type: RectMark,\n    role: LegendGradientRole,\n    encode\n  }, userEncode);\n}\n\nfunction legendGradientDiscrete (spec, scale, config, userEncode, dataRef) {\n  const _ = lookup(spec, config),\n        vertical = _.isVertical(),\n        thickness = _.gradientThickness(),\n        length = _.gradientLength();\n\n  let u,\n      v,\n      uu,\n      vv,\n      adjust = '';\n  vertical ? (u = 'y', uu = 'y2', v = 'x', vv = 'width', adjust = '1-') : (u = 'x', uu = 'x2', v = 'y', vv = 'height');\n  const enter = {\n    opacity: zero,\n    fill: {\n      scale: scale,\n      field: Value\n    }\n  };\n  enter[u] = {\n    signal: adjust + 'datum.' + Perc,\n    mult: length\n  };\n  enter[v] = zero;\n  enter[uu] = {\n    signal: adjust + 'datum.' + Perc2,\n    mult: length\n  };\n  enter[vv] = encoder(thickness);\n  const encode = {\n    enter: enter,\n    update: extend({}, enter, {\n      opacity: one\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gradientStrokeColor'),\n    strokeWidth: _('gradientStrokeWidth')\n  }, {\n    // update\n    opacity: _('gradientOpacity')\n  });\n  return guideMark({\n    type: RectMark,\n    role: LegendBandRole,\n    key: Value,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nconst alignExpr$1 = \"datum.\".concat(Perc, \"<=0?\\\"\").concat(Left, \"\\\":datum.\").concat(Perc, \">=1?\\\"\").concat(Right, \"\\\":\\\"\").concat(Center, \"\\\"\"),\n      baselineExpr = \"datum.\".concat(Perc, \"<=0?\\\"\").concat(Bottom, \"\\\":datum.\").concat(Perc, \">=1?\\\"\").concat(Top, \"\\\":\\\"\").concat(Middle, \"\\\"\");\nfunction legendGradientLabels (spec, config, userEncode, dataRef) {\n  const _ = lookup(spec, config),\n        vertical = _.isVertical(),\n        thickness = encoder(_.gradientThickness()),\n        length = _.gradientLength();\n\n  let overlap = _('labelOverlap'),\n      enter,\n      update,\n      u,\n      v,\n      adjust = '';\n\n  const encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one,\n      text: {\n        field: Label\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    fill: _('labelColor'),\n    fillOpacity: _('labelOpacity'),\n    font: _('labelFont'),\n    fontSize: _('labelFontSize'),\n    fontStyle: _('labelFontStyle'),\n    fontWeight: _('labelFontWeight'),\n    limit: value(spec.labelLimit, config.gradientLabelLimit)\n  });\n\n  if (vertical) {\n    enter.align = {\n      value: 'left'\n    };\n    enter.baseline = update.baseline = {\n      signal: baselineExpr\n    };\n    u = 'y';\n    v = 'x';\n    adjust = '1-';\n  } else {\n    enter.align = update.align = {\n      signal: alignExpr$1\n    };\n    enter.baseline = {\n      value: 'top'\n    };\n    u = 'x';\n    v = 'y';\n  }\n\n  enter[u] = update[u] = {\n    signal: adjust + 'datum.' + Perc,\n    mult: length\n  };\n  enter[v] = update[v] = thickness;\n  thickness.offset = value(spec.labelOffset, config.gradientLabelOffset) || 0;\n  overlap = overlap ? {\n    separation: _('labelSeparation'),\n    method: overlap,\n    order: 'datum.' + Index\n  } : undefined; // type, role, style, key, dataRef, encode, extras\n\n  return guideMark({\n    type: TextMark,\n    role: LegendLabelRole,\n    style: GuideLabelStyle,\n    key: Value,\n    from: dataRef,\n    encode,\n    overlap\n  }, userEncode);\n}\n\nfunction legendSymbolGroups (spec, config, userEncode, dataRef, columns) {\n  const _ = lookup(spec, config),\n        entries = userEncode.entries,\n        interactive = !!(entries && entries.interactive),\n        name = entries ? entries.name : undefined,\n        height = _('clipHeight'),\n        symbolOffset = _('symbolOffset'),\n        valueRef = {\n    data: 'value'\n  },\n        xSignal = \"(\".concat(columns, \") ? datum.\").concat(Offset, \" : datum.\").concat(Size),\n        yEncode = height ? encoder(height) : {\n    field: Size\n  },\n        index = \"datum.\".concat(Index),\n        ncols = \"max(1, \".concat(columns, \")\");\n\n  let encode, enter, update, nrows, sort;\n  yEncode.mult = 0.5; // -- LEGEND SYMBOLS --\n\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      x: {\n        signal: xSignal,\n        mult: 0.5,\n        offset: symbolOffset\n      },\n      y: yEncode\n    },\n    update: update = {\n      opacity: one,\n      x: enter.x,\n      y: enter.y\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  let baseFill = null,\n      baseStroke = null;\n\n  if (!spec.fill) {\n    baseFill = config.symbolBaseFillColor;\n    baseStroke = config.symbolBaseStrokeColor;\n  }\n\n  addEncoders(encode, {\n    fill: _('symbolFillColor', baseFill),\n    shape: _('symbolType'),\n    size: _('symbolSize'),\n    stroke: _('symbolStrokeColor', baseStroke),\n    strokeDash: _('symbolDash'),\n    strokeDashOffset: _('symbolDashOffset'),\n    strokeWidth: _('symbolStrokeWidth')\n  }, {\n    // update\n    opacity: _('symbolOpacity')\n  });\n  LegendScales.forEach(scale => {\n    if (spec[scale]) {\n      update[scale] = enter[scale] = {\n        scale: spec[scale],\n        field: Value\n      };\n    }\n  });\n  const symbols = guideMark({\n    type: SymbolMark,\n    role: LegendSymbolRole,\n    key: Value,\n    from: valueRef,\n    clip: height ? true : undefined,\n    encode\n  }, userEncode.symbols); // -- LEGEND LABELS --\n\n  const labelOffset = encoder(symbolOffset);\n  labelOffset.offset = _('labelOffset');\n  encode = {\n    enter: enter = {\n      opacity: zero,\n      x: {\n        signal: xSignal,\n        offset: labelOffset\n      },\n      y: yEncode\n    },\n    update: update = {\n      opacity: one,\n      text: {\n        field: Label\n      },\n      x: enter.x,\n      y: enter.y\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    align: _('labelAlign'),\n    baseline: _('labelBaseline'),\n    fill: _('labelColor'),\n    fillOpacity: _('labelOpacity'),\n    font: _('labelFont'),\n    fontSize: _('labelFontSize'),\n    fontStyle: _('labelFontStyle'),\n    fontWeight: _('labelFontWeight'),\n    limit: _('labelLimit')\n  });\n  const labels = guideMark({\n    type: TextMark,\n    role: LegendLabelRole,\n    style: GuideLabelStyle,\n    key: Value,\n    from: valueRef,\n    encode\n  }, userEncode.labels); // -- LEGEND ENTRY GROUPS --\n\n  encode = {\n    enter: {\n      noBound: {\n        value: !height\n      },\n      // ignore width/height in bounds calc\n      width: zero,\n      height: height ? encoder(height) : zero,\n      opacity: zero\n    },\n    exit: {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one,\n      row: {\n        signal: null\n      },\n      column: {\n        signal: null\n      }\n    }\n  }; // annotate and sort groups to ensure correct ordering\n\n  if (_.isVertical(true)) {\n    nrows = \"ceil(item.mark.items.length / \".concat(ncols, \")\");\n    update.row.signal = \"\".concat(index, \"%\").concat(nrows);\n    update.column.signal = \"floor(\".concat(index, \" / \").concat(nrows, \")\");\n    sort = {\n      field: ['row', index]\n    };\n  } else {\n    update.row.signal = \"floor(\".concat(index, \" / \").concat(ncols, \")\");\n    update.column.signal = \"\".concat(index, \" % \").concat(ncols);\n    sort = {\n      field: index\n    };\n  } // handle zero column case (implies infinite columns)\n\n\n  update.column.signal = \"(\".concat(columns, \")?\").concat(update.column.signal, \":\").concat(index); // facet legend entries into sub-groups\n\n  dataRef = {\n    facet: {\n      data: dataRef,\n      name: 'value',\n      groupby: Index\n    }\n  };\n  return guideGroup({\n    role: ScopeRole,\n    from: dataRef,\n    encode: extendEncode(encode, entries, Skip),\n    marks: [symbols, labels],\n    name,\n    interactive,\n    sort\n  });\n}\nfunction legendSymbolLayout(spec, config) {\n  const _ = lookup(spec, config); // layout parameters for legend entries\n\n\n  return {\n    align: _('gridAlign'),\n    columns: _.entryColumns(),\n    center: {\n      row: true,\n      column: false\n    },\n    padding: {\n      row: _('rowPadding'),\n      column: _('columnPadding')\n    }\n  };\n}\n\nconst isL = 'item.orient === \"left\"',\n      isR = 'item.orient === \"right\"',\n      isLR = \"(\".concat(isL, \" || \").concat(isR, \")\"),\n      isVG = \"datum.vgrad && \".concat(isLR),\n      baseline = anchorExpr('\"top\"', '\"bottom\"', '\"middle\"'),\n      alignFlip = anchorExpr('\"right\"', '\"left\"', '\"center\"'),\n      exprAlign = \"datum.vgrad && \".concat(isR, \" ? (\").concat(alignFlip, \") : (\").concat(isLR, \" && !(datum.vgrad && \").concat(isL, \")) ? \\\"left\\\" : \").concat(alignExpr),\n      exprAnchor = \"item._anchor || (\".concat(isLR, \" ? \\\"middle\\\" : \\\"start\\\")\"),\n      exprAngle = \"\".concat(isVG, \" ? (\").concat(isL, \" ? -90 : 90) : 0\"),\n      exprBaseline = \"\".concat(isLR, \" ? (datum.vgrad ? (\").concat(isR, \" ? \\\"bottom\\\" : \\\"top\\\") : \").concat(baseline, \") : \\\"top\\\"\");\nfunction legendTitle (spec, config, userEncode, dataRef) {\n  const _ = lookup(spec, config);\n\n  const encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: one,\n      x: {\n        field: {\n          group: 'padding'\n        }\n      },\n      y: {\n        field: {\n          group: 'padding'\n        }\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    orient: _('titleOrient'),\n    _anchor: _('titleAnchor'),\n    anchor: {\n      signal: exprAnchor\n    },\n    angle: {\n      signal: exprAngle\n    },\n    align: {\n      signal: exprAlign\n    },\n    baseline: {\n      signal: exprBaseline\n    },\n    text: spec.title,\n    fill: _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font: _('titleFont'),\n    fontSize: _('titleFontSize'),\n    fontStyle: _('titleFontStyle'),\n    fontWeight: _('titleFontWeight'),\n    limit: _('titleLimit'),\n    lineHeight: _('titleLineHeight')\n  }, {\n    // require update\n    align: _('titleAlign'),\n    baseline: _('titleBaseline')\n  });\n  return guideMark({\n    type: TextMark,\n    role: LegendTitleRole,\n    style: GuideTitleStyle,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction clip (clip, scope) {\n  let expr;\n\n  if (isObject(clip)) {\n    if (clip.signal) {\n      expr = clip.signal;\n    } else if (clip.path) {\n      expr = 'pathShape(' + param(clip.path) + ')';\n    } else if (clip.sphere) {\n      expr = 'geoShape(' + param(clip.sphere) + ', {type: \"Sphere\"})';\n    }\n  }\n\n  return expr ? scope.signalRef(expr) : !!clip;\n}\n\nfunction param(value) {\n  return isObject(value) && value.signal ? value.signal : stringValue(value);\n}\n\nfunction getRole (spec) {\n  const role = spec.role || '';\n  return !role.indexOf('axis') || !role.indexOf('legend') || !role.indexOf('title') ? role : spec.type === GroupMark ? ScopeRole : role || MarkRole;\n}\n\nfunction definition (spec) {\n  return {\n    marktype: spec.type,\n    name: spec.name || undefined,\n    role: spec.role || getRole(spec),\n    zindex: +spec.zindex || undefined,\n    aria: spec.aria,\n    description: spec.description\n  };\n}\n\nfunction interactive (spec, scope) {\n  return spec && spec.signal ? scope.signalRef(spec.signal) : spec === false ? false : true;\n}\n\n/**\n * Parse a data transform specification.\n */\n\nfunction parseTransform (spec, scope) {\n  const def = definition$1(spec.type);\n  if (!def) error('Unrecognized transform type: ' + stringValue(spec.type));\n  const t = entry$1(def.type.toLowerCase(), null, parseParameters(def, spec, scope));\n  if (spec.signal) scope.addSignal(spec.signal, scope.proxy(t));\n  t.metadata = def.metadata || {};\n  return t;\n}\n/**\n * Parse all parameters of a data transform.\n */\n\nfunction parseParameters(def, spec, scope) {\n  const params = {},\n        n = def.params.length;\n\n  for (let i = 0; i < n; ++i) {\n    const pdef = def.params[i];\n    params[pdef.name] = parseParameter$1(pdef, spec, scope);\n  }\n\n  return params;\n}\n/**\n * Parse a data transform parameter.\n */\n\n\nfunction parseParameter$1(def, spec, scope) {\n  const type = def.type,\n        value = spec[def.name];\n\n  if (type === 'index') {\n    return parseIndexParameter(def, spec, scope);\n  } else if (value === undefined) {\n    if (def.required) {\n      error('Missing required ' + stringValue(spec.type) + ' parameter: ' + stringValue(def.name));\n    }\n\n    return;\n  } else if (type === 'param') {\n    return parseSubParameters(def, spec, scope);\n  } else if (type === 'projection') {\n    return scope.projectionRef(spec[def.name]);\n  }\n\n  return def.array && !isSignal(value) ? value.map(v => parameterValue(def, v, scope)) : parameterValue(def, value, scope);\n}\n/**\n * Parse a single parameter value.\n */\n\n\nfunction parameterValue(def, value, scope) {\n  const type = def.type;\n\n  if (isSignal(value)) {\n    return isExpr$1(type) ? error('Expression references can not be signals.') : isField(type) ? scope.fieldRef(value) : isCompare(type) ? scope.compareRef(value) : scope.signalRef(value.signal);\n  } else {\n    const expr = def.expr || isField(type);\n    return expr && outerExpr(value) ? scope.exprRef(value.expr, value.as) : expr && outerField(value) ? fieldRef(value.field, value.as) : isExpr$1(type) ? parseExpression(value, scope) : isData(type) ? ref(scope.getData(value).values) : isField(type) ? fieldRef(value) : isCompare(type) ? scope.compareRef(value) : value;\n  }\n}\n/**\n * Parse parameter for accessing an index of another data set.\n */\n\n\nfunction parseIndexParameter(def, spec, scope) {\n  if (!isString(spec.from)) {\n    error('Lookup \"from\" parameter must be a string literal.');\n  }\n\n  return scope.getData(spec.from).lookupRef(scope, spec.key);\n}\n/**\n * Parse a parameter that contains one or more sub-parameter objects.\n */\n\n\nfunction parseSubParameters(def, spec, scope) {\n  const value = spec[def.name];\n\n  if (def.array) {\n    if (!isArray(value)) {\n      // signals not allowed!\n      error('Expected an array of sub-parameters. Instead: ' + stringValue(value));\n    }\n\n    return value.map(v => parseSubParameter(def, v, scope));\n  } else {\n    return parseSubParameter(def, value, scope);\n  }\n}\n/**\n * Parse a sub-parameter object.\n */\n\n\nfunction parseSubParameter(def, value, scope) {\n  const n = def.params.length;\n  let pdef; // loop over defs to find matching key\n\n  for (let i = 0; i < n; ++i) {\n    pdef = def.params[i];\n\n    for (const k in pdef.key) {\n      if (pdef.key[k] !== value[k]) {\n        pdef = null;\n        break;\n      }\n    }\n\n    if (pdef) break;\n  } // raise error if matching key not found\n\n\n  if (!pdef) error('Unsupported parameter: ' + stringValue(value)); // parse params, create Params transform, return ref\n\n  const params = extend(parseParameters(pdef, value, scope), pdef.key);\n  return ref(scope.add(Params(params)));\n} // -- Utilities -----\n\n\nconst outerExpr = _ => _ && _.expr;\nconst outerField = _ => _ && _.field;\nconst isData = _ => _ === 'data';\nconst isExpr$1 = _ => _ === 'expr';\nconst isField = _ => _ === 'field';\nconst isCompare = _ => _ === 'compare';\n\nfunction parseData (from, group, scope) {\n  let facet, key, op, dataRef, parent; // if no source data, generate singleton datum\n\n  if (!from) {\n    dataRef = ref(scope.add(Collect(null, [{}])));\n  } // if faceted, process facet specification\n  else if (facet = from.facet) {\n      if (!group) error('Only group marks can be faceted.'); // use pre-faceted source data, if available\n\n      if (facet.field != null) {\n        dataRef = parent = getDataRef(facet, scope);\n      } else {\n        // generate facet aggregates if no direct data specification\n        if (!from.data) {\n          op = parseTransform(extend({\n            type: 'aggregate',\n            groupby: array(facet.groupby)\n          }, facet.aggregate), scope);\n          op.params.key = scope.keyRef(facet.groupby);\n          op.params.pulse = getDataRef(facet, scope);\n          dataRef = parent = ref(scope.add(op));\n        } else {\n          parent = ref(scope.getData(from.data).aggregate);\n        }\n\n        key = scope.keyRef(facet.groupby, true);\n      }\n    } // if not yet defined, get source data reference\n\n\n  if (!dataRef) {\n    dataRef = getDataRef(from, scope);\n  }\n\n  return {\n    key: key,\n    pulse: dataRef,\n    parent: parent\n  };\n}\nfunction getDataRef(from, scope) {\n  return from.$ref ? from : from.data && from.data.$ref ? from.data : ref(scope.getData(from.data).output);\n}\n\nfunction DataScope(scope, input, output, values, aggr) {\n  this.scope = scope; // parent scope object\n\n  this.input = input; // first operator in pipeline (tuple input)\n\n  this.output = output; // last operator in pipeline (tuple output)\n\n  this.values = values; // operator for accessing tuples (but not tuple flow)\n  // last aggregate in transform pipeline\n\n  this.aggregate = aggr; // lookup table of field indices\n\n  this.index = {};\n}\n\nDataScope.fromEntries = function (scope, entries) {\n  const n = entries.length,\n        values = entries[n - 1],\n        output = entries[n - 2];\n  let input = entries[0],\n      aggr = null,\n      i = 1;\n\n  if (input && input.type === 'load') {\n    input = entries[1];\n  } // add operator entries to this scope, wire up pulse chain\n\n\n  scope.add(entries[0]);\n\n  for (; i < n; ++i) {\n    entries[i].params.pulse = ref(entries[i - 1]);\n    scope.add(entries[i]);\n    if (entries[i].type === 'aggregate') aggr = entries[i];\n  }\n\n  return new DataScope(scope, input, output, values, aggr);\n};\n\nfunction fieldKey(field) {\n  return isString(field) ? field : null;\n}\n\nfunction addSortField(scope, p, sort) {\n  const as = aggrField(sort.op, sort.field);\n  let s;\n\n  if (p.ops) {\n    for (let i = 0, n = p.as.length; i < n; ++i) {\n      if (p.as[i] === as) return;\n    }\n  } else {\n    p.ops = ['count'];\n    p.fields = [null];\n    p.as = ['count'];\n  }\n\n  if (sort.op) {\n    p.ops.push((s = sort.op.signal) ? scope.signalRef(s) : sort.op);\n    p.fields.push(scope.fieldRef(sort.field));\n    p.as.push(as);\n  }\n}\n\nfunction cache(scope, ds, name, optype, field, counts, index) {\n  const cache = ds[name] || (ds[name] = {}),\n        sort = sortKey(counts);\n  let k = fieldKey(field),\n      v,\n      op;\n\n  if (k != null) {\n    scope = ds.scope;\n    k = k + (sort ? '|' + sort : '');\n    v = cache[k];\n  }\n\n  if (!v) {\n    const params = counts ? {\n      field: keyFieldRef,\n      pulse: ds.countsRef(scope, field, counts)\n    } : {\n      field: scope.fieldRef(field),\n      pulse: ref(ds.output)\n    };\n    if (sort) params.sort = scope.sortRef(counts);\n    op = scope.add(entry$1(optype, undefined, params));\n    if (index) ds.index[field] = op;\n    v = ref(op);\n    if (k != null) cache[k] = v;\n  }\n\n  return v;\n}\n\nDataScope.prototype = {\n  countsRef(scope, field, sort) {\n    const ds = this,\n          cache = ds.counts || (ds.counts = {}),\n          k = fieldKey(field);\n    let v, a, p;\n\n    if (k != null) {\n      scope = ds.scope;\n      v = cache[k];\n    }\n\n    if (!v) {\n      p = {\n        groupby: scope.fieldRef(field, 'key'),\n        pulse: ref(ds.output)\n      };\n      if (sort && sort.field) addSortField(scope, p, sort);\n      a = scope.add(Aggregate(p));\n      v = scope.add(Collect({\n        pulse: ref(a)\n      }));\n      v = {\n        agg: a,\n        ref: ref(v)\n      };\n      if (k != null) cache[k] = v;\n    } else if (sort && sort.field) {\n      addSortField(scope, v.agg.params, sort);\n    }\n\n    return v.ref;\n  },\n\n  tuplesRef() {\n    return ref(this.values);\n  },\n\n  extentRef(scope, field) {\n    return cache(scope, this, 'extent', 'extent', field, false);\n  },\n\n  domainRef(scope, field) {\n    return cache(scope, this, 'domain', 'values', field, false);\n  },\n\n  valuesRef(scope, field, sort) {\n    return cache(scope, this, 'vals', 'values', field, sort || true);\n  },\n\n  lookupRef(scope, field) {\n    return cache(scope, this, 'lookup', 'tupleindex', field, false);\n  },\n\n  indataRef(scope, field) {\n    return cache(scope, this, 'indata', 'tupleindex', field, true, true);\n  }\n\n};\n\nfunction parseFacet (spec, scope, group) {\n  const facet = spec.from.facet,\n        name = facet.name,\n        data = getDataRef(facet, scope);\n  let op;\n\n  if (!facet.name) {\n    error('Facet must have a name: ' + stringValue(facet));\n  }\n\n  if (!facet.data) {\n    error('Facet must reference a data set: ' + stringValue(facet));\n  }\n\n  if (facet.field) {\n    op = scope.add(PreFacet({\n      field: scope.fieldRef(facet.field),\n      pulse: data\n    }));\n  } else if (facet.groupby) {\n    op = scope.add(Facet({\n      key: scope.keyRef(facet.groupby),\n      group: ref(scope.proxy(group.parent)),\n      pulse: data\n    }));\n  } else {\n    error('Facet must specify groupby or field: ' + stringValue(facet));\n  } // initialize facet subscope\n\n\n  const subscope = scope.fork(),\n        source = subscope.add(Collect()),\n        values = subscope.add(Sieve({\n    pulse: ref(source)\n  }));\n  subscope.addData(name, new DataScope(subscope, source, source, values));\n  subscope.addSignal('parent', null); // parse faceted subflow\n\n  op.params.subflow = {\n    $subflow: subscope.parse(spec).toRuntime()\n  };\n}\n\nfunction parseSubflow (spec, scope, input) {\n  const op = scope.add(PreFacet({\n    pulse: input.pulse\n  })),\n        subscope = scope.fork();\n  subscope.add(Sieve());\n  subscope.addSignal('parent', null); // parse group mark subflow\n\n  op.params.subflow = {\n    $subflow: subscope.parse(spec).toRuntime()\n  };\n}\n\nfunction parseTrigger (spec, scope, name) {\n  const remove = spec.remove,\n        insert = spec.insert,\n        toggle = spec.toggle,\n        modify = spec.modify,\n        values = spec.values,\n        op = scope.add(operator());\n  const update = 'if(' + spec.trigger + ',modify(\"' + name + '\",' + [insert, remove, toggle, modify, values].map(_ => _ == null ? 'null' : _).join(',') + '),0)';\n  const expr = parseExpression(update, scope);\n  op.update = expr.$expr;\n  op.params = expr.$params;\n}\n\nfunction parseMark (spec, scope) {\n  const role = getRole(spec),\n        group = spec.type === GroupMark,\n        facet = spec.from && spec.from.facet,\n        overlap = spec.overlap;\n  let layout = spec.layout || role === ScopeRole || role === FrameRole,\n      ops,\n      op,\n      store,\n      enc,\n      name,\n      layoutRef,\n      boundRef;\n  const nested = role === MarkRole || layout || facet; // resolve input data\n\n  const input = parseData(spec.from, group, scope); // data join to map tuples to visual items\n\n  op = scope.add(DataJoin({\n    key: input.key || (spec.key ? fieldRef(spec.key) : undefined),\n    pulse: input.pulse,\n    clean: !group\n  }));\n  const joinRef = ref(op); // collect visual items\n\n  op = store = scope.add(Collect({\n    pulse: joinRef\n  })); // connect visual items to scenegraph\n\n  op = scope.add(Mark({\n    markdef: definition(spec),\n    interactive: interactive(spec.interactive, scope),\n    clip: clip(spec.clip, scope),\n    context: {\n      $context: true\n    },\n    groups: scope.lookup(),\n    parent: scope.signals.parent ? scope.signalRef('parent') : null,\n    index: scope.markpath(),\n    pulse: ref(op)\n  }));\n  const markRef = ref(op); // add visual encoders\n\n  op = enc = scope.add(Encode(parseEncode(spec.encode, spec.type, role, spec.style, scope, {\n    mod: false,\n    pulse: markRef\n  }))); // monitor parent marks to propagate changes\n\n  op.params.parent = scope.encode(); // add post-encoding transforms, if defined\n\n  if (spec.transform) {\n    spec.transform.forEach(_ => {\n      const tx = parseTransform(_, scope),\n            md = tx.metadata;\n\n      if (md.generates || md.changes) {\n        error('Mark transforms should not generate new data.');\n      }\n\n      if (!md.nomod) enc.params.mod = true; // update encode mod handling\n\n      tx.params.pulse = ref(op);\n      scope.add(op = tx);\n    });\n  } // if item sort specified, perform post-encoding\n\n\n  if (spec.sort) {\n    op = scope.add(SortItems({\n      sort: scope.compareRef(spec.sort),\n      pulse: ref(op)\n    }));\n  }\n\n  const encodeRef = ref(op); // add view layout operator if needed\n\n  if (facet || layout) {\n    layout = scope.add(ViewLayout({\n      layout: scope.objectProperty(spec.layout),\n      legends: scope.legends,\n      mark: markRef,\n      pulse: encodeRef\n    }));\n    layoutRef = ref(layout);\n  } // compute bounding boxes\n\n\n  const bound = scope.add(Bound({\n    mark: markRef,\n    pulse: layoutRef || encodeRef\n  }));\n  boundRef = ref(bound); // if group mark, recurse to parse nested content\n\n  if (group) {\n    // juggle layout & bounds to ensure they run *after* any faceting transforms\n    if (nested) {\n      ops = scope.operators;\n      ops.pop();\n      if (layout) ops.pop();\n    }\n\n    scope.pushState(encodeRef, layoutRef || boundRef, joinRef);\n    facet ? parseFacet(spec, scope, input) // explicit facet\n    : nested ? parseSubflow(spec, scope, input) // standard mark group\n    : scope.parse(spec); // guide group, we can avoid nested scopes\n\n    scope.popState();\n\n    if (nested) {\n      if (layout) ops.push(layout);\n      ops.push(bound);\n    }\n  } // if requested, add overlap removal transform\n\n\n  if (overlap) {\n    boundRef = parseOverlap(overlap, boundRef, scope);\n  } // render / sieve items\n\n\n  const render = scope.add(Render({\n    pulse: boundRef\n  })),\n        sieve = scope.add(Sieve({\n    pulse: ref(render)\n  }, undefined, scope.parent())); // if mark is named, make accessible as reactive geometry\n  // add trigger updates if defined\n\n  if (spec.name != null) {\n    name = spec.name;\n    scope.addData(name, new DataScope(scope, store, render, sieve));\n    if (spec.on) spec.on.forEach(on => {\n      if (on.insert || on.remove || on.toggle) {\n        error('Marks only support modify triggers.');\n      }\n\n      parseTrigger(on, scope, name);\n    });\n  }\n}\n\nfunction parseOverlap(overlap, source, scope) {\n  const method = overlap.method,\n        bound = overlap.bound,\n        sep = overlap.separation;\n  const params = {\n    separation: isSignal(sep) ? scope.signalRef(sep.signal) : sep,\n    method: isSignal(method) ? scope.signalRef(method.signal) : method,\n    pulse: source\n  };\n\n  if (overlap.order) {\n    params.sort = scope.compareRef({\n      field: overlap.order\n    });\n  }\n\n  if (bound) {\n    const tol = bound.tolerance;\n    params.boundTolerance = isSignal(tol) ? scope.signalRef(tol.signal) : +tol;\n    params.boundScale = scope.scaleRef(bound.scale);\n    params.boundOrient = bound.orient;\n  }\n\n  return ref(scope.add(Overlap(params)));\n}\n\nfunction parseLegend (spec, scope) {\n  const config = scope.config.legend,\n        encode = spec.encode || {},\n        _ = lookup(spec, config),\n        legendEncode = encode.legend || {},\n        name = legendEncode.name || undefined,\n        interactive = legendEncode.interactive,\n        style = legendEncode.style,\n        scales = {};\n\n  let scale = 0,\n      entryLayout,\n      params,\n      children; // resolve scales and 'canonical' scale name\n\n  LegendScales.forEach(s => spec[s] ? (scales[s] = spec[s], scale = scale || spec[s]) : 0);\n  if (!scale) error('Missing valid scale for legend.'); // resolve legend type (symbol, gradient, or discrete gradient)\n\n  const type = legendType(spec, scope.scaleType(scale)); // single-element data source for legend group\n\n  const datum = {\n    title: spec.title != null,\n    scales: scales,\n    type: type,\n    vgrad: type !== 'symbol' && _.isVertical()\n  };\n  const dataRef = ref(scope.add(Collect(null, [datum]))); // encoding properties for legend entry sub-group\n\n  const entryEncode = {\n    enter: {\n      x: {\n        value: 0\n      },\n      y: {\n        value: 0\n      }\n    }\n  }; // data source for legend values\n\n  const entryRef = ref(scope.add(LegendEntries(params = {\n    type: type,\n    scale: scope.scaleRef(scale),\n    count: scope.objectProperty(_('tickCount')),\n    limit: scope.property(_('symbolLimit')),\n    values: scope.objectProperty(spec.values),\n    minstep: scope.property(spec.tickMinStep),\n    formatType: scope.property(spec.formatType),\n    formatSpecifier: scope.property(spec.format)\n  }))); // continuous gradient legend\n\n  if (type === Gradient) {\n    children = [legendGradient(spec, scale, config, encode.gradient), legendGradientLabels(spec, config, encode.labels, entryRef)]; // adjust default tick count based on the gradient length\n\n    params.count = params.count || scope.signalRef(\"max(2,2*floor((\".concat(deref(_.gradientLength()), \")/100))\"));\n  } // discrete gradient legend\n  else if (type === Discrete) {\n      children = [legendGradientDiscrete(spec, scale, config, encode.gradient, entryRef), legendGradientLabels(spec, config, encode.labels, entryRef)];\n    } // symbol legend\n    else {\n        // determine legend symbol group layout\n        entryLayout = legendSymbolLayout(spec, config);\n        children = [legendSymbolGroups(spec, config, encode, entryRef, deref(entryLayout.columns))]; // pass symbol size information to legend entry generator\n\n        params.size = sizeExpression(spec, scope, children[0].marks);\n      } // generate legend marks\n\n\n  children = [guideGroup({\n    role: LegendEntryRole,\n    from: dataRef,\n    encode: entryEncode,\n    marks: children,\n    layout: entryLayout,\n    interactive\n  })]; // include legend title if defined\n\n  if (datum.title) {\n    children.push(legendTitle(spec, config, encode.title, dataRef));\n  } // parse legend specification\n\n\n  return parseMark(guideGroup({\n    role: LegendRole,\n    from: dataRef,\n    encode: extendEncode(buildLegendEncode(_, spec, config), legendEncode, Skip),\n    marks: children,\n    aria: _('aria'),\n    description: _('description'),\n    zindex: _('zindex'),\n    name,\n    interactive,\n    style\n  }), scope);\n}\n\nfunction legendType(spec, scaleType) {\n  let type = spec.type || Symbols;\n\n  if (!spec.type && scaleCount(spec) === 1 && (spec.fill || spec.stroke)) {\n    type = isContinuous(scaleType) ? Gradient : isDiscretizing(scaleType) ? Discrete : Symbols;\n  }\n\n  return type !== Gradient ? type : isDiscretizing(scaleType) ? Discrete : Gradient;\n}\n\nfunction scaleCount(spec) {\n  return LegendScales.reduce((count, type) => count + (spec[type] ? 1 : 0), 0);\n}\n\nfunction buildLegendEncode(_, spec, config) {\n  const encode = {\n    enter: {},\n    update: {}\n  };\n  addEncoders(encode, {\n    orient: _('orient'),\n    offset: _('offset'),\n    padding: _('padding'),\n    titlePadding: _('titlePadding'),\n    cornerRadius: _('cornerRadius'),\n    fill: _('fillColor'),\n    stroke: _('strokeColor'),\n    strokeWidth: config.strokeWidth,\n    strokeDash: config.strokeDash,\n    x: _('legendX'),\n    y: _('legendY'),\n    // accessibility support\n    format: spec.format,\n    formatType: spec.formatType\n  });\n  return encode;\n}\n\nfunction sizeExpression(spec, scope, marks) {\n  const size = deref(getChannel('size', spec, marks)),\n        strokeWidth = deref(getChannel('strokeWidth', spec, marks)),\n        fontSize = deref(getFontSize(marks[1].encode, scope, GuideLabelStyle));\n  return parseExpression(\"max(ceil(sqrt(\".concat(size, \")+\").concat(strokeWidth, \"),\").concat(fontSize, \")\"), scope);\n}\n\nfunction getChannel(name, spec, marks) {\n  return spec[name] ? \"scale(\\\"\".concat(spec[name], \"\\\",datum)\") : getEncoding(name, marks[0].encode);\n}\n\nfunction getFontSize(encode, scope, style) {\n  return getEncoding('fontSize', encode) || getStyle('fontSize', scope, style);\n}\n\nconst angleExpr = \"item.orient===\\\"\".concat(Left, \"\\\"?-90:item.orient===\\\"\").concat(Right, \"\\\"?90:0\");\nfunction parseTitle (spec, scope) {\n  spec = isString(spec) ? {\n    text: spec\n  } : spec;\n\n  const _ = lookup(spec, scope.config.title),\n        encode = spec.encode || {},\n        userEncode = encode.group || {},\n        name = userEncode.name || undefined,\n        interactive = userEncode.interactive,\n        style = userEncode.style,\n        children = []; // single-element data source for group title\n\n\n  const datum = {},\n        dataRef = ref(scope.add(Collect(null, [datum]))); // include title text\n\n  children.push(buildTitle(spec, _, titleEncode(spec), dataRef)); // include subtitle text\n\n  if (spec.subtitle) {\n    children.push(buildSubTitle(spec, _, encode.subtitle, dataRef));\n  } // parse title specification\n\n\n  return parseMark(guideGroup({\n    role: TitleRole,\n    from: dataRef,\n    encode: groupEncode(_, userEncode),\n    marks: children,\n    aria: _('aria'),\n    description: _('description'),\n    zindex: _('zindex'),\n    name,\n    interactive,\n    style\n  }), scope);\n} // provide backwards-compatibility for title custom encode;\n// the top-level encode block has been *deprecated*.\n\nfunction titleEncode(spec) {\n  const encode = spec.encode;\n  return encode && encode.title || extend({\n    name: spec.name,\n    interactive: spec.interactive,\n    style: spec.style\n  }, encode);\n}\n\nfunction groupEncode(_, userEncode) {\n  const encode = {\n    enter: {},\n    update: {}\n  };\n  addEncoders(encode, {\n    orient: _('orient'),\n    anchor: _('anchor'),\n    align: {\n      signal: alignExpr\n    },\n    angle: {\n      signal: angleExpr\n    },\n    limit: _('limit'),\n    frame: _('frame'),\n    offset: _('offset') || 0,\n    padding: _('subtitlePadding')\n  });\n  return extendEncode(encode, userEncode, Skip);\n}\n\nfunction buildTitle(spec, _, userEncode, dataRef) {\n  const zero = {\n    value: 0\n  },\n        text = spec.text,\n        encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: {\n        value: 1\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    text: text,\n    align: {\n      signal: 'item.mark.group.align'\n    },\n    angle: {\n      signal: 'item.mark.group.angle'\n    },\n    limit: {\n      signal: 'item.mark.group.limit'\n    },\n    baseline: 'top',\n    dx: _('dx'),\n    dy: _('dy'),\n    fill: _('color'),\n    font: _('font'),\n    fontSize: _('fontSize'),\n    fontStyle: _('fontStyle'),\n    fontWeight: _('fontWeight'),\n    lineHeight: _('lineHeight')\n  }, {\n    // update\n    align: _('align'),\n    angle: _('angle'),\n    baseline: _('baseline')\n  });\n  return guideMark({\n    type: TextMark,\n    role: TitleTextRole,\n    style: GroupTitleStyle,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction buildSubTitle(spec, _, userEncode, dataRef) {\n  const zero = {\n    value: 0\n  },\n        text = spec.subtitle,\n        encode = {\n    enter: {\n      opacity: zero\n    },\n    update: {\n      opacity: {\n        value: 1\n      }\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    text: text,\n    align: {\n      signal: 'item.mark.group.align'\n    },\n    angle: {\n      signal: 'item.mark.group.angle'\n    },\n    limit: {\n      signal: 'item.mark.group.limit'\n    },\n    baseline: 'top',\n    dx: _('dx'),\n    dy: _('dy'),\n    fill: _('subtitleColor'),\n    font: _('subtitleFont'),\n    fontSize: _('subtitleFontSize'),\n    fontStyle: _('subtitleFontStyle'),\n    fontWeight: _('subtitleFontWeight'),\n    lineHeight: _('subtitleLineHeight')\n  }, {\n    // update\n    align: _('align'),\n    angle: _('angle'),\n    baseline: _('baseline')\n  });\n  return guideMark({\n    type: TextMark,\n    role: TitleSubtitleRole,\n    style: GroupSubtitleStyle,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction parseData$1(data, scope) {\n  const transforms = [];\n\n  if (data.transform) {\n    data.transform.forEach(tx => {\n      transforms.push(parseTransform(tx, scope));\n    });\n  }\n\n  if (data.on) {\n    data.on.forEach(on => {\n      parseTrigger(on, scope, data.name);\n    });\n  }\n\n  scope.addDataPipeline(data.name, analyze(data, scope, transforms));\n}\n/**\n * Analyze a data pipeline, add needed operators.\n */\n\nfunction analyze(data, scope, ops) {\n  const output = [];\n  let source = null,\n      modify = false,\n      generate = false,\n      upstream,\n      i,\n      n,\n      t,\n      m;\n\n  if (data.values) {\n    // hard-wired input data set\n    if (isSignal(data.values) || hasSignal(data.format)) {\n      // if either values is signal or format has signal, use dynamic loader\n      output.push(load(scope, data));\n      output.push(source = collect());\n    } else {\n      // otherwise, ingest upon dataflow init\n      output.push(source = collect({\n        $ingest: data.values,\n        $format: data.format\n      }));\n    }\n  } else if (data.url) {\n    // load data from external source\n    if (hasSignal(data.url) || hasSignal(data.format)) {\n      // if either url or format has signal, use dynamic loader\n      output.push(load(scope, data));\n      output.push(source = collect());\n    } else {\n      // otherwise, request load upon dataflow init\n      output.push(source = collect({\n        $request: data.url,\n        $format: data.format\n      }));\n    }\n  } else if (data.source) {\n    // derives from one or more other data sets\n    source = upstream = array(data.source).map(d => ref(scope.getData(d).output));\n    output.push(null); // populate later\n  } // scan data transforms, add collectors as needed\n\n\n  for (i = 0, n = ops.length; i < n; ++i) {\n    t = ops[i];\n    m = t.metadata;\n\n    if (!source && !m.source) {\n      output.push(source = collect());\n    }\n\n    output.push(t);\n    if (m.generates) generate = true;\n    if (m.modifies && !generate) modify = true;\n    if (m.source) source = t;else if (m.changes) source = null;\n  }\n\n  if (upstream) {\n    n = upstream.length - 1;\n    output[0] = Relay({\n      derive: modify,\n      pulse: n ? upstream : upstream[0]\n    });\n\n    if (modify || n) {\n      // collect derived and multi-pulse tuples\n      output.splice(1, 0, collect());\n    }\n  }\n\n  if (!source) output.push(collect());\n  output.push(Sieve({}));\n  return output;\n}\n\nfunction collect(values) {\n  const s = Collect({}, values);\n  s.metadata = {\n    source: true\n  };\n  return s;\n}\n\nfunction load(scope, data) {\n  return Load({\n    url: data.url ? scope.property(data.url) : undefined,\n    async: data.async ? scope.property(data.async) : undefined,\n    values: data.values ? scope.property(data.values) : undefined,\n    format: scope.objectProperty(data.format)\n  });\n}\n\nconst isX = orient => orient === Bottom || orient === Top; // get sign coefficient based on axis orient\n\n\nconst getSign = (orient, a, b) => isSignal(orient) ? ifLeftTopExpr(orient.signal, a, b) : orient === Left || orient === Top ? a : b; // condition on axis x-direction\n\nconst ifX = (orient, a, b) => isSignal(orient) ? ifXEnc(orient.signal, a, b) : isX(orient) ? a : b; // condition on axis y-direction\n\nconst ifY = (orient, a, b) => isSignal(orient) ? ifYEnc(orient.signal, a, b) : isX(orient) ? b : a;\nconst ifTop = (orient, a, b) => isSignal(orient) ? ifTopExpr(orient.signal, a, b) : orient === Top ? {\n  value: a\n} : {\n  value: b\n};\nconst ifRight = (orient, a, b) => isSignal(orient) ? ifRightExpr(orient.signal, a, b) : orient === Right ? {\n  value: a\n} : {\n  value: b\n};\n\nconst ifXEnc = ($orient, a, b) => ifEnc(\"\".concat($orient, \" === '\").concat(Top, \"' || \").concat($orient, \" === '\").concat(Bottom, \"'\"), a, b);\n\nconst ifYEnc = ($orient, a, b) => ifEnc(\"\".concat($orient, \" !== '\").concat(Top, \"' && \").concat($orient, \" !== '\").concat(Bottom, \"'\"), a, b);\n\nconst ifLeftTopExpr = ($orient, a, b) => ifExpr(\"\".concat($orient, \" === '\").concat(Left, \"' || \").concat($orient, \" === '\").concat(Top, \"'\"), a, b);\n\nconst ifTopExpr = ($orient, a, b) => ifExpr(\"\".concat($orient, \" === '\").concat(Top, \"'\"), a, b);\n\nconst ifRightExpr = ($orient, a, b) => ifExpr(\"\".concat($orient, \" === '\").concat(Right, \"'\"), a, b);\n\nconst ifEnc = (test, a, b) => {\n  // ensure inputs are encoder objects (or null)\n  a = a != null ? encoder(a) : a;\n  b = b != null ? encoder(b) : b;\n\n  if (isSimple(a) && isSimple(b)) {\n    // if possible generate simple signal expression\n    a = a ? a.signal || stringValue(a.value) : null;\n    b = b ? b.signal || stringValue(b.value) : null;\n    return {\n      signal: \"\".concat(test, \" ? (\").concat(a, \") : (\").concat(b, \")\")\n    };\n  } else {\n    // otherwise generate rule set\n    return [extend({\n      test\n    }, a)].concat(b || []);\n  }\n};\n\nconst isSimple = enc => enc == null || Object.keys(enc).length === 1;\n\nconst ifExpr = (test, a, b) => ({\n  signal: \"\".concat(test, \" ? (\").concat(toExpr(a), \") : (\").concat(toExpr(b), \")\")\n});\n\nconst ifOrient = ($orient, t, b, l, r) => ({\n  signal: (l != null ? \"\".concat($orient, \" === '\").concat(Left, \"' ? (\").concat(toExpr(l), \") : \") : '') + (b != null ? \"\".concat($orient, \" === '\").concat(Bottom, \"' ? (\").concat(toExpr(b), \") : \") : '') + (r != null ? \"\".concat($orient, \" === '\").concat(Right, \"' ? (\").concat(toExpr(r), \") : \") : '') + (t != null ? \"\".concat($orient, \" === '\").concat(Top, \"' ? (\").concat(toExpr(t), \") : \") : '') + '(null)'\n});\n\nconst toExpr = v => isSignal(v) ? v.signal : v == null ? null : stringValue(v);\n\nconst mult = (sign, value) => value === 0 ? 0 : isSignal(sign) ? {\n  signal: \"(\".concat(sign.signal, \") * \").concat(value)\n} : {\n  value: sign * value\n};\nconst patch = (value, base) => {\n  const s = value.signal;\n  return s && s.endsWith('(null)') ? {\n    signal: s.slice(0, -6) + base.signal\n  } : value;\n};\n\nfunction fallback(prop, config, axisConfig, style) {\n  let styleProp;\n\n  if (config && hasOwnProperty(config, prop)) {\n    return config[prop];\n  } else if (hasOwnProperty(axisConfig, prop)) {\n    return axisConfig[prop];\n  } else if (prop.startsWith('title')) {\n    switch (prop) {\n      case 'titleColor':\n        styleProp = 'fill';\n        break;\n\n      case 'titleFont':\n      case 'titleFontSize':\n      case 'titleFontWeight':\n        styleProp = prop[5].toLowerCase() + prop.slice(6);\n    }\n\n    return style[GuideTitleStyle][styleProp];\n  } else if (prop.startsWith('label')) {\n    switch (prop) {\n      case 'labelColor':\n        styleProp = 'fill';\n        break;\n\n      case 'labelFont':\n      case 'labelFontSize':\n        styleProp = prop[5].toLowerCase() + prop.slice(6);\n    }\n\n    return style[GuideLabelStyle][styleProp];\n  }\n\n  return null;\n}\n\nfunction keys(objects) {\n  const map = {};\n\n  for (const obj of objects) {\n    if (!obj) continue;\n\n    for (const key in obj) map[key] = 1;\n  }\n\n  return Object.keys(map);\n}\n\nfunction axisConfig (spec, scope) {\n  var config = scope.config,\n      style = config.style,\n      axis = config.axis,\n      band = scope.scaleType(spec.scale) === 'band' && config.axisBand,\n      orient = spec.orient,\n      xy,\n      or,\n      key;\n\n  if (isSignal(orient)) {\n    const xyKeys = keys([config.axisX, config.axisY]),\n          orientKeys = keys([config.axisTop, config.axisBottom, config.axisLeft, config.axisRight]);\n    xy = {};\n\n    for (key of xyKeys) {\n      xy[key] = ifX(orient, fallback(key, config.axisX, axis, style), fallback(key, config.axisY, axis, style));\n    }\n\n    or = {};\n\n    for (key of orientKeys) {\n      or[key] = ifOrient(orient.signal, fallback(key, config.axisTop, axis, style), fallback(key, config.axisBottom, axis, style), fallback(key, config.axisLeft, axis, style), fallback(key, config.axisRight, axis, style));\n    }\n  } else {\n    xy = orient === Top || orient === Bottom ? config.axisX : config.axisY;\n    or = config['axis' + orient[0].toUpperCase() + orient.slice(1)];\n  }\n\n  const result = xy || or || band ? extend({}, axis, xy, or, band) : axis;\n  return result;\n}\n\nfunction axisDomain (spec, config, userEncode, dataRef) {\n  const _ = lookup(spec, config),\n        orient = spec.orient;\n\n  let enter, update;\n  const encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one\n    },\n    exit: {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('domainColor'),\n    strokeCap: _('domainCap'),\n    strokeDash: _('domainDash'),\n    strokeDashOffset: _('domainDashOffset'),\n    strokeWidth: _('domainWidth'),\n    strokeOpacity: _('domainOpacity')\n  });\n  const pos0 = position(spec, 0);\n  const pos1 = position(spec, 1);\n  enter.x = update.x = ifX(orient, pos0, zero);\n  enter.x2 = update.x2 = ifX(orient, pos1);\n  enter.y = update.y = ifY(orient, pos0, zero);\n  enter.y2 = update.y2 = ifY(orient, pos1);\n  return guideMark({\n    type: RuleMark,\n    role: AxisDomainRole,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction position(spec, pos) {\n  return {\n    scale: spec.scale,\n    range: pos\n  };\n}\n\nfunction axisGrid (spec, config, userEncode, dataRef, band) {\n  const _ = lookup(spec, config),\n        orient = spec.orient,\n        vscale = spec.gridScale,\n        sign = getSign(orient, 1, -1),\n        offset = offsetValue(spec.offset, sign);\n\n  let enter, exit, update;\n  const encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one\n    },\n    exit: exit = {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('gridColor'),\n    strokeCap: _('gridCap'),\n    strokeDash: _('gridDash'),\n    strokeDashOffset: _('gridDashOffset'),\n    strokeOpacity: _('gridOpacity'),\n    strokeWidth: _('gridWidth')\n  });\n  const tickPos = {\n    scale: spec.scale,\n    field: Value,\n    band: band.band,\n    extra: band.extra,\n    offset: band.offset,\n    round: _('tickRound')\n  };\n  const sz = ifX(orient, {\n    signal: 'height'\n  }, {\n    signal: 'width'\n  });\n  const gridStart = vscale ? {\n    scale: vscale,\n    range: 0,\n    mult: sign,\n    offset: offset\n  } : {\n    value: 0,\n    offset: offset\n  };\n  const gridEnd = vscale ? {\n    scale: vscale,\n    range: 1,\n    mult: sign,\n    offset: offset\n  } : extend(sz, {\n    mult: sign,\n    offset: offset\n  });\n  enter.x = update.x = ifX(orient, tickPos, gridStart);\n  enter.y = update.y = ifY(orient, tickPos, gridStart);\n  enter.x2 = update.x2 = ifY(orient, gridEnd);\n  enter.y2 = update.y2 = ifX(orient, gridEnd);\n  exit.x = ifX(orient, tickPos);\n  exit.y = ifY(orient, tickPos);\n  return guideMark({\n    type: RuleMark,\n    role: AxisGridRole,\n    key: Value,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction offsetValue(offset, sign) {\n  if (sign === 1) ; else if (!isObject(offset)) {\n    offset = isSignal(sign) ? {\n      signal: \"(\".concat(sign.signal, \") * (\").concat(offset || 0, \")\")\n    } : sign * (offset || 0);\n  } else {\n    let entry = offset = extend({}, offset);\n\n    while (entry.mult != null) {\n      if (!isObject(entry.mult)) {\n        entry.mult = isSignal(sign) // no offset if sign === 1\n        ? {\n          signal: \"(\".concat(entry.mult, \") * (\").concat(sign.signal, \")\")\n        } : entry.mult * sign;\n        return offset;\n      } else {\n        entry = entry.mult = extend({}, entry.mult);\n      }\n    }\n\n    entry.mult = sign;\n  }\n\n  return offset;\n}\n\nfunction axisTicks (spec, config, userEncode, dataRef, size, band) {\n  const _ = lookup(spec, config),\n        orient = spec.orient,\n        sign = getSign(orient, -1, 1);\n\n  let enter, exit, update;\n  const encode = {\n    enter: enter = {\n      opacity: zero\n    },\n    update: update = {\n      opacity: one\n    },\n    exit: exit = {\n      opacity: zero\n    }\n  };\n  addEncoders(encode, {\n    stroke: _('tickColor'),\n    strokeCap: _('tickCap'),\n    strokeDash: _('tickDash'),\n    strokeDashOffset: _('tickDashOffset'),\n    strokeOpacity: _('tickOpacity'),\n    strokeWidth: _('tickWidth')\n  });\n  const tickSize = encoder(size);\n  tickSize.mult = sign;\n  const tickPos = {\n    scale: spec.scale,\n    field: Value,\n    band: band.band,\n    extra: band.extra,\n    offset: band.offset,\n    round: _('tickRound')\n  };\n  update.y = enter.y = ifX(orient, zero, tickPos);\n  update.y2 = enter.y2 = ifX(orient, tickSize);\n  exit.x = ifX(orient, tickPos);\n  update.x = enter.x = ifY(orient, zero, tickPos);\n  update.x2 = enter.x2 = ifY(orient, tickSize);\n  exit.y = ifY(orient, tickPos);\n  return guideMark({\n    type: RuleMark,\n    role: AxisTickRole,\n    key: Value,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction flushExpr(scale, threshold, a, b, c) {\n  return {\n    signal: 'flush(range(\"' + scale + '\"), ' + 'scale(\"' + scale + '\", datum.value), ' + threshold + ',' + a + ',' + b + ',' + c + ')'\n  };\n}\n\nfunction axisLabels (spec, config, userEncode, dataRef, size, band) {\n  const _ = lookup(spec, config),\n        orient = spec.orient,\n        scale = spec.scale,\n        sign = getSign(orient, -1, 1),\n        flush = deref(_('labelFlush')),\n        flushOffset = deref(_('labelFlushOffset')),\n        labelAlign = _('labelAlign'),\n        labelBaseline = _('labelBaseline');\n\n  let flushOn = flush === 0 || !!flush,\n      update;\n  const tickSize = encoder(size);\n  tickSize.mult = sign;\n  tickSize.offset = encoder(_('labelPadding') || 0);\n  tickSize.offset.mult = sign;\n  const tickPos = {\n    scale: scale,\n    field: Value,\n    band: 0.5,\n    offset: extendOffset(band.offset, _('labelOffset'))\n  };\n  const align = ifX(orient, flushOn ? flushExpr(scale, flush, '\"left\"', '\"right\"', '\"center\"') : {\n    value: 'center'\n  }, ifRight(orient, 'left', 'right'));\n  const baseline = ifX(orient, ifTop(orient, 'bottom', 'top'), flushOn ? flushExpr(scale, flush, '\"top\"', '\"bottom\"', '\"middle\"') : {\n    value: 'middle'\n  });\n  const offsetExpr = flushExpr(scale, flush, \"-(\".concat(flushOffset, \")\"), flushOffset, 0);\n  flushOn = flushOn && flushOffset;\n  const enter = {\n    opacity: zero,\n    x: ifX(orient, tickPos, tickSize),\n    y: ifY(orient, tickPos, tickSize)\n  };\n  const encode = {\n    enter: enter,\n    update: update = {\n      opacity: one,\n      text: {\n        field: Label\n      },\n      x: enter.x,\n      y: enter.y,\n      align,\n      baseline\n    },\n    exit: {\n      opacity: zero,\n      x: enter.x,\n      y: enter.y\n    }\n  };\n  addEncoders(encode, {\n    dx: !labelAlign && flushOn ? ifX(orient, offsetExpr) : null,\n    dy: !labelBaseline && flushOn ? ifY(orient, offsetExpr) : null\n  });\n  addEncoders(encode, {\n    angle: _('labelAngle'),\n    fill: _('labelColor'),\n    fillOpacity: _('labelOpacity'),\n    font: _('labelFont'),\n    fontSize: _('labelFontSize'),\n    fontWeight: _('labelFontWeight'),\n    fontStyle: _('labelFontStyle'),\n    limit: _('labelLimit'),\n    lineHeight: _('labelLineHeight')\n  }, {\n    align: labelAlign,\n    baseline: labelBaseline\n  });\n\n  const bound = _('labelBound');\n\n  let overlap = _('labelOverlap'); // if overlap method or bound defined, request label overlap removal\n\n\n  overlap = overlap || bound ? {\n    separation: _('labelSeparation'),\n    method: overlap,\n    order: 'datum.index',\n    bound: bound ? {\n      scale,\n      orient,\n      tolerance: bound\n    } : null\n  } : undefined;\n\n  if (update.align !== align) {\n    update.align = patch(update.align, align);\n  }\n\n  if (update.baseline !== baseline) {\n    update.baseline = patch(update.baseline, baseline);\n  }\n\n  return guideMark({\n    type: TextMark,\n    role: AxisLabelRole,\n    style: GuideLabelStyle,\n    key: Value,\n    from: dataRef,\n    encode,\n    overlap\n  }, userEncode);\n}\n\nfunction axisTitle (spec, config, userEncode, dataRef) {\n  const _ = lookup(spec, config),\n        orient = spec.orient,\n        sign = getSign(orient, -1, 1);\n\n  let enter, update;\n  const encode = {\n    enter: enter = {\n      opacity: zero,\n      anchor: encoder(_('titleAnchor', null)),\n      align: {\n        signal: alignExpr\n      }\n    },\n    update: update = extend({}, enter, {\n      opacity: one,\n      text: encoder(spec.title)\n    }),\n    exit: {\n      opacity: zero\n    }\n  };\n  const titlePos = {\n    signal: \"lerp(range(\\\"\".concat(spec.scale, \"\\\"), \").concat(anchorExpr(0, 1, 0.5), \")\")\n  };\n  update.x = ifX(orient, titlePos);\n  update.y = ifY(orient, titlePos);\n  enter.angle = ifX(orient, zero, mult(sign, 90));\n  enter.baseline = ifX(orient, ifTop(orient, Bottom, Top), {\n    value: Bottom\n  });\n  update.angle = enter.angle;\n  update.baseline = enter.baseline;\n  addEncoders(encode, {\n    fill: _('titleColor'),\n    fillOpacity: _('titleOpacity'),\n    font: _('titleFont'),\n    fontSize: _('titleFontSize'),\n    fontStyle: _('titleFontStyle'),\n    fontWeight: _('titleFontWeight'),\n    limit: _('titleLimit'),\n    lineHeight: _('titleLineHeight')\n  }, {\n    // require update\n    align: _('titleAlign'),\n    angle: _('titleAngle'),\n    baseline: _('titleBaseline')\n  });\n  autoLayout(_, orient, encode, userEncode);\n  encode.update.align = patch(encode.update.align, enter.align);\n  encode.update.angle = patch(encode.update.angle, enter.angle);\n  encode.update.baseline = patch(encode.update.baseline, enter.baseline);\n  return guideMark({\n    type: TextMark,\n    role: AxisTitleRole,\n    style: GuideTitleStyle,\n    from: dataRef,\n    encode\n  }, userEncode);\n}\n\nfunction autoLayout(_, orient, encode, userEncode) {\n  const auto = (value, dim) => value != null ? (encode.update[dim] = patch(encoder(value), encode.update[dim]), false) : !has(dim, userEncode) ? true : false;\n\n  const autoY = auto(_('titleX'), 'x'),\n        autoX = auto(_('titleY'), 'y');\n  encode.enter.auto = autoX === autoY ? encoder(autoX) : ifX(orient, encoder(autoX), encoder(autoY));\n}\n\nfunction parseAxis (spec, scope) {\n  const config = axisConfig(spec, scope),\n        encode = spec.encode || {},\n        axisEncode = encode.axis || {},\n        name = axisEncode.name || undefined,\n        interactive = axisEncode.interactive,\n        style = axisEncode.style,\n        _ = lookup(spec, config),\n        band = tickBand(_); // single-element data source for axis group\n\n\n  const datum = {\n    scale: spec.scale,\n    ticks: !!_('ticks'),\n    labels: !!_('labels'),\n    grid: !!_('grid'),\n    domain: !!_('domain'),\n    title: spec.title != null\n  };\n  const dataRef = ref(scope.add(Collect({}, [datum]))); // data source for axis ticks\n\n  const ticksRef = ref(scope.add(AxisTicks({\n    scale: scope.scaleRef(spec.scale),\n    extra: scope.property(band.extra),\n    count: scope.objectProperty(spec.tickCount),\n    values: scope.objectProperty(spec.values),\n    minstep: scope.property(spec.tickMinStep),\n    formatType: scope.property(spec.formatType),\n    formatSpecifier: scope.property(spec.format)\n  }))); // generate axis marks\n\n  const children = [];\n  let size; // include axis gridlines if requested\n\n  if (datum.grid) {\n    children.push(axisGrid(spec, config, encode.grid, ticksRef, band));\n  } // include axis ticks if requested\n\n\n  if (datum.ticks) {\n    size = _('tickSize');\n    children.push(axisTicks(spec, config, encode.ticks, ticksRef, size, band));\n  } // include axis labels if requested\n\n\n  if (datum.labels) {\n    size = datum.ticks ? size : 0;\n    children.push(axisLabels(spec, config, encode.labels, ticksRef, size, band));\n  } // include axis domain path if requested\n\n\n  if (datum.domain) {\n    children.push(axisDomain(spec, config, encode.domain, dataRef));\n  } // include axis title if defined\n\n\n  if (datum.title) {\n    children.push(axisTitle(spec, config, encode.title, dataRef));\n  } // parse axis specification\n\n\n  return parseMark(guideGroup({\n    role: AxisRole,\n    from: dataRef,\n    encode: extendEncode(buildAxisEncode(_, spec), axisEncode, Skip),\n    marks: children,\n    aria: _('aria'),\n    description: _('description'),\n    zindex: _('zindex'),\n    name,\n    interactive,\n    style\n  }), scope);\n}\n\nfunction buildAxisEncode(_, spec) {\n  const encode = {\n    enter: {},\n    update: {}\n  };\n  addEncoders(encode, {\n    orient: _('orient'),\n    offset: _('offset') || 0,\n    position: value(spec.position, 0),\n    titlePadding: _('titlePadding'),\n    minExtent: _('minExtent'),\n    maxExtent: _('maxExtent'),\n    range: {\n      signal: \"abs(span(range(\\\"\".concat(spec.scale, \"\\\")))\")\n    },\n    translate: _('translate'),\n    // accessibility support\n    format: spec.format,\n    formatType: spec.formatType\n  });\n  return encode;\n}\n\nfunction parseScope (spec, scope, preprocessed) {\n  const signals = array(spec.signals),\n        scales = array(spec.scales); // parse signal definitions, if not already preprocessed\n\n  if (!preprocessed) signals.forEach(_ => parseSignal(_, scope)); // parse cartographic projection definitions\n\n  array(spec.projections).forEach(_ => parseProjection(_, scope)); // initialize scale references\n\n  scales.forEach(_ => initScale(_, scope)); // parse data sources\n\n  array(spec.data).forEach(_ => parseData$1(_, scope)); // parse scale definitions\n\n  scales.forEach(_ => parseScale(_, scope)); // parse signal updates\n\n  (preprocessed || signals).forEach(_ => parseSignalUpdates(_, scope)); // parse axis definitions\n\n  array(spec.axes).forEach(_ => parseAxis(_, scope)); // parse mark definitions\n\n  array(spec.marks).forEach(_ => parseMark(_, scope)); // parse legend definitions\n\n  array(spec.legends).forEach(_ => parseLegend(_, scope)); // parse title, if defined\n\n  if (spec.title) parseTitle(spec.title, scope); // parse collected lambda (anonymous) expressions\n\n  scope.parseLambdas();\n  return scope;\n}\n\nconst rootEncode = spec => extendEncode({\n  enter: {\n    x: {\n      value: 0\n    },\n    y: {\n      value: 0\n    }\n  },\n  update: {\n    width: {\n      signal: 'width'\n    },\n    height: {\n      signal: 'height'\n    }\n  }\n}, spec);\n\nfunction parseView(spec, scope) {\n  const config = scope.config; // add scenegraph root\n\n  const root = ref(scope.root = scope.add(operator())); // parse top-level signal definitions\n\n  const signals = collectSignals(spec, config);\n  signals.forEach(_ => parseSignal(_, scope)); // assign description, event, legend, and locale configuration\n\n  scope.description = spec.description || config.description;\n  scope.eventConfig = config.events;\n  scope.legends = scope.objectProperty(config.legend && config.legend.layout);\n  scope.locale = config.locale; // store root group item\n\n  const input = scope.add(Collect()); // encode root group item\n\n  const encode = scope.add(Encode(parseEncode(rootEncode(spec.encode), GroupMark, FrameRole, spec.style, scope, {\n    pulse: ref(input)\n  }))); // perform view layout\n\n  const parent = scope.add(ViewLayout({\n    layout: scope.objectProperty(spec.layout),\n    legends: scope.legends,\n    autosize: scope.signalRef('autosize'),\n    mark: root,\n    pulse: ref(encode)\n  }));\n  scope.operators.pop(); // parse remainder of specification\n\n  scope.pushState(ref(encode), ref(parent), null);\n  parseScope(spec, scope, signals);\n  scope.operators.push(parent); // bound / render / sieve root item\n\n  let op = scope.add(Bound({\n    mark: root,\n    pulse: ref(parent)\n  }));\n  op = scope.add(Render({\n    pulse: ref(op)\n  }));\n  op = scope.add(Sieve({\n    pulse: ref(op)\n  })); // track metadata for root item\n\n  scope.addData('root', new DataScope(scope, input, input, op));\n  return scope;\n}\n\nfunction signalObject(name, value) {\n  return value && value.signal ? {\n    name,\n    update: value.signal\n  } : {\n    name,\n    value\n  };\n}\n/**\n * Collect top-level signals, merging values as needed. Signals\n * defined in the config signals arrays are added only if that\n * signal is not explicitly defined in the specification.\n * Built-in signals (autosize, background, padding, width, height)\n * receive special treatment. They are initialized using the\n * top-level spec property, or, if undefined in the spec, using\n * the corresponding top-level config property. If this property\n * is a signal reference object, the signal expression maps to the\n * signal 'update' property. If the spec's top-level signal array\n * contains an entry that matches a built-in signal, that entry\n * will be merged with the built-in specification, potentially\n * overwriting existing 'value' or 'update' properties.\n */\n\n\nfunction collectSignals(spec, config) {\n  const _ = name => value(spec[name], config[name]),\n        signals = [signalObject('background', _('background')), signalObject('autosize', parseAutosize(_('autosize'))), signalObject('padding', parsePadding(_('padding'))), signalObject('width', _('width') || 0), signalObject('height', _('height') || 0)],\n        pre = signals.reduce((p, s) => (p[s.name] = s, p), {}),\n        map = {}; // add spec signal array\n\n\n  array(spec.signals).forEach(s => {\n    if (hasOwnProperty(pre, s.name)) {\n      // merge if built-in signal\n      s = extend(pre[s.name], s);\n    } else {\n      // otherwise add to signal list\n      signals.push(s);\n    }\n\n    map[s.name] = s;\n  }); // add config signal array\n\n  array(config.signals).forEach(s => {\n    if (!hasOwnProperty(map, s.name) && !hasOwnProperty(pre, s.name)) {\n      // add to signal list if not already defined\n      signals.push(s);\n    }\n  });\n  return signals;\n}\n\nfunction Scope$1(config, options) {\n  this.config = config || {};\n  this.options = options || {};\n  this.bindings = [];\n  this.field = {};\n  this.signals = {};\n  this.lambdas = {};\n  this.scales = {};\n  this.events = {};\n  this.data = {};\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n  this.eventConfig = null;\n  this.locale = null;\n  this._id = 0;\n  this._subid = 0;\n  this._nextsub = [0];\n  this._parent = [];\n  this._encode = [];\n  this._lookup = [];\n  this._markpath = [];\n}\n\nfunction Subscope(scope) {\n  this.config = scope.config;\n  this.options = scope.options;\n  this.legends = scope.legends;\n  this.field = Object.create(scope.field);\n  this.signals = Object.create(scope.signals);\n  this.lambdas = Object.create(scope.lambdas);\n  this.scales = Object.create(scope.scales);\n  this.events = Object.create(scope.events);\n  this.data = Object.create(scope.data);\n  this.streams = [];\n  this.updates = [];\n  this.operators = [];\n  this._id = 0;\n  this._subid = ++scope._nextsub[0];\n  this._nextsub = scope._nextsub;\n  this._parent = scope._parent.slice();\n  this._encode = scope._encode.slice();\n  this._lookup = scope._lookup.slice();\n  this._markpath = scope._markpath;\n}\n\nScope$1.prototype = Subscope.prototype = {\n  parse(spec) {\n    return parseScope(spec, this);\n  },\n\n  fork() {\n    return new Subscope(this);\n  },\n\n  isSubscope() {\n    return this._subid > 0;\n  },\n\n  toRuntime() {\n    this.finish();\n    return {\n      description: this.description,\n      operators: this.operators,\n      streams: this.streams,\n      updates: this.updates,\n      bindings: this.bindings,\n      eventConfig: this.eventConfig,\n      locale: this.locale\n    };\n  },\n\n  id() {\n    return (this._subid ? this._subid + ':' : 0) + this._id++;\n  },\n\n  add(op) {\n    this.operators.push(op);\n    op.id = this.id(); // if pre-registration references exist, resolve them now\n\n    if (op.refs) {\n      op.refs.forEach(ref => {\n        ref.$ref = op.id;\n      });\n      op.refs = null;\n    }\n\n    return op;\n  },\n\n  proxy(op) {\n    const vref = op instanceof Entry ? ref(op) : op;\n    return this.add(Proxy({\n      value: vref\n    }));\n  },\n\n  addStream(stream) {\n    this.streams.push(stream);\n    stream.id = this.id();\n    return stream;\n  },\n\n  addUpdate(update) {\n    this.updates.push(update);\n    return update;\n  },\n\n  // Apply metadata\n  finish() {\n    let name, ds; // annotate root\n\n    if (this.root) this.root.root = true; // annotate signals\n\n    for (name in this.signals) {\n      this.signals[name].signal = name;\n    } // annotate scales\n\n\n    for (name in this.scales) {\n      this.scales[name].scale = name;\n    } // annotate data sets\n\n\n    function annotate(op, name, type) {\n      let data, list;\n\n      if (op) {\n        data = op.data || (op.data = {});\n        list = data[name] || (data[name] = []);\n        list.push(type);\n      }\n    }\n\n    for (name in this.data) {\n      ds = this.data[name];\n      annotate(ds.input, name, 'input');\n      annotate(ds.output, name, 'output');\n      annotate(ds.values, name, 'values');\n\n      for (const field in ds.index) {\n        annotate(ds.index[field], name, 'index:' + field);\n      }\n    }\n\n    return this;\n  },\n\n  // ----\n  pushState(encode, parent, lookup) {\n    this._encode.push(ref(this.add(Sieve({\n      pulse: encode\n    }))));\n\n    this._parent.push(parent);\n\n    this._lookup.push(lookup ? ref(this.proxy(lookup)) : null);\n\n    this._markpath.push(-1);\n  },\n\n  popState() {\n    this._encode.pop();\n\n    this._parent.pop();\n\n    this._lookup.pop();\n\n    this._markpath.pop();\n  },\n\n  parent() {\n    return peek(this._parent);\n  },\n\n  encode() {\n    return peek(this._encode);\n  },\n\n  lookup() {\n    return peek(this._lookup);\n  },\n\n  markpath() {\n    const p = this._markpath;\n    return ++p[p.length - 1];\n  },\n\n  // ----\n  fieldRef(field, name) {\n    if (isString(field)) return fieldRef(field, name);\n\n    if (!field.signal) {\n      error('Unsupported field reference: ' + stringValue(field));\n    }\n\n    const s = field.signal;\n    let f = this.field[s];\n\n    if (!f) {\n      const params = {\n        name: this.signalRef(s)\n      };\n      if (name) params.as = name;\n      this.field[s] = f = ref(this.add(Field(params)));\n    }\n\n    return f;\n  },\n\n  compareRef(cmp) {\n    let signal = false;\n\n    const check = _ => isSignal(_) ? (signal = true, this.signalRef(_.signal)) : isExpr(_) ? (signal = true, this.exprRef(_.expr)) : _;\n\n    const fields = array(cmp.field).map(check),\n          orders = array(cmp.order).map(check);\n    return signal ? ref(this.add(Compare({\n      fields: fields,\n      orders: orders\n    }))) : compareRef(fields, orders);\n  },\n\n  keyRef(fields, flat) {\n    let signal = false;\n\n    const check = _ => isSignal(_) ? (signal = true, ref(sig[_.signal])) : _;\n\n    const sig = this.signals;\n    fields = array(fields).map(check);\n    return signal ? ref(this.add(Key({\n      fields: fields,\n      flat: flat\n    }))) : keyRef(fields, flat);\n  },\n\n  sortRef(sort) {\n    if (!sort) return sort; // including id ensures stable sorting\n\n    const a = aggrField(sort.op, sort.field),\n          o = sort.order || Ascending;\n    return o.signal ? ref(this.add(Compare({\n      fields: a,\n      orders: this.signalRef(o.signal)\n    }))) : compareRef(a, o);\n  },\n\n  // ----\n  event(source, type) {\n    const key = source + ':' + type;\n\n    if (!this.events[key]) {\n      const id = this.id();\n      this.streams.push({\n        id: id,\n        source: source,\n        type: type\n      });\n      this.events[key] = id;\n    }\n\n    return this.events[key];\n  },\n\n  // ----\n  hasOwnSignal(name) {\n    return hasOwnProperty(this.signals, name);\n  },\n\n  addSignal(name, value) {\n    if (this.hasOwnSignal(name)) {\n      error('Duplicate signal name: ' + stringValue(name));\n    }\n\n    const op = value instanceof Entry ? value : this.add(operator(value));\n    return this.signals[name] = op;\n  },\n\n  getSignal(name) {\n    if (!this.signals[name]) {\n      error('Unrecognized signal name: ' + stringValue(name));\n    }\n\n    return this.signals[name];\n  },\n\n  signalRef(s) {\n    if (this.signals[s]) {\n      return ref(this.signals[s]);\n    } else if (!hasOwnProperty(this.lambdas, s)) {\n      this.lambdas[s] = this.add(operator(null));\n    }\n\n    return ref(this.lambdas[s]);\n  },\n\n  parseLambdas() {\n    const code = Object.keys(this.lambdas);\n\n    for (let i = 0, n = code.length; i < n; ++i) {\n      const s = code[i],\n            e = parseExpression(s, this),\n            op = this.lambdas[s];\n      op.params = e.$params;\n      op.update = e.$expr;\n    }\n  },\n\n  property(spec) {\n    return spec && spec.signal ? this.signalRef(spec.signal) : spec;\n  },\n\n  objectProperty(spec) {\n    return !spec || !isObject(spec) ? spec : this.signalRef(spec.signal || propertyLambda(spec));\n  },\n\n  exprRef(code, name) {\n    const params = {\n      expr: parseExpression(code, this)\n    };\n    if (name) params.expr.$name = name;\n    return ref(this.add(Expression(params)));\n  },\n\n  addBinding(name, bind) {\n    if (!this.bindings) {\n      error('Nested signals do not support binding: ' + stringValue(name));\n    }\n\n    this.bindings.push(extend({\n      signal: name\n    }, bind));\n  },\n\n  // ----\n  addScaleProj(name, transform) {\n    if (hasOwnProperty(this.scales, name)) {\n      error('Duplicate scale or projection name: ' + stringValue(name));\n    }\n\n    this.scales[name] = this.add(transform);\n  },\n\n  addScale(name, params) {\n    this.addScaleProj(name, Scale(params));\n  },\n\n  addProjection(name, params) {\n    this.addScaleProj(name, Projection(params));\n  },\n\n  getScale(name) {\n    if (!this.scales[name]) {\n      error('Unrecognized scale name: ' + stringValue(name));\n    }\n\n    return this.scales[name];\n  },\n\n  scaleRef(name) {\n    return ref(this.getScale(name));\n  },\n\n  scaleType(name) {\n    return this.getScale(name).params.type;\n  },\n\n  projectionRef(name) {\n    return this.scaleRef(name);\n  },\n\n  projectionType(name) {\n    return this.scaleType(name);\n  },\n\n  // ----\n  addData(name, dataScope) {\n    if (hasOwnProperty(this.data, name)) {\n      error('Duplicate data set name: ' + stringValue(name));\n    }\n\n    return this.data[name] = dataScope;\n  },\n\n  getData(name) {\n    if (!this.data[name]) {\n      error('Undefined data set name: ' + stringValue(name));\n    }\n\n    return this.data[name];\n  },\n\n  addDataPipeline(name, entries) {\n    if (hasOwnProperty(this.data, name)) {\n      error('Duplicate data set name: ' + stringValue(name));\n    }\n\n    return this.addData(name, DataScope.fromEntries(this, entries));\n  }\n\n};\n\nfunction propertyLambda(spec) {\n  return (isArray(spec) ? arrayLambda : objectLambda)(spec);\n}\n\nfunction arrayLambda(array) {\n  const n = array.length;\n  let code = '[';\n\n  for (let i = 0; i < n; ++i) {\n    const value = array[i];\n    code += (i > 0 ? ',' : '') + (isObject(value) ? value.signal || propertyLambda(value) : stringValue(value));\n  }\n\n  return code + ']';\n}\n\nfunction objectLambda(obj) {\n  let code = '{',\n      i = 0,\n      key,\n      value;\n\n  for (key in obj) {\n    value = obj[key];\n    code += (++i > 1 ? ',' : '') + stringValue(key) + ':' + (isObject(value) ? value.signal || propertyLambda(value) : stringValue(value));\n  }\n\n  return code + '}';\n}\n\n/**\n * Standard configuration defaults for Vega specification parsing.\n * Users can provide their own (sub-)set of these default values\n * by passing in a config object to the top-level parse method.\n */\nfunction defaults () {\n  const defaultFont = 'sans-serif',\n        defaultSymbolSize = 30,\n        defaultStrokeWidth = 2,\n        defaultColor = '#4c78a8',\n        black = '#000',\n        gray = '#888',\n        lightGray = '#ddd';\n  return {\n    // default visualization description\n    description: 'Vega visualization',\n    // default padding around visualization\n    padding: 0,\n    // default for automatic sizing; options: 'none', 'pad', 'fit'\n    // or provide an object (e.g., {'type': 'pad', 'resize': true})\n    autosize: 'pad',\n    // default view background color\n    // covers the entire view component\n    background: null,\n    // default event handling configuration\n    // preventDefault for view-sourced event types except 'wheel'\n    events: {\n      defaults: {\n        allow: ['wheel']\n      }\n    },\n    // defaults for top-level group marks\n    // accepts mark properties (fill, stroke, etc)\n    // covers the data rectangle within group width/height\n    group: null,\n    // defaults for basic mark types\n    // each subset accepts mark properties (fill, stroke, etc)\n    mark: null,\n    arc: {\n      fill: defaultColor\n    },\n    area: {\n      fill: defaultColor\n    },\n    image: null,\n    line: {\n      stroke: defaultColor,\n      strokeWidth: defaultStrokeWidth\n    },\n    path: {\n      stroke: defaultColor\n    },\n    rect: {\n      fill: defaultColor\n    },\n    rule: {\n      stroke: black\n    },\n    shape: {\n      stroke: defaultColor\n    },\n    symbol: {\n      fill: defaultColor,\n      size: 64\n    },\n    text: {\n      fill: black,\n      font: defaultFont,\n      fontSize: 11\n    },\n    trail: {\n      fill: defaultColor,\n      size: defaultStrokeWidth\n    },\n    // style definitions\n    style: {\n      // axis & legend labels\n      'guide-label': {\n        fill: black,\n        font: defaultFont,\n        fontSize: 10\n      },\n      // axis & legend titles\n      'guide-title': {\n        fill: black,\n        font: defaultFont,\n        fontSize: 11,\n        fontWeight: 'bold'\n      },\n      // headers, including chart title\n      'group-title': {\n        fill: black,\n        font: defaultFont,\n        fontSize: 13,\n        fontWeight: 'bold'\n      },\n      // chart subtitle\n      'group-subtitle': {\n        fill: black,\n        font: defaultFont,\n        fontSize: 12\n      },\n      // defaults for styled point marks in Vega-Lite\n      point: {\n        size: defaultSymbolSize,\n        strokeWidth: defaultStrokeWidth,\n        shape: 'circle'\n      },\n      circle: {\n        size: defaultSymbolSize,\n        strokeWidth: defaultStrokeWidth\n      },\n      square: {\n        size: defaultSymbolSize,\n        strokeWidth: defaultStrokeWidth,\n        shape: 'square'\n      },\n      // defaults for styled group marks in Vega-Lite\n      cell: {\n        fill: 'transparent',\n        stroke: lightGray\n      }\n    },\n    // defaults for title\n    title: {\n      orient: 'top',\n      anchor: 'middle',\n      offset: 4,\n      subtitlePadding: 3\n    },\n    // defaults for axes\n    axis: {\n      minExtent: 0,\n      maxExtent: 200,\n      bandPosition: 0.5,\n      domain: true,\n      domainWidth: 1,\n      domainColor: gray,\n      grid: false,\n      gridWidth: 1,\n      gridColor: lightGray,\n      labels: true,\n      labelAngle: 0,\n      labelLimit: 180,\n      labelOffset: 0,\n      labelPadding: 2,\n      ticks: true,\n      tickColor: gray,\n      tickOffset: 0,\n      tickRound: true,\n      tickSize: 5,\n      tickWidth: 1,\n      titlePadding: 4\n    },\n    // correction for centering bias\n    axisBand: {\n      tickOffset: -0.5\n    },\n    // defaults for cartographic projection\n    projection: {\n      type: 'mercator'\n    },\n    // defaults for legends\n    legend: {\n      orient: 'right',\n      padding: 0,\n      gridAlign: 'each',\n      columnPadding: 10,\n      rowPadding: 2,\n      symbolDirection: 'vertical',\n      gradientDirection: 'vertical',\n      gradientLength: 200,\n      gradientThickness: 16,\n      gradientStrokeColor: lightGray,\n      gradientStrokeWidth: 0,\n      gradientLabelOffset: 2,\n      labelAlign: 'left',\n      labelBaseline: 'middle',\n      labelLimit: 160,\n      labelOffset: 4,\n      labelOverlap: true,\n      symbolLimit: 30,\n      symbolType: 'circle',\n      symbolSize: 100,\n      symbolOffset: 0,\n      symbolStrokeWidth: 1.5,\n      symbolBaseFillColor: 'transparent',\n      symbolBaseStrokeColor: gray,\n      titleLimit: 180,\n      titleOrient: 'top',\n      titlePadding: 5,\n      layout: {\n        offset: 18,\n        direction: 'horizontal',\n        left: {\n          direction: 'vertical'\n        },\n        right: {\n          direction: 'vertical'\n        }\n      }\n    },\n    // defaults for scale ranges\n    range: {\n      category: {\n        scheme: 'tableau10'\n      },\n      ordinal: {\n        scheme: 'blues'\n      },\n      heatmap: {\n        scheme: 'yellowgreenblue'\n      },\n      ramp: {\n        scheme: 'blues'\n      },\n      diverging: {\n        scheme: 'blueorange',\n        extent: [1, 0]\n      },\n      symbol: ['circle', 'square', 'triangle-up', 'cross', 'diamond', 'triangle-right', 'triangle-down', 'triangle-left']\n    }\n  };\n}\n\nfunction parse$1 (spec, config, options) {\n  if (!isObject(spec)) {\n    error('Input Vega specification must be an object.');\n  }\n\n  config = mergeConfig(defaults(), config, spec.config);\n  return parseView(spec, new Scope$1(config, options)).toRuntime();\n}\n\nexport { AxisDomainRole, AxisGridRole, AxisLabelRole, AxisRole, AxisTickRole, AxisTitleRole, DataScope, FrameRole, LegendEntryRole, LegendLabelRole, LegendRole, LegendSymbolRole, LegendTitleRole, MarkRole, Scope$1 as Scope, ScopeRole, defaults as config, parse$1 as parse, parseSignal as signal, parseSignalUpdates as signalUpdates, parseStream as stream };\n","{\"type\":\"Topology\",\"objects\":{\"land\":{\"type\":\"GeometryCollection\",\"geometries\":[{\"type\":\"MultiPolygon\",\"arcs\":[[[0]],[[1]],[[2]],[[3]],[[4]],[[5]],[[6]],[[7]],[[8]],[[9]],[[10]],[[11]],[[12]],[[13]],[[14]],[[15]],[[16]],[[17]],[[18]],[[19]],[[20]],[[21]],[[22]],[[23]],[[24]],[[25]],[[26]],[[27]],[[28]],[[29]],[[30]],[[31]],[[32]],[[33]],[[34]],[[35]],[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]],[[44]],[[45]],[[46]],[[47]],[[48]],[[49]],[[50]],[[51]],[[52]],[[53]],[[54]],[[55]],[[56]],[[57]],[[58]],[[59]],[[60,1383]],[[62]],[[63]],[[64]],[[65]],[[66]],[[67]],[[68]],[[69]],[[70]],[[71]],[[72]],[[73]],[[74]],[[75]],[[76]],[[77]],[[78]],[[79]],[[80]],[[81]],[[82]],[[83]],[[84]],[[85]],[[86]],[[87]],[[88]],[[89]],[[90]],[[91]],[[92]],[[93]],[[94]],[[95]],[[96]],[[97]],[[98]],[[99]],[[100]],[[101]],[[102]],[[103]],[[104]],[[105]],[[106]],[[107]],[[108]],[[109]],[[110]],[[111]],[[112]],[[113]],[[114]],[[115]],[[116]],[[117]],[[118]],[[119]],[[120]],[[121]],[[122]],[[123]],[[124]],[[125]],[[126]],[[127]],[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138,1385],[1384]],[[140]],[[141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]],[[161]],[[162]],[[163]],[[164]],[[165]],[[166]],[[167]],[[168]],[[169]],[[170]],[[171]],[[172]],[[173]],[[174]],[[175]],[[176]],[[177]],[[178]],[[179]],[[180]],[[181]],[[182]],[[183]],[[184]],[[185]],[[186]],[[187]],[[188]],[[189]],[[190]],[[191]],[[192]],[[193]],[[194]],[[195]],[[196]],[[197]],[[198]],[[199]],[[200]],[[201]],[[202]],[[203]],[[204]],[[205]],[[206]],[[207]],[[208]],[[209]],[[210]],[[211]],[[212]],[[213]],[[214]],[[215]],[[216]],[[217]],[[218]],[[219]],[[220]],[[221]],[[222]],[[223]],[[224]],[[225]],[[226]],[[227]],[[228]],[[229]],[[230]],[[231]],[[232]],[[233]],[[234]],[[235]],[[236]],[[237]],[[238]],[[239]],[[240]],[[241]],[[242]],[[243]],[[244]],[[245]],[[246]],[[247]],[[248]],[[249]],[[250]],[[251]],[[252]],[[253]],[[254]],[[255]],[[256]],[[257]],[[258]],[[259]],[[260]],[[261]],[[262]],[[263]],[[264]],[[265]],[[266]],[[267]],[[268]],[[269]],[[270]],[[271]],[[272]],[[273]],[[274]],[[275]],[[276]],[[277]],[[278]],[[279]],[[280]],[[281]],[[282]],[[283]],[[284]],[[285]],[[286]],[[287]],[[288]],[[289]],[[290]],[[291]],[[292]],[[293]],[[294]],[[295]],[[296]],[[297]],[[298]],[[299]],[[300]],[[301]],[[302]],[[303]],[[304]],[[305]],[[306]],[[307]],[[308]],[[309]],[[310]],[[311]],[[312]],[[313]],[[314]],[[315]],[[316]],[[317]],[[318]],[[319]],[[320]],[[321]],[[322]],[[323]],[[324]],[[325]],[[326]],[[327]],[[328]],[[329]],[[330]],[[331]],[[332]],[[333]],[[334]],[[335]],[[336]],[[337]],[[338]],[[339]],[[340]],[[341]],[[342]],[[343]],[[344]],[[345]],[[346]],[[347]],[[348]],[[349]],[[350]],[[351]],[[352]],[[353]],[[354]],[[355]],[[356]],[[357]],[[358]],[[359]],[[360]],[[361]],[[362]],[[363]],[[364]],[[365]],[[366]],[[367]],[[368]],[[369]],[[370]],[[371]],[[372]],[[373]],[[374]],[[375]],[[376]],[[377]],[[378]],[[379]],[[380]],[[381]],[[382]],[[383]],[[384]],[[385]],[[386]],[[387]],[[388]],[[389]],[[390]],[[391]],[[392]],[[393]],[[394]],[[395]],[[396]],[[397]],[[398]],[[399]],[[400]],[[401]],[[402]],[[403]],[[404]],[[405]],[[406]],[[407]],[[408]],[[409]],[[410]],[[411]],[[412]],[[413]],[[414]],[[415]],[[416]],[[417]],[[418]],[[419]],[[420]],[[421]],[[422]],[[423]],[[424]],[[425]],[[426]],[[427]],[[428]],[[429]],[[430]],[[431]],[[432]],[[433]],[[434]],[[435]],[[436]],[[437]],[[438]],[[439]],[[440]],[[441]],[[442]],[[443]],[[444]],[[445]],[[446]],[[447]],[[448]],[[449]],[[450]],[[451]],[[452]],[[453]],[[454]],[[455]],[[456]],[[457]],[[458]],[[459]],[[460]],[[461]],[[462]],[[463]],[[464]],[[465]],[[466]],[[467]],[[468]],[[469]],[[470]],[[471]],[[472]],[[473]],[[474]],[[475]],[[476]],[[477]],[[478]],[[479]],[[480]],[[481]],[[482]],[[483]],[[484]],[[485]],[[486]],[[487]],[[488]],[[489]],[[490]],[[491]],[[492]],[[493]],[[494]],[[495]],[[496]],[[497]],[[498]],[[499]],[[500]],[[501]],[[502]],[[503]],[[504]],[[505]],[[506]],[[507]],[[508]],[[509]],[[510]],[[511]],[[512]],[[513]],[[514]],[[515]],[[516]],[[517]],[[518]],[[519]],[[520]],[[521]],[[522]],[[523]],[[524]],[[525]],[[526]],[[527]],[[528]],[[529]],[[530]],[[531]],[[532]],[[533]],[[534]],[[535]],[[536]],[[537]],[[538]],[[539]],[[540]],[[541]],[[542]],[[543]],[[544]],[[545]],[[546]],[[547]],[[548]],[[549]],[[550]],[[551]],[[552]],[[553]],[[554]],[[555]],[[556]],[[557]],[[558]],[[559]],[[560]],[[561]],[[562]],[[563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]],[[579]],[[580]],[[581]],[[582]],[[583]],[[584]],[[585]],[[586]],[[587]],[[588]],[[589]],[[590]],[[591]],[[592]],[[593]],[[594]],[[595]],[[596]],[[597]],[[598]],[[599]],[[600]],[[601]],[[602]],[[603]],[[604]],[[605]],[[606]],[[607]],[[608]],[[609]],[[610]],[[611]],[[612]],[[613]],[[614]],[[615]],[[616]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]],[[623]],[[624]],[[625]],[[626]],[[627]],[[628]],[[629]],[[630]],[[631]],[[632]],[[633]],[[634]],[[635]],[[636]],[[637]],[[638]],[[639]],[[640]],[[641]],[[642]],[[643]],[[644]],[[645]],[[646]],[[647]],[[648]],[[649]],[[650]],[[651]],[[652]],[[653]],[[654]],[[655]],[[656]],[[657]],[[658]],[[659]],[[660]],[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]],[[668]],[[669]],[[670]],[[671]],[[672]],[[673]],[[674]],[[675]],[[676]],[[677]],[[678]],[[679]],[[680]],[[681]],[[682]],[[683]],[[684]],[[685]],[[686]],[[687]],[[688]],[[689]],[[690]],[[691]],[[692]],[[693]],[[694]],[[695]],[[696]],[[697]],[[698]],[[699]],[[700]],[[701]],[[702]],[[703]],[[704]],[[705]],[[706]],[[707]],[[708]],[[709]],[[710]],[[711]],[[712]],[[713]],[[714]],[[715]],[[716]],[[717]],[[718]],[[719]],[[720]],[[721]],[[722]],[[723]],[[724]],[[725]],[[726]],[[727]],[[728]],[[729]],[[730]],[[731]],[[732]],[[733]],[[734]],[[735]],[[736]],[[737]],[[738]],[[739]],[[740]],[[741]],[[742]],[[743]],[[744]],[[745]],[[746]],[[747]],[[748]],[[749]],[[750]],[[751]],[[752]],[[753]],[[754]],[[755]],[[756]],[[757]],[[758]],[[759]],[[760]],[[761]],[[762]],[[763]],[[764]],[[765]],[[766]],[[767]],[[768]],[[769]],[[770]],[[771]],[[772]],[[773]],[[774]],[[775]],[[776]],[[777]],[[778]],[[779]],[[780]],[[781]],[[782]],[[783]],[[784]],[[785]],[[786]],[[787]],[[788]],[[789]],[[790]],[[791]],[[792]],[[793]],[[794]],[[795]],[[796]],[[797]],[[798]],[[799]],[[800]],[[801]],[[802]],[[803]],[[804]],[[805]],[[806]],[[807]],[[808]],[[809]],[[810]],[[811]],[[812]],[[813]],[[814]],[[815]],[[816]],[[817]],[[818]],[[819]],[[820]],[[821]],[[822]],[[823]],[[824]],[[825]],[[826]],[[827]],[[828]],[[829]],[[830]],[[831]],[[832]],[[833]],[[834]],[[835]],[[836]],[[837]],[[838]],[[839]],[[840]],[[841]],[[842]],[[843]],[[844]],[[845]],[[846]],[[847]],[[848]],[[849]],[[850]],[[851]],[[852]],[[853]],[[854]],[[855]],[[856]],[[857]],[[858]],[[859]],[[860]],[[861]],[[862]],[[863]],[[864]],[[865]],[[866]],[[867]],[[868]],[[869]],[[870]],[[871]],[[872]],[[873]],[[874]],[[875]],[[876]],[[877]],[[878]],[[879]],[[880]],[[881]],[[882]],[[883]],[[884]],[[885]],[[886]],[[887]],[[888]],[[889]],[[890]],[[891]],[[892]],[[893]],[[894]],[[895]],[[896]],[[897]],[[898]],[[899]],[[900]],[[901]],[[902]],[[903]],[[904]],[[905]],[[906]],[[907]],[[908]],[[909]],[[910]],[[911]],[[912]],[[913]],[[914]],[[915]],[[916]],[[917]],[[918]],[[919]],[[920]],[[921]],[[922]],[[923]],[[924]],[[925]],[[926]],[[927]],[[928]],[[929]],[[930]],[[931]],[[932]],[[933]],[[934]],[[935]],[[936]],[[937]],[[938]],[[939]],[[940]],[[941]],[[942]],[[943]],[[944]],[[945]],[[946]],[[947]],[[948]],[[949]],[[950]],[[951]],[[952]],[[953]],[[954]],[[955]],[[956]],[[957]],[[958]],[[959]],[[960]],[[961]],[[962]],[[963]],[[964]],[[965]],[[966]],[[967]],[[968]],[[969]],[[970]],[[971]],[[972]],[[973]],[[974]],[[975]],[[976]],[[977]],[[978]],[[979]],[[980]],[[981]],[[982]],[[983]],[[984]],[[985]],[[986]],[[987]],[[988]],[[989]],[[990]],[[991]],[[992]],[[993]],[[994]],[[995]],[[996]],[[997]],[[998]],[[999]],[[1000]],[[1001]],[[1002]],[[1003]],[[1004]],[[1005]],[[1006]],[[1007]],[[1008]],[[1009]],[[1010]],[[1011]],[[1012]],[[1013]],[[1014]],[[1015]],[[1016]],[[1017]],[[1018]],[[1019]],[[1020]],[[1021]],[[1022]],[[1023]],[[1024]],[[1025]],[[1026]],[[1027]],[[1028]],[[1029]],[[1030]],[[1031]],[[1032]],[[1033]],[[1034]],[[1035]],[[1036]],[[1037]],[[1038]],[[1039]],[[1040]],[[1041]],[[1042]],[[1043]],[[1044]],[[1045]],[[1046]],[[1047]],[[1048]],[[1049]],[[1050]],[[1051]],[[1052]],[[1053]],[[1054]],[[1055]],[[1056]],[[1057]],[[1058]],[[1059]],[[1060]],[[1061]],[[1062]],[[1063]],[[1064]],[[1065]],[[1066]],[[1067]],[[1068]],[[1069]],[[1070]],[[1071]],[[1072]],[[1073]],[[1074]],[[1075]],[[1076]],[[1077]],[[1078]],[[1079]],[[1080]],[[1081]],[[1082]],[[1083]],[[1084]],[[1085]],[[1086]],[[1087]],[[1088]],[[1089]],[[1090]],[[1091]],[[1092]],[[1093]],[[1094]],[[1095]],[[1096]],[[1097]],[[1098]],[[1099]],[[1100]],[[1101]],[[1102]],[[1103]],[[1104]],[[1105]],[[1106]],[[1107]],[[1108]],[[1109]],[[1110]],[[1111]],[[1112]],[[1113]],[[1114]],[[1115]],[[1116]],[[1117]],[[1118]],[[1119]],[[1120]],[[1121]],[[1122]],[[1123]],[[1124]],[[1125]],[[1126]],[[1127]],[[1128]],[[1129]],[[1130]],[[1131]],[[1132]],[[1133]],[[1134]],[[1135]],[[1136]],[[1137]],[[1138]],[[1139]],[[1140]],[[1141]],[[1142]],[[1143]],[[1144]],[[1145]],[[1146]],[[1147]],[[1148]],[[1149]],[[1150]],[[1151]],[[1152]],[[1153]],[[1154]],[[1155]],[[1156]],[[1157]],[[1158]],[[1159]],[[1160]],[[1161]],[[1162]],[[1163]],[[1164]],[[1165]],[[1166]],[[1167]],[[1168]],[[1169]],[[1170]],[[1171]],[[1172]],[[1173]],[[1174]],[[1175]],[[1176]],[[1177]],[[1178]],[[1179]],[[1180]],[[1181]],[[1182]],[[1183]],[[1184]],[[1185]],[[1186]],[[1187]],[[1188]],[[1189]],[[1190]],[[1191]],[[1192]],[[1193]],[[1194]],[[1195]],[[1196]],[[1197]],[[1198]],[[1199]],[[1200]],[[1201]],[[1202]],[[1203]],[[1204]],[[1205]],[[1206]],[[1207]],[[1208]],[[1209]],[[1210]],[[1211]],[[1212]],[[1213]],[[1214]],[[1215]],[[1216]],[[1217]],[[1218]],[[1219]],[[1220]],[[1221]],[[1222]],[[1223]],[[1224]],[[1225]],[[1226]],[[1227]],[[1228]],[[1229]],[[1230]],[[1231]],[[1232]],[[1233]],[[1234]],[[1235]],[[1236]],[[1237]],[[1238]],[[1239]],[[1240]],[[1241]],[[1242]],[[1243]],[[1244]],[[1245]],[[1246]],[[1247]],[[1248]],[[1249]],[[1250]],[[1251]],[[1252]],[[1253]],[[1254]],[[1255]],[[1256]],[[1257]],[[1258]],[[1259]],[[1260]],[[1261]],[[1262]],[[1263]],[[1264]],[[1265]],[[1266]],[[1267]],[[1268]],[[1269]],[[1270]],[[1271]],[[1272]],[[1273]],[[1274]],[[1275]],[[1276]],[[1277]],[[1278]],[[1279]],[[1280]],[[1281]],[[1282]],[[1283]],[[1284]],[[1285]],[[1286]],[[1287]],[[1288]],[[1289]],[[1290]],[[1291]],[[1292]],[[1293]],[[1294]],[[1295]],[[1296]],[[1297]],[[1298]],[[1299]],[[1300]],[[1301]],[[1302]],[[1303]],[[1304]],[[1305]],[[1306]],[[1307]],[[1308]],[[1309]],[[1310]],[[1311]],[[1312]],[[1313]],[[1314]],[[1315]],[[1316]],[[1317]],[[1318]],[[1319]],[[1320]],[[1321]],[[1322]],[[1323]],[[1324]],[[1325]],[[1326]],[[1327]],[[1328]],[[1329]],[[1330]],[[1331]],[[1332]],[[1333]],[[1334]],[[1335]],[[1336]],[[1337]],[[1338]],[[1339]],[[1340]],[[1341]],[[1342]],[[1343]],[[1344]],[[1345]],[[1346]],[[1347]],[[1348]],[[1349]],[[1350]],[[1351]],[[1352]],[[1353]],[[1354]],[[1355]],[[1356]],[[1357]],[[1358]],[[1359]],[[1360]],[[1361]],[[1362]],[[1363]],[[1364]],[[1365]],[[1366]],[[1367]],[[1368]],[[1369]],[[1370]],[[1371]],[[1372]],[[1373]],[[1374]],[[1375]],[[1376]],[[1377]],[[1378]],[[1379]],[[1380]],[[1382],[1381]],[[1386]],[[1387]],[[1388]],[[1389]],[[1390]],[[1391]],[[1392]],[[1393]],[[1394]],[[1395]],[[1396]],[[1397]],[[1398]],[[1399]],[[1400]],[[1401]],[[1402]],[[1403]],[[1404]],[[1405]],[[1406]],[[1407]],[[1408]],[[1409]],[[1410]],[[1411]],[[1412]],[[1413]],[[1414]],[[1415]],[[1416]],[[1417]],[[1418]],[[1419]],[[1420]],[[1421]],[[1422]],[[1423]],[[1424]]]}]}},\"arcs\":[[[99999,42529],[-42,-77],[-15,-39],[-13,-44],[-36,-47],[-15,-63],[1,-63],[36,66],[40,54],[12,11],[13,0],[-1,-19],[-6,-18],[-5,-48],[11,-45],[-30,5],[-29,-4],[-35,-25],[-34,-11],[-13,-1],[-13,9],[-8,13],[-6,29],[-6,5],[-28,-1],[-40,-59],[-14,-49],[-16,-3],[-18,11],[-23,-38],[-26,-14],[-12,32],[-7,40],[-10,29],[-29,7],[4,36],[8,15],[7,21],[5,24],[14,-16],[14,-9],[16,18],[17,1],[17,53],[26,33],[37,26],[37,19],[19,3],[18,11],[32,50],[21,25],[24,15],[22,9],[20,-8],[17,5],[42,35],[0,-9]],[[99231,41965],[-15,-9],[8,45],[8,15],[5,3],[9,3],[-4,-32],[-11,-25]],[[85380,52298],[-9,-18],[-9,6],[-6,24],[2,18],[8,11],[9,-8],[5,-33]],[[27407,66042],[-9,-12],[-4,4],[0,17],[-11,39],[0,10],[27,-38],[1,-10],[-4,-10]],[[27547,66130],[-5,0],[2,9],[11,16],[4,-6],[0,-9],[-12,-10]],[[27600,66188],[-7,-3],[11,25],[3,-2],[-7,-20]],[[89771,44956],[-7,-69],[-14,-55],[-1,-32],[3,-45],[22,-33],[18,-21],[10,-58],[31,-81],[-1,-56],[16,-69],[16,-137],[4,-121],[16,-80],[-10,-172],[11,-70],[15,-58],[18,-116],[13,-106],[19,-30],[38,-36],[41,40],[28,53],[31,13],[43,28],[31,-71],[17,-80],[74,-104],[42,-68],[32,-37],[30,-50],[-3,-50],[-7,-39],[7,-61],[4,-71],[-6,-86],[22,-130],[7,-103],[23,-101],[-2,-104],[-4,-40],[-3,-58],[18,-72],[17,-54],[24,-58],[33,-89],[23,-17],[20,-2],[-3,-90],[41,-179],[22,-147],[-15,-197],[-14,-114],[3,-56],[53,-137],[30,-25],[-6,-65],[-4,-101],[24,-78],[27,-58],[30,-35],[29,-28],[38,-28],[48,-12],[25,-44],[13,-35],[39,-12],[17,7],[22,14],[14,-24],[11,-31],[21,-86],[44,-85],[30,-14],[18,-43],[24,-11],[22,-6],[30,-33],[49,-75],[45,-13],[20,-21],[44,-83],[17,-44],[18,-66],[-22,-6],[-21,13],[-13,-64],[29,-90],[35,-63],[41,-67],[40,-94],[10,-72],[11,-29],[13,-101],[35,-59],[2,-108],[18,-149],[19,-135],[14,-40],[17,-65],[18,8],[14,21],[28,-64],[15,-28],[8,16],[-17,123],[11,72],[10,9],[16,2],[18,-58],[26,-62],[47,-55],[38,-52],[11,2],[-4,40],[1,59],[15,9],[14,-29],[25,-91],[5,-188],[0,-158],[17,-162],[24,-43],[16,-40],[28,-54],[18,-51],[23,-23],[74,-108],[20,-13],[32,-2],[40,-49],[19,-45],[43,-169],[20,-59],[43,-59],[19,-19],[29,-40],[10,-59],[3,-34],[17,-63],[25,-75],[38,-41],[34,-91],[2,-148],[18,-73],[12,-32],[27,-30],[11,-24],[-23,-195],[22,-391],[-12,-122],[22,-121],[52,-210],[12,-74],[7,-87],[34,-111],[-2,-169],[13,-80],[-3,-105],[-40,-112],[-31,-139],[-1,-118],[-20,-228],[-14,-62],[-10,-95],[-43,-230],[-2,-90],[6,-108],[-7,-103],[-11,-71],[-10,-130],[-44,-202],[-63,-150],[-4,-114],[-8,-50],[-13,-62],[-39,-69],[-23,-29],[-9,-40],[-22,0],[0,-13],[15,-12],[-7,-21],[-58,-36],[-40,-47],[-40,-113],[-17,-60],[-21,-57],[-13,-27],[-6,-28],[-8,-72],[-21,-13],[-18,-21],[8,-68],[-9,-78],[-3,-53],[-10,-34],[-11,12],[-10,-5],[-12,-19],[19,-5],[11,-9],[-39,-76],[-36,-78],[-10,-51],[-15,-65],[-14,-144],[-11,-83],[8,-58],[-2,-11],[-8,-4],[-5,7],[-17,-20],[-4,-20],[7,-25],[4,-8],[-2,-12],[-6,-13],[-16,0],[-19,-21],[-53,-213],[-23,-57],[-27,-87],[-10,-79],[-8,-86],[-10,-145],[-9,-103],[-21,-99],[-7,-71],[-3,-135],[10,-103],[-7,-54],[0,-52],[-8,-49],[-34,-11],[-28,-40],[-40,-65],[-23,-24],[-51,-18],[-99,8],[-189,-24],[-37,-15],[-70,-45],[-68,-70],[-66,-94],[-149,-256],[-117,-28],[-22,0],[-18,7],[-21,-16],[0,-32],[19,-33],[14,-31],[25,43],[11,-12],[4,-79],[1,-50],[-8,-27],[-15,-20],[-17,13],[-2,27],[-22,65],[-26,57],[-25,18],[-14,-19],[-23,-20],[-20,72],[-20,63],[-28,7],[-24,-1],[-19,27],[-39,43],[8,33],[10,35],[22,13],[-6,48],[-12,39],[-30,10],[-21,-7],[-12,-30],[-16,-54],[-64,-67],[-32,37],[-36,55],[18,-4],[36,2],[30,49],[13,31],[15,66],[-19,46],[-18,34],[-26,30],[-98,-102],[-21,-15],[-19,-20],[34,-17],[20,5],[21,-30],[-34,-42],[-26,-12],[-34,-25],[-63,-66],[-80,-136],[-35,-39],[-41,-32],[-56,37],[-31,8],[-40,56],[-67,38],[-63,74],[-44,38],[-31,8],[-43,-16],[-73,67],[-56,7],[-36,-67],[-29,5],[-18,9],[-59,110],[-56,55],[-107,28],[-66,76],[-49,146],[-94,168],[-25,61],[-12,60],[-1,47],[13,90],[17,89],[3,50],[-35,167],[-50,159],[-23,49],[-62,106],[-57,79],[-15,42],[-4,21],[27,-10],[12,32],[19,11],[14,-43],[17,-8],[0,72],[10,35],[-7,15],[-5,14],[-25,16],[-28,-24],[-21,-31],[-28,-26],[-11,-28],[-29,-1],[-12,-7],[-58,-53],[-36,-1],[-57,18],[18,73],[23,43],[19,50],[30,173],[-5,151],[-15,61],[-48,125],[-22,76],[-27,80],[-13,-46],[-8,-49],[-26,-70],[-13,-157],[-50,-239],[-35,-3],[-30,10],[-52,-28],[-35,-33],[-32,0],[-18,-10],[-23,8],[37,187],[31,-5],[35,7],[15,-3],[23,2],[18,86],[11,96],[-7,62],[-3,64],[7,73],[3,53],[43,174],[37,89],[42,72],[-5,68],[-14,85],[-4,65],[20,20],[19,41],[-22,187],[-14,55],[-22,55],[0,-71],[2,-70],[-30,-89],[-40,-64],[-26,-60],[-25,-136],[-32,-115],[-30,-43],[-27,-9],[-27,-18],[-42,-45],[-42,-39],[-30,-50],[-26,-27],[-86,-230],[-40,-76],[-8,-31],[-16,-26],[3,-37],[13,-24],[13,-102],[-8,-22],[-14,11],[-35,57],[-22,-21],[-18,-23],[-46,105],[-20,24],[-24,42],[-26,36],[-11,5],[-19,-8],[2,28],[13,23],[11,6],[21,-34],[24,-30],[14,-2],[6,12],[-23,118],[-15,104],[-7,30],[-19,106],[-9,30],[-40,74],[-43,88],[-11,104],[-16,67],[-20,42],[-31,38],[-85,14],[-35,107],[-21,133],[16,9],[19,2],[7,41],[-5,64],[-84,78],[-40,83],[-34,35],[-31,14],[-42,-3],[-53,3],[-126,131],[-30,4],[-90,-41],[-31,7],[-137,179],[-91,86],[-30,15],[-39,15],[-32,-21],[-22,-19],[-46,-22],[-182,14],[-156,-28],[-105,-19],[-67,-24],[-112,-107],[-133,-103],[-108,-49],[-99,-65],[-66,-19],[-84,-8],[-179,32],[-61,-24],[-97,-120],[-29,-29],[-55,-33],[-141,-155],[-65,-33],[-42,-11],[-36,-32],[-32,-66],[-45,-183],[-27,-86],[-61,-138],[-39,-46],[-40,6],[-44,-48],[-38,51],[-31,9],[-50,-4],[-174,-58],[-25,68],[-32,10],[-60,-3],[-90,20],[-164,-25],[-79,-28],[-31,-25],[-58,16],[-99,-23],[-35,-38],[-26,-35],[-51,-154],[-56,-51],[-47,-1],[-51,-12],[-105,-148],[-106,-144],[-36,-15],[-40,-24],[-52,-12],[-26,-13],[-122,37],[-77,4],[-97,22],[-83,71],[-64,40],[-73,155],[-44,58],[-80,70],[-23,-2],[-19,-19],[-33,49],[-1,64],[-9,54],[1,142],[5,167],[29,-38],[23,-36],[49,2],[44,62],[25,92],[21,103],[-3,110],[-15,193],[10,41],[15,16],[5,96],[4,296],[-11,111],[-68,226],[-45,197],[-32,88],[-28,143],[-23,198],[-7,100],[-7,185],[8,105],[-4,61],[-28,167],[-64,156],[-10,58],[0,61],[-15,71],[-51,143],[-52,123],[-9,60],[-10,249],[-19,114],[-89,287],[-104,248],[-29,102],[-13,34],[8,4],[11,-13],[13,-25],[7,-2],[6,21],[-1,47],[4,26],[9,-14],[11,-53],[33,-138],[10,-70],[42,-21],[13,18],[15,36],[5,97],[-21,44],[-20,19],[-32,72],[-21,115],[-33,107],[0,38],[15,28],[25,-15],[23,-62],[25,-57],[-4,-100],[-4,-27],[2,-23],[9,-22],[12,-17],[13,25],[11,58],[7,-7],[18,-133],[14,-36],[27,-42],[24,32],[11,28],[-4,94],[7,91],[-4,67],[-61,177],[-56,218],[-34,109],[-28,164],[-18,56],[-24,92],[-1,104],[2,71],[19,151],[18,79],[56,181],[3,78],[0,59],[8,90],[0,63],[-8,59],[-23,100],[31,177],[45,226],[18,33],[28,31],[5,-47],[-13,-157],[19,-81],[-6,-92],[18,15],[27,18],[21,48],[11,46],[51,184],[30,69],[41,50],[85,61],[81,80],[39,77],[49,66],[34,73],[32,49],[166,183],[28,34],[36,4],[44,-6],[40,10],[43,-42],[31,-5],[77,46],[41,40],[71,89],[31,25],[72,28],[82,37],[98,154],[70,-10],[63,-15],[51,46],[119,28],[66,39],[124,102],[33,35],[50,73],[44,91],[43,123],[27,110],[11,57],[26,90],[17,71],[14,34],[48,48],[71,135],[23,28],[4,43],[-15,24],[-19,15],[-13,143],[-12,99],[-1,69],[5,66],[28,103],[19,44],[28,51],[25,16],[21,45],[34,44],[15,45],[21,91],[19,69],[15,-3],[28,-160],[19,-85],[35,-100],[32,-148],[27,-67],[13,-44],[10,-20],[3,28],[-3,33],[13,112],[-6,79],[2,31],[6,12],[13,-8],[25,-44],[13,-16],[9,3],[-1,72],[13,45],[-5,31],[-22,-2],[-9,39],[-18,44],[-21,32],[-24,74],[-8,28],[10,14],[15,-2],[13,31],[5,42],[-11,69],[12,25],[22,-7],[36,-109],[16,11],[13,44],[23,12],[24,-8],[15,-31],[32,-32],[42,4],[22,-8],[45,6],[22,-10],[-4,17],[-25,20],[-27,4],[-32,-2],[-14,21],[-5,55],[8,40],[5,17],[21,-7],[19,2],[2,53],[7,48],[11,39],[0,37],[-12,-10],[-28,-86],[-14,70],[-20,53],[4,77],[12,76],[18,10],[16,-12],[23,45],[13,34],[-3,28],[3,21],[16,-6],[62,-69],[12,-36],[13,14],[4,39],[-1,39],[-14,-5],[-32,3],[-7,22],[3,19],[-15,46],[21,29],[17,2],[13,20],[0,27],[4,12],[10,-17],[32,-7],[31,-35],[15,-8],[6,19],[2,41],[-39,41],[-1,40],[-17,47],[0,45],[24,39],[5,37],[15,15],[27,0],[19,32],[21,11],[6,70],[-1,48],[9,12],[21,-20],[-6,-55],[0,-53],[-6,-29],[8,2],[5,12],[9,35],[22,-14],[6,-37],[3,-37],[11,-12],[15,56],[21,15],[-1,71],[8,51],[2,38],[13,19],[3,40],[-10,28],[-6,51],[18,11],[18,-25],[13,-64],[8,-29],[11,16],[7,42],[22,25],[22,-34],[24,-48],[31,42],[28,77],[-5,47],[4,49],[35,26],[29,-19],[25,-52],[54,-39],[46,-56],[20,-36],[40,-58],[25,-60],[34,-107],[82,-131],[5,-23],[-11,-43],[-10,-56],[-12,-95],[-3,-139],[12,10],[12,50],[13,-10],[14,-32],[2,31],[-9,18],[-15,64],[0,34],[12,28],[19,32],[20,22],[13,18],[2,24],[18,23],[28,8],[16,-4],[118,-59],[29,-60],[3,-73],[11,-26],[7,46],[-2,100],[10,20],[31,-15],[22,-20],[30,-66],[6,-32],[13,-21],[4,30],[-6,43],[-4,50],[6,43],[36,3],[23,10],[-11,16],[-15,6],[-25,40],[-17,42],[27,42],[-1,10],[-25,-1],[-34,40],[-29,56],[22,103],[45,101],[25,34],[2,34],[12,62],[8,53],[2,42],[11,43],[28,41],[37,15],[18,16],[18,38],[16,46],[-34,90],[3,50],[6,59],[42,43],[22,112],[15,17],[33,-3],[13,10],[-2,89],[3,35],[14,14],[18,-12],[11,-39],[25,-36],[9,20],[-4,39],[-3,51],[23,11],[19,3],[1,41],[-3,33],[8,14],[48,7],[13,34],[7,29],[6,-16],[8,-66],[27,-38],[80,-1],[45,27],[19,-16],[30,-13],[32,31],[20,24],[33,-31],[11,-32],[8,69],[20,24],[20,14],[26,-12],[10,4],[-23,51],[1,46],[-1,69],[4,62],[8,45],[-55,91],[-55,14],[-40,-19],[-17,15],[-36,72],[-34,27],[-2,18],[41,52],[16,-9],[24,-49],[14,-17],[12,4],[7,38],[11,20],[20,-12],[62,-82],[34,-80],[18,21],[31,45],[29,-9],[17,-27],[25,-97],[20,-48],[48,-13],[24,-19],[25,-32],[33,3],[70,-12],[65,-62],[27,-39],[32,-11],[18,-15],[34,-5],[53,44],[24,-40],[11,-28],[48,-52],[53,-16],[37,53],[55,39],[38,60],[28,29],[27,49],[10,-2],[-22,-46],[-2,-26],[17,-11],[-2,-14],[-23,-35],[-29,-56],[1,-34],[11,-18],[13,8],[18,28],[23,16],[19,-23],[7,-80],[14,-53],[30,-7],[19,0],[19,74],[-10,63],[-12,14],[6,23],[48,104],[27,-3],[19,-102],[31,-53],[32,4],[17,-14],[14,-61],[-114,-251],[-5,-28],[15,-45],[6,-53],[-37,-128],[-14,-6],[-13,35],[-19,22],[-18,-16],[-18,-9],[-66,-71],[0,-183],[17,-109],[-10,-71],[-19,-126],[-22,-47],[-17,-30],[-57,-172],[-18,-41],[-19,-59],[6,-56],[7,-39],[22,-44],[83,-92],[38,-64],[66,-76],[15,-53],[9,-43],[47,-49],[34,-30],[10,8],[7,10],[8,0],[9,-6],[-2,-38],[-3,-21],[3,-27],[24,-34],[38,1],[22,8],[25,-36],[22,-24],[36,-48],[63,-58],[49,-38],[58,-140],[44,-81],[49,-59],[72,-41],[33,7],[54,-48],[53,-22],[28,-66],[9,-50],[3,-39],[26,-92],[54,-30],[69,-92],[57,-41],[14,-24],[25,-29],[48,-1],[84,46],[38,47],[51,74],[23,128],[14,103],[71,212],[20,105],[18,140],[15,87],[-5,95],[16,172],[36,237],[13,79],[-7,118],[-22,220],[10,77],[10,106],[-16,77],[-16,53],[-2,75],[17,140],[15,74],[16,96],[-9,182],[34,63],[13,32],[26,0],[12,-14],[3,36],[-10,34],[-4,39],[-8,20],[-16,7],[-13,21],[-19,22],[3,81],[33,156],[18,60],[11,-25],[14,-20],[2,45],[-5,46],[25,152],[27,207],[8,188],[44,36],[23,47],[13,55],[25,0],[17,-24],[-11,-41],[-4,-31],[47,-79],[16,-60],[7,-57],[9,-54],[4,-72],[0,-115],[6,-109],[17,-34],[15,-22],[22,-3],[31,-18]],[[99521,41836],[0,-26],[8,-11],[8,-2],[21,-48],[31,-42],[19,-32],[1,-28],[-6,-29],[8,-51],[4,-54],[14,-86],[-20,-16],[-30,-2],[-7,-15],[-11,8],[-25,-6],[-25,-28],[-23,-38],[-27,0],[-30,-8],[-30,5],[-21,21],[-38,22],[-49,19],[-21,15],[-17,25],[-16,63],[-3,31],[3,30],[15,10],[12,15],[1,19],[6,14],[7,5],[3,9],[-5,32],[-1,29],[29,53],[31,45],[56,42],[34,-4],[52,33],[17,15],[16,-10],[9,-24]],[[95611,40180],[31,-36],[34,15],[42,-57],[108,-172],[37,-37],[23,-14],[16,-28],[16,-40],[20,-28],[9,-26],[2,-36],[8,-22],[37,-57],[22,-50],[32,-26],[13,-30],[17,-14],[18,-31],[30,-24],[68,-88],[53,-84],[26,-52],[29,-46],[36,-37],[34,-42],[17,-99],[-9,-35],[-20,-18],[-18,-1],[-17,-12],[-56,64],[-14,9],[-15,-4],[-8,14],[-6,21],[-35,24],[-32,37],[-9,26],[-5,32],[-8,19],[-45,28],[-31,31],[-22,44],[-34,31],[-54,63],[-27,20],[-24,31],[-65,115],[-23,21],[-20,51],[-55,120],[-27,50],[-29,44],[-22,52],[-17,61],[-40,88],[-5,38],[2,38],[-10,25],[-16,15],[-8,26],[1,35],[5,18],[40,-60]],[[85480,52331],[21,-13],[21,4],[10,26],[3,33],[11,62],[24,42],[17,7],[12,18],[-2,46],[1,45],[18,48],[57,68],[31,24],[42,7],[5,-25],[-5,-37],[8,-56],[-4,-150],[-10,-21],[-42,-52],[-47,-42],[-13,-17],[-12,-42],[1,-41],[38,-54],[59,-52],[13,-24],[8,-40],[2,-45],[14,-21],[20,-10],[13,-22],[11,-30],[-100,70],[-26,31],[-32,4],[-31,9],[-32,27],[-34,6],[-16,-19],[-7,-38],[-4,-43],[8,-53],[-1,-32],[-6,-58],[25,-171],[31,-137],[45,-142],[23,-49],[25,-44],[-41,13],[-12,48],[-52,47],[-10,28],[-34,135],[-10,25],[-31,46],[-14,33],[-5,46],[4,48],[-2,66],[1,65],[7,81],[-11,28],[-15,26],[-17,62],[-5,70],[1,40],[7,35],[10,31],[2,30],[-25,44],[-25,124],[-2,65],[32,124],[-1,60],[7,36],[3,38],[17,83],[28,70],[47,99],[18,21],[20,14],[2,-24],[-4,-21],[-34,-101],[-5,-22],[-1,-43],[17,-24],[18,-51],[3,-68],[1,-72],[-4,-73],[-7,-25],[-28,-73],[-65,-85],[-5,-21],[0,-24],[12,-29],[15,-22]],[[69217,23554],[23,-4],[13,6],[62,76],[16,2],[-2,-59],[16,-26],[-20,-6],[-38,2],[-9,-33],[39,-42],[19,-6],[15,0],[29,10],[23,15],[36,36],[22,14],[41,0],[21,34],[10,10],[24,-1],[21,-13],[13,-31],[7,-37],[-5,-37],[-15,-36],[-26,-22],[6,-26],[-7,-13],[-13,-1],[-12,6],[-16,31],[-20,16],[-48,-1],[-22,-2],[-3,-23],[-12,-18],[-12,-10],[-16,4],[-3,-10],[9,-24],[21,-31],[36,-22],[21,-5],[3,42],[26,4],[23,-12],[16,-30],[-13,-10],[-12,-16],[-3,-21],[-23,-23],[-13,-2],[-44,11],[-26,25],[-6,18],[-16,7],[-18,-23],[-19,-5],[-37,19],[-35,31],[-22,12],[-33,8],[-19,-71],[-26,-30],[-33,-3],[-16,6],[-9,28],[2,29],[5,29],[11,29],[6,32],[-2,30],[-12,22],[6,40],[-12,30],[4,23],[20,16],[-9,13],[-10,4],[-7,18],[-6,22],[7,41],[12,39],[-2,45],[19,42],[17,47],[12,19],[15,3],[7,-13],[3,-26],[-6,-17],[14,-7],[4,-55],[-9,-22],[-1,-22],[-19,-46],[5,-37],[37,-16]],[[67603,98329],[-52,-2],[-51,9],[-67,29],[-67,34],[20,18],[63,23],[82,42],[139,9],[67,0],[67,10],[19,21],[13,41],[12,22],[15,17],[74,14],[63,-1],[63,-16],[40,-14],[38,-28],[20,-23],[-6,-28],[3,-23],[18,-21],[-122,-65],[-125,-36],[-326,-32]],[[66098,97996],[-43,-11],[-113,21],[-17,11],[-14,20],[-19,78],[-1,23],[-7,16],[-28,28],[-20,13],[18,15],[124,-11],[266,-6],[136,-28],[40,-16],[39,-26],[-238,-14],[-32,-12],[1,-29],[-9,-26],[-25,-3],[-58,-43]],[[42935,92696],[10,-34],[1,-16],[-2,-14],[-6,-9],[-13,-9],[25,-22],[7,-15],[2,-12],[-16,-24],[-110,-31],[-31,-15],[-38,-37],[-47,-31],[-16,0],[-18,33],[-74,24],[-139,-13],[-162,-30],[-58,-14],[-29,7],[-9,12],[0,15],[19,47],[8,12],[37,15],[25,41],[-8,44],[10,62],[25,10],[64,-22],[41,-5],[73,-3],[99,8],[79,25],[144,71],[25,-1],[19,-25],[13,-12],[43,-20],[7,-12]],[[94374,46501],[61,-92],[27,8],[80,-2],[47,-66],[28,-30],[16,-59],[19,-14],[12,-30],[7,-55],[-5,-9],[-24,-20],[-18,-9],[-47,20],[-44,42],[-89,5],[-41,12],[-14,17],[-13,21],[-21,51],[-17,61],[-2,35],[-2,68],[5,24],[17,25],[18,-3]],[[82586,56704],[-26,-42],[3,52],[7,49],[26,99],[19,31],[31,78],[18,38],[42,75],[39,82],[13,6],[14,1],[12,9],[25,45],[63,147],[53,110],[54,139],[26,41],[7,15],[49,128],[16,18],[17,14],[12,17],[11,22],[17,56],[8,65],[-5,37],[-10,54],[13,74],[9,34],[35,150],[10,31],[14,-19],[2,-27],[-7,-64],[0,-31],[8,-33],[-10,-53],[25,-142],[19,-89],[1,-30],[-26,-53],[-15,-16],[-33,-15],[-15,-15],[-23,-44],[-15,-57],[-4,-30],[-7,-23],[-68,-39],[-31,-25],[-15,-19],[-7,-31],[5,-55],[-57,-199],[-18,-51],[-19,-45],[-24,-31],[-33,-19],[-27,-39],[-18,-68],[-22,-61],[-28,-45],[-30,-40],[-28,-30],[-30,-20],[-9,-27],[-6,-33],[-14,-16],[-15,-8],[-28,-33]],[[84026,58533],[32,-29],[32,25],[31,-7],[26,-38],[-9,-24],[-1,-27],[57,58],[16,-3],[-1,-54],[-3,-46],[-7,-44],[-12,-52],[-17,-46],[-21,-33],[-26,-21],[-12,-19],[-4,-28],[1,-35],[-6,-32],[-27,-14],[-42,-62],[-90,-40],[-25,-27],[-16,-36],[-17,-32],[-10,-8],[-4,15],[-1,13],[13,84],[-3,35],[-6,33],[4,66],[16,62],[8,68],[3,132],[12,182],[-1,22],[-9,25],[-35,20],[-14,19],[7,36],[13,25],[18,-1],[16,-23],[57,-48],[30,-40],[27,-51]],[[84202,57064],[-18,-6],[-20,3],[-13,28],[-22,122],[-26,30],[-30,22],[-15,19],[-14,23],[-42,122],[-3,74],[7,42],[13,38],[14,10],[35,1],[18,5],[40,56],[3,22],[0,92],[-4,64],[-10,62],[11,29],[14,28],[14,55],[3,39],[0,41],[4,29],[12,14],[54,45],[10,3],[71,-41],[14,-62],[1,-20],[-11,-69],[-9,-46],[-24,-71],[-18,-77],[-13,-115],[-8,-38],[-22,-72],[-7,-40],[0,-86],[-4,-32],[0,-31],[44,-143],[4,-23],[0,-26],[-8,-32],[-18,-55],[-10,-19],[-17,-14]],[[84603,58377],[20,-20],[22,8],[27,45],[30,-16],[18,-68],[9,-25],[5,-44],[-2,-106],[-7,-95],[6,-20],[14,-17],[12,-22],[10,-27],[7,-30],[2,-74],[18,-62],[2,-24],[-4,-25],[-29,5],[-3,-21],[1,-27],[-10,17],[-17,60],[-16,26],[5,-98],[5,-48],[1,-47],[-27,36],[-33,23],[-9,19],[4,61],[-1,31],[-14,64],[16,140],[0,29],[-3,28],[-13,57],[-21,47],[-13,0],[-32,-33],[-16,11],[-9,131],[-13,127],[-9,32],[-7,34],[6,28],[13,-11],[17,-34],[21,-19],[10,-16],[7,-30]],[[84788,59059],[20,-47],[4,-34],[-2,-38],[9,-16],[16,-5],[20,-19],[15,-35],[-9,-32],[3,-46],[-16,-59],[2,-105],[9,-33],[1,-33],[-2,-36],[4,-28],[24,-96],[5,-32],[-8,-25],[-2,-24],[15,-2],[21,-40],[12,-53],[-3,-13],[-17,41],[-13,6],[-55,-11],[-33,17],[-22,2],[-21,70],[-19,12],[-15,31],[-25,79],[-8,46],[18,46],[5,37],[-1,36],[-17,-6],[-14,12],[-17,44],[-7,25],[-13,22],[-20,50],[-30,20],[-11,14],[-24,42],[-16,53],[-17,92],[-9,95],[76,-25],[76,5],[86,22],[25,-26]],[[83528,59607],[14,-5],[45,18],[18,-9],[12,-33],[15,-10],[12,-17],[23,29],[22,-33],[20,-63],[24,-44],[22,-33],[5,-25],[-14,-40],[-4,-50],[2,-55],[16,-114],[-5,-31],[-18,-44],[-12,-49],[1,-20],[-5,-16],[-1,-35],[-11,7],[-9,-5],[-9,-16],[-15,-33],[-23,10],[-10,10],[-3,29],[-7,20],[-9,12],[-24,50],[-11,38],[-1,40],[-6,37],[-12,33],[-16,26],[-6,24],[-2,29],[-1,75],[-24,92],[-8,23],[-21,22],[-18,30],[-8,29],[-7,48],[-5,7],[-14,-3],[-13,7],[3,35],[14,25],[19,3],[51,-14],[14,-11]],[[93321,47991],[-7,-54],[-5,-9],[-7,20],[-24,-20],[-11,-22],[-13,-17],[-28,4],[-27,15],[-26,28],[-23,35],[-23,55],[-14,57],[7,66],[-9,60],[-44,43],[-10,14],[-19,59],[-19,26],[-25,52],[-6,23],[-11,66],[-3,40],[9,116],[-4,58],[12,-5],[13,-23],[15,-16],[35,-11],[27,-46],[25,-90],[4,-30],[8,-21],[26,-38],[14,-25],[26,-98],[15,-21],[17,-9],[16,-14],[27,-43],[24,-49],[17,-51],[12,-55],[9,-70]],[[92490,49103],[-21,-44],[-13,41],[-16,36],[-13,36],[-17,79],[0,40],[4,42],[1,43],[-8,87],[-19,78],[-68,189],[-21,49],[-24,44],[-16,11],[-31,11],[-14,8],[-26,31],[-24,36],[-60,106],[-31,30],[-17,37],[-94,120],[-27,28],[-34,0],[-28,24],[22,15],[5,40],[-5,41],[47,-67],[50,-58],[14,-47],[25,-3],[45,-38],[30,-35],[29,-40],[33,-58],[62,-45],[9,-17],[32,-75],[42,-64],[14,-35],[177,-301],[30,-85],[2,-58],[-6,-22],[-19,-49],[1,-58],[-6,-51],[-16,-52]],[[88481,47077],[-66,-76],[-87,13],[-31,2],[-51,-19],[-11,15],[10,71],[41,190],[49,168],[20,43],[29,41],[31,33],[69,34],[62,-7],[9,-13],[27,-56],[18,-44],[7,-63],[-27,-107],[-29,-102],[-49,-80],[-21,-43]],[[86042,50192],[64,-64],[33,-9],[56,8],[21,-6],[53,-82],[15,-56],[4,-48],[9,-46],[13,-11],[15,-5],[20,-66],[4,-21],[-15,-166],[-63,63],[-60,71],[-26,27],[-69,60],[-11,21],[-8,27],[-30,37],[-60,6],[-23,-1],[-9,-6],[2,-20],[0,-40],[-15,-12],[-37,26],[-34,9],[-29,25],[-39,14],[-4,12],[3,19],[-1,18],[-9,6],[-18,-3],[-17,-17],[-14,-21],[-20,-55],[-11,-21],[-34,-9],[-14,5],[-13,14],[-39,101],[-13,22],[-14,18],[-14,8],[-13,-16],[-8,-31],[-3,-37],[-4,-22],[-17,-59],[-13,-36],[-5,6],[7,57],[0,32],[-9,34],[-5,35],[65,165],[24,40],[103,13],[61,-8],[34,4],[22,12],[19,-5],[4,-33],[12,-24],[16,2],[29,25],[26,40],[15,17],[16,3],[16,-3],[16,-9],[43,-34]],[[85238,50064],[46,-45],[10,-29],[9,-35],[9,-20],[10,-15],[18,-31],[5,-46],[-4,-93],[-21,-8],[-19,-14],[-40,-54],[-20,-10],[-21,-4],[-15,-14],[-15,-6],[-39,30],[-38,35],[-54,61],[-10,15],[-9,32],[-25,59],[-6,38],[-2,106],[6,25],[11,13],[36,-25],[24,26],[69,22],[71,-2],[14,-11]],[[84106,46882],[-40,-20],[-24,-20],[-23,-26],[-15,-5],[-27,-2],[-37,5],[-26,-9],[-71,-66],[-28,-6],[-24,-16],[-8,26],[-10,19],[-24,4],[-24,-1],[-24,-59],[-38,13],[-15,-6],[-14,-12],[-14,-5],[-15,4],[-56,45],[-64,27],[-64,-10],[-55,25],[-30,-19],[-29,-28],[-8,29],[-11,26],[-9,37],[0,44],[3,30],[8,27],[5,29],[3,31],[12,-15],[12,5],[38,34],[37,50],[34,19],[20,5],[16,-10],[17,4],[18,11],[28,-39],[11,-8],[38,-3],[34,-22],[30,-34],[44,-31],[27,-42],[20,-15],[15,-5],[13,6],[18,28],[20,12],[18,0],[32,7],[14,7],[15,15],[15,-9],[13,-15],[54,-74],[17,-2],[30,16],[10,20],[4,31],[9,25],[11,22],[14,17],[40,28],[28,28],[19,48],[-44,20],[9,34],[15,20],[20,-7],[17,-27],[7,-102],[-14,-15],[-8,-15],[-6,-20],[-26,-38],[10,-46],[-7,-20],[-10,-9]],[[83336,46442],[13,-25],[45,-50],[7,-21],[3,-35],[9,-26],[21,-4],[22,5],[16,-16],[15,-26],[21,-50],[19,-56],[23,-31],[14,-46],[-8,-41],[-30,-57],[-16,-12],[-21,-4],[-35,-34],[-12,18],[-39,12],[-30,24],[-26,45],[-15,47],[-19,43],[-33,28],[-58,83],[-37,7],[-15,-6],[-15,0],[-77,37],[-12,22],[-9,28],[-9,27],[-5,31],[10,27],[10,19],[43,32],[31,10],[35,-2],[53,10],[51,-16],[15,12],[25,34],[9,-12],[11,-31]],[[82844,47051],[14,-22],[13,2],[26,34],[16,13],[17,1],[17,-6],[16,-25],[6,-40],[6,-13],[10,49],[13,14],[14,8],[22,-3],[17,-23],[16,-69],[-1,-60],[6,-22],[11,-17],[8,-23],[-7,-24],[-7,-11],[-21,-11],[-9,4],[-9,17],[-10,6],[-23,-6],[-21,-13],[3,-22],[17,-10],[5,-11],[-1,-14],[-7,-3],[-22,19],[-15,-3],[-54,-26],[-14,1],[-9,24],[1,63],[-6,17],[-40,-77],[-12,-19],[-17,-9],[-16,3],[-59,-46],[-18,6],[-18,0],[-62,-50],[-33,-14],[-17,-1],[-17,4],[-15,-4],[-14,-21],[-28,-17],[-28,13],[-25,18],[-23,23],[-5,29],[1,35],[10,48],[-7,84],[5,39],[9,38],[15,14],[18,2],[31,34],[28,45],[16,-4],[37,-31],[22,-4],[37,5],[15,-19],[6,-44],[8,-16],[11,-11],[26,-74],[24,4],[21,-14],[38,45],[28,-1],[8,34],[-17,37],[-20,31],[-11,6],[-12,-2],[-11,5],[-45,67],[-14,37],[-8,43],[5,31],[31,28],[15,7],[55,-19],[9,-16],[14,-68],[11,-29]],[[82399,46881],[-35,-120],[13,-19],[7,-18],[-58,-25],[-24,13],[-14,-3],[-59,22],[-42,28],[-5,21],[3,26],[13,-8],[32,-4],[13,11],[0,77],[-5,100],[44,82],[24,33],[27,20],[68,-46],[11,-12],[9,-18],[4,-30],[-26,-130]],[[82068,47145],[28,-31],[40,-89],[3,-25],[-12,-24],[-28,-38],[-63,-58],[-10,-28],[-14,-54],[-3,-23],[-4,-13],[-7,-9],[-14,-8],[-15,12],[13,34],[1,42],[-10,39],[-14,32],[-29,44],[-30,40],[-31,19],[-33,9],[-12,19],[-19,49],[-6,27],[-3,28],[2,27],[8,1],[32,-6],[59,-32],[30,-2],[16,7],[43,62],[11,-1],[41,-27],[30,-23]],[[79456,50881],[10,-40],[13,-35],[10,-39],[13,-185],[43,-159],[126,-63],[-21,-25],[-10,-23],[-8,-27],[-18,-110],[1,-24],[11,-37],[3,-41],[-16,0],[-17,10],[-15,15],[-13,20],[-14,16],[-15,10],[-26,32],[-34,22],[-36,17],[-17,47],[-8,58],[9,86],[-9,24],[-13,21],[-15,62],[-6,73],[-22,28],[-30,17],[-13,14],[-58,-26],[-14,6],[-12,20],[-32,21],[1,40],[15,32],[35,33],[16,27],[3,36],[-6,26],[3,28],[11,27],[13,21],[34,27],[16,-48],[7,-40],[10,-30],[14,42],[-9,72],[27,16],[26,1],[19,-20],[13,-31],[5,-44]],[[56282,85611],[20,-14],[18,4],[18,10],[40,-9],[92,-71],[8,-19],[-54,-8],[-13,-22],[-13,-15],[-15,-5],[-27,-30],[-35,-29],[-8,-17],[-64,3],[-35,-11],[-29,-33],[-11,-62],[-21,-49],[-21,-18],[-22,-3],[-6,19],[3,18],[46,69],[10,23],[-23,10],[-20,24],[-42,28],[-8,22],[10,2],[10,7],[11,19],[5,21],[-34,64],[18,10],[21,-2],[22,-19],[24,22],[11,3],[17,-8],[17,42],[40,14],[20,13],[20,-3]],[[56002,97117],[38,-14],[83,3],[45,-98],[26,-103],[41,-8],[80,15],[70,7],[36,-8],[65,-30],[28,-21],[-24,-17],[-59,-19],[-10,-55],[59,-20],[98,-47],[56,-6],[98,19],[93,-37],[92,-45],[-215,-56],[-19,-16],[-29,-42],[-32,-35],[-29,-20],[-64,-35],[-35,-13],[-78,3],[-29,-14],[-27,-28],[-27,-21],[-69,-5],[-35,28],[12,9],[5,17],[-13,40],[66,40],[15,23],[-13,8],[-18,-2],[-48,12],[-14,0],[-40,-24],[-55,-16],[-55,-4],[-224,-31],[-34,11],[-15,61],[91,31],[14,53],[23,35],[26,23],[50,60],[12,4],[-123,48],[-48,31],[-53,61],[-17,50],[-71,42],[9,54],[-52,-4],[-41,38],[38,21],[190,24],[113,24],[43,-1]],[[67268,98406],[17,-23],[-10,-37],[-22,-27],[-10,-38],[-86,-9],[-24,-9],[-23,-29],[-87,-18],[-65,-49],[-91,9],[-124,34],[-105,-28],[-69,-8],[-85,42],[-11,10],[-5,29],[5,26],[23,55],[30,31],[15,10],[12,19],[34,11],[105,7],[39,-6],[12,-21],[57,2],[94,13],[137,20],[79,18],[70,-4],[70,-11],[18,-19]],[[63178,98417],[127,-23],[95,6],[29,-3],[28,-7],[28,-16],[38,-35],[0,-49],[-17,-2],[-161,22],[-74,51],[-20,5],[-29,-13],[-25,-31],[-27,-8],[-31,-39],[-29,5],[-15,-4],[-37,-27],[-93,0],[-15,-12],[-30,-38],[-38,-10],[-66,-6],[-22,21],[-10,33],[-15,17],[-92,-19],[-69,13],[-67,22],[-68,8],[61,23],[334,48],[131,12],[62,34],[92,22],[25,0]],[[63966,98460],[42,-10],[103,2],[32,-14],[149,-84],[38,-2],[31,-30],[-154,-49],[-52,-36],[-189,-8],[-121,-17],[-26,-15],[12,-26],[-58,-29],[-191,-4],[-24,-9],[-37,-31],[3,-5],[65,-8],[10,-6],[9,-14],[5,-20],[-9,-26],[-24,-4],[-26,3],[-60,20],[-7,-7],[-6,-14],[-19,-28],[-22,-8],[-61,21],[-20,-6],[-19,-13],[-24,-6],[-56,-4],[-29,17],[25,23],[70,35],[-23,15],[-70,4],[-55,-9],[-28,-24],[-26,-5],[-72,2],[-40,31],[-30,12],[-26,25],[211,83],[70,32],[67,16],[87,9],[27,10],[27,4],[17,-6],[44,-29],[129,5],[27,24],[2,56],[-13,33],[27,63],[74,25],[171,34],[43,2]],[[63962,91696],[5,-56],[-17,-23],[-16,-6],[-7,35],[-13,15],[-48,-41],[-22,-46],[-60,-66],[-123,-47],[-75,-20],[-68,-6],[-63,42],[-35,79],[-6,24],[-4,32],[1,33],[4,50],[7,49],[26,44],[60,52],[59,34],[31,8],[75,2],[214,-117],[48,-30],[27,-41]],[[66791,92128],[9,-29],[-1,-53],[-11,-39],[-31,-6],[-31,-16],[-53,17],[-29,-11],[-30,-1],[-24,6],[-25,8],[-16,11],[1,30],[-22,43],[-34,14],[-31,5],[-35,13],[-17,-6],[-22,-16],[-14,5],[-76,92],[-12,21],[-8,24],[-11,15],[-26,64],[13,29],[26,19],[18,5],[32,43],[59,18],[12,-3],[11,-13],[61,-44],[33,-29],[28,-35],[30,-30],[89,-51],[60,-50],[61,-35],[16,-15]],[[69631,93948],[-82,-27],[-22,-2],[-50,7],[-22,-11],[-33,27],[2,24],[16,25],[9,31],[-6,78],[42,49],[56,19],[164,22],[23,-6],[33,-15],[25,-18],[33,-43],[26,-18],[40,-34],[12,-33],[-2,-30],[-75,-6],[-130,-25],[-59,-14]],[[75745,97744],[-68,-5],[-80,5],[-130,61],[-85,26],[-70,40],[-15,44],[44,28],[54,11],[91,2],[117,-4],[116,-29],[247,-31],[90,-21],[-56,-51],[-61,-19],[-63,-27],[-64,-19],[-67,-11]],[[81496,94700],[-10,-27],[-15,-21],[-11,-26],[-19,-19],[-59,-24],[-46,-54],[-8,-5],[-163,30],[-26,9],[-53,33],[-75,31],[-39,46],[19,8],[19,4],[67,-6],[19,14],[10,39],[1,23],[5,18],[22,13],[241,-40],[93,-23],[28,-23]],[[89169,94469],[-140,-47],[-27,2],[-63,48],[-23,103],[26,31],[29,11],[30,6],[123,4],[26,-5],[26,-13],[12,-19],[5,-24],[-14,-68],[-10,-29]],[[56625,72312],[19,-4],[26,1],[6,3],[16,34],[20,1],[9,-34],[-20,-15],[-5,-9],[4,-7],[16,-13],[21,5],[1,-26],[4,-22],[11,-13],[11,-2],[26,4],[25,8],[25,17],[26,9],[79,-9],[28,-36],[53,-5],[50,-19],[26,13],[45,12],[7,-13],[-6,-82],[3,-24],[13,-11],[12,5],[16,27],[37,21],[39,0],[33,54],[10,3],[-6,-26],[-5,-63],[-7,-37],[-3,-29],[-22,-15],[-33,-3],[-61,6],[-60,-10],[-113,-28],[-113,-14],[-15,9],[0,37],[-3,25],[-7,18],[-35,15],[-33,26],[-130,36],[-31,14],[-50,-8],[-18,1],[-13,13],[-9,22],[-4,69],[7,69],[10,18],[5,-21],[13,-9],[12,21],[0,31],[6,29],[9,-12],[7,-45],[16,-12]],[[56504,74284],[15,-62],[15,-21],[31,-25],[15,-4],[52,-45],[62,-8],[8,-13],[7,-35],[13,-27],[3,-22],[-7,-23],[9,-72],[16,-68],[23,-33],[29,-10],[28,1],[7,-14],[-3,-59],[-12,-24],[-9,-5],[-9,6],[-7,14],[-8,7],[-16,1],[-12,24],[-29,33],[-5,19],[-1,31],[-13,22],[-11,43],[-11,11],[-6,22],[-1,9],[-43,6],[-35,0],[-30,24],[-9,63],[-18,17],[-13,18],[-11,25],[-29,45],[-31,39],[-30,25],[-32,16],[-26,-19],[-15,4],[-3,13],[33,27],[44,50],[31,16],[15,2],[29,-44]],[[59573,72346],[-145,-174],[-10,-52],[7,-35],[20,-44],[5,-11],[8,-33],[-32,-10],[-31,-3],[-18,4],[-17,-1],[-51,-95],[-28,-32],[-33,-19],[-33,-11],[-17,-1],[-15,-12],[-10,-22],[0,-22],[-5,-17],[-18,4],[-8,34],[-13,15],[-32,-8],[-16,1],[-52,33],[-16,13],[-10,28],[-27,101],[-4,75],[25,-19],[23,23],[23,38],[27,15],[16,-7],[17,-6],[30,12],[13,56],[4,65],[50,-19],[52,-9],[42,-4],[41,11],[126,69],[36,41],[23,14],[38,34],[40,19],[-25,-39]],[[55298,85158],[-23,-14],[-13,-40],[-19,-7],[-17,-14],[-7,-128],[33,-49],[-18,-7],[-17,-14],[-11,-22],[-12,-47],[-45,-26],[-17,-19],[-25,-44],[-13,-63],[-25,-27],[-29,-6],[17,52],[22,42],[-21,28],[-13,46],[-16,34],[13,39],[-7,63],[2,62],[19,32],[22,25],[34,59],[37,42],[51,19],[23,-17],[10,38],[17,9],[15,-9],[33,-37]],[[53491,83977],[0,-58],[-7,-17],[-10,-11],[-28,-11],[-24,-17],[-22,-29],[-7,-41],[16,-30],[31,-16],[8,-58],[-26,-28],[-64,-28],[-7,-68],[2,-54],[-1,-39],[-5,-54],[-52,-24],[-34,82],[0,33],[-11,38],[-1,33],[-12,52],[-50,14],[-19,2],[-27,-9],[-6,3],[-33,72],[6,79],[-17,40],[-3,18],[1,20],[-14,16],[-18,9],[-8,44],[20,11],[48,-5],[15,3],[13,9],[39,73],[-1,16],[4,21],[42,8],[19,-28],[-3,-46],[2,-57],[26,-16],[10,-3],[10,43],[8,21],[10,12],[4,39],[-6,24],[-13,17],[48,49],[50,38],[29,2],[29,-9],[27,-13],[15,-11],[8,-18],[-18,-43],[-5,-23],[12,-77]],[[52956,83876],[12,-30],[14,-64],[23,-72],[-10,-30],[7,-38],[-7,-41],[-44,-46],[-51,-2],[-52,22],[-74,44],[-6,24],[-10,13],[-20,74],[1,92],[37,11],[81,43],[18,-6],[20,-23],[23,-1],[32,32],[6,-2]],[[50873,74763],[27,-19],[28,17],[15,-5],[15,-9],[3,-37],[-13,-41],[-18,-41],[-16,-45],[-13,-52],[-25,-31],[-23,-18],[-48,38],[-28,10],[-8,14],[-7,58],[-12,18],[-19,8],[-16,-14],[-21,-31],[-12,31],[-17,5],[-7,19],[0,23],[115,139],[33,31],[71,36],[11,-5],[-9,-22],[0,-9],[9,-10],[-2,-17],[-9,-14],[-4,-27]],[[16512,9357],[49,-58],[19,-38],[11,-39],[-199,-96],[-9,-10],[-9,-50],[5,-11],[8,-8],[1,-19],[-17,-6],[-340,-38],[-159,35],[-22,23],[-5,36],[19,7],[35,5],[-9,16],[-22,29],[-2,24],[48,61],[23,16],[-90,57],[-11,13],[-12,4],[-44,-7],[-43,3],[15,23],[12,38],[38,32],[28,5],[28,-3],[132,-2],[130,-17],[131,-12],[215,-11],[46,-2]],[[14908,9627],[74,-16],[25,-25],[33,-18],[33,-10],[31,-27],[18,-48],[16,-15],[49,-32],[17,-28],[-3,-14],[-93,-11],[-31,4],[-29,-9],[-9,-17],[1,-18],[16,-13],[34,-12],[34,2],[63,14],[28,-3],[32,-15],[32,-2],[84,46],[21,8],[21,-2],[115,-54],[24,-27],[-17,-15],[-14,-22],[6,-15],[55,-22],[23,-28],[14,-11],[-3,-24],[-8,-29],[1,-33],[-28,-18],[-13,0],[-60,18],[-187,10],[-60,15],[-92,65],[-36,4],[-37,16],[-57,46],[-99,37],[-63,45],[2,38],[-9,27],[-12,11],[-12,6],[-36,10],[-35,-3],[-18,-11],[-29,-28],[-32,-5],[-25,6],[-5,6],[-1,74],[-27,10],[-23,30],[-4,40],[10,37],[35,45],[40,5],[40,-7],[41,10],[65,6],[74,-4]],[[31618,5715],[-26,-2],[-14,4],[-14,12],[-12,46],[-137,37],[-16,21],[-9,46],[-23,18],[-178,82],[-15,17],[-10,25],[33,10],[70,-18],[127,-5],[28,-8],[26,-14],[142,-3],[72,-7],[40,-65],[81,-19],[11,-38],[10,-68],[-110,-50],[-25,-7],[-51,-14]],[[33931,14945],[11,-8],[9,4],[9,8],[9,19],[33,27],[31,3],[-10,-28],[74,-50],[-6,-39],[14,-32],[-30,-10],[-24,-33],[21,-13],[12,-28],[-25,-7],[-54,17],[-28,-4],[3,26],[-9,10],[-33,-5],[-14,-57],[-10,-5],[-12,9],[9,37],[-14,6],[-14,-1],[-42,-27],[-12,-1],[-25,32],[79,42],[-33,21],[-7,26],[5,36],[-29,-5],[-28,-14],[-13,-2],[-11,12],[4,26],[23,43],[18,45],[36,22],[21,17],[28,8],[12,16],[26,1],[15,-37],[-1,-22],[-12,-24],[-6,-61]],[[32450,14706],[-27,-60],[40,1],[28,21],[29,9],[25,-30],[-52,-23],[-50,-40],[-20,-21],[-22,-9],[-28,3],[-28,-4],[-25,-39],[-26,-18],[-8,15],[-10,9],[-56,14],[-26,20],[-23,14],[-25,7],[13,35],[15,31],[85,42],[-8,13],[-6,17],[67,21],[2,21],[-4,24],[21,16],[20,24],[14,7],[42,-3],[29,-33],[-12,-33],[26,-51]],[[29526,11154],[43,-51],[-40,-40],[-142,-75],[-83,-29],[-84,-22],[-380,-69],[-27,0],[-26,9],[-15,15],[-25,57],[3,29],[34,27],[35,18],[60,16],[229,36],[23,12],[19,27],[6,31],[8,24],[15,11],[16,0],[30,-23],[55,-93],[18,13],[16,25],[3,80],[16,6],[49,-22],[30,-23],[1,45],[21,14],[22,-5],[22,-10],[48,-33]],[[29170,11677],[49,-14],[72,-63],[24,-32],[7,-19],[-6,-13],[-33,-15],[-25,-77],[-50,-27],[-116,17],[-128,31],[-10,6],[-11,27],[-2,31],[14,39],[22,20],[95,24],[7,14],[14,39],[24,8],[11,-3],[42,7]],[[22752,10418],[-23,-61],[2,-60],[68,4],[30,114],[64,21],[31,-68],[-30,-55],[15,-31],[18,-22],[32,-1],[29,33],[13,24],[11,26],[19,58],[61,54],[135,8],[71,-34],[-48,-86],[-115,-50],[-74,-52],[25,-14],[25,-7],[23,2],[65,27],[160,50],[61,37],[22,-6],[0,-62],[21,-42],[-12,-93],[-69,-17],[-71,-8],[18,-41],[-4,-17],[-6,-13],[-178,17],[-31,-6],[-31,-12],[-31,3],[-62,30],[-32,0],[-64,-15],[-65,-6],[-93,1],[-68,5],[-64,33],[-67,9],[-75,1],[-79,38],[-66,15],[-95,39],[-25,15],[-25,8],[-45,-3],[-346,59],[-51,-1],[-33,-8],[-33,4],[-67,28],[-14,31],[7,29],[15,13],[30,13],[480,69],[50,19],[37,-2],[28,-59],[42,-61],[14,1],[14,6],[47,51],[86,-16],[48,23],[33,45],[97,52],[61,-10],[57,-22],[27,-54]],[[29346,9735],[-40,-75],[-7,-8],[-40,-19],[14,-20],[11,-10],[7,-24],[23,-33],[28,-21],[-23,-59],[-34,-26],[-369,160],[-28,26],[-14,19],[-11,30],[-1,30],[9,24],[13,14],[33,17],[34,1],[75,-32],[10,5],[14,28],[40,1],[9,24],[-55,8],[-44,24],[-29,24],[-8,19],[99,33],[251,-42],[38,-14],[17,-19],[14,-26],[-36,-59]],[[31114,12975],[-29,-37],[-23,-11],[-21,10],[-21,5],[-15,-14],[-16,-58],[-19,-29],[-20,-15],[-12,6],[-12,0],[-19,-13],[-24,-5],[-23,6],[-22,37],[-32,44],[-6,14],[-5,36],[1,37],[14,28],[73,98],[24,44],[21,50],[23,45],[44,80],[22,29],[111,84],[30,19],[33,-5],[8,-44],[-16,-22],[-53,-56],[-11,-79],[1,-29],[5,-8],[20,-10],[14,-11],[18,-24],[21,-14],[-45,-41],[-30,-21],[-21,-26],[-40,-25],[-17,-16],[26,-6],[38,-21],[10,-18],[-5,-14]],[[0,93051],[43,8],[43,15],[40,3],[40,-9],[41,2],[40,15],[32,-2],[33,-9],[122,-21],[23,-7],[39,-27],[22,-10],[22,-16],[23,-27],[43,-29],[65,-34],[14,-10],[10,-26],[-7,-30],[-83,-57],[-67,-15],[-129,-15],[-175,-43],[-72,-12],[-25,2],[-63,28],[-74,12]],[[0,92737],[0,314]],[[33652,22309],[43,-33],[53,11],[22,-9],[13,-28],[-7,-26],[-17,4],[-15,-7],[3,-35],[10,-14],[56,-38],[10,-2],[-1,15],[-10,26],[-4,28],[9,24],[14,7],[64,11],[15,-11],[32,-66],[-30,-9],[-12,-28],[26,-12],[20,-19],[-11,-28],[-2,-14],[-46,-19],[-40,-13],[-19,-33],[-33,-24],[-96,-41],[11,-34],[1,-16],[-4,-44],[-133,52],[-18,-5],[36,-90],[-26,-16],[-26,10],[-24,-7],[-15,-65],[-38,42],[-32,58],[-1,33],[32,62],[-10,26],[73,83],[13,25],[23,14],[23,5],[10,11],[-1,20],[-10,35],[1,57],[58,77],[-8,49],[18,1]],[[39693,20699],[27,-28],[22,19],[22,-2],[12,-10],[12,-3],[16,-1],[27,-47],[-11,-41],[29,8],[26,-35],[12,3],[5,14],[17,16],[11,-22],[14,-41],[18,-12],[15,-44],[12,-55],[11,-8],[19,-1],[20,8],[-8,-48],[3,-42],[32,-30],[-19,-17],[-20,-24],[-41,-19],[-11,8],[-35,42],[-17,50],[-37,71],[-8,21],[-9,13],[-34,9],[-30,17],[-24,36],[-8,22],[-10,15],[-33,-1],[-21,17],[-21,23],[-94,67],[-37,-7],[-17,19],[0,33],[20,20],[-82,8],[-29,12],[20,7],[114,1],[43,6],[3,-15],[38,-29],[36,-3]],[[29507,26874],[-21,-12],[-19,-3],[-20,9],[-35,-1],[-34,22],[-32,32],[-9,19],[3,26],[24,61],[22,116],[15,166],[-12,63],[1,26],[6,31],[2,33],[-1,32],[3,30],[24,64],[4,29],[0,31],[11,64],[-3,21],[-9,18],[7,16],[85,-47],[56,-11],[3,-49],[11,-38],[7,-68],[8,-16],[-4,-49],[-26,-21],[2,-45],[15,-42],[-22,-16],[-23,-9],[-6,-11],[-17,-10],[-20,-23],[6,-21],[26,-48],[29,-33],[16,-49],[21,-51],[-10,-33],[-19,-46],[-31,-31],[-27,-19],[3,-76],[-10,-31]],[[33253,22199],[41,-11],[37,40],[25,13],[21,-9],[15,-24],[21,4],[61,25],[8,-9],[21,29],[19,-13],[14,-25],[-7,-30],[-17,-19],[-10,-26],[-13,-21],[-21,-19],[-16,-31],[-40,-73],[-57,-94],[-19,-8],[-40,-6],[-17,7],[-14,-2],[-12,-51],[-18,-38],[-9,-8],[-19,-4],[-8,-5],[-7,-14],[-50,3],[-35,24],[-41,52],[55,64],[48,-3],[39,43],[32,21],[13,22],[14,17],[0,22],[-11,10],[-14,-1],[-14,-10],[-34,-12],[-23,25],[15,10],[17,-1],[52,24],[10,10],[-16,33],[-31,21],[-26,34],[-4,13],[1,20],[-14,41],[15,2],[19,-26],[44,-36]],[[29312,23532],[2,-85],[-4,-85],[-11,-104],[2,-21],[12,-5],[4,-13],[-4,-55],[-7,-42],[-13,-35],[-7,-41],[-7,-9],[-30,-7],[-17,4],[-13,47],[-4,29],[1,38],[-16,51],[-1,19],[6,34],[14,16],[2,52],[6,15],[15,21],[2,9],[-1,8],[-5,1],[-61,-64],[-5,-18],[-3,-24],[-1,-84],[-10,-49],[-10,-9],[-28,-2],[-37,5],[-42,44],[-27,-12],[-6,54],[14,44],[51,-4],[8,77],[-16,18],[-18,32],[-10,28],[9,21],[30,31],[15,3],[15,-17],[36,13],[-2,49],[-32,22],[7,37],[41,35],[24,36],[2,41],[-10,40],[3,16],[20,34],[29,16],[13,-2],[26,-24],[24,-3],[5,-7],[5,-26],[15,-193]],[[29726,26048],[-68,-46],[-33,15],[-13,34],[-7,29],[-7,48],[12,26],[24,37],[10,24],[4,28],[-2,27],[4,25],[14,9],[50,-28],[52,-43],[18,-29],[3,-23],[-22,-52],[-15,-42],[-24,-39]],[[32833,80122],[-117,-8],[-92,36],[-69,17],[-67,31],[-146,100],[-16,35],[-14,43],[-28,39],[-30,32],[-154,98],[-13,34],[31,23],[36,10],[31,-1],[104,-38],[130,-34],[56,-26],[64,-38],[62,-47],[140,-125],[24,-10],[63,-61],[23,-46],[11,-38],[-14,-19],[-15,-7]],[[33026,78308],[9,-4],[38,28],[20,-1],[-1,-20],[-32,-22],[-15,-17],[18,-15],[0,-10],[-22,-25],[-11,-27],[9,-26],[36,26],[14,0],[20,-6],[19,8],[11,13],[63,99],[3,13],[-68,-20],[-8,13],[45,61],[-4,31],[23,51],[20,30],[15,16],[22,16],[15,-24],[5,-43],[37,6],[37,-9],[26,-18],[5,-10],[0,-17],[-9,-29],[-15,-25],[30,-31],[-4,-13],[-48,-36],[-28,-35],[-25,-44],[-50,-51],[-80,-36],[-25,0],[-30,11],[-30,-3],[-29,-13],[-29,1],[-13,-7],[-14,1],[-11,14],[-23,41],[-12,27],[-12,130],[4,68],[20,63],[29,43],[17,34],[72,200],[14,45],[17,39],[31,39],[40,64],[12,14],[23,6],[23,-4],[-7,-23],[2,-23],[26,-89],[0,-18],[-15,-71],[-27,-116],[-7,-63],[4,-19],[-11,-32],[-12,-25],[-47,-45],[-24,-11],[-22,-17],[-54,-58]],[[2371,88502],[5,-14],[29,2],[40,-6],[45,-14],[45,5],[56,43],[33,11],[34,6],[37,-10],[35,-23],[14,-13],[11,-24],[7,-28],[11,-21],[67,-25],[42,-10],[10,-14],[9,-19],[36,-14],[37,5],[20,-5],[63,-1],[77,-21],[-12,-56],[-25,-24],[-72,7],[-71,-8],[-29,-28],[-25,-37],[-3,-35],[-14,-16],[-15,-7],[-12,19],[-17,60],[-11,16],[-12,11],[-35,19],[-35,12],[-21,1],[-15,21],[-8,30],[-14,15],[-28,22],[-29,17],[-89,38],[-29,5],[-30,-4],[-32,-17],[-31,-26],[-31,-19],[-33,-4],[-32,11],[-29,25],[-15,18],[-8,30],[1,30],[4,29],[16,71],[27,14],[51,-50]],[[3851,86626],[26,-29],[13,-1],[43,8],[16,-6],[15,-12],[9,-19],[2,-33],[-7,-30],[2,-41],[-1,-18],[22,-24],[8,-32],[3,-34],[-49,-12],[-49,-2],[-43,-23],[-9,-17],[7,-26],[-11,-6],[-11,5],[-21,24],[-22,11],[-79,18],[-100,69],[-42,14],[-44,50],[-39,64],[25,10],[26,5],[116,-9],[14,46],[15,11],[36,13],[35,25],[15,0],[16,-10],[32,15],[17,3],[14,-7]],[[4590,83513],[27,-95],[12,-18],[17,-10],[24,-11],[15,-14],[12,-21],[2,-10],[-76,38],[-48,-56],[-15,-7],[-136,-3],[-27,-10],[-18,-18],[-31,-52],[-16,-19],[-16,-12],[-36,-14],[-42,2],[-22,7],[-12,24],[-11,48],[0,14],[5,23],[38,31],[12,17],[49,109],[14,15],[16,4],[41,-8],[36,32],[77,48],[17,6],[55,1],[16,-8],[11,-13],[10,-20]],[[28538,62475],[34,-21],[35,-11],[15,0],[14,-7],[32,-49],[26,-28],[97,-60],[33,-105],[6,-33],[-25,-19],[-32,-7],[-30,-1],[-28,20],[-12,16],[-29,7],[7,14],[-13,7],[-16,-2],[-12,-40],[-14,-32],[-25,3],[-10,27],[-13,-12],[-11,-20],[-13,-75],[-21,37],[-23,31],[-28,13],[-57,2],[-28,11],[-22,63],[-9,18],[-23,17],[-22,72],[-8,10],[-62,16],[-12,40],[4,36],[20,44],[10,12],[34,-1],[32,13],[14,19],[15,12],[117,-32],[27,0],[26,-5]],[[31630,62468],[9,-12],[8,2],[-6,23],[6,0],[53,-14],[34,-24],[35,-12],[3,-80],[-27,-32],[-18,-34],[-15,-41],[-38,-47],[-45,-15],[-31,-1],[-11,1],[-11,9],[-23,-8],[-29,21],[-24,-5],[-48,5],[-18,-19],[-18,-4],[-17,4],[-14,8],[-36,-1],[-15,16],[6,91],[1,41],[-9,35],[-10,21],[-7,25],[14,17],[12,24],[4,37],[12,9],[15,4],[69,-17],[173,-10],[10,-3],[6,-14]],[[7528,85151],[2,-31],[12,3],[42,33],[23,10],[29,1],[23,-15],[4,-11],[-2,-14],[-18,-27],[1,-18],[19,-33],[49,-18],[6,-10],[0,-12],[-34,-55],[-12,-12],[-9,-3],[-61,9],[-55,18],[-23,3],[-8,-5],[-15,-17],[11,-5],[49,-4],[17,-25],[7,-18],[4,-20],[-10,-8],[-20,-6],[-25,0],[-31,-22],[-17,-25],[-62,-7],[-47,-34],[-17,-17],[-6,-20],[-17,-15],[-41,-14],[24,-13],[4,-11],[1,-16],[-4,-13],[-31,-59],[-60,-48],[-15,2],[-7,6],[-5,9],[-1,9],[78,98],[-3,4],[-21,4],[-34,26],[-23,-17],[-5,1],[6,23],[15,27],[-3,8],[-8,7],[-19,4],[-31,1],[-22,-6],[-15,-15],[-1,-6],[31,2],[9,-7],[8,-14],[5,-16],[2,-17],[-7,-24],[-14,-30],[-22,5],[-44,67],[-20,97],[-38,75],[-2,18],[11,46],[38,65],[42,18],[29,27],[28,9],[18,-1],[24,-12],[10,-25],[-6,-12],[2,-6],[17,-15],[18,-52],[21,-47],[14,-19],[19,-12],[-19,36],[-12,44],[-5,88],[-6,23],[11,6],[30,-3],[-1,13],[-32,29],[-19,25],[-8,19],[1,17],[17,25],[10,7],[10,3],[21,-5],[9,-8],[26,-56],[12,-17],[10,0],[10,9],[9,18],[8,12],[10,3],[29,-8],[10,3],[4,14],[0,25],[7,9],[2,18],[-16,27],[18,9],[61,-21],[25,-23],[-13,-42]],[[7662,85460],[10,-4],[10,34],[8,1],[33,-29],[20,6],[13,-35],[12,-4],[10,5],[7,-3],[-2,-38],[-24,-38],[-12,-9],[-15,9],[-6,4],[-10,17],[-8,21],[-5,1],[-18,-25],[0,-13],[8,-19],[-1,-11],[-20,-6],[-20,3],[-24,-16],[-5,10],[-4,29],[-7,-4],[-12,-35],[-12,-22],[-22,-18],[-5,-9],[-17,-1],[-24,-12],[-15,2],[-90,38],[-21,14],[74,87],[39,34],[22,-2],[22,-11],[12,2],[1,39],[-21,29],[1,12],[46,19],[18,-3],[19,-10],[18,-16],[17,-23]],[[13617,83806],[-10,-63],[-19,-65],[-29,-35],[-21,8],[-15,28],[-14,-1],[-15,6],[-8,23],[8,30],[-7,23],[-8,-20],[-13,-19],[-33,-24],[-23,-47],[-11,-30],[-13,33],[-9,78],[-1,33],[24,50],[31,48],[6,142],[99,71],[9,-4],[32,-53],[35,-74],[8,-34],[1,-58],[-4,-46]],[[12898,84296],[53,-12],[48,1],[17,-24],[10,-25],[7,-24],[1,-22],[-1,-15],[-6,-17],[2,-5],[94,-55],[44,-58],[18,-30],[10,-26],[19,-64],[39,-74],[21,-23],[11,-22],[-6,0],[-28,16],[-60,50],[-5,-2],[-5,-27],[-9,-24],[-14,-17],[11,-5],[48,11],[41,-49],[15,-8],[16,-35],[0,-14],[-9,-26],[-6,-10],[2,-7],[11,-4],[45,7],[8,-12],[-7,-101],[6,-37],[0,-17],[-5,-22],[0,-19],[4,-19],[1,-18],[-12,-45],[-12,-8],[-19,0],[-15,13],[-22,39],[-21,60],[-8,9],[-27,9],[-5,7],[-17,1],[-13,25],[2,33],[-11,33],[1,15],[-12,6],[-10,-9],[6,-33],[-6,-25],[-22,11],[-36,80],[-41,65],[-17,15],[5,19],[20,10],[17,-1],[3,11],[-34,63],[1,18],[12,31],[-15,13],[-43,-9],[-15,6],[-13,26],[-7,21],[-37,4],[-14,-2],[-24,33],[-12,21],[5,11],[22,18],[13,-2],[25,-20],[10,0],[25,27],[4,24],[18,20],[-3,21],[-10,35],[-23,10],[-46,-21],[-41,-32],[-16,12],[-3,20],[43,55],[19,30],[-4,17],[-14,23],[-1,58],[9,13]],[[12954,84679],[18,-18],[10,19],[19,-1],[35,-17],[20,-25],[12,-29],[1,-17],[-3,-40],[2,-40],[-1,-20],[-5,-18],[-8,-13],[-8,-2],[-27,36],[-31,65],[-24,20],[-1,-7],[7,-18],[19,-35],[3,-21],[14,-26],[6,-19],[3,-26],[0,-22],[-4,-19],[-6,-12],[-9,-6],[-47,6],[-28,-13],[-33,7],[-8,11],[-5,19],[-2,46],[-9,66],[2,50],[-21,46],[-18,27],[-26,25],[-18,24],[5,20],[27,14],[44,-3],[95,-34]],[[12508,84879],[24,-63],[17,-49],[15,-59],[26,-122],[12,-46],[3,-26],[3,-66],[-4,-14],[-7,-13],[-2,-19],[7,-50],[1,-77],[-7,-43],[-8,-7],[-19,14],[-15,24],[-12,24],[-28,77],[-9,36],[0,25],[4,19],[9,12],[17,31],[-3,5],[-12,-7],[-25,-4],[-22,24],[-17,13],[3,45],[-4,12],[-34,-13],[-13,12],[-3,17],[1,25],[6,21],[32,55],[-3,11],[-15,2],[-21,19],[-9,61],[-22,35],[-14,-3],[-29,-99],[-15,-22],[-42,-14],[9,28],[4,25],[-15,74],[-1,29],[10,21],[30,9],[15,13],[13,20],[3,20],[23,53],[10,10],[29,0],[60,-59],[18,-8],[26,-38]],[[12589,85346],[70,-13],[52,3],[47,-86],[29,-70],[17,-49],[10,-47],[13,-45],[-1,-7],[-28,31],[-19,62],[-10,24],[-10,11],[-10,23],[-21,59],[0,17],[-9,16],[-11,6],[-12,-3],[-4,-5],[2,-41],[9,-46],[51,-99],[34,-57],[7,-18],[5,-52],[-15,-23],[18,-48],[-1,-9],[-4,-9],[-48,-21],[-45,-89],[-48,-52],[-23,-8],[-10,9],[-11,20],[-6,26],[-1,33],[12,21],[24,109],[0,35],[-30,50],[-18,40],[-9,57],[-17,149],[-7,48],[-11,39],[-14,32],[-10,35],[-8,38],[3,15],[24,-20],[29,-55],[15,-36]],[[12297,85393],[40,-56],[0,-13],[-8,-38],[-22,-11],[6,-15],[17,-12],[11,10],[42,54],[13,11],[8,1],[51,-16],[44,-26],[13,-20],[8,-36],[-12,-79],[-37,-13],[-17,1],[-18,12],[-30,-28],[25,-20],[75,-5],[23,-44],[6,-34],[-16,-62],[-43,17],[-37,36],[-77,51],[-19,3],[-12,-9],[-4,-31],[1,-68],[-20,-34],[-61,15],[-24,51],[-22,80],[-84,96],[-23,19],[-30,57],[12,45],[4,26],[16,7],[23,20],[14,44],[21,-36],[28,-34],[1,32],[13,26],[28,-1],[13,5],[18,24],[26,12],[16,-14]],[[14291,82338],[13,-184],[-1,-59],[-19,-38],[-13,-65],[-15,-29],[-15,39],[-1,64],[-4,51],[-5,24],[6,95],[-6,-7],[-18,-41],[-19,-3],[-34,47],[-17,38],[-3,40],[-22,42],[-3,15],[2,16],[19,42],[7,28],[7,58],[7,23],[18,-3],[31,-27],[33,-28],[30,-39],[22,-99]],[[13151,83022],[26,-34],[61,22],[11,-4],[12,-13],[12,-28],[14,-42],[3,-46],[-5,-17],[-11,-18],[-98,-73],[-2,-7],[2,-7],[9,-7],[19,1],[77,18],[5,13],[5,57],[11,31],[0,23],[-7,55],[1,22],[54,5],[33,20],[35,38],[8,-1],[-5,-68],[-5,-21],[-33,-84],[-19,-73],[-9,-73],[-2,-120],[-8,-41],[-15,-25],[-93,-43],[-48,2],[-43,40],[-20,27],[15,33],[10,2],[30,-7],[24,-12],[10,0],[-2,7],[-66,63],[-49,28],[-14,32],[-1,24],[-4,14],[-38,86],[-8,34],[-5,48],[0,49],[10,80],[4,8],[16,-1],[27,-9],[66,-8]],[[13402,82485],[28,-53],[8,-48],[-3,-56],[-45,-22],[-23,17],[-11,-3],[-15,-17],[19,-7],[26,-28],[23,-36],[32,-6],[44,-25],[-33,-45],[-5,-26],[41,-72],[4,-18],[13,-4],[30,6],[4,-6],[0,-15],[-19,-42],[2,-8],[17,-7],[32,0],[8,-41],[-30,-38],[-55,49],[-25,48],[-14,45],[-17,25],[-52,57],[-78,121],[-21,18],[-20,48],[-6,23],[1,15],[7,9],[24,5],[0,24],[-90,42],[-10,8],[-12,30],[7,4],[49,-5],[53,14],[33,11],[13,13],[27,17],[11,-1],[28,-20]],[[32274,78610],[8,-8],[13,15],[15,47],[41,-12],[22,-21],[12,4],[12,-2],[23,-28],[44,-22],[46,4],[70,13],[8,5],[72,11],[72,5],[25,-12],[9,-12],[5,-14],[-41,-38],[-41,-44],[-58,-44],[-7,-21],[4,-39],[-1,-40],[11,-3],[7,-14],[-15,-13],[-59,-6],[-17,4],[-21,16],[-7,39],[-25,-6],[-7,5],[35,32],[-16,42],[-18,-3],[-11,19],[1,27],[16,13],[5,14],[-22,-13],[-17,-24],[-21,-9],[-22,-22],[33,-6],[-17,-17],[-17,-3],[-81,32],[-20,12],[-26,34],[-19,45],[11,2],[3,8],[-2,7],[-28,6],[-45,-2],[-25,12],[1,79],[-8,22],[-28,18],[-42,5],[-4,30],[13,44],[21,39],[16,37],[18,31],[46,62],[-1,-46],[4,-40],[-30,-79],[52,-79],[6,-17],[5,-21],[-4,-19],[-8,-18],[20,-8],[6,-15]],[[29858,75452],[-20,-37],[18,-4],[16,11],[14,22],[34,30],[29,13],[9,3],[13,-21],[28,17],[28,9],[-121,-96],[-25,-11],[-36,-28],[-33,-21],[-24,-7],[-120,-71],[-10,-2],[-10,7],[-99,-36],[-40,-5],[-37,-12],[27,29],[1,11],[-7,9],[-14,-3],[-15,-30],[-24,-10],[-5,33],[8,26],[11,24],[24,38],[34,24],[17,21],[12,-18],[2,25],[10,14],[10,8],[24,0],[12,4],[10,8],[9,2],[27,-12],[25,4],[21,15],[22,5],[56,4],[57,11],[23,21],[47,56],[28,16],[-43,-66],[-23,-30]],[[92198,49368],[14,-12],[42,60],[22,-42],[28,-20],[30,-12],[-12,-86],[4,-40],[7,-40],[-1,-59],[-13,-52],[-26,-76],[-12,-15],[-13,-8],[-43,-6],[-8,-40],[3,-43],[23,-57],[18,-63],[-18,-59],[-30,-40],[-29,-21],[-47,12],[-50,-5],[-10,-22],[0,-37],[-7,-28],[-9,-25],[-25,-53],[-29,-46],[-38,-45],[-13,-10],[-35,-7],[-31,-26],[-13,-25],[-15,-20],[-33,-22],[-32,-43],[-12,-8],[-66,-7],[-95,-2],[-28,-5],[-27,6],[-15,17],[-32,79],[-28,26],[-30,0],[-41,-28],[-8,6],[-80,116],[-25,28],[-26,21],[-32,15],[-30,23],[-18,55],[2,72],[24,42],[37,-21],[14,0],[14,12],[16,-4],[17,-10],[60,15],[34,-22],[34,-29],[32,-6],[32,6],[43,33],[14,-4],[42,0],[36,44],[14,177],[9,60],[13,14],[9,-4],[13,-30],[-17,-38],[-8,-29],[-2,-71],[9,-69],[22,-54],[32,-7],[29,36],[32,7],[30,-35],[30,6],[14,23],[16,10],[16,4],[14,13],[20,60],[13,67],[19,52],[52,88],[15,11],[17,6],[37,-4],[27,32],[2,70],[-4,72],[-31,167],[-2,27],[4,30],[9,27],[31,0],[32,-9],[13,-26],[14,-20]],[[85359,46990],[-50,-92],[-56,-76],[-34,-23],[-35,-15],[-27,-29],[-23,-46],[-29,-26],[-32,-9],[-28,-14],[-26,-27],[-35,-46],[-14,-5],[-15,1],[-29,-17],[-91,-67],[-55,-73],[-59,-93],[-10,-58],[-34,-54],[-37,-89],[-29,-46],[-26,-53],[-23,-36],[-28,-13],[-42,-7],[-56,-65],[-32,-28],[-31,-2],[-28,21],[-11,24],[2,31],[10,28],[12,22],[7,29],[-33,37],[-2,27],[12,75],[9,76],[12,52],[46,93],[28,46],[62,68],[104,58],[20,22],[17,32],[51,53],[38,63],[25,88],[17,34],[40,33],[16,9],[118,48],[28,3],[74,-1],[100,10],[24,7],[32,21],[31,26],[16,21],[18,14],[25,-18],[44,-14],[11,-13],[11,-17]],[[90289,28348],[32,-2],[18,14],[16,-2],[19,-33],[22,-18],[16,3],[13,-6],[12,-24],[30,-20],[14,-13],[11,-20],[13,-16],[81,-54],[57,-26],[71,12],[21,15],[21,22],[17,-20],[17,-32],[-3,34],[6,30],[17,23],[20,15],[32,-2],[31,7],[14,13],[14,2],[19,-17],[19,-9],[13,22],[21,51],[12,18],[55,-16],[15,0],[27,53],[17,-1],[51,-42],[22,-53],[-3,-97],[2,-34],[4,-34],[2,-67],[-6,-67],[-1,-52],[3,-52],[-3,-98],[8,-64],[-4,-44],[0,-21],[7,-19],[4,-22],[-3,-28],[3,-32],[-3,-27],[-11,4],[-4,21],[2,26],[-2,22],[-6,19],[-20,22],[6,13],[10,12],[-7,29],[-13,-24],[-8,-33],[5,-11],[-8,-9],[-17,-38],[-12,-51],[-5,-50],[1,-52],[-10,-40],[-14,-39],[-3,-49],[1,-91],[11,-83],[7,-113],[-10,-15],[-30,-7],[-14,-15],[-24,57],[-15,58],[11,24],[24,-14],[8,13],[2,16],[-2,15],[-30,32],[-33,15],[-11,-19],[4,-55],[-3,-13],[-24,-21],[-12,80],[-31,60],[1,-29],[13,-50],[-1,-21],[-5,-29],[-13,-10],[-5,-23],[0,-32],[-5,-51],[-20,-23],[-48,57],[-4,-19],[1,-17],[25,-33],[-12,-25],[-8,-29],[-14,-76],[-23,-64],[-11,-4],[-37,10],[-42,54],[-38,-6],[-62,4],[-40,-20],[-9,59],[-8,21],[3,18],[32,13],[33,-1],[-6,23],[-8,8],[-15,-5],[-41,19],[-29,-8],[-19,28],[-34,96],[-20,45],[-12,18],[-13,9],[-9,14],[-61,221],[-8,51],[-11,129],[48,-62],[18,-39],[9,-50],[16,61],[-3,19],[-43,73],[-6,21],[-2,25],[-10,-25],[-17,-3],[7,51],[-6,51],[-51,111],[-39,105],[-38,130],[-3,16],[-1,28],[-18,87],[-10,65],[-4,56],[17,114],[3,64],[27,-29],[63,-37]],[[76812,98545],[10,-26],[36,-21],[18,-21],[183,-67],[80,-8],[36,-17],[10,-20],[-3,-37],[-31,0],[-22,-12],[-124,-15],[-30,-22],[-24,-45],[13,-9],[12,-13],[37,-77],[10,-12],[37,-11],[-33,-29],[-35,-19],[-366,-37],[-249,-15],[-83,-16],[-27,2],[-65,-29],[-127,-38],[-61,0],[-181,53],[-222,45],[-31,25],[-55,15],[-71,12],[-31,51],[45,35],[58,34],[97,12],[92,20],[69,49],[43,48],[78,51],[-135,-13],[-51,7],[5,17],[28,36],[15,12],[49,19],[35,36],[81,25],[39,4],[38,-1],[70,12],[70,18],[66,10],[65,5],[63,14],[62,28],[27,48],[179,5],[28,-11],[22,-29],[26,-10],[31,-6],[79,-48],[15,-14]],[[77131,98017],[64,-37],[31,-41],[-30,-11],[-28,-28],[-13,-34],[-37,-27],[-10,-43],[17,-8],[20,12],[41,41],[53,28],[58,-16],[23,6],[40,39],[-7,33],[16,20],[18,5],[75,-4],[119,-17],[21,-17],[29,-10],[17,-16],[53,-13],[26,-12],[35,-28],[32,-42],[-40,-22],[-22,-40],[-9,-9],[-7,-15],[-3,-35],[-6,-30],[-7,-13],[-5,-17],[5,-45],[-12,-35],[-40,-27],[-41,-1],[-61,18],[-18,-1],[-17,-7],[76,-38],[56,-56],[65,-13],[18,-6],[23,-52],[8,-26],[-108,-62],[-28,-11],[-172,-9],[-113,-18],[-36,4],[-63,15],[-42,-6],[-60,10],[-37,0],[-85,23],[-88,38],[-17,18],[-18,12],[-105,10],[-23,8],[-153,-9],[-26,6],[-47,50],[-27,1],[-84,-29],[-31,2],[-64,19],[-38,24],[-6,8],[-4,29],[-38,15],[-46,52],[-27,54],[-128,28],[-77,7],[-58,-2],[-56,21],[93,78],[123,41],[53,31],[61,42],[25,65],[103,40],[27,14],[36,31],[12,4],[81,-38],[16,7],[15,17],[29,19],[100,3],[85,-8],[32,8],[39,-3],[195,28],[130,8],[24,-5]],[[78578,97496],[-27,-45],[-11,-40],[-83,-133],[-10,-23],[49,20],[44,45],[27,38],[30,24],[34,0],[35,9],[65,31],[66,14],[36,-1],[34,-15],[22,-35],[24,-28],[87,-21],[13,-7],[8,-24],[-7,-25],[50,-25],[69,11],[37,-7],[36,-14],[17,-22],[14,-27],[15,-39],[9,-41],[-8,-55],[-134,-84],[-25,-8],[-62,6],[-61,-9],[-161,-44],[-199,-1],[-57,-39],[-17,1],[-17,7],[-16,13],[-121,-11],[-136,-7],[-136,-1],[-45,-28],[-139,-55],[-127,-42],[-66,-10],[-96,11],[-30,14],[-29,21],[42,27],[30,54],[37,32],[94,61],[11,24],[18,51],[11,20],[15,18],[11,22],[2,33],[6,28],[37,42],[27,20],[29,6],[71,-8],[22,3],[-16,13],[-11,50],[2,16],[10,31],[18,15],[18,10],[11,42],[-5,15],[27,20],[13,27],[32,16],[65,13],[3,34],[10,21],[14,7],[33,6],[18,-1],[24,-34],[26,-28],[34,-6],[34,2],[-20,33],[1,35],[12,22],[16,10],[34,2],[107,-24],[70,-35],[16,-18],[-13,-10],[-31,-6],[-16,-10]],[[88902,95523],[28,-11],[34,7],[32,-15],[30,-61],[14,-16],[15,-11],[15,-5],[45,-2],[20,12],[15,28],[-1,28],[-4,29],[0,39],[7,35],[10,21],[13,14],[74,43],[52,42],[71,-16],[72,-38],[127,-80],[59,-23],[71,-21],[72,-8],[35,5],[69,22],[35,2],[436,-160],[15,-13],[14,-19],[-94,-24],[-61,-42],[-21,-29],[24,-24],[20,-32],[-133,-96],[-53,-25],[-54,-8],[-110,23],[-64,-1],[-62,20],[-69,58],[-29,29],[-25,40],[-8,64],[10,55],[37,16],[32,35],[5,15],[-17,31],[-108,5],[-68,-17],[-61,-18],[18,-117],[13,-37],[18,-27],[98,-123],[22,-17],[65,-24],[55,-53],[-97,-59],[-43,-17],[-42,-10],[-26,5],[-26,12],[-28,28],[-24,30],[-31,23],[-66,-5],[-61,-20],[-61,-14],[-180,-24],[-55,-15],[-55,-5],[-71,28],[-70,39],[-22,1],[-20,-11],[-17,-24],[-9,-38],[-23,-51],[-29,-36],[-31,-16],[-32,-2],[-33,10],[-32,16],[-215,56],[-25,17],[-24,25],[-65,79],[-32,19],[-33,8],[-64,40],[-59,64],[-12,20],[-4,32],[10,23],[51,-11],[34,1],[-21,119],[15,112],[25,19],[97,-13],[-31,37],[-26,49],[16,27],[18,19],[42,15],[56,7],[17,12],[16,19],[31,20],[62,8],[107,40],[29,-1],[27,-21],[26,-30],[28,-16],[88,-39],[60,-35],[85,-71]],[[89495,94409],[69,-25],[57,-28],[196,-135],[18,-28],[15,-35],[8,-123],[-11,-9],[-72,-6],[-98,14],[-70,5],[-68,0],[-60,17],[-147,16],[-115,45],[-120,33],[-25,4],[-75,-10],[-102,-43],[-28,-3],[-39,0],[-27,40],[65,14],[65,5],[63,14],[59,47],[29,38],[51,85],[28,31],[28,20],[30,6],[33,-3],[103,19],[70,6],[70,-11]],[[90776,95259],[73,-4],[107,43],[14,1],[260,-15],[22,-15],[2,-30],[-8,-15],[-4,-22],[32,-21],[84,-4],[53,19],[156,-10],[128,-14],[49,-32],[38,-17],[31,-20],[23,12],[22,20],[18,4],[18,-4],[-49,-122],[-18,-14],[-69,-30],[-137,-42],[-67,-13],[-152,0],[-209,16],[-57,15],[-34,18],[-64,43],[-31,16],[-103,14],[-32,8],[-60,37],[-62,30],[-154,49],[10,56],[20,56],[24,50],[26,45],[28,13],[59,-41],[-1,-47],[14,-33]],[[98129,31719],[5,-26],[15,18],[11,30],[19,30],[-3,-48],[10,-11],[61,-34],[13,-28],[13,-8],[7,16],[9,8],[22,-18],[50,-49],[4,-17],[-2,-25],[2,-27],[7,-21],[17,-5],[22,31],[10,4],[15,-45],[6,-25],[-3,1],[10,-25],[12,-25],[22,-74],[-3,-26],[-6,-23],[20,-68],[-13,-5],[-40,12],[1,-14],[23,-50],[20,-70],[15,-43],[55,-132],[-8,-47],[1,-31],[-7,-26],[19,-70],[-12,-22],[-8,-72],[-8,-12],[1,-26],[22,-7],[13,-11],[12,-21],[7,25],[10,7],[26,-34],[55,-34],[15,-13],[8,-27],[5,-67],[11,-29],[21,-6],[23,9],[7,25],[-5,65],[-16,104],[0,34],[2,33],[-3,34],[-9,32],[-8,24],[-12,21],[4,32],[17,14],[10,-27],[9,-32],[42,-97],[26,7],[2,-40],[17,-41],[10,-47],[12,-143],[19,-133],[35,-59],[4,-28],[-21,15],[-7,-9],[2,-14],[20,-25],[23,-13],[14,2],[14,-9],[90,-87],[43,-34],[109,-56],[31,-4],[17,2],[33,19],[29,34],[25,52],[22,59],[23,28],[27,23],[14,21],[14,15],[73,-7],[25,-30],[32,-24],[16,-18],[-5,-38],[-19,-56],[-15,-61],[-13,-138],[-9,-141],[-13,-61],[-24,-48],[-27,-34],[-30,-17],[-12,-79],[-6,-93],[1,-24],[10,-18],[4,-28],[-16,-56],[-9,8],[-13,47],[-12,19],[-36,15],[-37,7],[-32,-5],[-31,-19],[-47,-41],[-14,-21],[-13,-25],[-21,-58],[-5,-71],[1,-38],[7,-28],[40,-40],[-39,-136],[-35,-143],[-20,-40],[-23,-38],[-21,-85],[-38,-74],[-25,-56],[-20,-59],[-17,-62],[-37,-88],[-16,-58],[-22,-48],[-40,-61],[-42,-53],[-67,-73],[-18,-24],[-20,-18],[-24,21],[-5,23],[-6,50],[-5,18],[-31,15],[-41,-24],[-7,5],[-2,11],[0,73],[7,20],[-9,12],[-10,-5],[-3,-18],[6,-16],[-23,-20],[-25,-1],[-7,8],[-2,13],[6,22],[8,20],[45,91],[47,122],[40,130],[11,67],[15,125],[-12,51],[-16,49],[-40,94],[-55,53],[-35,7],[-33,20],[-31,45],[-29,53],[-56,43],[-60,34],[-34,48],[-8,29],[-5,33],[0,30],[5,32],[6,24],[11,17],[63,62],[67,35],[12,-1],[12,6],[17,21],[30,48],[8,33],[6,104],[10,102],[17,116],[26,73],[9,44],[-11,73],[10,27],[12,17],[13,9],[-23,69],[-26,104],[-6,32],[4,32],[7,31],[-17,8],[-10,30],[-24,101],[7,16],[14,-11],[20,-73],[4,38],[16,23],[16,12],[18,2],[-40,82],[-14,-4],[-18,-12],[-19,-8],[-18,7],[-17,18],[-8,34],[-11,66],[-7,24],[-53,135],[16,4],[43,-67],[8,21],[7,31],[-3,35],[-10,26],[-15,17],[-1,30],[12,28],[-1,20],[-24,40],[-10,4],[-5,-18],[7,-28],[-6,-3],[-61,73],[-18,58],[-15,65],[-2,-26],[2,-37],[24,-74],[39,-82],[7,-22],[-6,-29],[-14,-8],[-11,18],[-18,71],[-13,35],[-148,365],[19,48],[29,41],[7,18],[5,22],[-13,3],[-11,-10],[-13,-18],[-11,-22],[-15,-47],[-7,-11],[-17,33],[-7,20],[0,24],[-4,16],[-13,5],[-19,48],[-12,24],[20,47],[1,62],[-21,65],[-24,60],[-47,96],[-43,102],[47,13],[47,2],[-22,-61],[10,-35],[15,-30],[32,-91],[3,-27],[16,-26],[8,-21]],[[98087,28064],[32,-3],[29,43],[31,34],[32,28],[49,66],[12,9],[32,13],[14,15],[15,4],[-14,-39],[-17,-13],[-3,-14],[10,-22],[-15,-31],[0,-39],[-18,-46],[28,18],[10,30],[-5,17],[12,34],[18,16],[-7,25],[0,20],[23,-7],[11,0],[9,8],[16,4],[4,-23],[21,3],[-8,-28],[-16,-33],[-4,-20],[-27,-33],[-18,-14],[28,-4],[40,44],[24,39],[-1,-48],[-19,-44],[-17,-28],[-19,-8],[-18,-23],[-9,-36],[1,-25],[5,-19],[19,-32],[-21,-63],[24,8],[13,-12],[18,-36],[-11,-42],[-8,-22],[-47,-88],[-20,-44],[-24,-29],[1,-47],[-14,-34],[-70,-117],[-12,-25],[-55,-186],[-35,-78],[-20,-27],[-21,-22],[-51,-36],[-23,-43],[-25,-35],[-26,-8],[1,-15],[17,-9],[13,-23],[-10,-26],[-19,-16],[-19,-5],[-10,-17],[46,12],[13,-13],[3,-29],[5,-26],[11,-34],[39,-21],[35,-10],[7,-16],[5,-54],[-6,-27],[-8,-18],[-12,-6],[-28,-3],[-29,12],[-19,33],[-54,-11],[-15,-7],[-7,6],[30,35],[-16,19],[-13,8],[-14,-12],[-9,-18],[-3,-30],[-10,-17],[-15,-5],[-21,25],[-21,35],[-30,36],[4,-22],[24,-54],[12,-36],[-28,-29],[-28,-22],[-25,-13],[-22,-20],[-27,-32],[-15,-11],[-39,-1],[-21,-10],[-7,-42],[-15,-27],[-34,-5],[12,-8],[8,-14],[-23,-126],[-5,-53],[-4,-89],[-14,-83],[-41,0],[6,-15],[31,-23],[-6,-36],[-34,-64],[-14,-38],[-14,-90],[-20,-84],[-32,-95],[0,-17],[11,-24],[13,-21],[1,-30],[-4,-16],[-15,-4],[-13,-10],[-71,-26],[-24,-29],[-19,-53],[-22,-45],[-74,-100],[-44,-83],[-9,-24],[-12,-18],[-95,-39],[-68,-6],[-37,10],[-36,20],[-19,7],[-38,-12],[-16,-14],[-30,13],[-23,-10],[-7,10],[-9,25],[5,32],[-6,24],[-15,17],[-10,19],[-12,13],[-31,6],[-49,-9],[-16,1],[-34,80],[-11,20],[-39,25],[-14,-3],[-21,-43],[-13,-7],[-74,-5],[-75,14],[-28,16],[-5,37],[57,102],[-17,-14],[-35,-41],[-22,6],[21,45],[2,20],[-4,23],[-30,-38],[-33,-5],[-4,35],[3,41],[7,11],[89,22],[33,14],[14,22],[-54,7],[-3,31],[7,25],[46,41],[-33,-11],[-38,4],[3,43],[9,34],[40,1],[-13,23],[-1,33],[11,2],[39,-44],[29,-16],[-12,33],[2,21],[7,9],[24,7],[-7,6],[-22,8],[-26,25],[-3,26],[1,31],[28,42],[17,-25],[20,7],[-15,19],[-9,30],[6,19],[60,78],[15,-75],[4,25],[1,24],[-7,20],[1,21],[7,18],[25,17],[34,58],[25,26],[20,-17],[13,-23],[-2,23],[-9,19],[-3,53],[45,81],[49,78],[48,82],[25,29],[54,34],[34,-14],[9,3],[51,58],[21,16],[19,-21],[12,-8],[-12,54],[10,24],[42,44],[54,45],[40,19],[30,30],[18,1],[-3,23],[3,22],[16,-2],[5,9],[-14,12],[44,44],[24,48],[13,11],[11,14],[14,34],[17,11],[15,-5],[11,-17],[-6,28],[-20,15],[22,24],[22,16],[21,-12],[21,-19],[-21,30],[-3,18],[25,21],[14,6],[19,-39],[-2,31],[4,28],[28,45],[36,75],[11,-26],[2,-31],[-2,-39],[8,14],[2,34],[-5,61],[45,113],[8,12],[10,8],[16,3],[-5,17],[-12,17],[12,57],[8,65],[10,63],[17,62],[18,102],[14,22],[38,7],[16,15],[28,37],[32,67],[18,54],[23,140],[13,147],[37,108],[54,79],[48,60],[19,12],[33,4],[32,-17],[-59,-14],[-6,-36],[-2,-35],[7,-33],[11,-28],[28,-27],[33,-16],[15,-61],[3,-72],[5,-62],[13,-54]],[[85001,57212],[22,-35],[30,9],[-1,-87],[5,-26],[27,-74],[4,-61],[-16,-59],[-12,-27],[-22,-40],[0,-18],[9,-20],[31,-12],[23,-32],[4,-91],[22,-71],[-1,-31],[-9,-128],[3,-54],[16,-44],[14,-19],[8,-27],[6,-75],[-1,-128],[-2,-44],[-10,-42],[-30,-94],[-40,-75],[-22,5],[-6,-22],[13,-68],[-5,-145],[-9,-100],[-13,51],[-9,53],[-9,140],[-10,64],[-16,57],[-7,52],[-16,48],[-22,125],[-14,-7],[-23,-34],[-5,-23],[-3,-36],[-6,-32],[-27,-51],[-22,-60],[-17,-67],[-6,-61],[15,-47],[15,-20],[21,-42],[7,-20],[23,-139],[-1,-141],[-17,-63],[-42,-119],[-30,-37],[-17,19],[-13,72],[-2,29],[9,68],[1,62],[-10,21],[-12,-4],[-4,-9],[-27,-81],[-12,-21],[-17,-2],[-13,5],[-81,71],[-66,70],[-51,65],[-38,99],[-8,74],[0,77],[-17,113],[-2,38],[2,37],[16,70],[20,35],[12,25],[9,28],[6,37],[-2,37],[-7,23],[-32,82],[-27,50],[-57,45],[-13,24],[-14,19],[-16,8],[-16,0],[-16,-14],[-5,-29],[2,-27],[-2,-26],[-24,-148],[-30,32],[-29,38],[-7,26],[-4,32],[-5,21],[-6,19],[-14,-49],[-16,-39],[-20,-10],[-21,0],[-7,17],[-7,94],[-22,30],[-27,-7],[-33,-52],[-6,-19],[-7,-45],[-36,-127],[-19,-98],[-21,-96],[-9,-31],[-13,-21],[-19,9],[-18,23],[-17,61],[6,72],[19,45],[15,49],[19,171],[1,61],[4,26],[31,77],[26,48],[13,10],[57,28],[23,23],[36,0],[30,13],[24,37],[2,38],[-2,40],[6,24],[9,21],[12,27],[15,20],[40,15],[14,17],[10,26],[16,50],[17,-12],[18,-20],[33,-16],[28,-42],[19,-66],[3,-32],[5,-108],[-7,-25],[-28,-51],[13,-5],[36,46],[19,18],[45,24],[11,16],[7,24],[16,66],[12,71],[9,29],[13,23],[13,4],[47,-48],[31,23],[8,73],[7,106],[6,29],[17,28],[21,-9],[28,-38],[27,-13],[9,31],[10,61],[10,-1],[36,-20],[34,13],[10,73],[-7,78],[-27,226],[16,51],[14,1],[34,-60],[65,-81],[22,-50],[14,-61]],[[83638,62566],[43,-30],[94,-108],[34,-27],[36,-20],[28,-5],[26,24],[10,25],[20,67],[20,8],[13,-24],[9,-33],[5,-47],[-6,-50],[-20,-44],[-12,-54],[-8,-177],[0,-53],[7,-51],[17,-81],[9,-23],[26,-29],[7,-22],[1,-39],[4,-35],[17,-13],[14,-18],[-5,-38],[-9,-39],[-12,-97],[-55,-223],[-3,-48],[-22,-96],[-45,-16],[-52,-46],[-28,-36],[-25,-47],[-10,-62],[8,-28],[5,-30],[0,-32],[-8,-27],[-25,-65],[-10,-54],[-11,-24],[-6,-29],[2,-33],[10,-29],[30,-125],[33,-121],[7,-14],[2,-16],[-19,-32],[1,-58],[5,-58],[29,-142],[4,-38],[10,-31],[14,-30],[17,-24],[46,-42],[18,-9],[19,-1],[4,28],[17,10],[-4,28],[-20,38],[0,21],[10,16],[13,9],[28,42],[29,34],[38,-3],[37,-19],[27,-19],[22,-37],[22,-62],[16,-69],[-1,-33],[-3,-33],[0,-33],[12,-22],[36,-1],[18,51],[3,58],[-13,22],[6,28],[11,22],[16,-19],[15,-36],[56,-39],[14,-1],[11,-7],[25,-28],[12,-21],[-14,-45],[-56,-10],[-16,-34],[17,-68],[26,-55],[17,-45],[15,-49],[0,-45],[-9,-46],[24,3],[23,-9],[32,-40],[10,-3],[10,6],[-1,-141],[-22,-129],[-27,16],[-23,54],[4,67],[15,64],[-8,14],[-15,-6],[-17,-14],[-19,-5],[-30,8],[-62,70],[-26,7],[-6,31],[2,67],[-25,80],[-4,28],[-8,23],[-74,86],[-9,15],[-23,69],[-52,98],[-14,10],[-16,3],[-5,-25],[7,-38],[3,-33],[-1,-35],[2,-27],[25,-54],[3,-26],[17,-70],[2,-82],[-21,-34],[-24,38],[-1,31],[-4,29],[-25,74],[-8,16],[-48,74],[-37,80],[-82,86],[-9,5],[-15,-7],[-13,-10],[-40,-43],[-14,-29],[-1,-46],[-28,-36],[-39,-5],[-30,23],[-25,45],[-21,2],[-25,71],[-31,9],[-26,-55],[-5,109],[0,111],[7,33],[13,27],[65,116],[8,38],[-3,50],[-15,40],[-23,25],[-27,10],[-19,23],[-15,38],[-11,-67],[10,-98],[2,-65],[-9,-24],[-17,0],[-16,7],[-11,23],[-9,67],[-23,43],[-9,63],[-10,9],[-21,-5],[-16,29],[-10,74],[-2,78],[-9,66],[-13,64],[-7,52],[-12,235],[-2,21],[-6,18],[-15,27],[-11,32],[-2,27],[3,115],[5,28],[11,13],[16,-22],[12,-28],[15,-14],[14,-17],[25,-69],[10,-10],[31,2],[18,8],[9,25],[5,30],[1,35],[-18,103],[-6,74],[0,67],[5,67],[24,112],[3,77],[-2,104],[4,61],[-1,36],[-14,55],[-4,60],[41,302],[13,58],[9,61],[4,80],[31,22],[29,33],[15,-3],[15,-8],[36,17],[13,1]],[[87075,51424],[70,-8],[35,5],[34,-7],[14,-15],[24,-44],[-7,-29],[-4,-60],[13,-58],[20,-58],[16,-62],[3,-30],[-6,-65],[-5,-31],[-20,-53],[-11,-58],[7,-71],[4,-71],[-1,-66],[4,-65],[10,-65],[47,-180],[27,-122],[9,68],[-2,76],[9,27],[14,15],[17,-16],[4,-30],[2,-67],[14,-131],[19,-6],[21,20],[3,-40],[-1,-74],[10,-59],[8,-23],[34,-48],[15,-9],[44,-12],[33,-3],[32,17],[21,44],[18,47],[65,110],[18,53],[18,80],[7,18],[63,87],[8,31],[9,59],[14,58],[10,30],[62,28],[64,16],[64,53],[27,46],[2,30],[-14,53],[-1,23],[15,23],[56,67],[66,69],[53,47],[29,0],[27,-42],[28,-34],[150,-101],[24,-31],[21,-42],[30,-29],[33,-14],[31,-27],[28,-35],[64,-64],[86,-79],[21,-5],[80,4],[14,-15],[13,-21],[12,-5],[91,-14],[14,-15],[13,-21],[8,-57],[99,-3],[22,-9],[140,-125],[41,-50],[14,-12],[14,-1],[14,-5],[62,-70],[94,-69],[99,-67],[31,-14],[31,-6],[69,-23],[37,-21],[53,-82],[27,-25],[25,-46],[35,-50],[15,-12],[15,-6],[35,-2],[35,9],[15,-4],[14,-9],[13,-17],[6,-33],[22,-47],[31,-20],[29,-42],[27,-50],[19,-50],[22,-43],[34,-18],[35,-2],[120,-253],[6,-39],[1,-165],[-13,-129],[30,-40],[40,-15],[58,-28],[55,-41],[175,-174],[24,-15],[35,-6],[36,3],[13,-9],[26,-32],[14,-20],[24,-57],[21,-61],[9,-17],[11,-14],[6,-33],[9,-103],[-3,-64],[-9,-24],[-28,-11],[-99,-11],[-65,12],[-46,-65],[-2,-28],[4,-27],[40,-137],[23,-121],[20,-50],[29,-40],[26,-48],[24,-54],[50,-95],[27,-36],[31,-21],[53,-74],[7,-33],[16,-103],[6,-69],[1,-29],[4,-26],[46,-63],[11,-18],[20,-140],[16,-65],[27,-24],[31,2],[85,42],[12,1],[16,-10],[14,-23],[4,-63],[-13,-66],[-4,-64],[17,-52],[43,-41],[16,-12],[78,-13],[30,-11],[30,-17],[11,-16],[-8,-28],[-15,-14],[-18,-6],[-29,-20],[1,-36],[16,-38],[15,-45],[12,-17],[14,-11],[33,-15],[33,-22],[22,-22],[22,-15],[48,-10],[36,-29],[51,12],[-44,-47],[-15,-11],[-53,17],[-10,-18],[22,-50],[32,-34],[12,-19],[-9,-23],[-37,-46],[-16,-6],[-29,-4],[-50,20],[-35,25],[-9,34],[-10,20],[-31,49],[-23,26],[-28,9],[-30,-1],[-53,28],[-116,20],[-27,12],[-35,39],[-16,6],[-18,-12],[-44,-8],[-13,3],[-32,33],[-33,12],[-14,-9],[-14,-3],[-44,24],[-34,10],[-28,33],[-15,30],[-17,28],[-16,70],[-24,67],[-31,54],[-65,89],[-13,22],[-25,81],[1,54],[9,54],[-14,-19],[-16,3],[-44,36],[-18,42],[-30,116],[-19,62],[-44,108],[-13,64],[-18,56],[-12,21],[-9,24],[-9,32],[-12,21],[-62,49],[-11,15],[-12,8],[-46,5],[-26,8],[-50,39],[-26,12],[-31,7],[-30,15],[-15,15],[-10,25],[-6,59],[-25,-7],[-25,10],[-24,21],[-24,13],[-17,-18],[-5,-47],[-8,-2],[-14,9],[-7,-5],[-16,-22],[-12,-29],[-23,4],[-47,30],[-21,18],[-18,34],[-15,38],[-16,29],[-19,22],[24,-51],[56,-228],[-14,-4],[-14,6],[13,-44],[-15,-6],[-15,0],[-32,19],[-31,6],[-10,-9],[7,-16],[11,-49],[9,-50],[-46,-23],[-46,-14],[-52,-27],[-53,-2],[-27,16],[-28,9],[-26,-9],[-25,-20],[-21,3],[-14,36],[-6,27],[-8,23],[-20,-4],[-19,-12],[33,-2],[10,-30],[8,-36],[23,-32],[29,19],[61,-5],[60,-57],[14,-7],[13,-11],[31,-56],[24,-51],[19,-59],[4,-23],[-1,-61],[-6,-30],[-39,-43],[-41,-33],[-61,-63],[-59,-73],[-31,15],[-28,38],[-10,10],[-29,21],[-18,7],[-69,-16],[-70,-8],[-30,1],[-28,12],[-32,23],[-31,-11],[-21,-26],[-23,-4],[-58,78],[-39,64],[-34,74],[-23,68],[-25,62],[-108,184],[-27,61],[-6,16],[3,16],[12,32],[22,92],[-23,-57],[-27,-45],[-40,-3],[-39,-11],[-37,-27],[-37,-10],[-18,14],[-11,34],[-6,35],[-3,36],[-15,-59],[-31,-33],[-41,-69],[-12,14],[-7,27],[-3,27],[8,29],[6,31],[8,73],[19,44],[12,84],[8,30],[4,30],[-11,34],[-18,12],[-13,20],[-15,57],[-9,20],[-16,23],[-13,28],[14,20],[19,8],[15,-1],[27,-13],[13,0],[31,21],[-17,-7],[-18,1],[-57,37],[-35,38],[-33,77],[0,15],[23,14],[51,16],[-16,39],[-23,34],[-8,61],[-15,38],[-34,61],[-23,64],[-19,129],[-20,98],[5,35],[17,25],[-26,3],[-23,19],[12,47],[27,28],[-25,-7],[-23,-14],[-11,-2],[-11,4],[-6,19],[-1,27],[3,48],[-4,46],[-21,22],[-17,33],[-10,13],[-13,-1],[-12,22],[-10,32],[-126,139],[-8,40],[-11,-18],[-12,-8],[-14,23],[-16,15],[-16,-2],[-15,12],[-16,7],[-17,1],[-66,43],[-63,68],[-51,29],[-31,38],[-33,31],[-73,30],[-74,20],[-27,1],[-22,-7],[-22,2],[-122,147],[-21,67],[2,39],[6,33],[50,9],[-36,9],[-14,-4],[-29,-27],[-16,-2],[-22,18],[-21,22],[-35,-20],[-17,34],[-7,35],[-9,17],[-13,-2],[-17,-13],[-18,2],[-11,25],[-8,32],[-12,23],[-15,17],[-24,42],[-12,56],[1,98],[4,36],[24,57],[16,54],[-20,6],[-19,-25],[-8,-25],[-3,-31],[-2,-103],[-15,-30],[-22,2],[6,-60],[-9,-57],[-26,-67],[-2,-31],[4,-33],[-6,-32],[-42,-94],[-14,-5],[-32,1],[-32,-15],[-15,22],[-13,28],[-9,34],[-13,70],[-10,71],[32,88],[-11,80],[-21,68],[-55,94],[-57,90],[-26,18],[-43,8],[-13,9],[-13,33],[-10,39],[26,17],[46,46],[26,-3],[70,-24],[21,-23],[20,-13],[48,75],[38,99],[24,21],[20,7],[20,-9],[41,-34],[32,-16],[23,-4],[12,-30],[13,-14],[3,46],[12,54],[22,17],[12,3],[8,14],[-2,50],[-30,6],[17,43],[14,21],[5,21],[1,26],[-59,-50],[-62,-21],[-36,5],[-37,1],[-73,-33],[-27,1],[-65,13],[-36,17],[-27,-13],[-27,-1],[-28,38],[-23,48],[-12,34],[-16,25],[-7,33],[-17,126],[-2,89],[-27,2],[-28,9],[-121,85],[-15,-21],[-17,-11],[-17,-4],[-17,5],[-17,13],[1,23],[13,58],[12,21],[17,17],[11,30],[18,92],[1,31],[-2,32],[1,24],[11,12],[46,30],[95,45],[24,27],[20,43],[24,26],[10,27],[12,21],[74,57],[32,4],[32,-6],[65,-34],[61,-54],[53,-72],[57,-52]],[[84691,52416],[-53,-98],[-17,-47],[-14,-51],[-21,-56],[-24,-50],[-12,-15],[-29,-27],[-17,-10],[-32,-4],[-97,-39],[-31,-5],[-32,2],[-60,10],[-12,5],[-24,51],[-27,40],[-24,5],[-24,-4],[-175,-3],[-61,-8],[-61,-18],[-33,8],[-33,21],[-24,7],[-25,-2],[-115,-31],[-29,3],[-58,39],[-34,8],[-33,-10],[-31,-36],[-11,-23],[-32,-81],[-18,-58],[-14,-73],[-11,-75],[-7,-61],[0,-64],[5,-72],[9,-71],[10,-55],[39,-126],[8,-17],[44,-36],[25,-45],[25,-126],[17,-65],[17,0],[19,4],[33,-8],[33,-17],[32,39],[17,73],[18,55],[43,103],[25,48],[15,15],[16,-6],[13,-28],[16,-22],[32,-11],[33,7],[34,34],[12,20],[11,26],[29,22],[69,0],[36,-8],[64,9],[-1,19],[-12,20],[-4,16],[12,11],[41,23],[42,17],[31,-12],[27,-33],[11,-34],[4,-41],[-10,-105],[-5,-25],[-22,-12],[-20,14],[-21,54],[-28,20],[-41,-16],[-14,-16],[-13,-22],[-23,-56],[-19,-64],[-41,-100],[-48,-86],[-23,-33],[-26,-23],[-83,-57],[-22,-42],[-17,-55],[-19,-19],[-22,-6],[-16,10],[-33,31],[-11,-25],[-2,-39],[16,-14],[27,-43],[20,-61],[13,-13],[29,-20],[12,-19],[22,-52],[34,-122],[12,-66],[19,-53],[58,-91],[3,-26],[-3,-30],[4,-27],[21,-52],[5,-34],[-23,-43],[-1,-62],[-14,-83],[-3,-28],[0,-26],[10,-24],[11,-18],[16,-10],[14,-17],[26,-65],[14,-17],[8,-23],[0,-36],[12,-20],[11,-37],[16,-9],[8,10],[6,16],[14,-6],[8,-25],[4,-33],[2,-37],[-1,-69],[-7,-24],[-15,1],[-27,28],[-1,-20],[2,-20],[-14,-7],[-16,3],[-40,-3],[-73,-42],[-26,-26],[-17,-46],[-1,-31],[6,-68],[-9,-23],[-34,-9],[-47,18],[-28,18],[-16,15],[-21,45],[-8,58],[16,172],[4,22],[7,19],[8,31],[2,37],[-22,45],[-34,18],[-29,37],[-111,209],[-6,21],[0,34],[4,33],[37,114],[4,22],[5,91],[-1,74],[-4,75],[-17,46],[-31,15],[-32,2],[-31,-15],[-30,-37],[-57,-79],[-22,-46],[-2,-60],[13,-58],[17,-54],[8,-58],[13,-207],[-1,-23],[-14,-60],[-6,-135],[6,-190],[10,-116],[-4,-63],[-26,-136],[-8,-75],[-1,-31],[31,-142],[7,-56],[4,-58],[-33,28],[-15,-1],[-16,-9],[-34,-9],[-35,-1],[-12,-11],[-25,-38],[-15,-15],[-13,-3],[-44,47],[-27,52],[-24,56],[-4,63],[8,66],[12,70],[24,116],[-1,78],[8,64],[14,62],[5,58],[3,224],[-3,20],[-33,133],[-4,22],[0,36],[3,34],[1,31],[-7,24],[-14,22],[-16,9],[-34,-9],[-68,-36],[-20,31],[-15,49],[-10,68],[-5,71],[2,67],[10,65],[-8,45],[-12,49],[0,25],[7,23],[12,18],[15,11],[14,19],[37,66],[12,58],[1,72],[10,68],[19,63],[22,58],[7,60],[-11,96],[5,43],[-4,51],[0,50],[13,95],[42,194],[40,103],[16,27],[21,-47],[16,-57],[1,51],[-5,50],[-16,117],[-14,228],[4,21],[14,-3],[15,20],[7,36],[-15,84],[0,30],[28,119],[24,43],[10,27],[6,73],[12,27],[16,20],[20,50],[11,63],[7,5],[8,2],[12,-55],[14,-22],[28,-18],[24,21],[7,27],[9,24],[14,25],[12,28],[14,66],[18,59],[12,21],[15,13],[16,8],[16,1],[35,-37],[21,-7],[20,2],[14,-6],[10,-17],[9,-34],[11,-29],[10,-14],[12,-7],[76,12],[67,-33],[91,-8],[32,-19],[30,-26],[36,-44],[14,-10],[15,2],[19,42],[14,10],[15,1],[59,-8],[158,-52],[23,8],[96,99],[38,93],[34,26],[11,43],[7,51],[12,13],[29,15],[11,15],[21,62],[24,56],[11,16],[34,-8],[15,-25],[19,-81],[-3,-14],[-22,-40],[-7,-17],[-25,-115],[-17,-56],[-21,-50]],[[79825,48382],[28,-66],[25,-35],[29,-19],[30,-2],[30,-8],[35,-25],[35,-11],[17,4],[16,13],[11,1],[10,-12],[25,-56],[27,-51],[6,-26],[18,-123],[20,-35],[29,-10],[33,0],[33,-5],[77,-29],[30,4],[27,29],[24,-19],[65,-34],[32,-8],[36,10],[37,2],[17,-10],[17,-15],[14,-6],[15,1],[26,29],[18,52],[14,67],[11,69],[7,30],[10,26],[14,17],[14,11],[38,-7],[8,-16],[42,-118],[8,-10],[45,-8],[12,4],[27,24],[16,2],[28,-29],[13,-25],[13,-18],[70,-19],[28,-50],[13,-7],[49,6],[34,-5],[29,-13],[13,-72],[11,-73],[7,-25],[28,-25],[12,-23],[-3,-73],[3,-70],[61,-60],[65,-35],[69,-4],[70,12],[35,15],[45,26],[9,0],[87,-80],[8,-12],[9,-60],[0,-62],[-16,-149],[-1,-41],[1,-41],[18,-89],[9,-25],[31,-47],[1,-25],[-4,-24],[-35,17],[-21,20],[-12,33],[-17,19],[-33,-7],[-61,34],[-69,52],[-122,110],[-33,-1],[-32,-14],[-33,-28],[-35,-20],[-26,-7],[-26,5],[-65,27],[-66,17],[-168,11],[-47,25],[-79,12],[-63,22],[-62,30],[-158,149],[-51,36],[-159,71],[-24,6],[-58,-5],[-36,21],[-32,0],[-47,-23],[-15,-17],[-18,-35],[-33,2],[-32,7],[-84,33],[-31,21],[-30,30],[-28,40],[-14,14],[-72,41],[-60,14],[-122,18],[-27,12],[-22,15],[-12,33],[1,42],[9,36],[12,36],[8,34],[-89,73],[-71,40],[-30,7],[-31,0],[-34,-8],[-34,4],[-16,11],[-17,5],[-16,-9],[-13,3],[-4,33],[9,28],[17,32],[10,6],[4,-50],[5,-10],[16,-11],[6,3],[27,64],[8,31],[13,85],[14,-16],[14,10],[8,13],[23,196],[19,58],[26,47],[12,12],[26,-29],[51,-11],[30,-20],[31,-2],[29,-10],[42,-34],[15,3],[14,11],[23,38],[9,60],[32,-31],[48,-12],[11,-17]],[[76803,54855],[34,-5],[63,31],[35,-3],[32,-23],[30,-13],[72,17],[14,-5],[13,-13],[11,-20],[33,-75],[56,-92],[16,-59],[9,-67],[6,-15],[63,-127],[7,-54],[-9,-73],[19,-59],[61,-55],[36,-40],[8,-24],[5,-29],[21,-44],[25,-28],[78,-74],[103,-156],[59,-74],[48,-112],[18,-54],[14,-58],[29,-84],[50,-105],[13,-31],[13,-46],[16,-43],[19,-39],[22,-30],[22,-10],[37,-75],[20,-24],[-3,59],[-17,51],[0,32],[3,27],[14,24],[16,6],[31,-21],[49,-89],[21,-52],[16,-72],[13,-75],[20,-37],[27,-13],[31,-5],[28,-23],[65,-104],[22,-48],[16,-57],[12,-68],[7,-71],[4,-16],[42,-85],[22,-36],[27,-18],[78,-19],[28,-30],[23,-49],[10,-50],[-17,-44],[-61,-68],[-66,-47],[64,16],[32,20],[30,31],[30,39],[46,55],[17,11],[21,-4],[18,-16],[28,-53],[26,-57],[20,-66],[12,-73],[-22,-39],[-33,-28],[-45,-71],[-4,-28],[9,-18],[-11,-52],[25,-32],[4,-28],[-22,-39],[2,-24],[26,-103],[13,-24],[40,-52],[60,-53],[34,-25],[38,-19],[17,1],[28,8],[6,-20],[12,-102],[6,-64],[9,-137],[11,-57],[-1,-69],[15,-59],[30,-38],[32,-31],[15,-30],[0,-45],[-5,-36],[-11,-28],[-33,-60],[-6,-25],[-5,-65],[6,-30],[13,-2],[10,16],[40,87],[11,16],[15,12],[15,8],[72,0],[31,-13],[27,-29],[25,-36],[88,-228],[40,-126],[3,-31],[1,-33],[-7,-25],[-37,-86],[-4,-23],[-12,-94],[2,-67],[13,-29],[9,-30],[0,-28],[-25,-139],[-2,-23],[15,-226],[1,-61],[-3,-77],[2,-124],[-19,-384],[-4,-23],[-15,-59],[-20,1],[-16,10],[-12,22],[-6,28],[-9,23],[-48,71],[-13,-12],[-49,-88],[-13,-13],[-16,11],[-25,26],[-81,93],[-5,-30],[-1,-40],[16,-101],[2,-44],[-15,-9],[-8,2],[-33,59],[-31,65],[-35,87],[-26,42],[-23,46],[-66,177],[-17,27],[-101,124],[-20,30],[-26,51],[-28,46],[-61,72],[-106,184],[-46,105],[-51,170],[-17,43],[-86,128],[-47,77],[-20,44],[-45,155],[-14,52],[-16,46],[-28,37],[-24,44],[-49,140],[-15,55],[-11,61],[2,120],[-103,366],[-26,114],[-23,158],[-6,16],[-56,142],[-19,45],[-24,43],[-20,50],[-38,162],[-15,45],[-20,33],[-73,61],[-27,34],[-22,48],[-13,62],[-14,131],[-35,199],[-38,267],[-26,119],[-30,94],[-9,21],[-133,169],[-22,25],[-24,15],[-34,11],[-27,43],[-10,78],[-6,105],[-7,63],[-7,35],[-56,75],[-21,58],[-18,65],[-17,50],[-61,172],[-21,45],[-26,32],[-76,33],[-23,29],[-37,98],[-22,50],[-67,109],[-114,230],[-23,57],[-18,60],[-14,64],[-48,177],[3,36],[8,37],[-1,31],[-6,31],[1,27],[15,16],[32,21],[34,-2],[31,-9],[30,-17],[29,-38],[51,-94],[30,-33],[33,-15],[67,-22]],[[82446,55697],[-6,-49],[7,1],[28,30],[29,79],[17,69],[14,30],[28,-17],[6,-12],[-2,-49],[3,-29],[11,-61],[24,-37],[33,-24],[31,-34],[10,-22],[6,-27],[7,-45],[0,-44],[-22,-44],[10,-71],[-2,-41],[-7,-35],[-33,-33],[88,33],[22,18],[30,47],[16,-41],[15,-69],[-12,-18],[-38,-26],[-2,-10],[13,-36],[16,3],[31,24],[29,38],[14,0],[15,-8],[29,-24],[16,-20],[13,-26],[9,-53],[33,-19],[68,-75],[12,-7],[14,-1],[35,9],[13,-10],[9,-27],[3,-34],[-1,-36],[-4,-27],[-8,-22],[-25,-34],[-61,-45],[-66,-34],[-34,2],[-47,29],[-17,-3],[-17,-14],[-21,-92],[39,-92],[66,-96],[9,-24],[-2,-29],[-11,-18],[-14,-9],[-37,-16],[-38,-11],[-30,-17],[-31,-21],[-31,7],[-43,43],[-12,3],[-13,-22],[-13,-60],[-11,-22],[-19,-16],[-9,-33],[27,-51],[1,-34],[21,-30],[24,-46],[1,-16],[9,-21],[4,-25],[-17,-26],[-24,-5],[-17,24],[-16,30],[-4,-37],[-13,-21],[-45,6],[-32,0],[-32,-10],[16,-5],[14,-12],[50,-96],[11,-35],[-17,-70],[8,-29],[19,-16],[24,-35],[17,-4],[12,-19],[0,-34],[7,-32],[-19,-12],[19,-8],[17,-16],[-9,-16],[-7,-20],[7,-10],[23,-19],[10,-16],[6,-45],[22,-73],[41,-95],[9,-34],[0,-32],[-6,-27],[-24,-32],[-19,-42],[-2,-15],[-26,-20],[12,-14],[9,-19],[18,-59],[42,-95],[22,-35],[87,-129],[46,-57],[60,-128],[31,-30],[6,-36],[-26,-54],[-38,-28],[-62,-15],[-62,20],[-32,15],[-28,32],[-22,63],[-29,35],[12,-39],[7,-39],[-4,-43],[-11,-33],[-20,-25],[-21,-20],[-9,-14],[-53,-224],[-9,-60],[-16,-252],[0,-71],[24,-133],[2,-69],[5,-30],[-4,-25],[-11,-15],[-46,-41],[-32,-34],[-26,-48],[-21,-59],[-19,-44],[-25,-20],[-18,3],[-14,20],[-10,38],[-6,42],[-4,-31],[1,-30],[8,-33],[4,-34],[-5,-35],[-11,-28],[-29,-30],[-16,-26],[-2,-46],[-8,-26],[-11,-20],[-40,-46],[-9,-18],[-7,-24],[22,4],[19,-4],[2,-45],[6,-34],[-8,-75],[-30,-50],[15,-11],[14,-16],[30,-12],[10,-53],[-4,-64],[-6,-58],[-21,-16],[-14,11],[-14,-1],[-10,-17],[-2,-30],[19,15],[-1,-75],[-5,-72],[-7,-40],[-11,-33],[-18,-10],[-16,24],[-4,-28],[5,-24],[24,-58],[-15,-13],[-10,-20],[-5,-29],[-26,-66],[-11,-49],[-5,-52],[-12,-41],[-194,-180],[-156,-151],[-12,10],[-7,23],[-6,235],[-19,121],[-3,68],[-22,-61],[-14,6],[-15,16],[-11,19],[0,26],[11,75],[-14,-41],[-16,-31],[-16,3],[-14,16],[-5,24],[-7,4],[-35,-67],[-45,-35],[-25,0],[-20,21],[1,50],[-2,50],[-5,29],[-13,10],[-11,-4],[-32,-25],[-12,3],[-7,-13],[-85,180],[-18,-146],[-59,-78],[-44,-45],[-43,17],[-45,29],[-44,-35],[-47,-86],[-13,-13],[-14,1],[-10,11],[3,65],[1,64],[-4,145],[-4,28],[-13,40],[-18,28],[-11,-21],[-9,-28],[-36,1],[-35,23],[-30,-13],[-60,-58],[-32,-8],[-17,12],[-11,31],[6,29],[14,21],[-25,-17],[-21,-29],[-9,-19],[-10,10],[-26,65],[-54,-24],[-8,-8],[-13,-22],[-13,11],[-7,24],[-2,136],[-28,262],[-7,134],[-6,31],[-32,49],[1,69],[16,57],[4,68],[-5,73],[-10,71],[-12,54],[-18,46],[-24,52],[-30,39],[-63,43],[-33,-4],[-13,17],[-8,23],[3,43],[12,30],[15,7],[2,17],[-33,35],[-26,48],[-9,28],[-2,31],[0,73],[8,46],[4,25],[8,76],[18,24],[-3,14],[-8,10],[-11,25],[-9,29],[-20,49],[-36,60],[-6,102],[-5,150],[3,68],[11,128],[21,40],[16,12],[12,17],[-10,2],[-9,-6],[-15,-4],[12,114],[6,33],[25,64],[30,57],[12,67],[17,58],[70,61],[18,-80],[7,-18],[40,-54],[33,-27],[36,-11],[37,-2],[15,4],[14,10],[14,-11],[76,-88],[30,-15],[31,6],[13,-8],[44,-67],[13,-8],[22,5],[-28,30],[-18,22],[-8,41],[4,44],[18,29],[12,31],[5,94],[8,48],[14,46],[5,43],[-16,34],[-4,57],[3,47],[10,33],[15,-22],[15,-19],[15,2],[11,7],[2,25],[-3,43],[1,78],[19,63],[31,43],[29,21],[108,35],[172,89],[51,35],[19,18],[15,25],[27,80],[50,125],[35,103],[74,151],[59,139],[8,26],[9,76],[1,36],[-2,36],[8,17],[12,10],[34,-1],[34,10],[35,30],[33,37],[28,43],[27,47],[27,38],[43,44],[15,-4],[0,-31],[-6,-36],[32,0],[65,19],[14,21],[26,46],[10,26],[7,58],[-32,34],[-12,44],[-1,48],[38,88],[13,21],[6,-31],[17,-8],[15,-1],[16,2],[22,44],[12,64],[39,91],[14,70],[8,72],[99,226],[12,36],[59,227],[7,7],[16,-22],[4,-72],[-2,-31],[-9,-47]],[[68823,95758],[-111,-44],[-66,-30],[-65,-21],[-66,-15],[-104,-36],[-184,-46],[-116,-37],[-127,-30],[-134,-39],[-134,-27],[-33,-2],[-96,-38],[-75,-16],[-272,-85],[-125,-63],[-36,-5],[-36,3],[-30,-20],[-28,-33],[-59,-34],[-30,-31],[-30,-24],[-18,-8],[-34,2],[-16,-2],[-55,-27],[-10,-22],[59,-14],[13,-24],[-17,-16],[-38,-23],[-22,-23],[-40,-23],[-27,-7],[-65,1],[-4,-29],[11,-18],[-6,-16],[-22,-15],[-21,2],[-99,45],[-16,-15],[-7,-32],[-3,-34],[-13,-25],[-17,-13],[-31,-13],[-109,21],[-9,-20],[17,-25],[23,-54],[5,-22],[-13,-36],[-49,-56],[-187,-67],[3,-23],[21,-44],[5,-27],[-8,-26],[-24,-21],[-28,0],[-15,4],[-43,29],[-37,7],[-7,-14],[49,-39],[21,-51],[-23,-27],[-90,-61],[-47,-80],[-92,-35],[-57,-5],[-56,10],[-53,18],[-135,7],[-75,20],[-76,36],[-66,-3],[-56,-18],[-74,-39],[-47,75],[20,35],[-101,90],[-22,40],[25,19],[31,13],[59,36],[59,29],[61,9],[10,5],[25,43],[27,35],[25,20],[28,33],[89,134],[21,10],[184,26],[16,8],[-53,27],[-54,-1],[-25,9],[-14,19],[-8,22],[21,16],[71,81],[84,58],[78,35],[-19,9],[-25,23],[-95,-6],[-37,32],[-12,19],[-3,19],[31,25],[32,15],[35,-4],[35,-13],[28,-15],[27,-24],[23,1],[85,84],[-13,19],[-5,29],[9,14],[41,13],[27,5],[59,-6],[85,-18],[7,9],[21,56],[21,30],[86,50],[-5,15],[-4,25],[100,33],[65,33],[63,45],[32,9],[32,2],[65,19],[121,22],[71,22],[23,48],[45,17],[90,7],[35,-3],[20,-20],[39,1],[15,11],[16,17],[-5,29],[-1,37],[34,23],[13,5],[102,9],[60,-4],[125,-28],[65,-7],[87,9],[52,-5],[154,42],[261,39],[68,28],[67,33],[34,7],[35,2],[31,11],[61,28],[30,7],[33,0],[30,20],[26,43],[29,33],[79,43],[134,60],[121,23],[75,25],[32,2],[102,-12],[130,-33],[59,-36],[49,-47],[10,-17],[9,-30],[-14,-28],[-9,-28],[11,-22],[-95,-71],[-93,-78],[-16,-17],[-111,-27]],[[65366,94071],[130,-23],[97,-7],[59,-18],[22,-14],[-9,-36],[-17,-14],[-41,-47],[-6,-28],[7,-45],[-6,-33],[-13,-24],[-11,-10],[-73,0],[-27,-13],[-1,-26],[-5,-29],[-24,-42],[-48,-13],[-11,-16],[4,-27],[-17,-21],[1,-32],[9,-18],[2,-37],[33,-54],[-6,-22],[-26,-43],[-8,-53],[-21,-46],[48,-38],[21,-50],[19,-53],[57,-105],[62,-94],[114,-137],[122,-104],[48,-29],[116,-48],[20,-16],[19,-21],[-49,-39],[-51,-14],[-5,-18],[-28,-10],[-138,34],[-7,5],[-15,24],[-16,18],[-35,3],[-35,-11],[21,-22],[23,-7],[40,-41],[-17,-16],[-18,-2],[-82,55],[-7,-7],[-8,-16],[-40,18],[-10,-13],[-31,-6],[-25,15],[0,19],[-5,10],[-125,-15],[-52,0],[-51,7],[-61,36],[-11,-16],[-2,-19],[-23,8],[-51,29],[-37,12],[-133,28],[-94,34],[24,16],[40,8],[1,21],[-7,29],[-1,29],[23,20],[52,-9],[-7,32],[25,6],[47,-18],[18,11],[-75,41],[-82,58],[8,21],[-29,5],[-30,-1],[-25,34],[4,45],[22,31],[-13,6],[-127,-27],[-64,6],[-72,18],[-66,-26],[-67,-9],[-35,9],[-34,20],[-28,26],[-22,45],[-20,74],[-3,28],[4,62],[11,27],[28,52],[19,16],[43,25],[22,6],[51,-12],[51,-1],[22,14],[21,25],[15,32],[35,18],[10,10],[11,20],[12,31],[2,27],[10,26],[32,39],[-12,24],[5,16],[21,29],[-64,7],[-22,13],[-21,19],[6,18],[8,13],[64,48],[28,15],[31,7],[31,0],[33,-5],[32,7],[-34,33],[-3,22],[-13,53],[3,25],[14,21],[30,24],[43,8],[34,12],[33,19],[31,3],[63,-12],[31,2],[34,11],[97,40],[36,11],[38,-3],[50,-15],[55,-28]],[[89655,83175],[60,-145],[2,-32],[-5,-33],[-11,-42],[-4,-44],[7,-39],[-5,-10],[49,-176],[35,-111],[11,-45],[7,-48],[11,-99],[2,-151],[-3,-50],[-8,-49],[-8,-29],[-18,-20],[-8,-54],[-4,-153],[9,-80],[17,-56],[12,-60],[2,-64],[5,-29],[27,-36],[11,-28],[3,-40],[2,-59],[4,-13],[13,-18],[56,-426],[22,-129],[64,-223],[26,-135],[17,-64],[11,-68],[9,-69],[19,-76],[25,-74],[49,-67],[22,-37],[5,-30],[2,-103],[-11,22],[-14,79],[-24,45],[-35,54],[-35,48],[-44,80],[-21,23],[-23,16],[-41,18],[-24,2],[-98,-12],[-40,-16],[-37,-37],[-21,-54],[-16,-108],[-89,-386],[-21,-101],[-8,-108],[3,-85],[6,-31],[26,-84],[21,-49],[15,-21],[18,-14],[11,-17],[10,-23],[18,-57],[23,-128],[25,-91],[11,-28],[28,7],[18,-1],[18,-8],[10,-23],[15,-101],[11,-98],[1,-26],[-20,-75],[-5,-32],[-3,-34],[-5,-27],[-9,-23],[-3,111],[-14,79],[-5,68],[-19,47],[-65,20],[-61,7],[-9,9],[-14,29],[-15,23],[-16,3],[-16,-9],[-27,-33],[-21,-51],[-15,-55],[-13,-59],[-27,-155],[-16,-51],[-20,-48],[-17,26],[-15,30],[-9,43],[-4,48],[-24,161],[10,140],[41,194],[7,63],[-6,60],[-9,60],[-6,113],[1,25],[14,65],[17,62],[20,54],[9,64],[-13,159],[-29,108],[-37,102],[-7,28],[-2,27],[32,128],[11,62],[13,134],[12,74],[9,74],[3,373],[-3,55],[-20,117],[-1,67],[9,84],[13,65],[17,63],[0,129],[-32,119],[-24,52],[-37,63],[-28,35],[-14,27],[14,9],[10,21],[-24,33],[-15,50],[-2,196],[6,49],[18,55],[16,59],[14,137],[5,141],[-9,57],[-4,116],[8,29],[31,38],[49,23],[11,-7],[38,-45],[14,-2],[15,5],[29,21],[16,52],[-21,29],[12,37],[35,13],[3,32],[-13,4],[11,46],[7,45],[-10,42],[-57,104],[-36,76],[60,-1],[18,14],[14,32],[7,33],[19,-13]],[[89950,77256],[35,-3],[16,2],[26,-8],[106,-88],[32,-11],[33,-1],[23,7],[20,24],[64,106],[67,97],[8,-4],[0,-27],[-5,-29],[-30,-89],[-33,-119],[-7,-60],[11,-59],[20,-49],[17,-66],[19,-93],[26,-11],[14,-2],[27,28],[25,35],[22,4],[22,-6],[-30,-24],[-28,-30],[-24,-57],[-9,-10],[-28,3],[-16,-2],[-32,-24],[-29,-27],[-27,-33],[-30,-17],[-32,-4],[-49,-27],[-32,-2],[-59,23],[-29,-6],[-63,-53],[-58,-77],[-50,-86],[-42,-104],[-17,-54],[-10,-60],[-2,-40],[-4,-38],[-9,-27],[-12,-22],[-35,13],[-57,55],[-110,81],[-117,123],[-66,62],[-123,-19],[-117,-118],[-11,10],[-44,81],[-22,32],[-26,9],[-19,-1],[-19,-6],[-26,-41],[-10,-30],[-7,-34],[-2,-24],[3,-24],[25,-53],[31,-40],[13,-8],[30,3],[14,-4],[49,-80],[55,-74],[12,-25],[-20,-26],[-22,-13],[-26,3],[-25,10],[-44,32],[-18,-27],[-29,-56],[-16,-60],[-13,-28],[-32,-36],[-34,-19],[-17,6],[-14,23],[-7,27],[-4,32],[7,69],[17,62],[7,63],[-14,89],[-9,18],[-36,53],[-17,50],[-4,63],[2,35],[9,77],[9,39],[16,13],[18,8],[28,27],[30,36],[29,41],[29,51],[15,55],[-25,68],[-5,40],[4,38],[26,20],[27,-15],[55,-56],[11,-5],[37,-3],[51,-12],[30,3],[14,8],[22,46],[10,59],[-4,75],[0,75],[14,61],[43,99],[12,57],[4,141],[16,62],[12,64],[6,135],[-17,129],[-18,64],[-20,60],[3,58],[16,53],[0,16],[4,14],[31,11],[14,11],[14,26],[16,15],[12,-15],[10,-26],[43,-65],[68,-116],[80,-176],[50,-86],[53,-78],[59,-79],[63,-69],[39,-32],[29,-52],[18,-8]],[[89229,75675],[11,-11],[52,29],[-10,-88],[-5,-89],[4,-148],[4,-67],[9,-65],[22,-46],[29,-33],[42,-105],[23,-129],[16,-63],[11,-66],[4,-30],[0,-30],[-3,-41],[4,-33],[-5,-105],[-19,-121],[-2,-62],[-16,-12],[-10,-29],[-9,-13],[-9,-10],[-14,-3],[-9,-11],[-4,-33],[-6,-31],[-12,-28],[-9,-31],[-8,-75],[-3,-77],[-11,-54],[-28,-14],[-32,1],[-40,-25],[-9,-15],[-32,-94],[-9,-56],[0,-59],[9,-73],[12,-72],[9,-133],[-10,-203],[-9,-65],[-20,-44],[-16,-20],[-13,-25],[-17,-66],[-29,-132],[-2,-34],[0,-34],[-8,-45],[-5,-44],[5,-51],[9,-48],[38,-123],[15,-36],[17,-34],[-65,-36],[-12,-17],[-39,-70],[-12,-67],[1,-73],[-7,-27],[-10,-23],[-12,-15],[-43,-34],[-28,-33],[-27,-52],[-11,-28],[-21,9],[-13,24],[12,31],[-3,35],[6,93],[-7,37],[22,28],[10,45],[24,35],[16,32],[3,26],[-15,28],[-15,20],[-22,0],[-21,-6],[-13,-27],[-5,-36],[1,-16],[-2,-15],[-32,-49],[4,-52],[10,-26],[12,-13],[-4,-17],[-15,-42],[-11,-4],[-20,58],[-25,32],[-31,0],[-31,-12],[-25,-39],[-8,-32],[-5,-33],[2,-81],[-10,-68],[-19,-59],[-10,-22],[-23,-40],[-17,-5],[-12,18],[-9,28],[12,101],[-1,57],[28,29],[-23,41],[-28,16],[-39,-21],[-11,-25],[-8,-33],[-21,-41],[-24,-39],[-26,-66],[-18,-79],[-58,26],[-32,6],[-32,-2],[-57,9],[-63,-16],[-71,-30],[4,22],[59,47],[2,14],[-6,26],[-14,1],[-35,-9],[-18,4],[-8,28],[-12,12],[-7,-12],[2,-54],[-9,-7],[-11,14],[4,42],[-8,61],[-1,39],[12,32],[-12,14],[-14,-5],[-17,-16],[-14,-22],[-32,-112],[-12,-64],[23,-52],[63,-72],[10,-17],[1,-31],[-8,-32],[-17,-15],[-69,-24],[-59,-46],[-18,-47],[-54,-183],[-43,-125],[-62,-43],[-67,39],[-16,43],[-14,54],[-25,48],[-22,53],[-13,63],[2,101],[-10,61],[9,16],[37,37],[12,21],[21,48],[8,27],[1,41],[-17,21],[-44,-1],[-43,-13],[-31,18],[-41,49],[-12,11],[-43,3],[-31,-9],[-31,-18],[-32,-6],[-11,-9],[-37,-60],[-29,-38],[-26,-19],[-55,-5],[-28,-12],[-29,-20],[-8,1],[-30,-27],[-35,-24],[-19,-24],[-34,16],[-68,-43],[-33,-5],[-34,23],[-31,38],[-30,-16],[-21,-56],[-10,-113],[-12,-50],[-4,-61],[-15,10],[-91,109],[-6,4],[-74,-19],[-19,-9],[-23,-22],[-25,-10],[-23,16],[-22,26],[-21,-8],[-22,-18],[-8,165],[4,21],[14,29],[14,25],[36,9],[36,-9],[25,12],[22,32],[23,47],[26,37],[35,30],[34,34],[30,48],[28,52],[26,39],[28,32],[43,77],[57,87],[22,64],[13,18],[49,35],[65,28],[31,-2],[30,-56],[17,8],[16,14],[34,8],[34,-9],[34,0],[33,7],[65,19],[34,22],[33,29],[118,20],[82,48],[12,-3],[13,-11],[1,-36],[-10,-39],[10,-24],[16,-14],[76,-5],[22,-8],[32,26],[30,33],[31,44],[22,49],[-20,61],[-4,67],[17,73],[24,62],[30,37],[27,42],[54,121],[40,98],[14,121],[-8,142],[34,106],[33,18],[66,49],[34,14],[5,-21],[-1,-28],[-51,-89],[-30,-36],[-17,-12],[-16,-16],[-7,-31],[26,-53],[7,-38],[-2,-37],[1,-34],[30,-36],[34,-12],[14,0],[13,10],[39,89],[8,15],[111,65],[55,50],[30,13],[28,26],[64,100],[23,46],[21,51],[18,59],[13,64],[18,40],[101,95],[32,52],[11,25],[12,73],[9,75],[12,59],[16,56],[22,57],[25,52],[15,54],[21,128],[10,72],[7,25],[11,22],[9,27],[7,31],[3,30],[5,93],[-3,72],[-16,61],[-14,17],[-15,1],[-23,-5],[-19,24],[4,22],[20,4],[13,12],[9,21],[18,66],[11,71],[1,31],[-14,58],[-11,69],[0,37],[12,43],[17,34],[16,9],[17,2],[15,13],[14,20],[8,21],[13,59],[4,33],[-7,90],[8,24],[11,15],[16,-11],[15,-2],[19,3],[17,-9],[4,-23],[11,-151],[6,-21],[13,-16],[14,3],[13,23],[8,32],[17,6],[51,-34],[18,24],[11,37],[11,66],[-5,60],[-13,21],[-12,-4],[-11,-16],[-13,-9],[-75,-31],[1,66],[16,99],[9,31],[12,15],[32,-17],[15,-11],[34,-48]],[[87321,71576],[38,-24],[39,6],[0,-105],[5,-35],[11,-32],[-5,-46],[18,-16],[-53,-52],[-48,-70],[-20,-47],[-17,-50],[-11,-53],[-6,-58],[-16,23],[-46,93],[-29,26],[-47,13],[-15,-3],[-96,-87],[-13,-63],[-26,-96],[-12,-32],[-14,-9],[-10,-16],[-11,-82],[-30,-51],[-18,-1],[-31,14],[-14,-8],[19,81],[-30,9],[-30,-1],[0,52],[-18,30],[13,39],[0,31],[8,18],[3,25],[-1,22],[-18,6],[-12,16],[2,57],[-10,2],[-26,-10],[-54,-44],[-15,0],[23,31],[48,43],[21,25],[48,69],[29,33],[16,58],[5,36],[10,31],[9,49],[15,17],[27,43],[15,-4],[17,-53],[23,-40],[16,3],[30,21],[14,5],[34,-3],[30,26],[13,30],[4,37],[-11,63],[15,-6],[14,3],[33,40],[34,23],[35,6],[40,-22],[39,-36]],[[86437,71199],[37,-17],[16,-1],[14,7],[23,23],[23,17],[17,-9],[14,-20],[8,-28],[-4,-30],[-26,-63],[-22,-68],[50,-13],[50,1],[-12,-42],[-1,-36],[15,-18],[13,-23],[-4,-21],[-7,-21],[27,-32],[-2,-21],[-7,-22],[-68,-145],[-20,-73],[-13,-81],[-13,-59],[-9,-61],[-8,-66],[-12,-68],[4,-61],[-4,-62],[-34,-153],[-25,3],[-30,18],[-19,-3],[-10,-34],[17,-70],[-54,-83],[-60,-56],[-1,26],[6,20],[9,16],[6,19],[9,66],[-5,65],[-18,83],[-1,29],[12,12],[9,4],[4,11],[1,27],[-6,21],[-17,6],[-17,1],[-11,-31],[-16,-59],[-8,-59],[3,-33],[7,-29],[22,-49],[-6,-29],[-9,-22],[-77,50],[-17,4],[-14,11],[-15,67],[32,16],[9,8],[3,22],[5,65],[-15,55],[-12,19],[-11,23],[7,46],[-4,58],[-1,81],[6,14],[29,16],[21,44],[19,49],[27,87],[22,94],[-21,5],[-18,17],[19,45],[-6,56],[-29,69],[-17,81],[-26,36],[-14,13],[-17,-19],[-14,-23],[13,-53],[-1,-46],[2,-47],[13,-2],[16,11],[13,-8],[7,-24],[2,-32],[-5,-31],[-12,-15],[-15,1],[-14,17],[-12,24],[-27,13],[-28,-28],[-28,-58],[-23,-29],[11,42],[5,47],[-11,32],[-27,54],[-6,31],[-2,38],[5,37],[28,-43],[14,-53],[20,-23],[25,-1],[-19,79],[-7,20],[-28,35],[-37,59],[-23,29],[8,62],[14,12],[12,-3],[39,-22],[4,31],[-6,16],[-3,20],[26,26],[42,22],[9,11],[8,22],[10,11],[30,0],[25,21],[20,58],[5,31],[8,27],[51,46],[13,7],[34,-6],[32,-26],[16,-55],[13,-60],[33,-40]],[[83613,64873],[-17,-68],[-14,-71],[-6,-68],[1,-69],[-4,-63],[-7,-62],[-27,18],[-15,44],[-3,73],[-20,88],[-7,26],[-28,49],[-26,25],[-20,36],[3,-3],[-15,49],[-11,52],[-23,148],[-8,36],[-10,32],[-3,33],[3,36],[10,53],[6,54],[-5,74],[2,73],[8,32],[130,443],[36,94],[22,47],[18,52],[17,66],[22,60],[15,19],[75,54],[23,52],[19,16],[21,-1],[14,-25],[12,-29],[13,-16],[33,-28],[15,-28],[6,-48],[-20,-45],[-10,-41],[-2,-45],[4,-61],[0,-61],[-25,-143],[-27,-90],[-7,-44],[-9,-111],[-16,-111],[-13,-140],[-22,-145],[-13,-61],[-16,-58],[-37,-109],[-42,-90]],[[80802,63359],[13,-26],[9,-37],[8,-68],[4,-63],[-28,-40],[-25,-16],[-50,-154],[-11,-48],[-8,-21],[-3,-21],[1,-21],[-13,-74],[-12,-91],[-7,-37],[-14,-28],[-19,-15],[-11,-2],[-11,-8],[-27,-49],[-30,-38],[5,-17],[0,-16],[-13,-18],[-14,3],[-42,-14],[-16,-28],[-16,-51],[-6,-7],[-25,-12],[-20,-5],[-33,36],[-16,11],[-44,15],[-43,24],[-30,28],[-61,69],[-7,123],[-11,67],[0,24],[4,206],[4,22],[8,20],[27,46],[31,37],[44,76],[33,35],[27,50],[-16,-2],[-12,6],[12,43],[12,23],[14,12],[29,-9],[27,9],[19,38],[19,8],[71,-12],[49,17],[24,35],[12,2],[36,-10],[14,-37],[-1,25],[1,23],[7,-2],[47,-45],[0,55],[3,15],[15,23],[7,-1],[19,-44],[17,-26],[23,-13]],[[72217,57495],[26,-3],[29,2],[20,-8],[34,-89],[93,-159],[51,-162],[4,-35],[7,-30],[12,-9],[11,-14],[50,-156],[6,-31],[-1,-34],[3,-25],[14,-13],[16,-6],[11,-24],[14,-124],[0,-39],[3,-17],[64,-193],[4,-24],[-1,-18],[2,-15],[12,-34],[20,-92],[9,-21],[12,-81],[1,-154],[-4,-69],[-12,-84],[-14,-81],[-16,-59],[-21,-50],[-71,-106],[-21,-22],[-93,-66],[-68,-63],[-64,-17],[-63,34],[-48,83],[-24,122],[-17,127],[-25,141],[-18,435],[-9,122],[-15,155],[2,67],[10,64],[0,-141],[9,-17],[7,18],[7,146],[5,62],[25,161],[1,29],[-5,61],[1,30],[38,113],[9,66],[5,67],[-2,73],[-7,72],[31,-23],[17,-25],[17,-17],[14,9],[16,0],[-11,39],[-36,36],[-59,22],[-18,29],[-7,25],[3,29],[5,11]],[[63760,44681],[13,-60],[15,-58],[46,-140],[20,-53],[17,-57],[8,-114],[30,-178],[28,-266],[8,-273],[9,-126],[21,-118],[36,-122],[11,-136],[-21,-140],[-32,-132],[-8,-25],[-15,-34],[-6,1],[-26,34],[-20,56],[-26,132],[-10,66],[-10,11],[-31,-6],[-22,-41],[-4,-27],[5,-74],[8,-66],[4,-68],[0,-85],[9,-26],[12,-22],[12,-55],[3,-133],[-8,-67],[-22,-58],[2,-32],[8,-32],[-8,-20],[-29,-25],[-11,-22],[-16,-59],[-25,-120],[-3,-61],[16,-186],[-5,-132],[-32,-252],[-18,-119],[-26,-143],[-40,-189],[-39,-237],[-34,-243],[-25,-147],[-28,-144],[-38,-255],[-33,-258],[-48,-285],[-68,-317],[-7,-41],[-14,-163],[-15,-140],[-18,-140],[-37,-230],[-5,-71],[-8,-68],[-36,-144],[-16,-54],[-10,-57],[-6,-72],[-11,-70],[-27,-129],[-39,-110],[-27,-40],[-58,-59],[-30,-11],[-65,-2],[-64,-33],[-66,-64],[-63,-73],[-25,-35],[-27,-20],[-83,-4],[-26,16],[-84,120],[-32,20],[-62,17],[-18,10],[-17,16],[-25,62],[-50,54],[-12,16],[-7,37],[-5,39],[-13,45],[-10,84],[-16,59],[-45,104],[-5,33],[-4,110],[2,75],[-5,136],[5,65],[16,58],[-6,62],[-17,66],[-6,68],[-13,62],[-48,112],[-11,55],[-8,57],[-18,178],[-2,62],[3,130],[7,68],[11,47],[3,35],[8,30],[11,24],[7,28],[18,168],[23,37],[33,21],[27,44],[16,59],[15,121],[42,121],[15,63],[34,96],[30,135],[9,64],[7,65],[8,143],[5,71],[-1,70],[-17,72],[-41,132],[-1,24],[3,98],[-4,70],[-15,71],[-19,66],[-19,124],[-10,205],[2,74],[-5,65],[-14,63],[10,109],[123,397],[4,47],[-5,121],[2,71],[5,26],[9,15],[21,7],[99,18],[13,12],[25,33],[34,65],[15,19],[14,-7],[8,-28],[11,-15],[40,29],[16,1],[16,-5],[7,27],[4,36],[6,26],[11,14],[51,8],[33,11],[43,25],[9,-5],[34,-91],[11,-8],[13,-4],[12,17],[-28,48],[-4,26],[1,31],[15,65],[25,50],[56,76],[57,88],[17,6],[14,-14],[11,-103],[-1,-17],[9,-3],[10,13],[10,42],[0,34],[-7,34],[-4,28],[0,26],[29,61],[23,58],[10,70],[10,32],[24,36],[7,-6],[6,-29],[3,-31],[-6,-31],[-9,-31],[-4,-40],[14,-8],[13,10],[19,73],[21,70],[13,36],[16,25],[27,-5],[26,-15],[-43,73],[-10,101],[50,174],[1,37],[7,11],[3,14],[-26,59],[-5,29],[4,44],[12,40],[12,27],[16,11],[13,-15],[28,-49],[19,-7],[23,46],[18,58],[28,40],[32,25],[49,91],[32,191],[2,56],[-7,67],[-11,65],[-19,80],[5,18],[27,-11],[9,11],[28,71],[48,136],[16,0],[13,-25],[5,-37],[10,-28],[32,-65],[16,-48]],[[64752,74195],[-3,-27],[-15,81],[-7,89],[9,26],[11,-2],[-10,-32],[15,-135]],[[63939,77681],[-9,-17],[-15,3],[-28,61],[8,62],[10,13],[14,8],[2,-13],[-20,-28],[-2,-35],[17,-39],[23,-15]],[[63975,77748],[-10,-8],[-6,37],[11,31],[15,4],[-5,-49],[-5,-15]],[[5819,5871],[-347,-22],[-141,19],[-294,63],[-403,114],[-110,36],[-72,31],[-70,39],[-16,43],[10,62],[13,51],[21,32],[86,38],[43,42],[87,44],[25,33],[37,2],[70,-4],[69,-9],[65,-11],[63,-19],[144,-62],[100,-61],[144,-72],[143,-81],[80,-30],[77,-45],[74,-61],[14,-21],[31,-27],[19,-26],[19,-22],[19,-11],[15,-24],[-3,-26],[-12,-15]],[[30462,5944],[-60,-2],[-120,5],[-120,20],[-31,10],[-44,32],[-14,17],[-12,21],[-1,33],[32,114],[59,68],[56,39],[174,92],[23,10],[159,43],[62,23],[97,48],[534,186],[122,27],[55,-20],[31,-19],[-16,-22],[-72,-53],[-34,-32],[-87,-65],[-188,-109],[-133,-82],[-171,-113],[-40,-40],[-81,-95],[15,-42],[-27,-58],[-107,-28],[-61,-8]],[[37438,6445],[36,-2],[146,6],[146,-2],[89,-7],[26,-16],[23,-32],[26,-50],[24,-55],[27,-45],[16,-79],[25,-29],[43,-73],[6,-59],[-13,-128],[-21,-52],[-56,-50],[-64,5],[-29,-2],[-28,-10],[-11,-7],[-4,-10],[74,-43],[9,-16],[1,-19],[-10,-13],[-10,-7],[-1573,-260],[-61,-14],[-61,-27],[-20,-23],[-20,-18],[-1219,-49],[-11,3],[-11,10],[-31,50],[-6,79],[7,31],[61,30],[23,17],[103,117],[53,55],[25,46],[13,-3],[47,-27],[35,-8],[68,11],[67,33],[29,18],[29,-6],[5,-28],[12,-9],[162,88],[147,98],[144,111],[73,66],[18,19],[12,28],[-10,28],[-13,25],[-12,10],[-12,4],[-75,18],[23,29],[22,35],[14,39],[5,47],[-3,24],[3,18],[34,15],[23,24],[16,28],[-26,9],[-12,21],[23,49],[21,52],[21,28],[56,55],[163,138],[59,74],[17,27],[386,119],[63,12],[121,17],[56,3],[158,-12],[74,-12],[128,-32],[189,-61],[71,-27],[71,-34],[68,-43],[67,-52],[13,-16],[6,-29],[2,-28],[-3,-27],[-18,-56],[-26,-39],[-311,-37],[-41,-15],[-22,-30],[-16,-30],[36,-11]],[[33407,5562],[-11,-124],[1,-56],[-16,-45],[-28,-23],[-55,-39],[-40,-23],[-87,-38],[-400,34],[-180,31],[-75,40],[-12,18],[-23,61],[-21,19],[-159,-13],[-97,-19],[-17,-10],[-26,-38],[-14,-8],[-259,81],[-273,95],[-113,49],[-39,22],[-11,15],[25,19],[26,12],[29,9],[30,1],[22,-7],[22,-14],[14,-51],[14,-8],[38,-14],[961,7],[80,2],[166,15],[89,21],[33,29],[-80,7],[-32,22],[-27,41],[-6,38],[9,28],[106,14],[16,10],[-28,16],[1,37],[63,14],[25,31],[124,39],[196,-21],[47,-56],[-13,-36],[-9,-37],[-1,-57],[80,-8],[25,-21],[24,-26],[-29,-1],[-28,-6],[-23,-27],[-20,-35],[-14,-16]],[[30541,11987],[-8,-70],[46,25],[17,-5],[40,-26],[81,-151],[18,-48],[33,-139],[40,-105],[100,-183],[49,-100],[26,-58],[3,-78],[31,-22],[7,-32],[10,-107],[7,-124],[7,-238],[-4,-55],[-43,-89],[-18,-63],[-23,-42],[-27,-30],[-141,-125],[-17,-62],[-237,-53],[-134,-22],[-52,24],[-53,6],[-66,-8],[-191,-7],[-144,-18],[-19,7],[-13,23],[-14,16],[-38,-3],[-31,9],[-30,19],[-33,36],[-14,21],[-8,23],[64,60],[33,13],[33,4],[67,-13],[67,-20],[147,-16],[204,-4],[56,6],[67,19],[62,55],[-30,21],[-31,13],[-30,3],[-30,-4],[-84,-34],[-65,-20],[-65,-12],[-69,20],[-64,56],[-2,18],[220,43],[20,7],[40,27],[13,24],[6,23],[-148,40],[-31,-1],[-30,-7],[-67,17],[-64,47],[-59,57],[-22,5],[-21,-17],[-143,-150],[-12,-1],[-54,11],[-68,30],[-62,10],[-40,-8],[-15,-12],[39,-34],[33,-30],[10,-24],[-101,-75],[-27,-10],[-43,7],[-16,9],[-31,40],[-30,10],[-65,-8],[-34,3],[-34,18],[-32,26],[-30,14],[-36,29],[-26,20],[-8,29],[3,28],[11,16],[2,15],[-8,27],[5,19],[12,18],[54,34],[65,7],[63,-43],[42,-13],[19,-1],[7,2],[5,12],[-1,22],[-12,42],[-1,29],[14,24],[19,9],[20,6],[13,3],[41,-15],[29,-16],[59,-46],[49,-32],[19,-3],[14,11],[13,18],[-59,46],[-6,30],[3,26],[36,15],[22,2],[104,-27],[56,-9],[55,-3],[114,31],[-61,35],[-132,30],[-25,21],[-18,34],[97,31],[99,-1],[177,-40],[59,19],[55,58],[32,15],[125,-5],[101,27],[16,-3],[15,-8],[97,-97],[13,5],[10,19],[3,34],[1,34],[-3,35],[-12,22],[-16,-3],[-17,-10],[-28,9],[-28,18],[-29,8],[-100,11],[-71,18],[-37,14],[-34,28],[-5,31],[36,71],[138,76],[65,25],[66,6],[32,-5],[76,-32],[12,2],[11,8],[-73,53],[-65,41],[-33,31],[-26,12],[-109,12],[-57,-31],[-27,-5],[-27,3],[-160,74],[-9,8],[-23,28],[-12,21],[-7,35],[3,35],[5,23],[24,91],[13,72],[-7,59],[-25,32],[-36,22],[-33,35],[-9,24],[-6,28],[-1,36],[9,32],[14,34],[18,17],[34,17],[133,39],[270,49],[30,-25],[43,-52],[14,-21],[15,-104],[0,-29]],[[30787,21504],[24,-4],[80,57],[9,-3],[28,-29],[8,-12],[16,-25],[65,-118],[17,-48],[10,-56],[-26,35],[-27,-20],[-13,-34],[-12,-36],[0,-26],[9,-23],[27,-19],[64,-7],[5,-7],[37,-141],[19,-32],[22,-25],[51,-72],[49,-77],[58,-74],[62,-57],[57,-42],[54,-53],[58,-73],[63,-54],[67,-37],[69,-32],[105,13],[32,-4],[20,-23],[-20,-64],[-26,-51],[-35,-21],[-36,-8],[-34,1],[-33,10],[-31,-6],[-29,-21],[-31,-11],[-32,-2],[-31,-18],[-32,-13],[-32,11],[-84,51],[-55,12],[-185,20],[-59,12],[-59,18],[-31,0],[-45,-11],[-35,1],[-10,-11],[-41,0],[-12,-13],[-66,-19],[-112,29],[-28,27],[-38,58],[-13,-16],[-36,-25],[-36,-19],[-30,-2],[-28,24],[-6,12],[-6,3],[-60,-34],[-66,34],[-53,21],[-84,12],[-59,43],[-109,-4],[-19,14],[-7,42],[6,20],[23,11],[6,24],[24,-6],[30,-31],[9,1],[20,29],[30,26],[11,3],[54,-32],[22,4],[32,14],[5,12],[5,22],[9,13],[28,6],[27,-12],[3,-38],[-4,-41],[36,-11],[43,1],[30,-15],[4,25],[-48,65],[-20,40],[-26,24],[-35,12],[-28,75],[1,66],[-3,64],[62,36],[-14,55],[21,41],[25,16],[24,-153],[18,-54],[-23,-11],[-47,1],[27,-76],[43,-25],[37,-56],[1,-41],[20,-18],[50,-1],[34,8],[16,27],[19,9],[33,-34],[57,-25],[15,-17],[11,-30],[0,-31],[3,-16],[17,8],[23,42],[12,15],[14,7],[8,10],[1,12],[-42,31],[-220,141],[-28,56],[-18,71],[1,73],[16,23],[39,29],[72,41],[84,58],[10,11],[-1,37],[-10,25],[-33,18],[-35,4],[-33,-1],[-33,-8],[-60,-39],[-34,2],[-32,21],[-24,42],[-13,57],[0,36],[5,33],[15,35],[19,14],[18,-2],[17,8],[10,12],[8,16],[-3,13],[-6,12],[-27,24],[-10,23],[-23,38],[12,10],[41,6],[28,-26],[26,-30],[16,0],[15,13],[33,38],[28,49],[25,56],[21,34],[23,3],[69,-105]],[[27267,65185],[73,-26],[59,7],[28,16],[-3,-16],[26,-40],[10,-3],[38,20],[99,8],[10,-11],[18,-39],[25,-24],[26,-18],[28,-5],[27,8],[26,-4],[32,-37],[10,-5],[28,10],[-8,-34],[48,-49],[36,-95],[25,-39],[28,-35],[23,-24],[25,-11],[79,5],[18,-3],[17,-14],[15,-5],[9,5],[151,-149],[48,-79],[30,-41],[63,-59],[25,-13],[14,7],[-3,14],[-18,33],[-3,12],[24,-11],[43,-67],[12,-24],[21,-23],[22,-17],[-11,-26],[-17,-3],[-34,11],[27,-43],[5,-31],[12,-3],[19,35],[11,29],[48,-75],[25,-34],[-6,-20],[-2,-20],[28,18],[11,-2],[10,-11],[12,-32],[26,-7],[27,1],[55,-27],[51,-54],[49,-11],[49,-2],[24,-28],[11,-39],[-12,-27],[-7,-28],[18,-35],[-39,-15],[-6,-21],[2,-23],[8,-12],[23,11],[33,-10],[51,-8],[35,7],[71,-24],[21,-13],[42,-44],[19,-30],[42,-79],[35,-31],[31,-8],[11,5],[10,-8],[9,-11],[8,-35],[-5,-37],[-17,-29],[-10,-22],[-44,-2],[-62,-10],[-60,-32],[-29,-26],[-14,-17],[-31,-15],[-2,13],[0,17],[-8,31],[-7,-28],[-12,-21],[-19,-17],[-73,-1],[-29,23],[-30,17],[-109,16],[-27,-1],[-73,-18],[-73,-9],[-31,-11],[-30,-16],[-59,0],[-70,-18],[-70,-4],[45,131],[95,125],[17,27],[13,35],[3,26],[-4,23],[-23,39],[-4,29],[-7,19],[-33,17],[-33,10],[-35,0],[-73,13],[-39,1],[-33,27],[-55,96],[-26,26],[-13,22],[-10,24],[-13,140],[-11,68],[-17,58],[-25,45],[-27,15],[-101,-38],[-24,5],[-23,13],[-154,91],[-63,50],[-26,25],[-22,35],[-23,58],[-25,52],[0,-21],[-4,-14],[-129,-6],[-20,12],[-13,14],[-10,21],[-7,42],[-12,35],[-4,-38],[-6,-34],[-17,-20],[-20,-3],[-24,46],[-104,10],[-9,8],[-34,44],[-30,56],[29,19],[60,26],[13,18],[8,21],[-5,33],[-12,24],[-13,14],[-13,9],[-18,4],[-232,5],[-13,-17],[-21,-37],[-41,-46],[-28,-49],[-10,-25],[-12,-18],[-29,-30],[-24,-46],[-30,-21],[-16,13],[-16,0],[-11,-12],[-13,-5],[-59,-6],[-9,-11],[-8,-34],[-10,-64],[-9,-21],[-30,-8],[-28,-18],[-58,-62],[-15,-9],[3,45],[-3,44],[-16,2],[-19,-7],[-15,-13],[-29,-32],[-14,-9],[-14,17],[3,21],[95,79],[11,6],[17,-6],[17,3],[13,22],[-16,105],[6,71],[22,55],[45,83],[21,27],[219,174],[22,9],[142,35],[22,12],[66,51],[69,21],[73,-16]],[[55804,98069],[28,-6],[153,2],[30,-14],[11,-34],[24,-12],[32,-3],[81,-42],[28,-6],[24,23],[19,58],[0,68],[-7,33],[9,21],[27,8],[34,-2],[34,12],[29,21],[31,3],[67,-16],[18,-13],[-18,-25],[-7,-37],[-31,-75],[66,-4],[93,15],[24,22],[50,35],[53,-5],[25,4],[13,15],[5,18],[29,-3],[40,-34],[19,-6],[34,9],[13,0],[34,-14],[157,-25],[54,-14],[24,-12],[23,-8],[167,1],[118,-9],[43,-20],[37,-38],[14,-88],[-33,-24],[-239,-108],[-60,-35],[-29,-32],[-48,-70],[-24,-21],[-112,-34],[-26,-3],[-84,16],[-25,-2],[-102,-36],[-36,-22],[-34,-27],[-51,-13],[-53,7],[-237,14],[-32,20],[-26,37],[47,48],[-265,-18],[-292,10],[-15,6],[-13,19],[-100,12],[-75,15],[-64,26],[-62,33],[20,15],[20,9],[54,4],[48,-4],[85,0],[20,33],[34,10],[27,24],[-90,15],[-94,2],[-62,-20],[-73,-9],[-66,-1],[-127,6],[-60,14],[-83,36],[-28,21],[-11,16],[-9,24],[95,21],[36,17],[36,24],[-142,13],[-60,19],[-59,29],[48,16],[192,13],[51,-11],[50,-21],[56,-12],[53,27],[-50,12],[-46,45],[-9,22],[6,17],[23,3],[18,-7],[67,-42],[51,-14],[14,39],[2,19],[-9,15],[-24,28],[-21,35],[33,9],[33,-4],[70,-24],[71,-17],[32,-16],[61,-42],[56,-29]],[[54662,97872],[15,-1],[14,6],[10,16],[11,9],[71,-11],[99,-32],[30,-16],[41,-33],[34,-55],[-27,-40],[-35,-37],[-12,-21],[13,-30],[-6,-29],[-13,-26],[54,29],[114,94],[17,6],[18,-3],[51,-19],[46,-48],[11,-16],[8,-20],[5,-24],[-3,-28],[-4,-19],[-25,-12],[-11,-12],[26,-1],[30,-15],[27,-31],[31,-13],[111,11],[73,-17],[39,-52],[62,12],[0,27],[13,12],[82,-9],[43,-13],[43,-27],[-74,-45],[61,-43],[103,-31],[61,-33],[12,-14],[10,-18],[-40,-24],[-41,-13],[-104,-2],[-93,-17],[-172,-12],[-26,-7],[-6,-7],[-10,-21],[-66,-47],[-64,-58],[-26,-35],[-20,-49],[-8,-29],[15,-29],[-4,-30],[-48,-23],[-31,0],[-38,4],[-38,-13],[-2,-20],[2,-28],[-9,-85],[-12,-65],[-18,-59],[-19,-33],[-25,-9],[-81,-5],[-62,-57],[-50,-100],[-26,-39],[-55,-62],[10,-22],[17,-24],[-30,-43],[-46,-48],[1,-19],[16,-34],[7,-35],[-35,-30],[-66,-16],[-66,17],[-32,21],[-30,32],[-32,22],[-33,13],[-127,72],[-117,114],[-108,45],[-69,21],[-34,20],[-33,28],[-28,31],[-27,39],[-12,24],[-3,36],[9,21],[12,11],[85,9],[31,-5],[30,-19],[27,-7],[63,94],[357,54],[115,9],[115,0],[-18,25],[-15,33],[-17,7],[-87,-18],[-133,-19],[-65,0],[-67,13],[-67,-7],[-69,-28],[-69,-17],[-68,-7],[-143,3],[-35,14],[-48,33],[-11,17],[-10,21],[-9,63],[10,17],[14,9],[15,6],[32,1],[31,-11],[72,-36],[-17,39],[208,46],[96,40],[49,6],[50,-2],[-11,21],[0,20],[35,16],[25,7],[77,8],[174,-2],[62,11],[47,28],[-50,-10],[-50,-2],[-23,6],[-53,24],[-24,31],[68,63],[24,30],[-70,-5],[-23,-10],[-80,-58],[-60,-26],[-73,-12],[-73,1],[-16,8],[-22,39],[-7,20],[3,11],[23,31],[12,34],[-2,29],[-17,5],[-27,-28],[-25,-39],[-33,-20],[-35,6],[-15,15],[-13,23],[-13,9],[-15,0],[-31,-9],[-31,-18],[11,-25],[3,-29],[-14,-23],[-10,-28],[32,-17],[26,-28],[-39,-13],[-38,-18],[-34,-29],[-36,-23],[-56,-2],[-70,-12],[-141,-5],[-66,37],[-12,17],[-13,12],[-44,19],[-63,57],[-50,64],[-33,6],[-49,21],[-27,19],[-25,24],[-8,29],[3,26],[29,12],[-69,29],[-68,39],[25,13],[25,6],[202,-46],[14,6],[22,23],[-8,7],[-34,5],[-46,0],[-11,5],[-18,24],[-16,30],[-6,20],[-3,23],[34,35],[19,32],[-29,14],[-83,-1],[-28,-4],[10,-45],[-26,-31],[-51,-25],[-36,12],[-28,60],[-37,41],[-14,26],[-10,38],[-15,27],[-27,33],[-3,20],[3,16],[20,34],[-15,28],[-19,25],[-1,14],[18,18],[16,6],[17,-2],[51,-21],[28,-25],[9,2],[19,38],[25,8],[100,12],[111,-48],[29,-10],[23,-4],[-12,21],[-7,28],[17,10],[89,-24],[42,1],[98,33],[163,16],[62,-25],[3,-14],[-2,-18],[-3,-5],[-36,-22],[-206,-17],[-134,-66],[183,10],[33,-7],[14,-55],[13,-5],[48,-8],[32,-16],[32,-31],[34,-21],[21,3],[7,22],[-8,27],[-5,30],[3,33],[5,27],[39,19],[56,62],[59,42],[66,-19],[62,-53],[55,-74],[53,-80],[60,-99],[29,-35],[27,-8],[121,-103],[13,-3],[-25,78],[-62,133],[-43,102],[-9,39],[-7,54],[3,16],[5,14],[31,59],[40,28],[-12,40],[10,31],[42,24],[39,2],[38,-19],[73,-65]],[[52675,75392],[14,-37],[31,-151],[3,-32],[-6,-34],[-8,-23],[-31,-76],[5,-63],[11,-39],[2,-43],[-6,-54],[-19,-328],[-9,-58],[-6,-50],[-21,-16],[-28,17],[-34,28],[-16,-2],[-16,-10],[-13,9],[-13,16],[-9,-113],[-16,-46],[-23,-29],[-23,-2],[-23,10],[-19,0],[-15,21],[-12,38],[-18,47],[-19,55],[-2,49],[-3,109],[5,24],[8,23],[4,49],[-3,43],[6,15],[11,-15],[8,5],[-1,22],[3,40],[-15,34],[-24,11],[-2,35],[2,35],[13,23],[4,30],[1,94],[-18,34],[-6,52],[-9,33],[-16,34],[-18,27],[-12,26],[-2,69],[6,58],[6,24],[6,-3],[18,-29],[15,-6],[29,-7],[29,9],[35,26],[34,31],[49,93],[30,18],[16,25],[5,33],[13,8],[15,-32],[19,-3],[29,-26],[12,-26],[11,-30],[10,-13],[11,-8],[2,-7],[-9,-7],[-10,-35],[6,-10],[16,-19]],[[52633,76500],[-7,-84],[5,-25],[10,-18],[5,-19],[8,-225],[-2,-18],[-34,-91],[-7,-26],[-2,-113],[-6,-30],[-12,-30],[-21,-96],[-19,-43],[-51,53],[-30,22],[-14,25],[-10,17],[6,23],[14,23],[2,19],[-32,21],[-15,14],[0,24],[11,38],[-5,32],[-18,-2],[-15,5],[-1,17],[10,21],[14,27],[-1,30],[-16,13],[-15,25],[-6,33],[12,23],[18,15],[-13,34],[-10,1],[-7,7],[6,16],[14,24],[21,71],[28,33],[50,22],[14,9],[12,25],[14,16],[16,-2],[16,-9],[9,-11],[8,11],[6,31],[-4,27],[2,75],[9,42],[15,3],[13,-24],[-1,-20],[5,-49],[1,-32]],[[54326,73859],[-19,-66],[-9,-25],[-67,-160],[-7,-37],[-5,-40],[-7,-35],[-9,-34],[-9,-42],[1,-48],[4,-23],[8,-16],[13,-14],[10,-22],[-16,-21],[18,-40],[14,-24],[2,-24],[0,-24],[-30,-46],[-12,-24],[-8,-31],[-3,-31],[3,-28],[-1,-28],[-30,4],[-32,17],[-31,-8],[-45,33],[-16,5],[-15,13],[-38,100],[-30,43],[-32,33],[-33,2],[-33,-4],[-29,20],[-59,68],[-63,55],[-27,35],[-12,24],[-14,16],[-36,16],[-33,37],[-14,2],[-32,-4],[-16,2],[-16,13],[-32,44],[-20,60],[-5,26],[14,69],[17,65],[15,19],[17,13],[11,20],[9,23],[32,-68],[15,-17],[14,4],[26,24],[2,27],[29,35],[36,0],[17,-6],[9,-31],[14,-9],[16,-5],[53,-59],[15,-9],[15,-2],[41,25],[31,9],[66,-13],[36,15],[25,1],[36,23],[28,38],[15,9],[15,3],[38,-2],[38,-9],[16,9],[13,25],[16,11],[17,-8],[44,43],[19,2],[18,-16],[-16,-27]],[[35352,92133],[93,-47],[98,-32],[9,-15],[8,-22],[2,-12],[-3,-11],[-6,-10],[7,-12],[21,-16],[2,-19],[-25,-31],[-34,-35],[-183,-72],[-64,-13],[-160,-49],[-49,2],[-11,2],[-30,22],[-42,20],[-19,16],[-17,23],[7,14],[30,5],[44,0],[65,16],[-18,15],[-17,9],[-12,19],[-27,-3],[-20,11],[-38,7],[-101,7],[-66,19],[-20,11],[-17,20],[-15,28],[22,109],[15,27],[34,9],[84,-24],[11,11],[-92,40],[-33,23],[-10,19],[-6,28],[0,16],[4,16],[8,17],[23,22],[92,35],[102,-12],[175,-43],[22,-10],[54,-37],[103,-113]],[[14667,81013],[138,-72],[138,-35],[102,-42],[62,-13],[22,-9],[15,-15],[17,-36],[29,-85],[23,-55],[46,-94],[37,-67],[8,-27],[-8,-8],[1,-16],[28,-65],[52,-59],[41,-28],[86,-45],[53,-45],[16,-30],[23,-30],[9,-21],[19,-76],[35,-73],[36,-139],[7,11],[4,42],[4,9],[8,5],[7,-17],[6,-36],[23,-87],[-7,-26],[-7,-2],[-31,11],[-10,-15],[-15,-32],[-10,-13],[-6,6],[-90,31],[-55,29],[-72,45],[-87,47],[-50,33],[-41,33],[-29,29],[-5,24],[1,11],[56,77],[23,42],[9,31],[5,34],[-3,41],[-3,-3],[-5,-40],[-8,-34],[-10,-28],[-6,-9],[-67,-14],[-54,4],[-27,-33],[-8,-4],[-15,11],[-33,44],[-47,36],[5,9],[31,19],[16,26],[-3,5],[-11,-2],[-10,6],[-19,34],[-10,10],[-23,-16],[-10,-1],[-9,23],[13,53],[1,13],[-24,-20],[-8,7],[-7,17],[-7,7],[-19,-3],[-21,15],[-7,-6],[-3,-23],[-7,-6],[-31,39],[-8,1],[-15,-29],[-5,-2],[-9,13],[-4,71],[2,21],[4,7],[28,16],[79,18],[7,13],[-60,-7],[-15,10],[-17,24],[-17,0],[-9,8],[-10,18],[-25,64],[-17,17],[-29,10],[-15,12],[-6,-5],[-6,-19],[-9,-11],[-19,-7],[-19,5],[-14,18],[-8,22],[-4,25],[8,33],[0,14],[-3,15],[-7,12],[-9,10],[-5,-5],[-1,-20],[-5,-14],[-17,-11],[-13,19],[-9,27],[-11,19],[-57,0],[-27,-25],[-13,-2],[-13,6],[-2,13],[12,35],[-3,47],[-3,12],[-27,7],[-4,12],[15,57],[9,11],[12,4],[53,4],[17,-8],[26,-34],[-1,13],[-9,39],[-2,24],[18,26],[-17,8],[-63,6],[1,-17],[5,-24],[-37,-21],[-28,-4],[-26,4],[-21,12],[-37,51],[-23,51],[1,27],[13,29],[16,19],[39,18],[51,1],[57,-23],[143,-104]],[[30012,63203],[34,-14],[15,12],[12,10],[8,34],[11,31],[14,17],[17,10],[32,-1],[44,-27],[13,1],[43,24],[35,14],[34,-16],[13,-21],[28,-33],[14,-10],[43,1],[12,-3],[37,-55],[30,-22],[18,-1],[32,21],[16,-1],[18,-47],[4,-67],[15,-61],[24,-39],[115,16],[25,-32],[-8,-27],[-17,-14],[-54,6],[-24,-3],[-5,-26],[0,-25],[32,-6],[31,-12],[32,-20],[33,-13],[36,-9],[36,-14],[61,-49],[66,-109],[18,-25],[12,-34],[-6,-43],[-24,-69],[-13,-22],[-20,-14],[-13,-28],[-13,-49],[-8,-4],[-9,2],[-16,28],[-12,42],[-32,39],[-38,-5],[-56,24],[-34,-12],[-34,-2],[-35,12],[-35,4],[-35,-15],[-34,-25],[-12,-17],[-22,-39],[-12,-15],[-82,-20],[-24,29],[-22,40],[-32,5],[-46,-30],[-28,-11],[-12,-14],[-3,-14],[0,-56],[-7,-33],[-45,-127],[-25,-90],[-10,-28],[-12,-6],[-23,52],[-14,19],[-17,9],[-7,27],[0,39],[-5,38],[-10,29],[-16,20],[-23,46],[-26,38],[-16,15],[-16,10],[-123,-5],[-14,-7],[-11,-12],[-11,-6],[-34,-12],[-34,-2],[-79,31],[-31,16],[-31,10],[-36,-3],[-36,-10],[-29,-22],[-21,-40],[-4,-36],[-13,-10],[-29,59],[-27,41],[-30,31],[-62,45],[-12,27],[-5,32],[26,101],[28,19],[16,3],[35,-12],[35,-23],[31,-15],[49,-6],[27,-25],[187,-38],[35,-12],[14,4],[12,15],[10,27],[12,21],[56,4],[11,9],[8,29],[0,29],[-33,40],[-51,86],[-45,103],[20,34],[-8,63],[8,58],[10,57],[-44,49],[-53,49],[-73,15],[-22,13],[-12,36],[11,49],[23,28],[27,16],[28,12],[67,14],[67,-16],[57,-50],[59,-40],[73,-13]],[[36214,51711],[26,-3],[37,11],[24,27],[28,5],[27,-3],[92,-30],[55,-9],[20,-9],[20,-14],[14,-15],[4,-32],[-14,-51],[-10,-53],[-9,-75],[-7,-16],[-12,4],[7,-67],[-2,-27],[-6,-26],[-15,-54],[-22,-69],[-7,-14],[-17,-24],[-14,-31],[3,-29],[7,-29],[-8,-36],[-27,-53],[-16,-13],[-14,-6],[-14,6],[-23,53],[-3,-42],[-6,-42],[-8,-24],[-31,3],[-17,23],[-28,25],[-5,-69],[-18,-47],[-17,-15],[-27,-10],[-16,-20],[-30,16],[-27,31],[-16,3],[-12,-25],[-63,-5],[-29,-26],[-18,8],[-26,52],[-5,34],[-15,70],[-14,84],[-10,75],[8,66],[17,-3],[20,-9],[4,4],[1,21],[-4,18],[-32,-3],[-21,39],[-3,60],[4,124],[2,26],[15,36],[4,31],[-3,34],[6,61],[13,52],[52,67],[59,24],[172,-65]],[[49136,85550],[2,-47],[-3,-15],[-7,-17],[-21,-33],[-55,-47],[-101,-108],[-60,-54],[-8,-26],[-4,-36],[35,-7],[14,-12],[-8,-18],[-53,-63],[-16,-58],[41,2],[33,11],[67,36],[62,27],[30,1],[59,-21],[13,-1],[25,10],[25,1],[170,-6],[47,12],[32,-15],[26,-37],[25,-68],[-1,-11],[-15,-31],[-28,-39],[-24,-54],[-7,-29],[-4,-32],[-8,-29],[-47,-138],[-47,-76],[-20,-55],[-26,-43],[-24,-27],[-26,-18],[-76,-20],[-21,-13],[-25,-24],[-27,-12],[31,2],[31,13],[56,5],[65,-46],[-6,-37],[-26,-30],[-59,-5],[-55,-65],[-25,-20],[-26,-10],[-33,3],[-60,17],[-26,18],[24,-29],[26,-16],[156,-37],[9,4],[49,39],[66,0],[126,-71],[36,-55],[52,-78],[28,-31],[21,-28],[12,-41],[25,-138],[27,-134],[37,-146],[16,-40],[22,-28],[110,-66],[24,-21],[43,-63],[41,-67],[38,-51],[41,-41],[-20,-22],[-14,-34],[11,-46],[16,-44],[33,-71],[30,-77],[-11,12],[-11,6],[-16,-1],[-15,3],[-28,24],[-27,30],[-53,-12],[-29,5],[-26,0],[49,-17],[53,-2],[117,-129],[40,-76],[23,-101],[-16,-46],[-25,-29],[-23,-34],[-22,-38],[65,-56],[14,2],[15,8],[13,19],[24,46],[12,16],[40,6],[34,-3],[34,-10],[30,3],[60,-20],[30,-18],[77,-80],[16,-44],[8,-57],[1,-63],[-13,-58],[-15,-52],[-9,-67],[-6,-25],[-9,-18],[-41,-54],[-27,-21],[-11,9],[-12,-1],[-1,-13],[12,-27],[1,-33],[-24,-24],[-25,-10],[-40,13],[-57,-45],[41,-23],[8,-25],[-10,-43],[-25,-20],[-29,-8],[-29,-2],[-24,-11],[-23,-20],[29,11],[20,-10],[13,-36],[11,-11],[57,-15],[34,0],[68,9],[32,-1],[12,-6],[0,-30],[-5,-75],[-9,-15],[-89,-62],[-19,-44],[-5,-26],[-52,4],[-24,-27],[-43,-19],[-32,-20],[-32,-25],[-27,-7],[-113,30],[-69,-3],[-93,-26],[-24,5],[-35,24],[-37,17],[-42,7],[-37,23],[23,-44],[-51,-42],[-23,-8],[-24,1],[-50,-12],[-46,6],[7,-30],[12,-26],[-9,-11],[-11,-3],[-87,20],[-13,-4],[-10,-18],[-32,9],[-31,31],[-33,21],[-34,10],[-28,-4],[-112,-48],[-23,-49],[-11,-69],[-16,-61],[-27,-47],[-31,-7],[-30,33],[-56,36],[-20,25],[-6,1],[-6,-9],[-22,-11],[-23,0],[-35,-10],[-62,-29],[-25,-20],[-53,-55],[-11,-15],[-19,-55],[-30,-10],[-27,35],[-31,13],[-32,-13],[-20,-18],[-9,15],[-1,31],[24,38],[64,28],[55,74],[28,45],[10,25],[14,16],[17,6],[9,28],[77,112],[7,25],[4,46],[6,44],[63,29],[30,93],[8,7],[88,17],[65,-1],[65,-18],[33,-2],[33,7],[26,25],[45,90],[25,40],[29,36],[27,41],[44,76],[-30,-26],[-36,-42],[-20,-24],[-66,-24],[-28,-25],[-50,-56],[-9,-5],[-75,14],[-56,72],[-35,30],[-15,4],[-15,-9],[-33,-9],[-33,1],[17,34],[23,19],[-51,13],[-15,10],[-16,23],[-40,4],[-19,-6],[-33,-31],[-51,-33],[-62,46],[-12,20],[0,39],[-9,31],[-17,10],[22,40],[26,27],[58,27],[89,62],[49,27],[46,46],[19,28],[14,39],[13,47],[20,39],[-19,9],[-9,29],[3,29],[8,26],[-7,33],[-14,34],[1,26],[3,29],[-35,-2],[-36,-9],[-32,-20],[-31,-27],[-27,-5],[0,22],[12,27],[31,38],[34,32],[12,25],[9,28],[17,23],[44,43],[83,48],[13,3],[33,-6],[32,7],[28,18],[29,4],[63,-51],[-19,78],[28,18],[41,-70],[15,-7],[32,10],[-13,12],[-14,1],[-19,10],[-15,23],[-27,71],[2,42],[17,44],[20,41],[-16,8],[-14,15],[-3,41],[5,35],[35,32],[10,48],[5,53],[-6,24],[-35,-4],[-17,-10],[-15,-16],[-16,1],[-43,59],[-25,44],[-44,93],[-6,56],[35,120],[55,77],[64,27],[-12,5],[-98,1],[-33,-10],[-30,-31],[-17,-10],[-17,-3],[-17,-16],[-15,-22],[-17,-14],[-33,4],[-16,-5],[-11,13],[-9,21],[-13,5],[-14,-6],[-29,-28],[-30,-17],[-36,18],[-48,33],[-9,-12],[-11,-31],[-6,-47],[-33,41],[-29,56],[-10,34],[0,39],[15,16],[17,-14],[25,93],[50,121],[18,35],[12,46],[-2,31],[-11,25],[-46,58],[0,48],[5,53],[13,32],[5,6],[62,-1],[-24,17],[-48,48],[1,17],[11,45],[-5,-5],[-10,-20],[-20,-50],[-12,-12],[-34,-12],[-6,-24],[-6,-7],[-17,-2],[-5,-23],[-4,-2],[-5,25],[0,41],[7,38],[13,29],[49,67],[-24,-21],[-55,-62],[-28,-40],[-7,-14],[-3,-12],[0,-13],[13,-72],[-4,-33],[-47,-219],[-9,-22],[-8,-11],[-8,-3],[-23,4],[-11,17],[0,18],[5,28],[19,104],[9,29],[13,27],[27,47],[0,3],[-19,-9],[-8,3],[-5,9],[3,139],[15,46],[6,67],[13,57],[15,42],[12,53],[17,24],[5,36],[19,39],[15,41],[-8,-4],[-96,-106],[-25,-20],[-33,5],[-26,12],[-20,26],[-9,48],[-24,1],[-21,9],[0,6],[27,27],[44,9],[41,42],[-37,29],[3,9],[32,24],[40,82],[9,75],[-20,35],[-7,23],[-38,26],[-7,33],[5,18],[12,18],[19,14],[30,14],[-27,14],[-10,17],[-8,24],[0,15],[14,63],[8,26],[16,33],[72,-2],[8,15],[8,1],[37,-14],[-6,15],[-60,79],[-5,15],[17,42],[1,19],[-2,21],[5,15],[19,8],[58,-1],[14,7],[-6,21],[-14,27],[-2,22],[3,20],[1,41],[2,17],[14,27],[11,8],[15,5],[32,-9],[12,-11],[14,-26],[10,3],[40,27],[12,4],[16,-32],[68,26],[91,11],[55,17],[58,6],[54,19],[57,-9],[2,-11],[-3,-15],[-14,-42]],[[48005,83557],[22,-5],[20,19],[23,59],[16,3],[18,-4],[35,7],[62,27],[28,1],[39,-14],[29,0],[26,-42],[14,-66],[32,-66],[43,-57],[1,-34],[-15,-19],[-32,-23],[1,-25],[20,13],[18,5],[44,-5],[15,-26],[10,-37],[6,-31],[-4,-34],[-11,11],[-12,30],[-13,14],[-16,7],[7,-41],[-3,-56],[7,-5],[21,-1],[-14,-56],[-28,-16],[-33,-6],[-8,-20],[-6,-26],[-17,-38],[-22,-22],[-28,4],[-28,18],[12,-21],[5,-21],[-20,-7],[-22,4],[-10,-14],[-1,-26],[8,-34],[14,-24],[11,-55],[10,-60],[14,-37],[3,-45],[-2,-22],[3,-40],[-6,-14],[4,-38],[18,-78],[7,-43],[5,-94],[-12,-36],[-16,-33],[-11,-40],[-8,-43],[-5,-70],[-36,-81],[-15,-20],[-18,-13],[39,-56],[-32,-26],[-34,-8],[-38,14],[-23,-1],[-22,-19],[-8,-11],[-7,6],[-14,46],[-11,-48],[-22,-15],[-37,3],[-62,-13],[-24,-14],[-10,-21],[-8,-25],[-10,-14],[-11,-8],[-48,-18],[-9,-8],[-23,-40],[-29,-23],[-24,-7],[-21,23],[-9,14],[-10,8],[-33,-2],[10,-7],[7,-16],[3,-32],[-4,-31],[-16,-15],[-19,-3],[-31,-32],[-41,-9],[-22,-30],[-134,-50],[-7,0],[-19,13],[-20,5],[-20,-4],[-56,-28],[-28,6],[35,69],[47,35],[5,10],[-16,4],[-88,-24],[-31,-21],[-31,-6],[14,32],[40,43],[21,21],[14,8],[14,25],[42,29],[-135,-59],[-35,7],[-8,16],[-28,-7],[-10,40],[40,61],[24,26],[29,14],[27,20],[10,25],[-13,8],[-82,-6],[-39,5],[2,20],[8,22],[40,37],[22,6],[20,-4],[19,-9],[15,-13],[46,8],[-19,23],[-3,49],[-15,16],[19,22],[21,14],[36,47],[13,7],[71,11],[76,24],[76,34],[-39,19],[-19,25],[-30,-51],[-21,-19],[-61,-10],[-19,6],[-27,15],[-9,-6],[-8,-12],[-40,-24],[-42,-6],[49,45],[62,76],[14,25],[20,42],[-6,18],[-13,11],[45,87],[16,15],[29,3],[22,14],[9,0],[8,5],[19,26],[-29,16],[-29,9],[-92,-9],[-12,2],[-12,8],[-7,11],[-6,30],[-6,6],[-21,0],[-20,-9],[-15,1],[-14,13],[23,30],[-29,7],[-29,-6],[-25,9],[0,19],[11,19],[-15,18],[-3,23],[16,11],[16,-4],[35,17],[43,8],[-37,16],[-15,14],[-1,22],[3,18],[44,32],[46,13],[-4,21],[4,22],[-47,7],[-46,-16],[5,43],[11,38],[2,25],[-2,27],[-22,-11],[-3,38],[-9,26],[-32,-18],[1,35],[9,24],[17,11],[17,-5],[30,0],[30,19],[43,4],[69,-5],[47,-52],[12,9],[19,33],[9,3],[71,-14],[44,-18],[12,6],[-7,35],[-15,25],[19,33],[23,22],[16,11],[36,14],[15,13],[11,42],[16,35],[-90,-18],[-85,41],[14,29],[18,17],[31,13],[3,15],[15,13],[26,33],[-9,43],[5,32],[19,21],[6,30],[8,22],[38,8],[37,20],[13,-2],[43,5],[15,-8],[-4,36],[27,4],[10,-7],[5,-25],[12,-17],[3,-28],[-8,-22],[-13,-17],[12,-17],[-19,-31],[21,13],[29,31],[-1,25],[-5,31],[-9,28],[4,31],[17,20],[43,10],[-18,35],[16,3],[18,-7],[25,-28],[26,-21],[28,-17],[-27,-35],[-32,-23],[-13,-26],[11,-21]],[[0,91580],[56,-25],[56,-20],[23,6],[12,-2],[32,-35],[21,-16],[113,-41],[51,-45],[42,-52],[-21,10],[-38,34],[4,-39],[12,-27],[61,-26],[64,-20],[40,-24],[14,-21],[8,-38],[-10,-33],[37,12],[35,30],[-18,23],[-117,81],[-25,27],[34,-14],[158,-103],[43,-39],[-18,-8],[-13,-23],[14,-10],[19,8],[31,4],[31,-13],[35,-27],[73,-32],[434,-254],[10,-44],[12,-21],[7,-26],[2,-43],[-39,-51],[61,5],[9,6],[16,21],[17,14],[24,-17],[19,-34],[-6,-46],[-17,-38],[-2,-63],[15,-54],[15,-22],[13,-26],[3,-76],[-27,-34],[-15,-59],[17,-6],[52,-5],[18,-11],[30,-27],[7,-26],[7,-36],[9,-34],[7,-16],[8,3],[30,46],[14,14],[34,12],[19,-53],[-13,-88],[11,0],[8,10],[11,23],[15,14],[19,32],[16,39],[-19,31],[-21,20],[-51,10],[-26,24],[-10,29],[26,12],[22,21],[15,52],[-4,28],[-6,27],[-12,39],[-19,23],[-36,11],[-16,22],[-25,-1],[-25,6],[-9,8],[1,16],[28,7],[157,2],[57,22],[25,-6],[26,-16],[94,-21],[-3,-10],[-16,-10],[-27,-46],[-6,-26],[-1,-34],[24,-6],[24,14],[-12,27],[-3,33],[10,14],[13,3],[24,-24],[27,-8],[89,-10],[26,3],[8,13],[-18,14],[-116,33],[-2,17],[108,-22],[48,-20],[48,-15],[67,5],[66,-24],[63,-65],[58,-82],[59,-49],[61,-36],[103,-99],[13,-8],[10,-14],[-19,-16],[-17,-25],[34,17],[33,12],[17,-3],[15,-12],[10,-21],[5,-20],[-14,-18],[99,-4],[30,-12],[14,-49],[-28,-34],[-17,5],[-16,14],[-15,1],[-44,-14],[-67,-46],[-38,-37],[-7,-24],[6,-65],[-5,-31],[-29,-20],[-64,12],[-29,13],[-33,17],[-31,24],[-41,39],[-12,4],[-8,-10],[13,-24],[28,-31],[47,-40],[22,-45],[-14,-23],[-18,-5],[-13,1],[-41,14],[-29,3],[-90,-13],[-32,-8],[-11,7],[-3,19],[-48,15],[-29,2],[-13,6],[-11,21],[-32,30],[-48,11],[-31,2],[-17,-7],[63,-39],[56,-67],[-11,-13],[-7,-14],[31,-1],[21,4],[5,-17],[-16,-71],[-11,-15],[-98,-16],[25,-12],[25,-3],[29,3],[26,-13],[17,-44],[3,-46],[-25,-27],[-27,-21],[-53,-33],[-56,-14],[-29,3],[-28,-7],[-19,-17],[-5,-17],[24,11],[28,-6],[27,-21],[-3,-17],[-26,-18],[-5,-14],[9,-24],[-3,-20],[13,-11],[30,-4],[36,-14],[36,-20],[14,-16],[12,-24],[4,-24],[-6,-11],[-82,-4],[-12,3],[-5,28],[-10,22],[-31,16],[-12,-11],[9,-79],[-12,-24],[-14,-18],[-41,-10],[-33,6],[-28,37],[0,32],[19,19],[0,26],[-6,30],[-18,-35],[-23,-29],[-35,-37],[-18,-4],[-17,4],[-47,26],[-29,23],[-56,74],[-32,34],[-70,46],[-72,34],[-57,22],[-31,-3],[-30,-9],[-39,5],[-13,8],[-11,19],[-11,10],[-54,46],[-38,37],[-2,25],[8,30],[-7,73],[-18,69],[-48,68],[-126,44],[-104,31],[-37,7],[-33,-6],[-87,-57],[-59,-8],[-170,-3],[-28,6],[-26,24],[-6,33],[8,59],[-1,25],[-7,9],[-9,-1],[-33,24],[-31,40],[-25,41],[-16,56],[22,3],[31,-14],[5,13],[10,51],[21,24],[9,18],[14,68],[2,49],[-24,-26],[-39,-68],[-18,-20],[-14,-9],[-13,-4],[-30,13],[-22,17],[-1,65],[-10,17],[-10,-12],[-4,-24],[-28,-4],[-13,-10],[7,-39],[-3,-33],[-27,-13],[-53,-7],[-19,32],[-16,-45],[-12,-51],[-2,-67],[17,-56],[25,-27],[53,-40],[23,-28],[6,-37],[-2,-33],[-28,-42],[-18,-34],[-33,-81],[-19,-33],[-82,-69]],[[0,89324],[0,2256]],[[45682,89993],[32,-3],[52,20],[22,13],[53,45],[32,13],[49,-3],[23,3],[1,-5],[-30,-18],[-24,-6],[-35,-27],[-32,-62],[-25,-30],[1,-13],[29,-24],[32,-13],[30,12],[13,-5],[12,-17],[6,-18],[2,-17],[-6,-36],[-17,-37],[-24,-30],[3,-10],[19,-5],[92,20],[10,-1],[5,-10],[1,-19],[5,-16],[9,-15],[-3,-15],[-40,-48],[48,30],[37,9],[65,-15],[26,-18],[15,-30],[23,10],[9,-1],[15,-17],[0,-18],[-10,-27],[-4,-24],[-11,-10],[-21,-7],[-6,-9],[9,-18],[14,-18],[19,-1],[3,-9],[1,-10],[-3,-12],[-6,-8],[-10,-4],[-13,-13],[48,-29],[6,-10],[1,-16],[-4,-17],[-8,-18],[-15,-11],[-34,-2],[-22,-12],[7,-20],[0,-26],[-6,-29],[-28,-46],[-26,-24],[-25,-15],[-45,5],[-24,12],[2,-39],[-25,-24],[5,-20],[9,-10],[-5,-26],[-11,-26],[-20,-27],[-23,-17],[-45,-21],[-38,-35],[-26,-14],[-65,1],[-67,-22],[-93,-47],[-64,-38],[-48,-43],[-65,-69],[-48,-30],[-27,-7],[-54,-7],[-45,-19],[-150,-35],[-50,-19],[-7,-18],[-21,-27],[-1,-9],[9,-8],[2,-9],[-19,-32],[-37,-22],[-17,0],[-21,20],[-10,-1],[-3,-3],[0,-6],[12,-24],[-23,-10],[-97,-28],[-166,20],[-65,22],[-81,33],[-49,9],[-68,2],[-56,47],[-26,29],[-2,12],[3,14],[5,9],[9,5],[19,0],[2,5],[-14,23],[-14,-8],[-36,-33],[-16,2],[-21,16],[-1,16],[-41,6],[-36,20],[-36,28],[-5,11],[17,16],[-3,3],[-13,3],[-26,-5],[-39,-36],[-17,-9],[-257,-8],[-65,-4],[-13,-5],[-11,23],[-10,53],[-4,34],[3,17],[9,20],[14,-4],[13,-15],[12,-23],[14,-11],[89,28],[37,18],[15,18],[18,29],[20,16],[9,14],[18,46],[13,21],[14,16],[18,10],[40,7],[-27,11],[-24,0],[-85,-48],[-28,0],[1,7],[12,14],[29,24],[-20,1],[-8,11],[-1,22],[15,37],[69,47],[24,7],[7,10],[-9,7],[-14,5],[-70,-49],[-50,-17],[-15,3],[-26,19],[-8,9],[-12,22],[2,13],[24,38],[-4,8],[-17,3],[-44,36],[-71,-4],[-174,21],[-36,-9],[-59,-30],[-36,-10],[-16,6],[-15,16],[-14,22],[-12,27],[5,19],[23,11],[17,5],[47,-6],[58,19],[37,4],[10,3],[22,20],[11,5],[16,-7],[8,-14],[59,22],[20,10],[2,7],[9,8],[28,-12],[24,0],[29,8],[52,3],[115,2],[18,18],[8,15],[10,39],[-4,8],[-73,-36],[-16,1],[-84,19],[-30,21],[10,18],[44,37],[46,30],[67,32],[16,13],[2,15],[-45,26],[-85,-7],[-22,31],[-70,19],[-47,-12],[-25,19],[-61,-26],[-134,-38],[-54,-27],[-28,-8],[-33,21],[-57,25],[-64,7],[-6,14],[37,44],[26,8],[26,-4],[49,-30],[34,-10],[-43,45],[1,17],[-3,26],[-13,11],[-13,29],[5,9],[17,4],[34,-10],[82,-50],[40,9],[22,18],[29,14],[-8,7],[-70,1],[-38,10],[-19,14],[-17,25],[6,11],[20,10],[60,-3],[-40,43],[-27,24],[-3,12],[2,15],[3,10],[6,5],[69,-25],[15,-1],[-14,16],[-30,24],[-2,9],[13,7],[6,14],[1,11],[21,9],[21,1],[21,-9],[66,-46],[10,-13],[3,-17],[-3,-22],[2,-8],[26,7],[21,-9],[10,2],[26,32],[17,-7],[11,-15],[3,-14],[2,-18],[-5,-39],[1,-5],[18,22],[31,1],[4,11],[1,41],[-3,34],[-3,7],[-101,48],[-17,11],[-22,24],[5,11],[19,11],[30,4],[68,-1],[7,5],[-13,13],[-32,8],[-7,7],[-4,14],[-38,-8],[-42,0],[-40,8],[-1,11],[16,15],[33,26],[15,7],[46,-5],[46,8],[37,-9],[29,-26],[42,-45],[57,-29],[5,-9],[30,-24],[60,-63],[60,-37],[3,-10],[-10,-11],[-23,-13],[5,-7],[31,-9],[21,-25],[2,-11],[-20,-78],[-10,-16],[-13,-9],[-56,15],[14,-25],[40,-26],[9,-15],[-6,-14],[4,-4],[15,8],[6,-8],[-3,-24],[-6,-20],[-10,-16],[3,-7],[16,2],[14,-4],[23,-22],[19,-67],[9,-21],[7,19],[8,49],[8,25],[7,1],[7,8],[5,15],[11,55],[38,41],[18,12],[16,3],[9,-5],[28,-43],[17,-7],[9,2],[12,29],[15,56],[3,63],[-8,69],[5,49],[18,30],[23,9],[29,-12],[22,-18],[42,-68],[34,-36],[29,-39],[15,-12],[29,-7],[7,3],[6,9],[2,15],[-6,98],[8,31],[12,22],[53,12],[28,14],[28,22],[22,12],[19,2],[19,-9],[19,-19],[31,-37],[39,-61],[50,-46],[26,-73],[5,-13],[6,-1],[7,9],[4,14],[1,32],[-14,43],[-46,109],[-1,20],[6,17],[33,1],[75,-9],[25,-17],[51,-66],[15,-16],[8,-5],[4,9],[20,12],[13,15],[23,36],[51,66],[10,2],[15,-5],[26,-18],[12,-13],[24,-11],[25,4],[35,23],[38,14],[14,32],[2,15],[-31,97],[13,20],[68,24],[59,2],[14,-7],[38,-47],[25,-23],[13,-19],[3,-42],[15,-16],[29,-17]],[[31987,62401],[-21,-5],[-28,27],[22,10],[15,-6],[12,-26]],[[99603,81748],[-17,-10],[-10,25],[-1,15],[10,15],[17,-9],[10,-15],[-9,-21]],[[53975,72596],[-16,-9],[-17,17],[-4,11],[23,9],[12,-8],[4,-15],[-2,-5]],[[53871,75291],[-12,-5],[-7,6],[-4,9],[5,22],[25,-13],[-1,-12],[-6,-7]],[[53347,73016],[-13,-6],[-18,19],[-1,28],[3,9],[22,-13],[6,-26],[1,-11]],[[51759,82667],[-39,-20],[-10,4],[3,6],[34,12],[12,-2]],[[51647,82637],[-55,-9],[-19,7],[-3,6],[15,4],[47,1],[14,-6],[1,-3]],[[51419,82550],[-52,-42],[-4,6],[33,37],[23,-1]],[[51479,82595],[-26,-5],[-12,8],[63,23],[39,7],[7,-3],[-71,-30]],[[281,41487],[-8,-8],[-6,2],[-7,9],[-4,16],[9,14],[13,-16],[3,-17]],[[344,41339],[-3,-10],[-15,17],[-6,12],[16,9],[8,-3],[0,-25]],[[486,41501],[-16,-6],[-14,25],[9,26],[13,-7],[7,-25],[1,-13]],[[7926,42247],[-5,-4],[-6,10],[-2,16],[2,26],[13,-17],[6,-11],[-8,-20]],[[8385,41736],[-9,-15],[-11,11],[-5,14],[-2,15],[2,19],[26,-3],[8,-8],[-9,-33]],[[16581,71442],[-14,-1],[-23,6],[8,13],[12,10],[4,-7],[13,-21]],[[16823,70977],[-13,-1],[-17,5],[-8,31],[13,2],[13,-4],[10,-24],[2,-9]],[[31229,19648],[-10,-1],[-25,11],[-36,4],[-5,5],[0,8],[4,9],[20,7],[60,-6],[8,-4],[2,-7],[-10,-19],[-8,-7]],[[30583,59015],[1,-16],[-13,9],[-17,35],[-17,27],[4,29],[4,10],[18,-27],[17,-50],[3,-17]],[[31885,58125],[-15,-13],[-27,13],[-14,18],[9,21],[22,0],[21,-25],[4,-14]],[[29776,62659],[-5,-40],[-71,48],[-57,61],[2,33],[30,7],[28,-20],[41,-40],[32,-49]],[[43048,73133],[-2,-11],[-15,5],[-20,-4],[-11,31],[10,13],[22,3],[11,-14],[5,-23]],[[54625,76610],[51,-16],[38,8],[34,-10],[21,-19],[5,-9],[-28,-1],[-31,8],[-35,-19],[-31,10],[-12,12],[-8,15],[-4,21]],[[54776,76685],[-20,-6],[-123,4],[-36,12],[-40,31],[-9,9],[41,9],[37,-9],[12,-22],[101,-18],[37,-10]],[[54662,76768],[-44,-1],[-38,10],[-19,18],[2,15],[6,25],[42,-3],[65,-18],[15,-21],[-4,-9],[-25,-16]],[[49302,80353],[-10,-38],[-26,13],[-2,10],[29,22],[6,0],[3,-7]],[[49439,80202],[2,-29],[-12,-7],[-10,10],[-21,0],[-20,-6],[5,52],[38,-7],[18,-13]],[[90474,62651],[-9,-22],[-7,16],[-2,31],[13,-3],[4,-6],[1,-16]],[[90475,61255],[-6,-4],[-9,2],[-6,9],[-2,15],[18,1],[7,-12],[-2,-11]],[[90350,59998],[-13,-27],[-10,6],[-6,9],[-2,15],[22,15],[10,-5],[-1,-13]],[[33392,77153],[-37,-20],[-32,1],[-22,19],[-1,8],[51,-8],[19,5],[39,32],[-17,-37]],[[23051,67915],[-6,-1],[14,47],[2,19],[22,59],[12,9],[5,-25],[-23,-42],[-26,-66]],[[25308,68958],[-15,-30],[1,12],[11,30],[8,11],[-5,-23]],[[25400,69248],[-3,-6],[-25,12],[-15,11],[-2,11],[41,-20],[4,-8]],[[25535,69269],[-24,-12],[-36,1],[-8,4],[15,8],[43,11],[10,-12]],[[32496,62237],[-3,-15],[-18,13],[-10,13],[3,16],[14,14],[11,-2],[4,-5],[-1,-34]],[[31826,62272],[-22,-3],[-14,4],[-5,17],[27,16],[30,-2],[18,-10],[2,-6],[-36,-16]],[[32630,61705],[-14,-12],[-12,17],[3,40],[11,1],[11,-18],[1,-28]],[[32112,62479],[-7,-4],[-5,1],[-1,8],[5,23],[28,2],[-20,-30]],[[32039,62415],[-19,-15],[-12,2],[-5,6],[10,18],[26,-11]],[[32057,62443],[-22,-2],[-6,7],[12,18],[23,2],[6,-4],[-13,-21]],[[32009,62093],[24,-26],[28,0],[-30,-25],[-56,-3],[1,41],[33,13]],[[28514,66252],[-31,-12],[-23,11],[-5,10],[9,16],[21,13],[34,1],[15,-15],[2,-7],[-22,-17]],[[27487,66080],[-12,-13],[-13,10],[14,13],[43,15],[-16,-18],[-16,-7]],[[81730,64637],[-7,-9],[-19,42],[-1,14],[15,2],[16,-19],[0,-17],[-4,-13]],[[28737,71805],[-6,-1],[-11,6],[-15,12],[-4,9],[15,-3],[21,-23]],[[1344,39648],[4,0],[4,17],[15,7],[-1,-19],[-21,-59],[-12,23],[-37,38],[-8,29],[13,23],[-2,-18],[6,-8],[21,-4],[19,-15],[-12,-6],[11,-8]],[[64633,78001],[-5,-6],[-18,16],[-12,26],[15,31],[14,-5],[9,-33],[-3,-29]],[[63328,78045],[-4,-10],[-13,53],[-1,32],[8,17],[11,-54],[-1,-38]],[[33767,21882],[1,-50],[-22,16],[-8,24],[12,17],[11,-1],[6,-6]],[[61830,60658],[-9,-13],[-2,23],[5,50],[9,14],[7,-37],[-4,-20],[-6,-17]],[[61132,61107],[9,-56],[-27,21],[-5,12],[12,22],[3,13],[8,-12]],[[60250,66464],[-7,0],[-20,39],[-11,29],[-12,19],[-53,39],[-8,25],[9,25],[5,-25],[10,-14],[44,-36],[49,-76],[9,-7],[-15,-18]],[[60165,66654],[-3,-8],[-12,21],[1,44],[10,25],[-1,-34],[5,-35],[0,-13]],[[78143,53564],[-14,-10],[0,15],[2,21],[10,20],[5,-12],[-3,-34]],[[87420,48070],[-15,-6],[-8,48],[13,12],[14,-29],[-4,-25]],[[84332,50861],[-19,-4],[-13,17],[1,85],[12,18],[5,-3],[4,-25],[5,-23],[10,-21],[-5,-44]],[[85208,71626],[5,-27],[-22,5],[-12,26],[1,23],[14,3],[14,-30]],[[92467,95691],[-27,-20],[-64,33],[24,18],[43,12],[10,-6],[8,-13],[6,-24]],[[68706,91894],[-22,-50],[-46,3],[-14,11],[-6,9],[52,54],[32,-2],[4,-25]],[[68488,92477],[3,-23],[-15,8],[-19,26],[-11,32],[-4,64],[7,17],[6,9],[6,-2],[-1,-40],[28,-91]],[[65410,98083],[-79,-27],[-40,1],[-20,16],[32,23],[41,17],[31,-5],[23,-8],[12,-17]],[[55115,85846],[-12,-6],[-6,2],[7,27],[6,11],[19,11],[5,-2],[-19,-43]],[[55165,86100],[-7,-19],[-7,23],[3,5],[4,23],[14,12],[21,-7],[0,-6],[-20,-19],[-8,-12]],[[15874,79034],[-3,-11],[-4,1],[-8,23],[-1,16],[7,12],[10,-34],[-1,-7]],[[79367,45798],[-8,-41],[-14,23],[-17,7],[3,30],[14,5],[7,1],[10,11],[5,-36]],[[25994,61277],[-44,-45],[-14,1],[20,35],[33,30],[28,14],[23,-6],[-46,-29]],[[95548,8736],[-37,0],[-22,18],[-7,39],[1,13],[72,48],[58,12],[-31,-72],[-11,-12],[-23,-46]],[[95786,12937],[-24,-16],[-15,5],[-15,34],[16,53],[-6,69],[3,17],[39,-39],[7,-21],[16,-32],[3,-17],[-16,-32],[-8,-21]],[[96566,6830],[-34,-43],[-39,-19],[-123,16],[-86,-36],[-95,-13],[-45,19],[-20,35],[-10,47],[0,17],[27,7],[127,-33],[53,-29],[29,1],[76,38],[63,48],[16,23],[21,8],[27,-17],[13,-52],[0,-17]],[[95361,13351],[-5,-35],[-14,8],[-20,28],[-20,69],[18,7],[23,-12],[9,-34],[8,-18],[1,-13]],[[96411,7303],[105,-42],[275,4],[229,-39],[21,-40],[-65,-21],[-101,-53],[-65,-17],[-55,0],[-112,22],[-146,-3],[-31,-31],[-71,-31],[-82,-54],[-22,44],[-33,42],[-82,89],[-6,13],[45,17],[22,29],[47,39],[-5,24],[-39,26],[-15,22],[26,36],[58,16],[75,-15],[34,-48],[-6,-21],[-1,-8]],[[97178,9444],[-38,-12],[-51,37],[-12,12],[50,70],[-4,23],[7,19],[19,14],[12,-2],[29,-77],[20,-32],[-28,-31],[-4,-21]],[[95268,8313],[-50,-74],[-35,2],[-20,14],[36,41],[34,18],[21,5],[14,-6]],[[78050,14010],[-121,-14],[-10,15],[-45,2],[-16,12],[-6,28],[15,47],[24,32],[37,33],[18,7],[76,11],[55,-15],[39,-40],[11,-32],[-6,-21],[-71,-65]],[[73839,13275],[-48,-15],[-8,8],[-1,9],[-72,55],[-12,45],[7,31],[59,-3],[70,-27],[37,-69],[-32,-34]],[[75722,13935],[-37,-8],[-38,8],[-19,27],[-4,12],[15,19],[54,3],[38,-17],[8,-17],[2,-8],[-19,-19]],[[74039,13382],[-32,-14],[-25,3],[-29,31],[12,21],[30,13],[38,-7],[10,-11],[26,-7],[-30,-29]],[[73702,13472],[-30,-18],[-24,3],[-16,19],[-3,12],[15,38],[12,-2],[8,-20],[38,-32]],[[69421,10415],[-35,-74],[-13,2],[-15,43],[13,27],[16,16],[28,-8],[6,-6]],[[69016,10195],[-14,0],[7,23],[37,41],[28,50],[17,8],[31,-44],[-7,-37],[-41,-27],[-58,-14]],[[76836,13804],[32,-15],[57,2],[20,-22],[4,-25],[-1,-14],[-23,-21],[-150,-14],[-24,22],[26,61],[28,20],[31,6]],[[70000,11156],[-20,0],[-25,6],[-32,42],[-18,30],[-7,31],[3,61],[16,30],[26,12],[11,-28],[4,-32],[8,-21],[33,-30],[16,-25],[5,-14],[6,-29],[-5,-20],[-21,-13]],[[95169,13549],[-15,-27],[-13,3],[-58,69],[7,30],[-8,25],[1,23],[2,8],[71,-105],[13,-26]],[[77851,13700],[-37,-8],[-14,15],[-2,9],[27,33],[33,11],[-3,-39],[-4,-21]],[[77456,13554],[-26,-7],[-27,16],[-13,31],[-3,10],[42,8],[56,-30],[-29,-28]],[[78721,14144],[-17,-14],[-45,8],[-10,12],[-4,55],[-3,16],[-17,15],[-73,28],[-8,40],[10,18],[27,4],[67,-35],[15,-27],[-2,-41],[1,-13],[21,-27],[33,-28],[5,-11]],[[9003,7690],[3,-8],[-42,6],[-63,32],[-12,11],[28,11],[36,-10],[33,-20],[17,-22]],[[9656,8230],[-31,-3],[-53,14],[-140,46],[-30,23],[21,23],[50,16],[38,-5],[95,-43],[29,-31],[17,-23],[4,-17]],[[9276,7510],[-104,-25],[-27,7],[9,36],[-16,25],[-4,12],[9,17],[61,0],[172,-27],[23,-37],[-123,-8]],[[13225,8961],[-44,-32],[-86,21],[7,23],[78,20],[53,-13],[-8,-19]],[[8723,7484],[-116,-7],[-64,15],[-16,44],[18,9],[148,-20],[54,-11],[20,-13],[-10,-12],[-34,-5]],[[8518,7651],[113,-8],[74,6],[77,-14],[18,-16],[-14,-13],[-83,-4],[-40,-22],[-47,-3],[-71,16],[-64,35],[37,23]],[[13592,8880],[-31,-12],[-116,29],[-68,6],[-31,17],[-20,15],[-6,14],[-32,22],[62,44],[49,14],[47,-3],[10,-22],[90,-26],[70,-1],[7,-24],[-3,-34],[-28,-39]],[[16792,9152],[-58,-6],[-18,1],[-18,13],[-5,9],[30,30],[29,13],[9,10],[-40,101],[37,3],[43,20],[83,-2],[72,-18],[13,-15],[9,-25],[-31,-51],[-19,-18],[-108,-45],[-28,-20]],[[17572,9121],[-136,-16],[-37,18],[-10,22],[6,23],[277,125],[49,-17],[14,-8],[-83,-62],[-37,-22],[-6,-7],[20,-9],[6,-7],[-16,-17],[-47,-23]],[[14620,8857],[-42,-10],[-83,38],[-27,18],[-24,31],[-19,7],[-7,6],[-11,80],[25,9],[53,-11],[102,-42],[71,-12],[24,-32],[-24,-56],[-38,-26]],[[8550,7294],[81,-29],[-142,9],[-62,41],[40,15],[40,-3],[35,-21],[8,-12]],[[5002,3963],[-87,-13],[-206,26],[-54,21],[-30,22],[-56,20],[-14,11],[0,24],[-9,14],[-19,13],[-9,13],[-17,8],[277,-12],[108,-20],[20,-14],[195,-60],[-53,-9],[-46,-44]],[[8269,7617],[-118,-8],[-48,16],[-12,15],[10,13],[183,13],[20,-16],[6,-10],[-41,-23]],[[9253,7922],[-57,-8],[-71,36],[-54,29],[-18,25],[-3,8],[0,10],[16,6],[115,-21],[72,-85]],[[9225,7699],[-33,-46],[-87,24],[-37,30],[21,39],[40,12],[52,-14],[19,-5],[25,-40]],[[5426,4844],[-29,-5],[-745,67],[-143,22],[-34,12],[-14,11],[-3,8],[6,22],[17,16],[185,25],[207,-19],[250,-48],[172,-38],[89,-34],[37,-26],[5,-13]],[[8223,7275],[-22,-2],[-241,44],[-47,13],[82,27],[54,4],[146,-66],[39,-8],[-11,-12]],[[7241,5741],[-51,-2],[-65,6],[-50,14],[-114,20],[-29,38],[-134,31],[-62,10],[21,37],[142,-49],[175,-49],[141,-30],[26,-26]],[[8547,7418],[-17,-9],[-121,5],[-25,8],[-11,9],[-168,13],[-76,41],[-15,13],[30,20],[57,12],[23,16],[145,14],[23,-8],[13,-22],[66,-43],[17,-27],[7,-18],[36,-8],[16,-16]],[[6115,4547],[-25,-4],[-22,31],[-108,63],[-64,42],[-42,33],[-18,23],[21,0],[158,-70],[24,-27],[118,-48],[-42,-43]],[[48362,11202],[-73,-34],[-6,15],[-24,20],[-48,56],[54,4],[49,24],[27,-10],[6,-6],[15,-69]],[[50843,11176],[-94,-15],[-21,17],[-11,34],[13,20],[123,68],[33,-6],[11,-6],[8,-26],[-11,-41],[-14,-20],[-37,-25]],[[49179,10821],[-30,-13],[-39,3],[-30,17],[-21,34],[-5,13],[3,22],[-2,11],[38,6],[14,-14],[6,-11],[66,-68]],[[50360,11373],[-24,-73],[-15,2],[-15,43],[-31,46],[-11,32],[-1,43],[22,25],[80,16],[27,-10],[13,-55],[-45,-69]],[[49296,11078],[30,-19],[47,3],[45,-15],[-7,-20],[-26,-26],[-22,-56],[-22,-26],[-66,-56],[-49,-15],[-11,31],[1,32],[4,25],[2,18],[-46,24],[-3,33],[-9,19],[-134,66],[-23,19],[10,12],[138,5],[81,-12],[60,-42]],[[51257,11244],[-45,-13],[-51,29],[-14,20],[-15,53],[-2,20],[12,13],[40,15],[66,-6],[25,-24],[9,-43],[-8,-37],[-17,-27]],[[63484,13373],[-46,-14],[-21,6],[-2,14],[-1,13],[2,15],[16,12],[78,1],[31,-10],[9,-7],[1,-21],[-3,-6],[-64,-3]],[[54506,11516],[-18,-37],[-87,51],[-51,16],[-13,9],[-12,32],[-3,12],[10,20],[28,32],[59,26],[93,13],[91,-10],[15,-16],[-86,-54],[-26,-94]],[[57460,11301],[-18,-22],[-51,4],[-39,-21],[-31,8],[-98,35],[-11,45],[-3,20],[8,35],[88,73],[35,7],[50,-10],[22,-21],[14,-41],[39,-83],[-5,-29]],[[41355,5876],[38,-12],[40,28],[-6,26],[23,45],[33,-49],[219,-52],[71,-50],[-29,-12],[-22,2],[-64,-5],[-109,-43],[-117,41],[-209,29],[-63,22],[-49,68],[88,56],[21,-6],[135,-88]],[[40573,6151],[-32,-21],[-675,36],[-33,7],[9,43],[92,7],[52,8],[72,19],[53,33],[18,1],[317,-77],[111,-32],[13,-15],[3,-9]],[[49088,11213],[-45,-1],[-13,16],[-2,11],[58,83],[32,21],[62,16],[40,-5],[26,-18],[8,-33],[0,-49],[-15,-26],[-151,-15]],[[44275,9281],[-13,-125],[4,-27],[11,-26],[49,-70],[4,-52],[-2,-20],[-20,-29],[-69,7],[-22,15],[-8,10],[-36,122],[-21,29],[-32,25],[-123,23],[-118,-8],[29,28],[178,39],[45,29],[28,34],[13,52],[31,65],[49,30],[31,3],[16,-53],[0,-50],[-24,-51]],[[45526,9977],[-19,-14],[-40,1],[-38,28],[-16,41],[-1,29],[17,33],[27,9],[15,-11],[36,-71],[19,-45]],[[46525,10268],[-22,-13],[-37,5],[-47,29],[-15,22],[-5,20],[13,29],[11,8],[24,-4],[42,-37],[29,-40],[7,-19]],[[41016,5948],[-48,-6],[-19,15],[23,38],[34,33],[63,3],[60,-22],[-6,-21],[-13,-2],[-94,-38]],[[37300,16980],[61,-14],[31,-21],[8,-24],[36,-9],[5,-5],[7,-14],[4,-15],[-1,-20],[-62,48],[-86,3],[-20,34],[-44,-20],[-5,13],[0,17],[6,24],[28,-10],[32,13]],[[34980,16532],[-12,-5],[-19,22],[-3,13],[20,26],[20,35],[7,4],[-5,-70],[-8,-25]],[[31316,6075],[-48,-28],[-202,13],[-69,9],[-39,15],[36,60],[27,20],[25,8],[56,33],[88,8],[67,-6],[113,-26],[-29,-25],[-19,-9],[-18,-38],[12,-34]],[[34676,16577],[-37,-16],[-13,22],[-7,37],[-19,23],[14,20],[199,-26],[-11,-13],[-96,-17],[-30,-30]],[[34575,15452],[17,-15],[70,1],[16,-4],[14,-25],[9,-43],[-23,-17],[-121,10],[-44,22],[-22,-1],[-49,-24],[-21,-24],[-82,-32],[-23,12],[-11,34],[-1,14],[8,9],[4,9],[-1,11],[22,29],[95,44],[126,16],[17,-16],[0,-10]],[[34480,15244],[-24,-26],[-61,39],[-16,25],[7,19],[98,17],[26,-9],[12,-40],[-42,-25]],[[34100,14650],[-24,-2],[-30,17],[-4,30],[0,16],[23,13],[14,2],[81,47],[36,12],[-16,-29],[2,-26],[-13,-23],[-69,-57]],[[33656,15954],[-62,-26],[-32,27],[-7,10],[38,26],[20,-6],[8,-9],[23,-2],[12,-20]],[[33895,16179],[35,-16],[31,11],[17,-12],[12,-33],[-1,-12],[-47,5],[-43,-38],[-51,8],[-7,-31],[11,-17],[-14,-14],[-44,30],[-35,-11],[-11,-51],[-16,-10],[-8,-2],[-14,13],[-29,4],[-2,7],[-18,20],[-51,-22],[13,26],[68,69],[8,21],[79,40],[37,-9],[80,24]],[[32791,14932],[-26,-2],[7,31],[23,21],[38,14],[-24,-35],[-7,-16],[-11,-13]],[[32778,11680],[-24,-4],[-24,53],[-13,82],[-77,119],[-20,62],[14,15],[21,5],[56,-17],[34,-23],[38,-49],[46,-44],[9,-37],[-7,-42],[-29,-11],[1,-31],[-17,-60],[-8,-18]],[[32412,14480],[-44,-26],[-23,0],[27,64],[26,2],[41,36],[11,-5],[-22,-30],[-16,-41]],[[32687,14732],[-20,-23],[-16,-4],[-15,10],[-20,-35],[-40,11],[-16,9],[10,5],[7,15],[22,31],[38,79],[7,25],[-31,41],[-5,13],[7,24],[11,17],[26,19],[34,0],[17,-16],[0,-29],[58,-27],[-10,-56],[-22,-35],[-3,-42],[-33,-19],[-6,-13]],[[32607,15512],[-12,-2],[5,24],[31,62],[58,29],[-7,-25],[-19,-31],[-56,-57]],[[33503,15872],[-38,-4],[-26,33],[-12,23],[51,2],[23,-9],[12,-26],[-10,-19]],[[34427,15507],[-55,-54],[-26,2],[-54,41],[-15,21],[-3,9],[34,37],[97,-14],[22,-4],[1,-3],[2,-21],[-3,-14]],[[33159,15806],[14,-7],[121,13],[38,-40],[43,2],[-103,-75],[-28,22],[-9,16],[-7,36],[-67,-9],[-22,7],[-27,-24],[-55,-10],[-19,0],[-24,26],[-1,26],[49,-1],[38,33],[11,34],[19,-9],[29,-40]],[[34062,15087],[4,-10],[56,6],[15,-15],[-31,-20],[-8,4],[-27,-6],[-76,15],[-18,23],[67,13],[18,-10]],[[33011,11534],[-42,-1],[-19,16],[-7,10],[5,23],[16,21],[49,-16],[12,-41],[-14,-12]],[[33151,12230],[-11,-16],[-35,10],[-20,11],[-34,28],[19,17],[37,-4],[30,-20],[14,-26]],[[33127,11111],[-23,0],[-20,12],[-17,35],[-5,17],[9,38],[16,9],[92,5],[28,-20],[1,-34],[-10,-25],[-71,-37]],[[33180,10914],[-28,-4],[-38,10],[-33,20],[-11,23],[16,19],[30,12],[47,-4],[22,-24],[5,-22],[-6,-23],[-4,-7]],[[33193,15571],[-14,-6],[-18,5],[0,-10],[15,-13],[-16,-5],[-19,13],[-14,27],[10,25],[19,6],[37,-42]],[[33152,15053],[-35,-20],[-21,6],[-33,24],[45,7],[4,70],[22,27],[43,-15],[-26,-37],[-9,-28],[9,-24],[1,-10]],[[23945,9838],[-47,0],[-31,21],[-10,14],[19,21],[11,2],[57,-36],[12,-15],[-11,-7]],[[24677,9687],[-51,-14],[-46,6],[17,132],[26,33],[-7,24],[-47,66],[-33,75],[16,17],[86,27],[99,-5],[39,-32],[12,-40],[-5,-29],[-32,-53],[33,-18],[7,-36],[-7,-44],[-32,-52],[-30,-31],[-45,-26]],[[20961,9696],[-33,-26],[-62,6],[-48,43],[-19,58],[-2,20],[13,15],[31,14],[120,-130]],[[23603,9985],[-53,-3],[-15,13],[16,28],[128,47],[52,28],[8,-4],[7,-9],[22,-56],[2,-14],[-167,-30]],[[30084,11367],[14,-17],[60,16],[21,-17],[4,-12],[-27,-42],[-32,-28],[-37,-2],[-27,71],[-3,18],[27,13]],[[30004,11694],[-60,-24],[-40,19],[-120,36],[-50,66],[5,35],[23,21],[36,11],[73,-22],[37,-23],[96,-119]],[[29478,9586],[-27,-11],[-17,6],[-31,29],[4,23],[14,15],[10,17],[60,62],[44,7],[36,-13],[-39,-59],[-10,-41],[-44,-35]],[[31709,13915],[-60,-22],[-31,8],[-2,23],[8,31],[29,16],[-5,46],[18,19],[9,35],[38,26],[54,-12],[-8,-45],[-1,-16],[-32,-12],[-8,-7],[-7,-30],[1,-43],[-3,-17]],[[31501,13709],[-62,-65],[-9,4],[-5,7],[1,11],[20,24],[4,70],[41,26],[16,-9],[-14,-30],[9,-26],[-1,-12]],[[31292,12807],[-55,-11],[-41,12],[1,44],[-11,5],[-4,10],[52,33],[39,8],[47,-5],[20,-14],[7,-15],[-36,-36],[-6,-14],[-13,-17]],[[31288,13309],[-13,-4],[-31,2],[-20,13],[26,41],[-3,28],[23,11],[26,-10],[18,-35],[3,-15],[-29,-31]],[[0,42174],[30,49],[9,7],[10,-45],[-12,-49],[-30,-43],[-7,-22],[0,103]],[[0,42344],[16,28],[12,5],[-8,-27],[0,-14],[-20,-21],[0,29]],[[99999,42071],[-21,-21],[-8,21],[10,50],[19,52],[0,-42],[0,-60]],[[28084,56609],[-6,-24],[-13,54],[2,14],[-1,49],[13,13],[9,1],[7,-7],[5,-58],[-4,-26],[-12,-16]],[[93002,80248],[-27,-25],[-28,15],[0,50],[59,153],[21,-9],[-5,-37],[-22,-57],[7,-69],[-5,-21]],[[66475,98677],[-60,-7],[-105,12],[-30,14],[7,13],[68,18],[54,4],[57,-19],[26,-23],[-17,-12]],[[65115,98198],[-39,-30],[-129,32],[11,16],[14,6],[0,16],[-12,12],[5,24],[83,-18],[8,-7],[56,-12],[9,-24],[-6,-15]],[[66983,98473],[-87,-12],[-141,15],[-73,17],[6,8],[19,10],[122,41],[242,9],[30,-30],[-26,-23],[-92,-35]],[[64866,98032],[-184,-7],[-62,4],[-8,7],[-15,6],[-58,6],[-36,29],[16,8],[85,12],[29,12],[10,17],[38,31],[92,6],[40,-6],[5,-20],[39,-25],[101,-32],[-20,-23],[-35,-3],[-37,-22]],[[65855,98128],[12,-20],[-1,-71],[-13,-31],[2,-26],[-26,-13],[-218,3],[-108,6],[-25,10],[61,34],[19,23],[-6,67],[10,12],[175,-6],[14,19],[66,1],[38,-8]],[[66580,97900],[-100,-19],[-35,6],[-10,9],[-19,9],[-50,12],[7,33],[16,7],[150,37],[72,-21],[30,-51],[-61,-22]],[[31535,20029],[-22,-25],[-16,1],[-6,9],[-1,12],[3,12],[7,11],[16,14],[5,2],[24,-14],[-10,-22]],[[29155,25984],[-7,-9],[-9,3],[-7,18],[-5,31],[10,12],[7,0],[9,-17],[4,-26],[-2,-12]],[[29025,23753],[-32,-1],[-7,103],[36,149],[3,56],[-12,43],[-5,35],[3,14],[47,30],[14,-32],[18,-83],[33,-119],[-1,-114],[-18,-28],[-58,-29],[-21,-24]],[[29082,22649],[-7,-53],[-23,5],[-7,13],[-4,34],[-7,16],[9,34],[7,37],[-2,29],[34,-2],[41,-7],[11,-8],[-12,-25],[-12,-16],[-25,-9],[-3,-48]],[[29337,21357],[5,-5],[10,1],[16,-9],[58,-11],[52,-27],[27,-26],[35,-7],[29,-33],[13,-8],[15,-2],[39,-60],[2,-7],[44,-47],[2,-7],[-25,-3],[-51,22],[-25,1],[-19,7],[-4,4],[-4,27],[-5,13],[-49,63],[-21,14],[-35,12],[-40,-8],[-28,8],[-9,-3],[-40,50],[-40,42],[-17,50],[-25,38],[-1,11],[12,9],[27,-22],[27,-37],[15,-14],[10,-36]],[[30638,20207],[223,-57],[68,35],[55,-1],[16,-48],[-55,-49],[-5,-16],[8,-13],[57,-8],[14,-16],[13,-20],[-11,-31],[-1,-14],[6,-14],[42,-46],[18,-24],[9,-23],[3,-40],[-1,-32],[-9,-4],[-21,10],[-20,18],[-18,46],[-12,10],[-36,9],[-35,22],[-28,-1],[-25,10],[-23,-9],[-8,16],[-10,30],[0,14],[12,48],[0,13],[-7,1],[-26,-10],[-11,7],[-29,35],[-11,7],[-29,3],[-17,-62],[-1,-16],[17,-39],[33,-61],[-17,-1],[-47,19],[-13,11],[-14,31],[-28,18],[-10,11],[-3,13],[-1,40],[-6,6],[-40,-11],[-8,10],[-3,17],[-6,9],[-26,16],[-2,9],[11,12],[7,28],[10,104],[51,-22]],[[29137,23711],[-3,-46],[-41,-88],[-35,-52],[-32,-41],[-21,0],[-17,20],[19,33],[24,32],[-8,42],[-7,13],[-10,4],[-17,22],[5,33],[10,15],[14,12],[12,-7],[54,23],[17,18],[32,4],[4,-37]],[[33302,22237],[-38,0],[-8,19],[1,47],[28,4],[29,-20],[-2,-20],[-10,-30]],[[42704,18182],[1,-33],[-43,30],[-10,14],[14,19],[27,0],[7,-11],[4,-19]],[[64934,59122],[17,-7],[26,20],[74,3],[90,-65],[-17,-16],[-10,-24],[-39,-21],[-40,-49],[-114,-24],[-33,13],[-28,48],[-51,62],[20,40],[5,18],[7,17],[29,30],[29,-4],[35,-41]],[[64814,65816],[-21,-3],[-18,22],[39,29],[11,13],[11,27],[9,-23],[-10,-36],[-7,-16],[-14,-13]],[[66311,63489],[-17,-8],[-6,4],[1,73],[40,91],[27,106],[19,-94],[-33,-53],[-17,-91],[-14,-28]],[[64615,65834],[-5,-4],[-4,31],[0,9],[13,15],[7,-26],[-11,-25]],[[65607,67350],[-26,-69],[-39,-58],[-17,18],[-12,0],[-28,-23],[-20,-3],[-37,-40],[-33,-20],[-23,2],[-8,4],[-5,27],[0,10],[15,-5],[51,36],[64,58],[6,26],[-10,43],[3,9],[41,-21],[46,42],[39,11],[19,-29],[-26,-18]],[[64979,65770],[0,-20],[-28,6],[-7,-10],[-24,5],[-22,14],[15,24],[40,28],[17,-26],[9,-21]],[[61663,61471],[21,-3],[-9,19],[-2,9],[10,26],[30,-55],[-1,-64],[-2,-15],[-8,14],[-6,13],[-2,15],[-8,16],[-30,-10],[-18,17],[-27,55],[-7,39],[11,8],[12,19],[7,31],[-7,32],[16,-5],[9,-33],[1,-75],[3,-16],[-5,-17],[12,-20]],[[61150,60884],[11,-30],[8,3],[7,10],[4,21],[44,-42],[-3,-29],[-26,-1],[-30,12],[-28,-4],[-33,12],[-8,48],[21,-23],[11,6],[2,6],[-15,33],[-21,6],[1,26],[10,10],[6,12],[-13,36],[24,-9],[15,-21],[10,-25],[3,-57]],[[61876,59737],[-18,-18],[12,46],[13,9],[4,-2],[-11,-35]],[[64057,66752],[-9,-44],[-9,16],[-21,76],[6,53],[-10,76],[5,22],[26,11],[6,-4],[-8,-24],[15,-43],[2,-70],[-3,-69]],[[61885,59891],[-4,-13],[-5,3],[-17,31],[19,34],[10,-32],[-3,-23]],[[63409,68907],[-16,-13],[-10,6],[-11,31],[-17,77],[10,29],[-1,12],[2,9],[5,6],[6,36],[7,12],[12,-25],[33,-88],[0,-37],[-2,-14],[-18,-41]],[[99839,41839],[-10,-16],[-4,79],[9,0],[7,-8],[4,-20],[-6,-35]],[[99818,41415],[-2,-5],[-24,46],[0,19],[5,16],[9,15],[9,-26],[7,-44],[-4,-21]],[[99673,41630],[-14,-10],[-8,35],[11,35],[12,4],[6,-36],[-7,-28]],[[96790,42177],[8,-8],[-4,-24],[-39,27],[-30,-10],[-9,1],[-9,22],[-7,44],[3,30],[13,22],[5,3],[10,-26],[8,-18],[9,-8],[19,-43],[23,-12]],[[96748,42432],[-32,-6],[-44,18],[-18,25],[-8,25],[15,19],[23,9],[27,57],[10,-22],[10,-64],[11,-20],[6,-19],[0,-22]],[[96790,41738],[27,-82],[11,-7],[-17,-59],[-34,-5],[-41,15],[15,20],[-8,23],[-13,5],[-14,-11],[-6,4],[9,38],[23,53],[6,4],[6,1],[6,-5],[30,6]],[[96641,42951],[-19,-26],[-34,2],[-13,15],[42,80],[49,17],[-25,-88]],[[96317,43302],[18,-191],[21,1],[11,10],[12,45],[5,70],[11,10],[14,-8],[-6,-22],[4,-56],[10,-31],[7,-6],[14,-146],[6,-31],[-1,-25],[-29,-54],[-44,1],[-30,-33],[-19,3],[0,37],[-17,29],[-19,63],[5,112],[-33,208],[-1,52],[12,68],[11,3],[15,-56],[23,-53]],[[96725,42643],[-5,-1],[-4,27],[-16,141],[10,126],[7,-27],[23,-221],[-3,-36],[-12,-9]],[[96718,43013],[-5,-36],[-11,41],[-7,175],[3,16],[6,1],[14,-121],[0,-76]],[[96503,42571],[12,-13],[7,0],[4,-28],[40,-56],[11,2],[9,-31],[17,-15],[5,-31],[12,-32],[-21,-38],[-41,10],[-24,-44],[-21,11],[-4,23],[3,8],[-13,58],[-5,90],[-9,52],[-9,23],[-20,-20],[-8,-3],[-18,43],[9,87],[4,25],[15,5],[23,-23],[22,-103]],[[96449,42785],[-5,-15],[-30,37],[7,36],[32,-12],[-4,-46]],[[94410,46927],[0,-14],[-37,48],[-28,59],[-81,64],[-17,33],[-15,4],[-41,54],[-41,36],[-25,47],[-6,19],[-15,11],[-25,51],[-25,34],[-9,62],[-24,43],[-6,19],[77,-35],[36,-68],[30,-38],[11,-28],[27,-38],[25,-4],[24,-38],[23,-10],[18,-20],[114,-172],[-14,-46],[15,-33],[9,-40]],[[93745,47620],[9,-20],[-21,-35],[-29,19],[-6,19],[0,11],[-20,-7],[-40,17],[-54,82],[-58,156],[-56,86],[-11,26],[-1,45],[8,17],[34,-19],[45,-71],[74,-73],[20,-38],[12,-90],[13,-27],[40,-69],[21,-16],[11,-3],[9,-10]],[[92682,49481],[-2,-13],[-17,15],[14,30],[6,2],[-1,-34]],[[83655,55342],[15,-41],[19,11],[30,-12],[6,-22],[-1,-14],[-32,-40],[-21,42],[-38,-29],[-18,17],[-24,-15],[-15,33],[6,31],[39,51],[34,-12]],[[81780,47733],[-4,-22],[-14,5],[-13,38],[6,10],[8,4],[9,-4],[8,-31]],[[87319,71706],[-5,-11],[-5,3],[-18,-26],[-4,25],[-13,17],[-2,13],[40,9],[13,-7],[-6,-23]],[[29135,24286],[-20,-7],[-3,19],[-18,31],[16,21],[31,21],[24,-2],[22,-17],[3,-19],[-38,-25],[-9,-14],[-8,-8]],[[29258,26723],[-39,-10],[-9,17],[0,15],[7,12],[20,7],[13,-9],[7,-15],[2,-12],[-1,-5]],[[29546,26024],[-9,-7],[-8,1],[-8,20],[-3,26],[-18,39],[-5,18],[0,22],[10,32],[16,9],[10,-2],[13,-37],[3,-40],[4,-42],[-5,-39]],[[29287,23852],[-6,-14],[-34,9],[-59,-15],[-25,52],[-11,83],[-8,18],[-14,47],[-8,31],[-15,48],[-6,51],[-3,16],[13,30],[62,29],[22,48],[19,-6],[-5,-98],[11,-33],[22,-28],[3,-11],[4,-35],[11,-53],[13,-26],[4,-15],[0,-13],[-5,-19],[15,-96]],[[32069,20324],[31,-13],[61,10],[32,0],[14,-5],[6,-7],[42,11],[18,-1],[-5,-25],[-38,-24],[-16,10],[-82,-2],[-36,-25],[-15,0],[-36,-36],[-26,23],[-7,21],[18,29],[18,1],[12,12],[9,21]],[[32812,29278],[3,-36],[-15,4],[-34,35],[-12,33],[-2,14],[35,-15],[16,-14],[9,-21]],[[33421,21755],[-18,-11],[-5,5],[-5,22],[-1,28],[-2,12],[12,-4],[20,-22],[-1,-30]],[[33050,22012],[20,-8],[20,3],[-11,-59],[-9,-28],[-24,2],[-23,39],[-8,20],[26,15],[9,16]],[[29743,21035],[8,-46],[4,-9],[20,7],[34,4],[57,-17],[6,-6],[24,-51],[19,-22],[28,-47],[-28,-32],[-17,-45],[-1,-23],[-11,-13],[-17,-14],[-26,-27],[-31,-3],[-31,-14],[-15,-12],[-8,-1],[-10,7],[-11,13],[-4,15],[22,14],[28,50],[5,52],[-30,9],[-18,-7],[-14,0],[-15,16],[-9,-24],[-4,-24],[4,-36],[-3,-11],[-10,-7],[-26,14],[-26,24],[-2,14],[6,48],[-1,25],[-5,37],[-3,3],[-10,0],[-31,-7],[-31,46],[-16,49],[-57,14],[44,69],[67,10],[22,-35],[74,-24],[-4,37],[1,13],[10,16],[6,2],[9,-12],[14,-5],[7,-11],[6,-23]],[[31366,20072],[-8,-22],[-17,-29],[-24,-23],[-23,-6],[-16,12],[-9,20],[-4,21],[-5,11],[-9,2],[-11,0],[-14,-8],[-29,-29],[-13,-8],[-9,-2],[-84,22],[-8,9],[-10,19],[-11,59],[-35,52],[54,29],[65,0],[125,-22],[49,-5],[39,-50],[6,-30],[1,-22]],[[30280,20237],[13,-37],[4,-6],[35,-15],[15,9],[37,4],[23,14],[32,7],[38,-90],[-4,-28],[-30,-30],[-20,-6],[-19,9],[2,15],[-4,13],[-13,17],[-12,-1],[-19,-13],[-10,2],[-19,14],[-35,10],[-7,13],[0,19],[-7,9],[-36,31],[-23,25],[-20,4],[-7,-3],[-7,-13],[-17,-11],[-5,2],[-6,9],[-3,14],[7,29],[11,3],[49,-6],[30,-13],[27,0]],[[31308,19713],[-10,-4],[-7,10],[-12,8],[-46,16],[-1,10],[5,14],[9,12],[18,13],[14,32],[7,-3],[6,-13],[11,-44],[14,-32],[-2,-11],[-6,-8]],[[29289,22305],[-1,-48],[-8,-15],[-8,-5],[-20,15],[-11,1],[-18,-25],[-16,-13],[-23,3],[-31,17],[-27,-72],[-13,-25],[-27,-33],[-3,39],[17,60],[8,40],[16,60],[31,-22],[44,22],[41,41],[34,1],[12,-23],[3,-18]],[[29151,22870],[-54,-46],[-16,19],[-39,0],[10,50],[4,37],[6,14],[2,32],[12,58],[32,-19],[24,-6],[33,-19],[36,-12],[10,-51],[-34,-23],[-26,-34]],[[29216,22102],[11,-112],[9,-16],[28,-8],[31,-57],[1,-16],[-37,-96],[-8,-69],[-43,5],[-19,68],[-27,66],[-10,77],[-15,66],[27,38],[26,-8],[1,50],[25,12]],[[29497,26597],[6,-29],[-13,-4],[-19,5],[-10,-23],[-5,-4],[-45,20],[-7,9],[1,29],[48,3],[31,19],[4,-3],[9,-22]],[[30169,20718],[62,-46],[40,0],[0,-28],[5,-49],[-6,-20],[-16,-20],[-9,-29],[-7,-5],[-45,35],[-47,48],[-24,-9],[-31,12],[-25,-3],[-16,-27],[-36,-14],[-7,54],[-33,51],[-33,41],[18,63],[22,10],[20,21],[81,-22],[42,-19],[45,-44]],[[29405,21928],[-9,-6],[-30,14],[-16,12],[-24,30],[-3,31],[-11,38],[7,0],[25,-15],[10,-11],[13,-24],[40,-34],[5,-10],[-1,-13],[-6,-12]],[[29518,26270],[-14,-25],[-22,-4],[-33,-29],[-4,-25],[-1,-30],[23,-37],[11,-43],[14,-64],[10,-61],[-1,-19],[2,-31],[17,-50],[1,-22],[-1,-22],[-7,-41],[-5,-5],[-17,-4],[-1,-25],[-4,-8],[-46,-3],[-23,12],[2,74],[-29,30],[-20,49],[-23,85],[-19,27],[-22,67],[-33,58],[38,36],[-6,64],[22,22],[33,23],[25,-18],[22,6],[10,16],[-3,65],[7,52],[25,26],[26,3],[10,-29],[13,-28],[32,-23],[-1,-29],[-8,-40]],[[29357,25523],[-15,-26],[-27,-12],[-27,20],[-32,-9],[-3,43],[12,36],[24,43],[18,58],[-2,81],[14,18],[8,29],[31,18],[7,-61],[-8,-107],[20,-64],[3,-21],[-4,-24],[-19,-22]],[[29565,78034],[-22,-11],[-36,11],[-41,-15],[-11,0],[30,42],[46,27],[46,80],[13,2],[-18,-91],[-3,-33],[-4,-12]],[[29529,78102],[-34,-12],[-11,5],[37,56],[42,13],[-34,-62]],[[33066,78046],[-12,-4],[-2,8],[-18,24],[-1,12],[15,11],[32,-6],[-12,-30],[-2,-15]],[[32801,79080],[10,-11],[18,1],[12,-4],[-17,-21],[-33,-3],[-16,9],[23,110],[27,26],[56,71],[22,22],[21,9],[21,-5],[-22,-43],[-30,-2],[-28,-35],[-18,-40],[-23,-22],[-15,-27],[-8,-35]],[[32081,79427],[-7,-42],[-25,-36],[-12,-2],[-5,3],[6,23],[0,40],[20,6],[7,-4],[16,12]],[[32090,79469],[-32,-30],[14,45],[6,11],[5,5],[5,-4],[2,-27]],[[30270,78843],[-25,-5],[6,20],[35,36],[25,20],[15,0],[-24,-44],[-32,-27]],[[31590,77357],[-14,-21],[4,20],[17,51],[11,7],[-18,-57]],[[30938,77301],[-11,-11],[-11,3],[0,29],[3,9],[4,5],[6,-8],[9,-27]],[[31455,77581],[-38,-31],[15,78],[12,24],[15,-8],[-2,-47],[-2,-16]],[[31059,77380],[-16,-11],[-18,4],[0,-30],[-2,-11],[-19,16],[-8,10],[1,40],[17,38],[14,15],[17,-10],[13,-43],[1,-18]],[[81623,47750],[-6,-9],[-47,5],[-30,-47],[-21,-14],[-76,0],[-9,6],[-7,0],[-4,-10],[-24,7],[-77,42],[-10,38],[12,42],[27,58],[56,12],[252,4],[27,-51],[3,-16],[-55,-35],[-11,-32]],[[94132,20328],[-9,-23],[-3,26],[17,114],[17,20],[-3,-60],[-19,-77]],[[1680,41106],[-11,-34],[-5,0],[-12,20],[-5,13],[19,40],[10,3],[12,-13],[0,-12],[-8,-17]],[[7942,42120],[-11,0],[-10,9],[2,59],[3,12],[15,-20],[13,-52],[-12,-8]],[[6294,52912],[46,-67],[-20,-5],[-48,32],[-44,66],[13,15],[7,-24],[20,-22],[12,46],[7,11],[-35,48],[14,-3],[33,-32],[-5,-65]],[[11382,46258],[42,-30],[13,3],[-13,-29],[-42,-16],[-14,-15],[-16,10],[-9,34],[39,43]],[[11372,46122],[-20,-45],[-1,48],[8,6],[7,0],[6,-9]],[[11486,45785],[-10,-9],[-1,61],[13,-12],[5,-9],[-2,-17],[-5,-14]],[[8522,41653],[40,-27],[7,-44],[-8,-29],[-21,7],[-10,16],[-14,52],[-39,-12],[-27,11],[-15,67],[0,31],[6,19],[29,20],[36,-15],[13,-38],[3,-58]],[[11091,46710],[-27,-14],[-13,3],[-10,47],[3,29],[5,9],[46,-11],[4,-22],[-1,-20],[-7,-21]],[[11090,46413],[-6,-11],[-11,35],[-2,14],[20,18],[11,-9],[-12,-47]],[[2130,44086],[31,-54],[12,-72],[-13,-69],[-30,17],[-42,-15],[-15,5],[-34,85],[-23,38],[-10,35],[30,-4],[44,24],[50,10]],[[290,41893],[-7,-20],[-6,7],[8,33],[1,15],[-12,17],[-1,12],[3,8],[15,-20],[9,-15],[1,-8],[-2,-15],[-9,-14]],[[5739,54103],[22,-49],[-4,-24],[-16,2],[-7,8],[12,5],[2,9],[-6,14],[-7,10],[-5,0],[-2,-20],[-8,16],[5,15],[6,10],[8,4]],[[2374,43751],[-76,0],[-38,26],[-13,0],[-33,55],[-5,28],[17,19],[36,10],[70,-41],[11,-37],[16,-4],[13,-16],[3,-26],[-1,-14]],[[2576,43576],[-12,-5],[-14,27],[28,21],[8,11],[34,-6],[-20,-8],[-24,-40]],[[2832,40850],[-28,-31],[-12,37],[11,48],[13,12],[8,2],[11,-45],[-3,-23]],[[1066,44162],[-4,-4],[-5,22],[7,34],[6,12],[6,-26],[-10,-38]],[[1413,39573],[-2,-87],[-13,40],[-2,18],[14,27],[3,2]],[[87387,56095],[-17,-12],[-8,44],[3,51],[11,39],[12,13],[2,4],[12,51],[3,-28],[-8,-93],[-9,-37],[-1,-32]],[[90493,62257],[-14,-13],[17,57],[5,10],[8,-21],[-16,-33]],[[90486,60560],[-1,-15],[-14,4],[-4,6],[8,52],[20,24],[10,5],[-9,-25],[-2,-27],[-8,-24]],[[90205,59480],[-12,-1],[-10,20],[-3,13],[-1,66],[40,57],[13,55],[10,-5],[10,-9],[8,-16],[-44,-92],[-11,-88]],[[90461,60466],[-12,-29],[-8,45],[-1,19],[10,17],[7,-1],[4,-51]],[[88372,57315],[-21,-47],[-1,16],[6,28],[9,32],[8,19],[11,6],[8,-27],[-9,-23],[-11,-4]],[[99579,40913],[0,-25],[-36,-16],[-12,20],[-8,4],[-21,-36],[-6,-15],[-2,-11],[-6,-6],[-39,-17],[-17,17],[12,12],[14,23],[14,-3],[15,22],[14,33],[21,8],[14,13],[24,-10],[19,-13]],[[96550,43628],[-11,-29],[-32,9],[-7,8],[2,48],[8,17],[19,15],[25,-24],[-4,-44]],[[96524,43832],[-4,-6],[-7,4],[-16,70],[4,23],[21,22],[18,-38],[2,-22],[0,-18],[-3,-16],[-13,-6],[-2,-13]],[[97192,40214],[-9,-31],[-15,0],[-20,22],[4,29],[22,5],[6,-2],[12,-23]],[[97080,40587],[-15,-63],[-25,15],[-24,45],[-12,40],[8,75],[12,14],[13,-5],[6,-74],[37,-47]],[[97036,40932],[-12,-27],[-12,3],[-72,64],[3,27],[-3,67],[8,37],[20,15],[15,-8],[10,-54],[22,-22],[-16,-18],[27,-41],[10,-43]],[[96669,39498],[13,-10],[22,1],[-5,-98],[-32,-16],[-11,1],[-7,21],[-18,14],[1,33],[-18,76],[31,11],[17,20],[0,-18],[2,-22],[5,-13]],[[96262,39919],[-15,-5],[18,52],[1,33],[7,63],[-1,22],[12,-3],[12,-18],[-14,-16],[-5,-28],[0,-34],[6,-7],[-9,-37],[-12,-22]],[[96499,39653],[-15,-4],[-20,41],[-39,21],[-17,36],[-11,43],[22,11],[22,58],[-15,22],[-26,3],[3,23],[42,27],[18,-16],[8,-18],[-2,-92],[19,-29],[20,-65],[-1,-18],[-8,-43]],[[96539,38811],[-9,-22],[-11,5],[-8,8],[-6,12],[6,44],[24,-22],[4,-25]],[[94430,40718],[-4,-12],[-2,92],[8,34],[5,-71],[-7,-43]],[[96368,45123],[-24,-9],[-10,2],[-16,50],[12,11],[18,-4],[5,-29],[15,-21]],[[96147,45646],[-22,-10],[-7,3],[-17,-6],[-18,-41],[-13,6],[-10,-2],[-8,34],[0,17],[13,-3],[6,33],[14,17],[32,7],[28,-10],[10,-8],[-9,-30],[1,-7]],[[94604,45047],[-20,-20],[-17,10],[-14,15],[-11,44],[-23,28],[-34,11],[-14,19],[-3,10],[-24,8],[-6,24],[2,25],[3,13],[22,-12],[103,-117],[25,-36],[11,-22]],[[94652,47053],[69,-171],[-3,-31],[-9,-19],[-3,-58],[8,-22],[19,-10],[32,-62],[13,-75],[1,-23],[14,-34],[0,-72],[30,-100],[3,-48],[-3,-22],[-12,13],[-37,113],[-41,49],[-5,21],[-42,66],[-28,111],[-30,198],[14,47],[-34,96],[1,25],[15,-6],[10,2],[5,11],[13,1]],[[94920,45859],[35,-34],[20,6],[30,-23],[23,13],[15,-30],[36,-118],[0,-38],[24,-27],[-20,-5],[-28,14],[-22,-10],[-22,23],[-38,12],[-33,27],[-69,87],[0,43],[-11,21],[-3,54],[-25,17],[-29,3],[-2,26],[5,45],[21,-1],[26,-19],[50,-65],[12,-12],[5,-9]],[[94873,46298],[4,-62],[-2,-21],[-21,45],[-10,-16],[-9,22],[1,46],[1,50],[-4,38],[-11,55],[12,-9],[39,-148]],[[94218,46587],[-4,-1],[-13,7],[-16,2],[-9,20],[11,29],[15,18],[6,-4],[7,-12],[14,-5],[2,-37],[-13,-17]],[[94490,46661],[16,-8],[8,1],[18,-31],[25,-46],[-10,-23],[-20,12],[-7,-5],[-2,3],[-4,23],[-22,23],[-19,2],[-3,27],[20,22]],[[94357,46942],[-13,-8],[-20,21],[-9,19],[4,30],[12,12],[13,-20],[1,-21],[12,-33]],[[93822,47095],[18,-47],[20,-105],[-4,-36],[-14,-3],[-4,-22],[-20,51],[-26,14],[-19,31],[-6,62],[-2,39],[-15,7],[-42,-10],[-14,-34],[-19,11],[-4,30],[3,29],[26,29],[5,38],[26,64],[15,11],[31,-23],[3,-92],[11,-30],[31,-14]],[[93944,46761],[-6,-2],[-7,23],[15,62],[8,-50],[4,-19],[-14,-14]],[[93918,46840],[-27,-45],[-20,15],[-17,39],[6,47],[3,13],[8,2],[8,10],[9,21],[29,-17],[8,-11],[-18,-29],[6,-9],[4,-14],[1,-22]],[[93718,46823],[0,-8],[-15,16],[-34,78],[6,26],[31,50],[10,7],[8,-31],[-7,-46],[-10,-12],[-5,-43],[16,-37]],[[93523,47279],[-5,-8],[-9,31],[-7,10],[0,34],[-28,57],[-2,39],[16,38],[22,-22],[22,-48],[25,-16],[-5,-32],[-23,-57],[-6,-26]],[[93500,47136],[-3,-15],[-15,71],[1,36],[3,23],[5,7],[12,-79],[-3,-43]],[[93658,47172],[-6,-9],[-30,4],[-23,59],[0,44],[18,40],[22,8],[12,-16],[11,-34],[4,-43],[-3,-38],[-5,-15]],[[93288,47754],[-28,-13],[-17,18],[7,44],[10,23],[35,-41],[-7,-31]],[[95272,54910],[3,-27],[-18,13],[-2,10],[10,10],[7,-6]],[[93975,55768],[-16,-13],[-20,5],[-6,47],[-10,13],[2,23],[15,19],[30,-15],[11,-34],[-7,-22],[1,-23]],[[98761,30944],[2,-31],[-21,11],[-8,24],[-24,24],[-4,8],[-2,48],[12,23],[2,10],[6,4],[10,-26],[19,-36],[8,-59]],[[98309,28304],[-38,-34],[2,23],[7,51],[17,26],[8,1],[17,20],[-1,-43],[-12,-44]],[[96317,25543],[-1,-28],[-3,-14],[-10,0],[-14,3],[-14,13],[-10,-4],[-7,5],[10,32],[33,17],[12,-14],[4,-10]],[[1062,26647],[-10,-15],[-17,1],[-30,-59],[2,44],[-9,17],[-26,-4],[-4,-10],[17,-12],[4,-6],[-17,-25],[17,-55],[15,2],[14,-43],[0,-13],[-33,-16],[-17,-23],[-16,1],[-7,4],[-9,41],[0,17],[19,31],[11,30],[-9,28],[-22,19],[-48,-9],[-11,6],[24,39],[26,-5],[28,28],[108,-13]],[[1062,26312],[-12,-5],[1,33],[-4,21],[21,7],[9,-26],[-15,-30]],[[96993,21602],[15,-29],[-29,-13],[-14,11],[-10,13],[-5,19],[15,-2],[14,8],[14,-7]],[[96172,22602],[6,-48],[-16,-1],[-32,14],[-9,21],[-7,5],[-12,-24],[-18,-1],[-5,8],[8,25],[44,49],[8,61],[-1,19],[35,5],[8,-7],[3,-9],[-2,-11],[-14,-20],[0,-23],[3,-24],[-11,-12],[6,-21],[6,-6]],[[96706,24848],[0,-23],[-29,9],[1,-26],[23,-14],[8,-18],[24,5],[5,-28],[-5,-24],[-16,-19],[-47,-9],[-31,-36],[-26,6],[-7,-3],[-30,-39],[-34,-12],[-9,3],[5,34],[25,33],[0,31],[7,25],[24,18],[0,33],[16,29],[-10,63],[6,56],[47,3],[53,-97]],[[88081,42754],[-12,-27],[-15,28],[-3,29],[-12,8],[6,27],[6,7],[6,33],[16,-39],[1,-43],[7,-23]],[[88017,42845],[-5,-4],[0,48],[8,24],[4,-50],[-7,-18]],[[87941,42840],[-17,-2],[-4,3],[-3,25],[5,23],[18,6],[7,-6],[-6,-49]],[[86831,45332],[-6,-9],[-22,89],[6,27],[-9,46],[15,5],[12,34],[4,-16],[1,-63],[9,-36],[-10,-77]],[[91400,40154],[-6,-6],[-10,0],[-13,11],[12,74],[6,-39],[12,-32],[-1,-8]],[[91370,40236],[-6,-3],[-7,6],[5,24],[7,19],[10,14],[-3,-52],[-6,-8]],[[90632,41341],[6,-55],[12,-42],[-5,-28],[-7,-21],[-18,19],[-12,51],[-21,41],[-5,23],[25,-2],[12,8],[5,9],[8,-3]],[[89520,45676],[-23,-33],[-15,18],[-4,36],[2,16],[19,28],[21,-65]],[[89538,45972],[-17,-36],[-17,11],[-6,20],[6,29],[23,5],[11,-29]],[[89490,45994],[-7,-16],[-12,34],[14,40],[12,-19],[-7,-39]],[[88751,42296],[-21,-51],[-11,7],[-10,-27],[-20,-13],[-12,0],[-22,-13],[-4,16],[4,51],[19,56],[18,35],[46,16],[36,25],[4,-4],[26,-65],[-38,-8],[-15,-25]],[[88738,41984],[-11,-10],[-3,24],[14,24],[9,34],[19,-30],[3,-30],[-31,-12]],[[87975,43891],[12,-24],[13,2],[12,53],[7,-8],[5,-13],[4,-23],[-17,-40],[-8,-6],[-7,-23],[-12,-73],[1,-24],[11,-25],[27,-22],[13,10],[5,-3],[-5,-36],[-11,-27],[-36,12],[-32,-4],[-52,26],[-27,3],[-8,10],[16,21],[10,28],[-5,67],[4,84],[30,41],[14,42],[20,26],[13,-3],[-2,-26],[5,-45]],[[87843,43879],[-7,-6],[-25,11],[0,21],[3,15],[7,10],[16,41],[11,-24],[5,-49],[-10,-19]],[[87943,45288],[-20,-35],[-1,26],[10,21],[25,84],[11,20],[6,11],[5,31],[1,46],[14,7],[-11,-105],[-40,-106]],[[87871,45159],[-44,-43],[24,58],[51,52],[8,12],[-2,-25],[-26,-43],[-11,-11]],[[86238,45115],[23,-14],[10,-19],[7,-21],[1,-25],[-29,-11],[-52,37],[-51,-31],[-15,0],[-10,22],[8,61],[19,-9],[16,22],[-3,67],[-9,37],[27,68],[12,13],[12,0],[11,-48],[2,-51],[13,-48],[8,-50]],[[86282,45290],[37,-5],[45,43],[21,-18],[9,4],[33,41],[21,12],[15,30],[14,-33],[32,-38],[11,-40],[13,-19],[5,-12],[-20,-42],[-3,-45],[-21,3],[-25,-74],[-95,-124],[-85,106],[-37,71],[-24,99],[-5,82],[-10,51],[4,14],[5,6],[7,-1],[25,-56],[12,-15],[16,-40]],[[84777,43444],[-18,-36],[-12,29],[7,58],[12,20],[10,-10],[-1,-45],[2,-16]],[[84610,42971],[-11,-17],[-10,5],[0,23],[-11,24],[6,28],[4,14],[9,-2],[3,-23],[12,-26],[-2,-26]],[[82068,39868],[-17,-45],[-19,9],[-3,23],[13,37],[22,45],[7,-28],[-3,-41]],[[81439,36835],[-7,-24],[-54,180],[-15,123],[10,22],[10,6],[32,-170],[10,-39],[0,-40],[4,-12],[10,-46]],[[90931,26844],[-13,-59],[-21,10],[-22,-10],[-13,40],[0,10],[16,-10],[6,13],[4,17],[5,4],[4,24],[14,29],[8,0],[9,-38],[3,-30]],[[91139,27240],[-15,-5],[-6,2],[1,30],[-2,13],[13,27],[20,-13],[7,-20],[-19,-17],[1,-17]],[[90953,26934],[-17,0],[-7,5],[-3,29],[-11,12],[6,9],[2,18],[7,20],[13,-22],[10,-71]],[[90217,28509],[-10,-47],[-11,60],[12,8],[9,21],[2,-3],[-2,-39]],[[89979,28734],[-8,-2],[-6,32],[3,47],[-14,45],[8,46],[-1,50],[5,22],[16,24],[3,43],[14,2],[25,-33],[9,-85],[-4,-51],[9,-46],[-8,-40],[-21,-32],[-30,-22]],[[91201,28624],[26,-34],[15,-38],[-20,-31],[-14,-6],[-9,36],[-29,-13],[-31,3],[-23,27],[-3,14],[14,14],[38,-1],[36,29]],[[91110,28941],[50,-104],[25,-17],[8,-11],[-2,-45],[-11,-20],[20,-26],[-3,-17],[-4,1],[-24,-35],[-29,-17],[-9,12],[-8,17],[-6,23],[-37,91],[4,25],[-8,38],[-18,-3],[-12,23],[20,22],[26,61],[18,-18]],[[91176,28504],[-14,-44],[-17,28],[-2,13],[21,10],[7,-1],[5,-6]],[[88220,31256],[67,-14],[26,21],[32,-17],[22,-56],[-16,-27],[-15,-4],[-49,23],[-46,-18],[-13,-23],[-9,-51],[-40,-28],[-18,31],[-48,22],[-17,-32],[-34,9],[-32,-14],[-43,8],[-46,57],[-14,26],[11,47],[16,34],[126,49],[67,41],[55,-7],[15,-9],[14,-21],[-10,-38],[-1,-9]],[[90412,29749],[-42,-38],[-15,17],[1,29],[3,13],[36,2],[17,-23]],[[90364,29671],[10,-28],[2,-11],[-24,22],[-39,-5],[24,40],[20,-8],[7,-10]],[[92649,36038],[-24,-158],[-7,3],[-9,24],[1,91],[10,58],[24,-10],[5,-8]],[[92622,36108],[-6,-9],[-12,55],[-4,56],[5,51],[14,11],[10,-4],[-11,-94],[4,-66]],[[92521,37009],[-7,-16],[-13,29],[-8,102],[6,59],[14,55],[3,30],[-6,62],[42,71],[10,37],[4,48],[-15,52],[-12,10],[10,29],[12,15],[9,6],[7,-5],[5,-102],[17,-36],[-3,-50],[-58,-259],[-16,-97],[-1,-40]],[[91984,38311],[10,-15],[8,2],[8,-9],[-3,-38],[13,-42],[6,-30],[-10,-24],[-6,-8],[-15,20],[-42,121],[7,41],[24,-18]],[[91809,38984],[-8,-1],[-7,10],[6,23],[1,32],[10,-10],[7,-45],[-9,-9]],[[91646,39059],[-10,-18],[-6,42],[1,44],[10,15],[5,-58],[0,-25]],[[82598,56575],[-19,-14],[-4,36],[2,35],[14,-3],[6,-11],[1,-43]],[[82521,56384],[-14,-44],[-16,50],[1,71],[5,19],[24,11],[0,-107]],[[83309,57883],[-34,-18],[-8,56],[24,51],[28,-21],[16,-20],[-8,-18],[-18,-30]],[[83294,58482],[6,-31],[-8,-46],[-7,-10],[-8,19],[-20,14],[-1,24],[10,0],[18,24],[10,6]],[[83360,58852],[15,-9],[11,8],[10,31],[9,-45],[22,-37],[-7,-38],[-20,-4],[-19,8],[-21,-15],[-25,9],[-14,35],[-17,63],[-9,12],[1,26],[6,16],[-3,4],[2,12],[3,8],[5,3],[13,-28],[32,-42],[6,-17]],[[83343,58584],[-21,-19],[-5,12],[-3,28],[0,20],[-20,104],[15,15],[11,-12],[12,-16],[10,-9],[10,-32],[-2,-23],[3,-22],[-10,-46]],[[84068,57875],[-7,-8],[-7,2],[-16,-21],[-6,39],[5,66],[25,50],[6,16],[7,10],[8,1],[8,-20],[2,-30],[-16,-90],[-9,-15]],[[84269,57286],[-11,-15],[-4,38],[3,51],[21,179],[-5,45],[36,100],[22,93],[32,99],[5,51],[29,97],[27,134],[-1,45],[7,22],[4,33],[0,29],[20,50],[6,-33],[-6,-64],[1,-30],[3,-14],[0,-60],[-7,-91],[7,-105],[-13,-107],[-15,-48],[-21,-34],[-24,-21],[-25,-53],[-15,-62],[-3,-57],[-39,-192],[-34,-80]],[[84376,58342],[16,-76],[-22,0],[-8,56],[10,18],[4,2]],[[84609,57480],[-3,-21],[-22,2],[-8,-3],[-20,-54],[-12,-14],[-66,-18],[-52,14],[-18,30],[-12,49],[-3,33],[13,35],[12,24],[42,46],[10,35],[22,43],[45,14],[4,-11],[6,-6],[9,-2],[23,-35],[25,-23],[-6,-85],[7,-28],[4,-25]],[[84668,57109],[-8,-34],[-31,28],[-8,25],[4,29],[15,10],[8,0],[15,-31],[5,-27]],[[84360,57164],[2,-60],[-25,-18],[-21,16],[-13,36],[0,13],[11,-1],[26,31],[8,7],[12,-24]],[[83402,54871],[-7,-35],[-9,-16],[-12,9],[-9,18],[-5,-27],[-24,-10],[-15,-41],[-23,-12],[-15,6],[2,37],[43,54],[27,21],[23,39],[12,5],[6,-33],[6,-15]],[[83914,55546],[-28,-8],[-9,0],[-22,59],[-2,26],[-18,29],[6,29],[23,7],[40,38],[64,-59],[10,-21],[-20,-13],[-14,-56],[-30,-31]],[[85016,57468],[-4,-3],[-15,45],[2,51],[21,76],[15,-67],[0,-30],[-2,-15],[14,-37],[-10,-19],[-21,-1]],[[84913,57554],[-5,-16],[-6,33],[-17,31],[-15,53],[-11,16],[7,42],[1,68],[16,31],[7,10],[11,33],[6,2],[5,-28],[-11,-85],[16,-100],[-6,-62],[3,-14],[-1,-14]],[[83408,59764],[0,-39],[-47,57],[-1,20],[1,14],[5,9],[25,-21],[17,-40]],[[83864,59642],[18,-1],[5,5],[33,-48],[-2,-24],[4,-33],[-19,-55],[-3,-19],[-11,-18],[-35,44],[-13,27],[-4,56],[14,81],[13,-15]],[[83914,58959],[-22,-143],[-15,49],[6,31],[-13,26],[-3,24],[5,31],[13,29],[3,94],[29,30],[11,1],[-4,-23],[1,-43],[-11,-106]],[[83974,59060],[-8,-18],[-5,3],[-4,31],[8,21],[3,-2],[6,-35]],[[84070,58933],[-14,-13],[-29,56],[-17,26],[-4,15],[13,21],[37,0],[19,-39],[3,-24],[-8,-42]],[[84244,59247],[24,-88],[-26,60],[-30,41],[-31,67],[-23,24],[-6,14],[2,28],[17,5],[7,-2],[45,-119],[21,-30]],[[84381,59017],[1,-51],[-10,19],[-34,99],[-9,36],[9,24],[25,-37],[18,-90]],[[84365,58921],[53,-69],[37,-116],[4,-89],[-3,-35],[-17,39],[-38,54],[-26,12],[-8,10],[3,30],[-17,27],[-2,11],[-15,12],[-23,61],[-16,12],[-15,-13],[-35,-91],[-37,-64],[-1,25],[15,79],[10,128],[6,39],[-8,57],[-1,51],[28,-24],[35,-23],[27,-33],[4,-22],[40,-68]],[[84542,59695],[-8,-37],[-9,13],[-12,-2],[-21,-32],[-33,43],[-5,33],[24,73],[0,109],[8,27],[9,19],[11,11],[23,-75],[8,-10],[22,-34],[-5,-70],[2,-41],[-14,-27]],[[83937,59935],[-1,-23],[-60,85],[-3,15],[0,13],[4,14],[60,-104]],[[83897,60486],[5,-20],[-5,1],[-4,-4],[-13,-41],[14,-77],[-9,-56],[-16,-4],[-6,6],[3,28],[4,12],[-3,37],[-10,23],[-7,44],[-12,27],[6,43],[36,5],[17,-24]],[[83866,62727],[-17,-42],[-10,12],[10,40],[0,14],[8,31],[15,11],[13,-31],[-19,-35]],[[83680,62835],[-1,-39],[-14,21],[-3,29],[1,21],[6,26],[9,-23],[2,-35]],[[83755,62996],[3,-52],[-17,1],[-24,32],[-3,16],[1,13],[4,11],[36,-21]],[[83877,63574],[-5,-7],[-8,3],[8,55],[14,15],[11,-6],[-20,-60]],[[83854,63814],[-13,-47],[-11,0],[2,26],[14,55],[5,-1],[3,-33]],[[91117,48486],[-11,-4],[-5,26],[-26,23],[-26,70],[1,61],[3,17],[15,1],[57,-70],[6,-22],[-4,-66],[-10,-36]],[[90881,48714],[-15,-3],[-26,54],[-6,21],[3,28],[32,39],[21,-35],[4,-75],[-13,-29]],[[90560,49120],[-19,-17],[-13,13],[-6,38],[5,36],[16,29],[10,9],[12,-20],[4,-38],[-9,-50]],[[91076,50527],[-9,-30],[-21,3],[-9,9],[15,6],[6,25],[7,8],[11,-21]],[[90851,50714],[93,-38],[6,1],[-1,13],[1,4],[6,-10],[-2,-27],[-15,-7],[-13,3],[-10,-15],[-26,-52],[-18,9],[-22,-12],[-38,-1],[-50,23],[-13,-20],[-18,6],[-17,-22],[-8,1],[-4,32],[1,16],[20,14],[-3,49],[17,25],[29,-3],[27,17],[58,-6]],[[92957,48713],[-6,-4],[-12,72],[-2,54],[-4,40],[-6,24],[18,43],[8,12],[13,-23],[2,-51],[11,-43],[-8,-95],[-14,-29]],[[92408,50038],[-7,-51],[-17,30],[-12,42],[8,20],[19,11],[9,-52]],[[92249,50145],[-3,-29],[-9,1],[-24,57],[-4,15],[5,14],[28,-41],[7,-17]],[[92209,50212],[-6,0],[-1,46],[4,24],[16,-16],[2,-42],[-15,-12]],[[91601,50948],[-1,-21],[-20,11],[-6,-3],[-34,60],[0,37],[9,31],[15,-5],[25,-39],[12,-71]],[[91787,50309],[-55,-8],[-20,9],[-18,33],[-16,52],[-16,12],[-7,11],[39,39],[35,12],[56,-49],[6,-25],[0,-16],[-1,-53],[-3,-17]],[[91966,46071],[12,0],[20,43],[17,13],[11,-20],[-18,-137],[-16,21],[-60,38],[-2,54],[-15,18],[-10,53],[-20,58],[-4,38],[12,-16],[12,-38],[53,-79],[-2,-25],[10,-21]],[[91762,46374],[-4,-14],[-16,10],[-46,80],[7,59],[21,30],[31,-33],[10,-49],[3,-27],[-6,-56]],[[91813,46459],[39,-48],[21,14],[12,-7],[25,-55],[1,-40],[4,-34],[-1,-15],[-14,-21],[1,24],[-10,4],[-37,-1],[-28,15],[-39,4],[16,36],[4,14],[-21,59],[0,28],[1,15],[17,8],[9,0]],[[91973,46812],[5,-41],[-22,44],[10,50],[2,27],[-1,15],[-22,26],[11,42],[13,14],[7,4],[0,-59],[6,-27],[-9,-95]],[[92397,46682],[16,-9],[33,4],[11,-33],[16,-11],[13,-15],[12,-22],[0,-13],[-3,-12],[-7,-10],[2,-23],[-12,3],[-16,-12],[-30,27],[-11,6],[-3,24],[-19,39],[-35,28],[18,23],[15,6]],[[91915,45757],[-4,-45],[-22,13],[-5,10],[4,28],[20,1],[7,-7]],[[92855,45298],[-4,-31],[-10,10],[-30,-16],[-16,4],[-9,28],[-3,13],[27,-10],[-5,31],[38,-16],[12,-13]],[[92648,45232],[46,-30],[16,-34],[-17,-15],[-40,-10],[-10,20],[-39,21],[-6,37],[-19,-13],[10,27],[-25,29],[-7,40],[-1,16],[28,-19],[64,-69]],[[89884,46957],[-12,-2],[-49,39],[-12,29],[57,-7],[15,-7],[3,-40],[-2,-12]],[[89885,46869],[5,-25],[-40,35],[-39,58],[-19,15],[-13,38],[24,-28],[41,-27],[41,-66]],[[87606,51467],[59,-22],[21,1],[21,-25],[26,12],[14,-8],[49,-88],[24,-58],[35,-50],[26,-17],[-19,-45],[-39,-24],[-15,-1],[-30,27],[-25,-5],[-21,34],[-4,52],[-21,119],[-29,-34],[-33,54],[-9,1],[-3,-9],[-14,19],[-12,37],[-1,30]],[[87631,50926],[110,-29],[29,4],[63,-12],[52,-38],[91,-7],[28,-12],[21,-26],[-51,-22],[-24,-20],[-45,-10],[-38,10],[-27,-12],[-10,20],[-39,20],[-51,41],[-105,49],[-5,30],[1,14]],[[87489,51200],[-13,-11],[-15,12],[-15,44],[5,34],[17,23],[15,-23],[4,-30],[11,-2],[-9,-47]],[[87325,50619],[-8,-8],[-3,25],[5,33],[5,6],[6,-2],[8,-12],[-13,-42]],[[88581,47010],[-14,-7],[-69,17],[-8,24],[-1,12],[16,24],[15,40],[24,14],[10,0],[28,-94],[-1,-30]],[[87102,49397],[14,-31],[-33,24],[-47,51],[-3,34],[40,-52],[29,-26]],[[86208,50869],[4,-34],[16,-32],[-5,-49],[-7,-7],[4,-23],[7,-17],[-13,-12],[-10,6],[-15,-16],[-10,-22],[-32,-9],[-11,20],[-57,24],[-37,53],[-5,16],[71,62],[32,17],[26,-1],[33,23],[9,1]],[[86389,51085],[-10,-16],[-34,15],[-17,35],[-12,48],[-8,39],[-2,32],[-10,38],[1,14],[62,40],[12,-15],[26,-1],[12,-29],[-8,-127],[-12,-73]],[[86362,51395],[-7,-30],[-14,-19],[-119,-36],[10,21],[5,21],[8,11],[12,-3],[6,7],[5,2],[7,-3],[12,9],[24,-6],[25,5],[-2,28],[28,-7]],[[86284,51538],[-16,-1],[-28,25],[16,22],[11,5],[9,13],[5,0],[12,-11],[7,-19],[-16,-34]],[[86336,51840],[48,-24],[11,4],[70,-64],[11,-31],[-4,-21],[10,-29],[-22,-43],[-11,-5],[-12,16],[-22,10],[-25,-18],[-17,13],[-14,40],[-24,24],[-35,84],[-17,-3],[5,-33],[14,-21],[20,-64],[11,-6],[11,2],[16,-27],[-1,-41],[-40,-16],[-14,30],[-3,55],[-23,-19],[-9,-19],[-7,-2],[-15,57],[-43,3],[-29,30],[14,32],[2,30],[19,17],[19,-15],[19,22],[14,-6],[10,14],[38,9],[25,15]],[[85985,51735],[-12,-2],[-10,34],[-28,37],[-17,65],[65,-107],[2,-27]],[[85681,53025],[-44,-10],[-10,27],[-12,124],[31,99],[40,58],[27,15],[9,1],[24,-71],[-18,-144],[-21,-73],[-26,-26]],[[85403,51839],[-1,-17],[-9,24],[-6,6],[6,62],[4,11],[5,-43],[1,-43]],[[85394,52213],[-10,-7],[-3,2],[-3,24],[5,39],[12,0],[5,-6],[1,-29],[-7,-23]],[[85346,51557],[-17,-15],[-19,1],[-4,61],[6,78],[18,13],[27,-16],[-10,-20],[8,-42],[-9,-60]],[[85360,51393],[-3,-12],[-29,15],[-8,8],[15,82],[14,-2],[12,-78],[-1,-13]],[[85434,51659],[32,-86],[-21,-82],[15,-46],[40,-2],[10,-17],[7,-21],[4,-28],[-10,-23],[-23,-20],[-26,29],[-7,28],[-5,10],[-35,-21],[-10,-2],[-6,39],[8,55],[-24,25],[-23,57],[-1,24],[9,39],[-1,32],[13,3],[23,-43],[11,40],[9,17],[11,-7]],[[85597,50886],[-17,-23],[-8,-7],[-41,16],[-48,-3],[-50,-22],[-29,18],[-18,30],[1,32],[17,78],[37,60],[16,10],[26,-16],[45,-45],[36,-54],[32,-41],[1,-33]],[[87429,48555],[-2,-22],[-1,-41],[5,-38],[-12,-39],[11,-57],[2,-29],[-1,-41],[-3,-18],[-8,-54],[-9,-19],[-6,-5],[-7,-16],[-54,18],[-24,37],[-21,40],[-4,17],[-25,46],[-6,16],[0,25],[20,7],[21,-1],[-1,22],[13,80],[-33,51],[-6,21],[12,15],[26,-18],[32,89],[10,19],[4,50],[18,6],[13,-6],[8,-31],[3,-27],[-3,-24],[15,-13],[13,-60]],[[87370,48132],[-4,-41],[-5,-45],[-25,-51],[-16,-78],[-9,-19],[-34,-35],[-30,43],[-9,37],[13,172],[13,-6],[9,1],[2,12],[-19,19],[-4,98],[1,38],[15,8],[18,-29],[24,-52],[27,-40],[33,-32]],[[86923,48443],[-22,-50],[21,117],[4,59],[20,36],[29,179],[7,-5],[10,-17],[-15,-131],[-41,-92],[-13,-96]],[[86890,48472],[-17,-55],[-11,19],[-7,1],[-4,32],[4,68],[-14,76],[19,-1],[5,-23],[6,-8],[18,-73],[1,-36]],[[85755,49800],[0,-25],[-2,-8],[-15,9],[-11,-1],[-10,44],[3,10],[20,-12],[7,-5],[8,-12]],[[85711,49777],[-48,-30],[11,56],[6,15],[24,-15],[7,-26]],[[85631,49726],[-7,-21],[-16,-14],[-14,1],[5,21],[-4,11],[-10,-5],[-16,-16],[-20,-33],[-13,16],[-2,26],[1,11],[24,45],[29,8],[40,43],[18,-2],[-4,-27],[-6,-20],[-4,-20],[-1,-24]],[[84216,49221],[6,-124],[-2,-32],[-15,47],[-6,10],[-4,-10],[-6,-5],[-8,0],[-10,-48],[-1,-45],[-8,-30],[-4,-101],[3,-28],[12,14],[7,3],[27,-39],[15,-28],[-4,-34],[-19,-35],[-21,-15],[-16,15],[-5,-7],[-9,-18],[-8,-24],[3,-24],[-19,-68],[-10,-19],[-22,21],[-14,-18],[-11,1],[-16,69],[0,32],[15,36],[1,26],[7,29],[17,40],[10,29],[0,19],[8,72],[2,30],[5,32],[8,66],[1,122],[26,101],[25,28],[11,5],[-2,-27],[31,-68]],[[84067,48807],[-7,-38],[-15,-30],[-13,-2],[-12,6],[-23,26],[-6,-27],[-18,1],[-6,35],[12,105],[19,39],[-2,41],[-15,88],[10,46],[43,34],[37,42],[12,9],[11,-32],[5,-149],[-40,-118],[8,-76]],[[83900,48710],[-18,-15],[-33,66],[-14,54],[3,31],[10,26],[5,7],[-2,28],[13,14],[15,-2],[9,-38],[11,-10],[6,-36],[-5,-125]],[[84233,49473],[-27,-69],[-19,4],[-23,45],[-6,50],[-1,18],[16,28],[52,-9],[9,-25],[-1,-42]],[[85014,50431],[-4,-11],[-17,31],[-11,88],[-10,24],[-11,83],[3,24],[14,35],[11,0],[8,-21],[-5,-90],[25,-114],[-3,-49]],[[85006,50812],[85,-19],[-12,-21],[-92,-33],[-33,6],[-100,-20],[-12,1],[-2,32],[-11,23],[16,20],[21,4],[55,-7],[85,14]],[[84713,50860],[26,-20],[9,0],[9,24],[5,4],[12,-12],[2,-39],[17,6],[13,-14],[4,-9],[-1,-39],[-50,-6],[-36,-32],[-48,28],[-54,-48],[-33,-16],[-28,1],[-25,84],[14,99],[11,16],[18,8],[50,5],[85,-40]],[[84401,50716],[5,-23],[-17,1],[-7,43],[1,24],[18,-45]],[[84225,51168],[6,-36],[-10,-31],[11,-59],[28,78],[27,10],[15,-13],[10,-15],[6,-30],[-10,-63],[-18,-30],[-22,-5],[-11,37],[-15,4],[-10,-81],[-5,-12],[-13,-10],[-12,22],[-2,12],[17,37],[-9,108],[-13,-20],[-34,-99],[-26,-44],[-8,23],[-14,67],[6,86],[21,58],[18,-4],[52,18],[15,-8]],[[84208,50796],[-20,-47],[-2,25],[4,23],[5,16],[9,9],[4,-26]],[[83850,51608],[12,-25],[-7,-30],[-9,7],[-26,0],[-9,-2],[-12,-18],[-7,0],[5,27],[21,41],[14,-6],[18,6]],[[85226,54166],[-11,-12],[-18,4],[-2,30],[18,52],[12,56],[-13,14],[-12,35],[-1,41],[11,76],[15,-6],[14,-33],[6,-62],[10,-47],[-20,-64],[-9,-84]],[[85199,54075],[1,-25],[-17,56],[-7,65],[14,-23],[15,-49],[-6,-24]],[[85236,54013],[-5,-6],[-10,15],[-6,17],[1,17],[7,9],[14,-26],[0,-15],[-1,-11]],[[84904,53822],[-7,-18],[-34,32],[2,51],[-4,25],[-9,27],[-4,26],[4,28],[20,-36],[12,-57],[16,-55],[4,-23]],[[84835,53370],[-3,-13],[-11,68],[9,34],[12,-13],[3,-12],[-11,-32],[1,-32]],[[83479,48215],[-11,-96],[-6,33],[-2,88],[-7,43],[5,49],[-1,126],[8,58],[16,-74],[4,-38],[-6,-189]],[[86661,47694],[-4,-28],[-12,15],[-11,33],[-17,5],[-13,8],[-7,16],[47,7],[17,-56]],[[86350,47051],[-24,-18],[16,45],[52,104],[18,-19],[25,-4],[-37,-47],[-38,-19],[-12,-42]],[[86478,47235],[-4,-7],[-35,8],[-19,0],[2,43],[-10,33],[14,48],[0,56],[15,7],[2,32],[17,84],[10,19],[15,7],[17,49],[10,15],[10,37],[15,17],[-2,32],[9,17],[23,13],[16,-15],[10,-33],[-26,-40],[13,-99],[-19,-108],[-12,-33],[-23,-27],[-6,-27],[-27,-53],[-8,-46],[-2,-19],[-5,-10]],[[86065,47261],[-16,-53],[-18,3],[-34,71],[2,50],[3,16],[13,5],[43,-15],[9,-40],[-2,-37]],[[85741,47705],[-13,-15],[-20,30],[-6,13],[13,29],[14,9],[9,-13],[4,-13],[-2,-14],[1,-26]],[[85506,47177],[48,-23],[28,3],[6,-21],[-27,-49],[-56,38],[-10,40],[11,12]],[[85393,47451],[-17,-13],[5,43],[-1,34],[29,-11],[0,-27],[-3,-10],[-13,-16]],[[85222,47426],[3,-28],[0,-13],[-33,-9],[-32,-31],[-17,-36],[-13,-46],[-44,19],[-39,3],[-18,16],[-19,-1],[-24,-14],[-35,-40],[-8,-3],[3,60],[10,37],[36,88],[31,-19],[36,-6],[40,18],[29,39],[40,21],[33,-52],[21,-3]],[[84901,47154],[-19,-99],[-20,21],[22,55],[10,17],[7,6]],[[84281,45908],[-25,-20],[0,42],[20,54],[17,18],[10,-22],[1,-9],[-26,-20],[3,-43]],[[84152,45559],[-26,-1],[-8,6],[-3,51],[8,28],[60,37],[23,34],[34,70],[20,18],[5,8],[4,-1],[3,-54],[9,-31],[1,-17],[-30,-27],[-26,-62],[-59,-41],[-15,-18]],[[83856,45742],[-14,-7],[-30,17],[-6,10],[25,28],[20,39],[23,4],[14,-8],[-5,-47],[-27,-36]],[[84603,47153],[7,-35],[22,20],[21,4],[47,-3],[35,-8],[21,-15],[2,-70],[-10,-15],[-181,-53],[-18,17],[-7,17],[20,52],[-9,25],[10,40],[22,27],[18,-3]],[[84523,47045],[-17,-36],[-11,-62],[-11,-19],[-22,-11],[-14,62],[-24,-3],[12,54],[11,21],[16,0],[7,-22],[4,-4],[36,92],[7,1],[6,-4],[5,-11],[-5,-58]],[[84423,47077],[-39,-15],[-24,-72],[-19,1],[-11,-32],[-2,-14],[1,-12],[-2,-13],[-8,-12],[-17,20],[-16,-25],[-6,-7],[-23,30],[-21,-2],[-6,5],[26,52],[36,50],[6,18],[-14,5],[-8,7],[-2,12],[23,7],[16,2],[12,-16],[8,1],[48,58],[20,-14],[14,-14],[8,-20]],[[84254,47030],[-6,-25],[-75,2],[2,33],[21,36],[7,12],[23,11],[33,-20],[-5,-49]],[[83184,46808],[-11,-6],[-11,8],[4,52],[-6,34],[11,28],[3,48],[5,15],[6,-15],[4,-10],[5,-5],[13,-1],[3,-21],[-1,-19],[-5,-21],[-15,-23],[-11,-25],[6,-39]],[[83075,47097],[-12,-1],[-2,23],[4,24],[12,11],[5,0],[8,-22],[2,-11],[-8,-15],[-9,-9]],[[82113,46791],[-8,-20],[-22,35],[-6,16],[17,23],[6,3],[14,-24],[-1,-33]],[[82048,47827],[-22,-10],[-21,21],[0,27],[5,25],[32,13],[17,0],[18,-18],[12,-18],[6,-21],[-34,-1],[-13,-18]],[[81310,48495],[-6,-20],[-26,1],[-5,24],[17,41],[12,3],[10,-15],[-2,-34]],[[82756,54178],[-52,-29],[-31,68],[11,47],[-1,27],[13,7],[15,-6],[34,-38],[9,-55],[2,-21]],[[82682,53732],[-3,-19],[-24,47],[-7,33],[3,27],[25,2],[12,-17],[-6,-73]],[[82339,49847],[-10,-99],[-17,56],[19,67],[9,13],[-1,-37]],[[82306,49614],[-59,-107],[-9,28],[5,109],[-17,67],[2,51],[11,89],[15,68],[34,46],[8,5],[-2,-83],[7,-31],[2,-27],[-3,-23],[6,-105],[4,-26],[-8,-33],[4,-28]],[[80264,50910],[-32,-25],[-10,55],[21,16],[22,-14],[-1,-32]],[[80474,51163],[-55,-59],[-13,3],[-10,21],[6,113],[7,34],[39,4],[23,-17],[12,-18],[5,-38],[-2,-23],[-12,-20]],[[80246,53516],[-14,-30],[-14,19],[22,61],[5,4],[1,-54]],[[80087,53968],[-38,-21],[-22,30],[24,36],[8,3],[6,7],[2,15],[-43,24],[-12,21],[-12,54],[0,34],[55,91],[13,10],[2,-38],[38,-95],[2,-64],[-1,-23],[-22,-84]],[[79523,53661],[-1,-39],[-19,23],[-4,44],[7,14],[13,-8],[4,-34]],[[79377,53492],[-12,-2],[-3,17],[1,29],[-2,24],[-3,17],[0,30],[11,-15],[8,-14],[10,-10],[7,-6],[4,-5],[-7,-42],[-14,-23]],[[78251,53040],[16,-47],[3,-31],[-11,-35],[-4,-54],[-33,-42],[-28,10],[-9,15],[-18,82],[2,69],[11,27],[26,-4],[27,38],[18,-28]],[[78451,52413],[-13,-18],[-15,28],[-13,39],[-6,41],[-6,68],[-2,48],[8,28],[5,-1],[23,-28],[15,-49],[9,-15],[1,-45],[-5,-52],[-1,-44]],[[78469,52683],[2,-74],[-20,20],[-17,29],[-25,22],[-32,7],[-23,19],[-16,34],[0,16],[1,13],[5,10],[119,-67],[6,-29]],[[78618,52273],[-5,-22],[-11,16],[-54,25],[-18,2],[-47,28],[-14,14],[-10,19],[3,35],[7,21],[4,59],[12,24],[23,-44],[26,-38],[15,-17],[46,-38],[16,-19],[7,-65]],[[78657,52344],[-9,-17],[-14,4],[-14,20],[-20,35],[-21,31],[-28,20],[-17,5],[-6,8],[6,60],[18,4],[58,-56],[19,-31],[28,-83]],[[78689,52155],[-31,-4],[-9,8],[4,54],[9,33],[14,-1],[16,-49],[-3,-41]],[[78728,52447],[2,-32],[-19,8],[-13,37],[11,26],[7,10],[7,-36],[5,-13]],[[78735,52225],[-5,-7],[-24,73],[6,42],[6,11],[13,-26],[10,-27],[8,-32],[-14,-34]],[[78840,52304],[2,-17],[-25,34],[-1,24],[3,11],[15,-26],[6,-26]],[[78895,52523],[18,-25],[14,16],[-1,-21],[-3,-21],[-17,-59],[-28,13],[-7,19],[-2,15],[4,9],[3,29],[12,0],[7,25]],[[79051,52543],[1,-43],[16,-21],[4,-32],[-3,-51],[-14,-59],[-7,-15],[-20,12],[-6,19],[-3,16],[3,11],[-15,14],[10,22],[-7,32],[-40,-20],[-12,-1],[-2,36],[2,15],[31,45],[18,9],[20,-10],[24,21]],[[78955,52323],[-18,-17],[-22,53],[1,12],[2,9],[4,6],[13,-27],[16,-10],[4,-26]],[[79080,51877],[2,-14],[-13,16],[-8,10],[-5,8],[-29,79],[12,-5],[32,-69],[9,-25]],[[79104,51741],[8,-9],[10,30],[19,-41],[11,-21],[15,-20],[-15,-1],[-6,-19],[-4,-4],[-59,66],[-38,-21],[-25,19],[-8,14],[14,36],[13,83],[26,-21],[6,-26],[-2,-7],[17,-16],[18,-42]],[[79020,51650],[26,-56],[6,-20],[-13,-31],[-10,-44],[-6,-9],[-20,16],[-14,-43],[-9,69],[-20,44],[12,44],[5,4],[6,-2],[6,-11],[31,39]],[[78815,51642],[-36,-20],[-41,15],[5,34],[20,41],[17,-2],[31,-27],[12,-23],[-8,-18]],[[80057,50116],[-5,-61],[-6,-23],[-24,-30],[-7,-18],[-22,3],[-3,32],[-7,21],[-23,25],[-6,-6],[-4,-37],[-45,-26],[-13,-2],[6,49],[-11,38],[-1,47],[-2,21],[-6,12],[11,32],[-1,37],[12,39],[7,95],[47,21],[10,-17],[56,-21],[39,-58],[21,-77],[-23,-96]],[[79853,50172],[-11,-14],[-7,14],[-2,16],[5,20],[15,2],[7,-6],[-7,-32]],[[79690,50111],[-5,-11],[-15,6],[-11,16],[-7,15],[-2,16],[15,20],[32,-20],[-7,-42]],[[79236,48018],[-17,-13],[-13,11],[-6,16],[19,40],[10,10],[9,3],[5,-22],[-7,-45]],[[77077,52687],[61,-162],[24,-22],[33,-74],[8,-25],[-9,-52],[-7,-147],[-15,-37],[-38,18],[-1,26],[-22,111],[-39,62],[-16,3],[-10,63],[-20,76],[-60,137],[46,-1],[22,33],[5,27],[4,7],[34,-43]],[[78435,48687],[-23,-3],[-42,71],[-7,22],[12,21],[13,-2],[48,-45],[9,-22],[-10,-42]],[[77895,50009],[11,-84],[-33,58],[1,40],[-5,26],[-20,33],[-15,40],[-7,96],[5,20],[13,1],[58,-126],[4,-21],[-1,-45],[-8,-14],[-3,-24]],[[77834,50264],[-20,-47],[-33,1],[-6,29],[1,70],[-8,22],[0,9],[6,40],[6,9],[53,-98],[1,-35]],[[77733,50493],[2,-15],[-45,50],[-22,14],[-19,56],[5,26],[1,37],[3,15],[14,5],[18,-27],[13,-66],[23,-61],[7,-34]],[[77545,50818],[-26,-3],[-55,69],[-13,31],[-3,42],[-52,159],[-7,37],[20,131],[54,31],[18,-22],[6,-59],[30,-106],[10,-57],[8,-26],[3,-19],[-2,-14],[22,-68],[15,-39],[2,-64],[-30,-23]],[[77349,51537],[-17,-27],[-25,26],[9,37],[4,51],[15,41],[5,47],[-29,130],[14,5],[12,-14],[19,-87],[17,-52],[-7,-70],[-17,-87]],[[77037,53038],[-2,-13],[-29,61],[-32,34],[13,8],[27,-9],[11,-9],[10,-30],[2,-42]],[[76795,53202],[-18,-5],[-16,12],[-14,33],[-75,96],[-23,1],[-16,25],[-20,8],[-21,64],[-5,35],[16,16],[9,35],[25,-15],[28,-62],[29,-23],[8,-12],[14,-34],[66,-85],[7,-28],[5,-29],[1,-32]],[[76489,55191],[-6,-16],[-16,8],[-18,52],[6,10],[12,-5],[21,-12],[2,-20],[-1,-17]],[[80941,53234],[-9,-8],[-13,21],[-3,175],[9,15],[6,-2],[7,-32],[-1,-76],[1,-68],[3,-25]],[[82539,55972],[-17,-31],[-6,37],[1,47],[23,44],[33,8],[4,-35],[-4,-40],[-7,-21],[-27,-9]],[[58892,78458],[38,-29],[-39,8],[-86,27],[-38,25],[-10,28],[-5,38],[21,-40],[15,-18],[104,-39]],[[56367,85729],[-23,-28],[-13,11],[-7,14],[-30,-65],[-33,-11],[-19,13],[2,24],[-19,63],[-29,19],[-40,1],[-30,26],[113,18],[12,30],[23,32],[17,3],[15,-7],[2,-25],[4,-10],[51,-13],[20,-41],[8,-50],[-24,-4]],[[56484,85570],[-23,-6],[-55,41],[13,27],[15,11],[47,-17],[6,-42],[-3,-14]],[[59948,89390],[9,-23],[3,-37],[-9,-24],[5,-20],[-18,-14],[-27,46],[-17,1],[-17,20],[-8,33],[15,9],[7,-6],[33,24],[24,-9]],[[61864,90265],[-10,-8],[-55,27],[-5,21],[2,8],[22,6],[23,-7],[17,-27],[6,-20]],[[57465,97147],[-41,-1],[-75,42],[-14,37],[13,15],[36,1],[57,-51],[61,-15],[-37,-28]],[[58068,97299],[83,-4],[83,9],[14,-9],[-107,-31],[-119,16],[-107,4],[-127,-33],[-42,13],[65,33],[70,10],[11,20],[27,4],[93,2],[56,-34]],[[63903,97968],[-23,-8],[-106,44],[-9,13],[91,41],[102,-6],[16,-20],[3,-7],[-69,-36],[-5,-21]],[[64280,97893],[7,-7],[-1,-6],[-99,6],[-173,-4],[-100,32],[106,32],[56,7],[72,27],[89,-26],[-5,-23],[1,-11],[24,-10],[23,-17]],[[59034,97994],[-263,-22],[-27,16],[427,63],[22,6],[80,8],[68,-14],[-20,-11],[-287,-46]],[[66058,98816],[14,-23],[43,-13],[117,-11],[35,-26],[-53,-19],[-143,-10],[15,-38],[29,-28],[-29,-33],[-40,-16],[-88,-19],[-81,24],[-94,35],[-42,-23],[-44,-14],[-41,2],[-48,27],[-132,-21],[-40,23],[-29,48],[87,10],[104,-15],[69,48],[88,21],[70,51],[33,17],[76,-3],[25,4],[73,13],[26,-11]],[[65199,98568],[209,-55],[194,5],[84,-17],[122,-50],[182,-53],[35,-16],[-31,-21],[-213,-53],[-138,-18],[-120,-3],[-48,6],[-48,38],[-117,28],[-125,-8],[-13,15],[-25,11],[-43,2],[-86,15],[-6,34],[54,17],[35,1],[14,48],[60,73],[24,1]],[[64098,98529],[-39,-4],[-27,3],[-29,22],[-10,11],[-2,11],[26,2],[12,11],[4,8],[20,6],[34,1],[45,-12],[19,-24],[-44,-21],[-9,-14]],[[66283,98526],[39,-30],[15,-33],[24,-20],[8,-38],[-20,-31],[-60,-6],[-99,-2],[-97,16],[-52,56],[-96,15],[-54,58],[56,17],[68,-8],[109,50],[15,-3],[24,-11],[88,-19],[32,-11]],[[67680,98853],[-34,-8],[-179,7],[-86,14],[-12,8],[-4,7],[-114,12],[49,16],[142,7],[254,-19],[16,-13],[5,-8],[-37,-23]],[[66193,98914],[-92,-12],[-13,9],[-3,6],[10,15],[11,29],[42,17],[313,16],[41,-17],[-15,-26],[0,-12],[-294,-25]],[[55205,98099],[-60,-32],[-100,25],[12,25],[23,15],[64,-6],[61,-27]],[[53125,97125],[3,-40],[45,4],[53,-42],[58,-22],[17,-16],[12,-20],[35,-40],[17,-42],[-42,-4],[-58,60],[-47,34],[-60,29],[-48,2],[-21,12],[-78,105],[-15,24],[-44,39],[-20,48],[0,38],[60,-9],[52,-24],[45,-54],[9,-16],[-21,-22],[21,-27],[27,-17]],[[55338,94695],[-33,-23],[-51,34],[-33,43],[18,16],[89,3],[22,-23],[4,-13],[-16,-37]],[[64761,92881],[14,-16],[4,-32],[-38,-54],[-6,-20],[16,-18],[4,-10],[-27,-8],[-5,25],[-15,24],[-32,19],[-13,16],[-14,38],[-53,40],[-34,-6],[-38,18],[-11,8],[-3,23],[16,19],[60,16],[29,-1],[31,-16],[-2,20],[3,8],[13,-3],[35,-20],[25,-42],[22,-31],[19,3]],[[64761,92881],[-1,0],[2,0],[-1,0]],[[70738,93820],[-6,-5],[-14,10],[-42,15],[-71,39],[-22,27],[11,30],[16,20],[58,12],[53,-5],[35,-7],[66,-27],[-61,-17],[-26,-37],[3,-22],[11,-13],[-11,-20]],[[70973,94156],[-45,-14],[9,26],[54,37],[100,19],[30,-8],[4,-6],[-42,-39],[-21,-13],[-89,-2]],[[71320,94150],[-26,-4],[-118,22],[-43,27],[16,18],[31,0],[140,-63]],[[71564,93485],[-135,-5],[-67,9],[-10,11],[9,28],[69,42],[31,27],[32,46],[56,38],[47,0],[147,-45],[21,-28],[3,-13],[-58,-38],[-41,-14],[-63,-48],[-41,-10]],[[72083,93733],[-20,-6],[-152,23],[-53,30],[-16,27],[6,24],[141,117],[54,-33],[15,-31],[36,-38],[-1,-86],[-10,-27]],[[72974,94522],[-27,-20],[-37,11],[-27,13],[-14,19],[14,10],[40,7],[24,-7],[21,-22],[6,-11]],[[73207,94511],[-14,-14],[-13,2],[-11,-7],[-70,21],[-95,9],[24,22],[68,13],[101,-17],[30,-19],[-20,-10]],[[73543,94734],[-13,-34],[-78,17],[-11,14],[42,21],[38,12],[54,2],[-32,-32]],[[74070,95035],[23,-11],[73,17],[14,-6],[20,-24],[-31,-45],[-23,-18],[-66,10],[-83,1],[-37,25],[20,26],[48,16],[28,15],[14,-6]],[[72825,95287],[10,-19],[4,-21],[-12,-6],[-36,1],[-20,-54],[-20,9],[-13,31],[-45,-21],[-12,5],[-21,24],[-13,5],[-9,16],[59,48],[36,-25],[24,1],[-5,29],[1,22],[30,9],[40,1],[2,-55]],[[76814,95782],[22,-9],[-6,-24],[-29,7],[-38,-12],[1,-20],[-15,-33],[-53,20],[-73,3],[-46,19],[-102,12],[3,27],[16,16],[59,-23],[54,26],[101,-13],[33,19],[73,-15]],[[77107,95967],[-15,-9],[-29,4],[-24,22],[-9,35],[20,9],[57,-61]],[[76745,96213],[-9,-11],[-12,-9],[-33,6],[-65,-16],[-25,9],[-24,18],[-88,-6],[-26,4],[42,22],[120,24],[188,62],[9,-30],[0,-14],[-38,-34],[-39,-25]],[[74864,96306],[-59,-3],[-34,15],[-10,10],[16,26],[23,17],[93,6],[17,-18],[-4,-15],[-42,-38]],[[71180,97725],[34,-21],[26,16],[248,-50],[53,-18],[11,-13],[-217,-8],[-44,3],[-4,29],[-49,1],[-85,19],[-23,27],[-5,11],[27,11],[28,-7]],[[72229,98414],[-258,-21],[-25,13],[-8,8],[36,44],[30,21],[164,8],[131,-14],[41,-13],[-15,-26],[-8,-9],[-88,-11]],[[75435,98583],[-96,-45],[-346,29],[-16,20],[-5,13],[47,25],[288,-9],[103,-9],[25,-24]],[[79915,96849],[-25,-28],[-35,-14],[-38,23],[-95,-1],[-163,25],[47,16],[257,13],[18,-3],[34,-31]],[[79519,96892],[-33,-4],[-36,12],[10,26],[81,4],[30,39],[51,-2],[14,-11],[8,-13],[-1,-17],[-11,0],[-48,-2],[-9,-9],[-56,-23]],[[79837,96337],[-32,0],[-9,27],[27,33],[34,0],[29,-10],[10,-5],[10,-12],[4,-18],[-73,-15]],[[81243,95979],[43,-39],[8,-25],[-13,-6],[-8,-9],[-3,-18],[-12,-1],[-38,19],[-27,31],[-40,7],[-42,31],[-9,13],[11,4],[75,-8],[32,14],[23,-13]],[[83405,93945],[-70,-26],[-60,0],[-42,46],[33,18],[57,7],[31,-6],[44,-29],[7,-10]],[[84594,94383],[-17,-1],[-32,15],[-8,21],[0,10],[26,8],[33,-5],[25,-19],[4,-7],[-31,-22]],[[87763,95281],[-57,-16],[-81,5],[6,42],[14,19],[19,46],[-9,35],[5,42],[10,33],[23,45],[25,-27],[17,-40],[15,-20],[62,-39],[12,-12],[-52,-48],[-5,-21],[16,-27],[-20,-17]],[[91430,96001],[-209,-6],[14,16],[75,40],[191,21],[-38,-20],[-18,-41],[-15,-10]],[[87832,94420],[-21,-17],[-20,25],[-93,76],[-23,35],[-51,34],[-13,12],[-4,30],[67,-19],[113,-75],[62,-60],[-17,-41]],[[88321,93034],[-69,-49],[-27,6],[-28,24],[-15,5],[-15,-4],[-17,-10],[-22,-2],[-51,26],[-5,16],[5,8],[14,8],[10,0],[32,13],[149,5],[11,-3],[21,-23],[7,-20]],[[94643,92639],[-19,-10],[-40,8],[-19,18],[1,42],[2,6],[33,-6],[22,-23],[20,-35]],[[96999,91923],[-79,-5],[-158,54],[-56,28],[-42,36],[-48,25],[-9,10],[7,21],[14,16],[54,43],[38,19],[45,4],[283,-76],[12,-16],[4,-14],[-4,-30],[-24,-6],[-9,-20],[-10,-61],[-5,-16],[-13,-12]],[[95453,85600],[-45,-54],[-7,9],[-4,12],[-1,19],[41,36],[42,91],[16,75],[-5,25],[-2,24],[123,47],[87,75],[16,-3],[15,-63],[9,-81],[-12,-49],[-94,-28],[-88,-54],[-91,-81]],[[96677,83274],[11,-30],[-112,106],[-52,56],[-13,36],[19,0],[23,-34],[32,-16],[48,-46],[44,-72]],[[96291,83432],[-2,-84],[-34,43],[-16,34],[-23,6],[-16,16],[-26,41],[-31,54],[-10,27],[-4,34],[-21,31],[-67,60],[22,7],[28,26],[78,-16],[18,-7],[-13,-40],[5,-44],[43,-92],[21,-32],[28,-25],[20,-39]],[[93445,81023],[-11,-13],[-11,3],[-36,36],[-8,17],[13,30],[45,45],[22,-1],[9,-10],[-1,-53],[-22,-54]],[[93310,80819],[-35,-58],[-52,-14],[-25,-19],[-19,-39],[-14,-21],[-30,12],[-13,19],[0,68],[-13,30],[6,19],[30,-3],[30,44],[69,18],[25,47],[31,117],[33,41],[26,9],[8,-58],[-7,-64],[-15,-62],[-35,-86]],[[92799,79948],[-10,-30],[-12,10],[-2,9],[27,35],[10,41],[20,1],[8,-8],[-6,-20],[-35,-38]],[[93234,81118],[-26,-7],[-11,16],[-8,18],[-5,26],[29,12],[19,-14],[4,-38],[-2,-13]],[[92527,79356],[-13,-33],[-14,4],[-5,9],[18,39],[8,7],[6,-26]],[[92222,78857],[-52,-63],[-17,0],[-9,24],[-2,13],[42,10],[48,84],[35,55],[19,19],[16,-1],[-80,-141]],[[91579,78134],[-41,-29],[-26,1],[61,142],[36,21],[46,84],[97,103],[11,7],[56,-3],[-88,-113],[-11,-45],[-39,-48],[-28,-16],[-20,-23],[-54,-81]],[[91277,77947],[-52,-40],[-42,-18],[-71,-84],[-26,-46],[-36,-19],[-35,11],[-10,-19],[-3,-33],[-13,-29],[-70,-91],[-29,-72],[-30,-13],[-56,-73],[10,63],[11,30],[47,56],[3,60],[26,51],[51,52],[35,67],[28,18],[31,56],[32,20],[-3,43],[14,48],[11,-3],[26,-67],[20,-2],[54,14],[80,116],[26,21],[19,4],[11,-10],[4,-14],[-1,-17],[-6,-25],[10,-29],[-13,-22],[-53,-4]],[[91830,85840],[-22,-7],[-11,16],[-1,11],[34,25],[21,36],[13,-22],[4,-15],[-38,-44]],[[88316,83578],[25,-23],[39,4],[10,-15],[-31,-25],[-22,-51],[-7,-47],[-9,-18],[-25,-23],[-22,-30],[-19,-19],[-17,-6],[-37,99],[-18,28],[-52,-47],[-12,-1],[12,58],[30,63],[15,9],[30,85],[9,19],[93,-50],[8,-10]],[[88104,83582],[-34,-100],[-24,-1],[-18,21],[-39,-8],[-14,5],[23,31],[55,48],[23,-1],[22,10],[6,-5]],[[90753,77041],[-9,-16],[-20,14],[1,32],[2,9],[57,28],[16,-18],[4,-15],[-51,-34]],[[90612,77475],[42,-42],[58,9],[-14,-38],[-22,1],[-39,-55],[-34,-7],[-17,-13],[-55,-82],[-8,-32],[-33,-62],[-50,-55],[-9,-104],[-32,42],[-4,42],[10,35],[57,74],[23,41],[7,34],[22,36],[10,32],[14,14],[48,131],[26,-1]],[[84525,65965],[-16,-91],[-14,-13],[-14,7],[-14,51],[10,19],[14,-10],[11,4],[25,74],[7,-12],[-9,-29]],[[84413,65829],[-18,-8],[-21,10],[-19,2],[0,18],[20,17],[0,25],[5,13],[46,-30],[-2,-22],[-11,-25]],[[84845,66096],[-24,-15],[-25,8],[4,81],[9,-11],[5,-28],[19,-16],[12,-19]],[[85627,67196],[-27,-27],[-10,-31],[-25,-11],[-24,-44],[-23,-9],[0,-35],[10,-30],[-15,-6],[-17,-36],[-1,-27],[6,-22],[-1,-11],[-20,-31],[-22,-2],[-1,35],[2,25],[20,63],[0,73],[19,8],[7,10],[29,52],[6,22],[-16,21],[1,25],[4,11],[24,-8],[10,-19],[5,-2],[14,14],[6,25],[27,50],[11,49],[21,-41],[-6,-52],[-14,-39]],[[85832,67811],[-12,-11],[-15,15],[-5,66],[7,32],[12,7],[11,-57],[7,-24],[-5,-28]],[[85958,68092],[-24,-47],[-25,42],[-31,29],[15,7],[8,11],[1,18],[20,27],[40,20],[12,2],[14,19],[5,17],[6,9],[25,24],[7,-28],[-1,-21],[-19,-12],[-19,-29],[-17,-36],[-16,-15],[-5,-11],[4,-26]],[[85922,68032],[2,-13],[-27,11],[-11,53],[18,-10],[6,-18],[12,-23]],[[86283,69275],[-32,-12],[-17,13],[-16,71],[30,45],[41,-44],[8,-13],[-14,-60]],[[86377,69352],[-24,-6],[-1,34],[19,75],[2,55],[18,70],[8,15],[6,6],[6,-22],[-7,-85],[-18,-65],[-9,-77]],[[85740,70727],[10,-15],[16,9],[13,2],[9,-8],[11,-40],[4,-24],[-20,-3],[-9,-5],[-11,-30],[-16,11],[-10,14],[-2,19],[5,70]],[[86133,70408],[-22,-20],[-3,19],[-9,9],[16,28],[0,12],[-11,19],[12,71],[-3,30],[44,12],[8,-29],[1,-87],[-33,-64]],[[86216,70520],[-24,-3],[-11,7],[-4,18],[35,37],[26,-6],[-11,-34],[-11,-19]],[[87046,72697],[-12,-21],[-24,7],[-14,31],[5,35],[25,27],[23,-54],[-3,-25]],[[88428,73630],[-26,-2],[-7,6],[16,14],[1,24],[10,42],[0,13],[-21,2],[1,48],[16,48],[43,75],[11,14],[2,-33],[-13,-77],[-3,-28],[34,-6],[-22,-93],[-42,-47]],[[88744,76083],[-6,-3],[-7,5],[-6,43],[5,23],[18,16],[17,5],[-14,-80],[-7,-9]],[[89186,77956],[-11,-37],[-14,55],[-3,58],[8,0],[16,-9],[3,-28],[1,-39]],[[89248,77833],[-19,-4],[-23,24],[-3,30],[17,24],[16,-9],[16,-31],[5,-16],[-9,-18]],[[88844,70884],[-5,-6],[-13,19],[-2,17],[2,10],[9,2],[18,-20],[-9,-22]],[[88737,71846],[-3,-27],[-15,6],[-7,18],[1,32],[16,0],[8,-29]],[[87480,71594],[-30,-49],[-26,3],[-13,22],[-4,27],[25,43],[21,60],[19,27],[16,15],[12,-1],[-27,-84],[7,-63]],[[85854,70760],[-7,-6],[-9,52],[-6,18],[10,10],[21,94],[4,-37],[8,-37],[8,-6],[-8,-27],[-12,-10],[-9,-51]],[[85969,70980],[-19,-27],[-15,0],[13,32],[2,15],[11,43],[21,15],[9,2],[-17,-44],[-5,-36]],[[86054,71283],[-20,-24],[-14,19],[7,51],[5,17],[16,-17],[6,-46]],[[85910,71499],[-18,-23],[-8,35],[8,102],[34,-21],[0,-31],[-16,-62]],[[85940,71632],[-6,-28],[-19,19],[-8,18],[17,87],[-2,34],[1,16],[35,45],[6,-8],[2,-13],[-3,-20],[2,-43],[-27,-71],[2,-36]],[[86826,71494],[-8,-23],[-24,7],[10,20],[7,24],[6,5],[4,-26],[5,-7]],[[86740,71396],[13,-21],[32,9],[4,-6],[-9,-19],[-14,-19],[-26,14],[-16,1],[-2,31],[2,12],[16,-2]],[[82890,65968],[12,-38],[-5,-24],[-38,13],[-2,23],[14,-4],[19,30]],[[82828,65953],[-10,-34],[-16,5],[0,25],[-4,7],[5,23],[3,7],[18,-20],[4,-13]],[[85761,71888],[-27,-36],[-35,48],[-8,26],[26,39],[23,44],[15,3],[6,-124]],[[85573,71892],[-3,-56],[-20,-3],[-11,36],[-13,-17],[-6,-1],[-10,45],[-2,36],[23,26],[14,-16],[20,-8],[8,-42]],[[85499,71782],[-3,-18],[-14,27],[14,30],[3,-39]],[[85090,70981],[-13,-13],[-11,8],[-3,6],[-14,33],[-4,17],[10,32],[38,53],[99,51],[18,2],[39,-21],[9,-42],[-7,-35],[-9,-24],[-46,-40],[-35,-19],[-71,-8]],[[85064,71641],[-18,-9],[-10,20],[-7,6],[4,26],[29,51],[6,17],[27,-10],[10,-27],[-13,-42],[-28,-32]],[[85144,73580],[-2,-76],[-15,4],[-10,7],[-5,15],[-10,71],[11,29],[23,-23],[8,-27]],[[83850,69983],[-23,-16],[-72,49],[-51,55],[-31,65],[-4,28],[35,-5],[35,-24],[8,-36],[14,-11],[9,-21],[65,-49],[10,-15],[5,-20]],[[83970,69103],[-4,-12],[-34,33],[-37,7],[-13,29],[-2,46],[39,-2],[48,-41],[11,-21],[-8,-39]],[[83936,68939],[-1,-11],[-24,37],[-11,7],[5,21],[16,5],[13,-47],[2,-12]],[[84000,69062],[-2,-27],[-8,4],[-10,47],[6,12],[14,-3],[0,-33]],[[83283,66507],[-21,-27],[-13,13],[0,36],[7,32],[-8,23],[7,28],[16,8],[5,-17],[9,-10],[3,-9],[0,-18],[-9,-30],[7,-16],[-3,-13]],[[80662,63993],[10,-20],[28,14],[5,-25],[-1,-12],[-9,-29],[-23,22],[-23,-5],[-16,2],[-5,14],[13,28],[21,11]],[[79889,64064],[-40,-72],[-15,1],[13,82],[7,19],[24,-28],[11,-2]],[[79866,63897],[-15,-15],[-19,2],[22,28],[12,35],[9,12],[-1,-30],[-8,-32]],[[79730,63794],[-11,-3],[-22,47],[11,25],[26,-18],[5,-11],[0,-10],[-6,-22],[-3,-8]],[[79684,63833],[-3,-11],[-14,27],[-10,12],[8,37],[16,-40],[3,-25]],[[79615,56844],[-8,-1],[-6,12],[26,37],[-3,-25],[1,-12],[-10,-11]],[[78906,57828],[5,-29],[-2,-66],[-11,-66],[4,-29],[-9,-18],[-18,123],[-24,53],[-5,21],[14,-2],[24,34],[12,1],[10,-22]],[[78623,58343],[-5,-5],[-5,0],[-5,8],[1,34],[3,20],[9,4],[2,-61]],[[78501,58569],[-5,-60],[-15,24],[3,31],[7,13],[10,-8]],[[78451,58749],[1,-14],[-14,10],[-5,-5],[-17,4],[-8,80],[2,19],[11,-6],[17,-40],[8,-27],[5,-21]],[[78880,52610],[-42,-38],[-47,34],[15,57],[32,13],[25,-18],[14,-13],[10,-16],[-7,-19]],[[78950,53416],[-14,-6],[-7,4],[-5,23],[11,51],[4,9],[11,-56],[0,-25]],[[77857,54893],[-7,-16],[-20,9],[4,94],[11,12],[18,-17],[8,-16],[-14,-66]],[[77735,55567],[19,-62],[-9,-27],[-5,-8],[-12,9],[-11,-24],[-11,-4],[-11,42],[-13,17],[-3,30],[18,5],[10,-10],[20,20],[8,12]],[[77683,55599],[-5,-3],[-10,47],[13,67],[13,-82],[-11,-29]],[[77798,57428],[-3,-9],[-11,18],[-8,21],[-4,26],[17,-1],[8,-25],[1,-30]],[[77797,57365],[1,-33],[-6,-39],[-25,-23],[-9,31],[2,49],[4,12],[25,-3],[8,6]],[[77386,56413],[-3,-10],[-14,110],[20,-29],[-3,-71]],[[77335,56395],[-3,-43],[-11,1],[-12,-27],[-5,-4],[-10,86],[11,121],[6,18],[8,-32],[23,-15],[-10,-69],[3,-36]],[[77307,57057],[-16,-7],[2,32],[4,20],[8,5],[3,-34],[-1,-16]],[[76080,55778],[-17,-48],[-33,145],[-15,9],[0,69],[8,28],[38,30],[10,-17],[20,-134],[-11,-82]],[[76036,56080],[-26,-54],[-12,33],[5,22],[11,13],[11,17],[11,-31]],[[75872,56595],[8,-22],[-15,4],[-15,32],[4,31],[6,12],[12,-57]],[[75956,56381],[-22,-1],[-6,24],[-9,26],[6,25],[12,6],[16,-40],[4,-28],[-1,-12]],[[75982,56484],[-13,-22],[-4,3],[-1,16],[-1,12],[-2,20],[-2,37],[11,30],[10,-6],[-5,-31],[7,-59]],[[75774,57106],[-13,-4],[-7,20],[-1,23],[7,15],[6,7],[7,-1],[7,-39],[-6,-21]],[[75694,57923],[-8,-20],[-29,15],[3,60],[-7,58],[5,24],[21,42],[18,18],[12,-56],[5,-55],[-20,-86]],[[75747,58399],[-13,-12],[-14,15],[11,23],[2,47],[13,-26],[0,-30],[1,-17]],[[75837,58776],[13,-79],[-22,35],[-8,24],[11,17],[6,3]],[[75754,59253],[-9,-37],[-1,80],[4,10],[4,3],[6,-8],[-4,-48]],[[75756,58488],[-7,-14],[-9,15],[-25,104],[-5,66],[-7,23],[9,33],[12,11],[6,37],[3,57],[10,46],[5,13],[20,0],[6,6],[-3,44],[-12,20],[-4,12],[0,106],[3,43],[8,30],[-6,64],[4,24],[15,33],[7,72],[-6,21],[14,110],[-1,73],[19,74],[29,33],[9,1],[1,-62],[3,-21],[-17,-37],[16,-49],[-2,-17],[-6,-39],[-11,-37],[-15,-16],[-11,-50],[-7,-19],[22,-53],[7,-180],[-16,-49],[-19,-10],[4,-120],[-3,-26],[-19,-59],[-4,-26],[-11,-24],[5,-30],[9,-13],[0,-25],[-8,-64],[-1,-72],[-11,-59]],[[77372,58157],[-6,-1],[-6,2],[-6,9],[14,62],[4,-72]],[[77280,58152],[23,-100],[-3,-15],[-3,-8],[-6,3],[-9,54],[-17,34],[-21,-6],[17,44],[7,10],[12,-16]],[[77272,57565],[-13,-34],[-5,2],[6,55],[23,41],[19,4],[-2,-26],[-14,-31],[-14,-11]],[[77283,58455],[-1,-13],[-2,0],[-7,9],[4,55],[11,44],[11,66],[6,14],[2,-35],[-7,-74],[-5,-40],[-12,-26]],[[77365,58700],[-12,-3],[-5,93],[3,14],[16,-46],[24,-28],[-9,-18],[-17,-12]],[[77242,58578],[3,-32],[-18,34],[-3,95],[14,-60],[6,-14],[-2,-23]],[[77375,58608],[-7,-119],[-17,17],[-9,0],[-10,67],[0,18],[-6,44],[41,8],[8,-35]],[[77259,58842],[-3,-3],[-4,1],[-10,10],[-10,39],[5,27],[4,7],[10,-2],[4,-5],[2,-10],[-3,-22],[1,-19],[4,-23]],[[77240,58980],[-2,-21],[-16,-43],[-14,25],[-4,13],[15,28],[15,-4],[4,6],[2,-4]],[[77336,59100],[7,-16],[9,0],[-3,-56],[-22,-69],[-13,-10],[-5,0],[5,101],[-9,57],[3,39],[24,-18],[4,-28]],[[77309,59388],[-2,-95],[-14,46],[-2,52],[1,49],[3,8],[1,-8],[8,-22],[5,-30]],[[77103,61205],[-10,-7],[-16,37],[-3,90],[13,20],[7,5],[11,-11],[3,-14],[2,-18],[-3,-19],[-4,-83]],[[77521,56216],[7,-70],[-10,15],[-8,30],[0,44],[2,7],[9,-26]],[[76334,60955],[-6,-15],[-11,11],[-3,6],[26,64],[3,-24],[-9,-42]],[[76243,61028],[-18,-56],[-7,84],[30,47],[14,44],[15,31],[5,-37],[-14,-71],[-25,-42]],[[76024,62605],[-4,-5],[-29,49],[-23,62],[36,12],[35,-13],[1,-33],[-8,-53],[-8,-19]],[[75969,63301],[6,-79],[-19,30],[-7,41],[-2,42],[22,-34]],[[75835,63320],[4,-55],[-13,22],[-18,76],[1,50],[12,-23],[14,-70]],[[76031,63109],[32,-48],[13,3],[19,-30],[1,-12],[-4,-24],[-9,-19],[-24,-20],[-16,16],[-7,52],[-19,25],[-6,20],[13,29],[7,8]],[[75520,64419],[-10,-47],[-5,34],[4,43],[4,24],[3,0],[6,-25],[-2,-29]],[[75541,64232],[-17,-3],[-8,17],[4,24],[-5,78],[14,8],[7,-1],[5,-22],[3,-42],[-3,-59]],[[75319,64616],[-30,-40],[10,239],[22,-89],[6,-48],[-8,-62]],[[75432,64736],[-13,-17],[-12,14],[-16,56],[8,71],[5,11],[7,-23],[11,-50],[7,-38],[3,-24]],[[75178,65070],[4,-25],[-15,15],[-12,17],[-7,23],[12,12],[18,-42]],[[75215,64567],[-48,-20],[-25,6],[46,151],[-1,68],[-7,55],[-24,44],[-1,32],[-11,43],[-5,51],[26,16],[21,-29],[3,-16],[4,-42],[11,-43],[36,-88],[0,-55],[-10,-132],[-15,-41]],[[72213,57390],[-17,-6],[-14,38],[-3,17],[3,11],[4,6],[5,-2],[6,-36],[16,-28]],[[72187,57056],[8,-43],[-23,29],[-15,25],[-6,20],[32,-22],[4,-9]],[[47512,92649],[-25,-4],[-15,13],[37,35],[124,66],[49,63],[95,22],[6,-35],[-6,-44],[-84,-35],[-92,-23],[-89,-58]],[[6783,62794],[-12,-27],[-16,2],[-55,59],[-7,32],[4,148],[-21,120],[-23,91],[17,47],[22,37],[25,69],[-21,88],[6,53],[11,9],[59,-65],[117,-97],[31,-68],[6,-74],[21,-9],[11,-50],[30,-44],[11,-26],[-13,-40],[-56,-78],[-72,-34],[-62,-87],[-13,-56]],[[6329,64063],[59,-15],[14,6],[10,-12],[48,-8],[9,-5],[-10,-30],[-31,-27],[-45,24],[-75,8],[3,23],[7,16],[1,29],[10,-9]],[[6531,63901],[8,-11],[29,16],[22,5],[35,-38],[13,-26],[23,-27],[8,-21],[-6,-24],[-26,-40],[-36,-10],[-20,-17],[-28,4],[-8,7],[-3,51],[-9,55],[-17,-7],[-20,19],[-21,46],[-2,27],[11,44],[20,5],[15,-24],[12,-34]],[[5505,64424],[-5,-26],[-10,4],[-2,23],[6,31],[16,27],[18,41],[14,-6],[-8,-27],[-1,-29],[-20,-16],[-8,-22]],[[6167,64202],[9,-3],[13,4],[4,-46],[14,-25],[5,-15],[-15,-16],[-30,-7],[-14,13],[-15,29],[-15,-8],[-3,23],[-3,6],[-11,-6],[10,-30],[-27,-2],[-9,4],[-7,34],[-28,64],[0,25],[-10,31],[42,8],[28,53],[16,5],[31,-85],[0,-24],[6,-23],[9,-9]],[[5730,64476],[-25,-32],[-14,14],[-27,5],[-10,25],[-29,22],[-11,30],[17,56],[41,48],[63,-2],[14,-38],[1,-28],[-8,-31],[-4,-45],[-8,-24]],[[6431,63808],[-17,-16],[-18,8],[-4,39],[-17,50],[30,10],[17,-14],[9,-16],[11,-27],[-11,-34]],[[99847,81435],[-49,0],[-97,94],[-50,29],[-28,33],[13,7],[60,-23],[49,-51],[27,-33],[31,-28],[34,-12],[10,-16]],[[99923,81742],[-23,-14],[-26,7],[-15,23],[2,27],[34,29],[43,-37],[-15,-35]],[[99281,81729],[-24,-24],[-19,24],[-3,12],[36,42],[28,9],[11,15],[12,53],[20,2],[10,-6],[-5,-25],[-16,-38],[0,-27],[-50,-37]],[[98255,82004],[-18,-2],[-11,20],[-60,8],[6,19],[26,8],[39,30],[33,-5],[-9,-28],[-6,-50]],[[98002,82380],[48,-19],[33,9],[41,-30],[52,-53],[-12,-10],[-13,-5],[-12,0],[-40,-8],[-22,2],[-40,-36],[-45,26],[-15,51],[-35,12],[-28,18],[51,40],[37,3]],[[2016,86668],[60,-38],[39,4],[30,-31],[13,-26],[-46,19],[-66,-2],[-90,77],[-32,18],[7,43],[35,22],[17,-58],[33,-28]],[[2733,84783],[-29,-28],[-26,10],[-7,20],[-1,9],[75,22],[-12,-33]],[[5464,83719],[-4,-45],[-38,29],[-10,14],[7,11],[36,2],[9,-11]],[[5365,83706],[4,0],[9,4],[18,33],[6,1],[0,-10],[-8,-32],[14,-43],[13,-21],[-1,-7],[-34,-15],[-25,11],[-14,-4],[-12,-15],[-9,17],[-6,79],[2,14],[14,27],[18,13],[8,-4],[7,-11],[1,-11],[-5,-26]],[[4917,83436],[-6,-2],[-20,17],[-7,14],[-5,20],[39,30],[8,0],[8,-16],[1,-14],[-11,-37],[-7,-12]],[[4846,83180],[-24,-13],[-26,13],[-22,25],[-2,28],[49,-18],[10,-9],[15,-26]],[[5733,83509],[-9,-3],[-8,6],[-10,33],[-1,13],[20,-10],[7,-24],[1,-15]],[[5591,83599],[-17,-13],[-5,-16],[-13,-7],[-11,-13],[-37,-59],[-16,-11],[18,51],[3,16],[0,10],[-5,38],[10,-1],[9,8],[18,34],[16,3],[17,40],[9,3],[4,-6],[-7,-24],[16,-22],[-4,-22],[-5,-9]],[[5690,83612],[-1,-46],[-4,-7],[-8,12],[-15,-13],[-9,10],[4,16],[-1,12],[11,1],[3,23],[-2,9],[6,21],[8,5],[8,-43]],[[2863,82285],[-4,-24],[-4,-8],[-43,12],[-29,-4],[-3,14],[3,12],[45,18],[18,1],[12,-10],[5,-11]],[[2574,82131],[-18,-18],[-5,7],[-3,23],[10,17],[30,38],[21,-7],[6,-10],[0,-14],[-8,-19],[-10,-10],[-12,0],[-11,-7]],[[3933,82989],[-11,-10],[-8,-2],[-7,6],[-28,-7],[-6,4],[-13,34],[-1,18],[5,14],[13,13],[21,11],[21,-2],[35,-32],[17,-18],[3,-12],[-12,-11],[-29,-6]],[[4011,83027],[-12,-4],[-3,6],[-2,25],[-9,40],[18,15],[11,3],[4,-6],[13,-30],[13,-8],[9,-6],[-16,-9],[-26,-26]],[[3343,82571],[-85,-61],[-28,-45],[-21,-44],[-16,-24],[-12,-4],[-14,-11],[-28,-31],[-12,-3],[-90,-71],[-6,-1],[4,18],[28,26],[18,24],[20,40],[11,14],[4,20],[1,40],[5,15],[20,30],[14,17],[18,6],[38,-5],[16,15],[4,11],[-9,11],[-2,18],[2,32],[11,28],[19,25],[27,19],[33,13],[24,1],[44,-29],[7,-13],[-11,-29],[-6,-27],[-28,-25]],[[3718,82891],[12,-27],[21,17],[15,24],[12,31],[7,12],[11,-16],[29,-22],[-25,-34],[-47,-51],[-16,-34],[-1,-15],[46,12],[13,-2],[8,-12],[-13,-13],[-25,-13],[-21,-24],[-50,-42],[-19,-35],[-23,-14],[-30,-3],[-54,-23],[-32,-21],[-8,-12],[-11,-5],[-12,1],[-13,-10],[-14,-19],[-12,-9],[-19,-2],[-11,-8],[-11,0],[-31,23],[-8,14],[28,27],[20,9],[30,4],[29,25],[61,34],[19,18],[12,63],[14,11],[8,25],[33,-1],[16,-28],[5,-4],[3,3],[2,22],[17,16],[-10,12],[-31,15],[-23,6],[-15,0],[-13,8],[-9,17],[-5,17],[1,17],[8,19],[14,21],[17,12],[36,9],[32,14],[17,2],[13,-6],[3,-55]],[[3831,82789],[-4,-1],[-7,14],[-1,13],[5,9],[13,22],[9,8],[11,4],[3,-6],[-10,-26],[-12,-17],[-7,-20]],[[2093,81953],[-21,-8],[-22,9],[10,30],[11,16],[21,20],[24,-9],[19,-25],[-42,-33]],[[1791,81875],[54,-23],[68,2],[25,-5],[0,-7],[-43,-10],[-15,4],[-38,-13],[-26,-3],[-58,13],[-46,-9],[-12,3],[-14,11],[-16,18],[-1,12],[15,4],[40,-15],[4,8],[34,14],[29,-4]],[[1478,81817],[-149,-24],[-22,16],[22,10],[27,5],[56,27],[69,23],[54,29],[47,18],[13,30],[-41,16],[-8,12],[19,14],[16,21],[39,25],[34,-31],[8,-20],[-4,-25],[-7,-25],[-30,-13],[-4,-13],[16,-38],[-62,-33],[-93,-24]],[[1109,81688],[-24,-12],[-31,25],[3,30],[34,-25],[18,-18]],[[1031,81677],[-17,-34],[-13,15],[-5,47],[10,12],[27,-34],[-2,-6]],[[946,81720],[2,-20],[32,3],[10,-10],[0,-38],[-5,-11],[-4,-2],[-12,8],[-13,-19],[-59,-48],[-18,27],[-35,-42],[24,108],[28,16],[11,12],[-3,32],[13,52],[28,-2],[13,-22],[0,-14],[-12,-30]],[[1105,81798],[-6,-17],[-28,18],[-9,15],[-2,15],[8,25],[22,0],[12,-10],[12,-19],[4,-12],[-13,-15]],[[792,81633],[-8,-7],[-15,-6],[-42,6],[-26,-2],[-28,-4],[-22,-10],[-4,14],[1,12],[92,32],[22,16],[13,21],[12,39],[10,12],[6,-1],[13,-15],[-5,-20],[-11,-18],[-4,-17],[-4,-52]],[[589,81595],[-6,-19],[-7,0],[-37,32],[-5,11],[22,15],[6,11],[-3,16],[-16,21],[-30,27],[-11,20],[7,12],[14,7],[45,2],[25,-34],[18,-12],[43,-8],[-22,-14],[-13,-13],[-15,-53],[-15,-21]],[[70474,21234],[-34,-28],[-34,1],[-14,21],[-22,68],[-14,4],[-8,19],[-1,8],[15,5],[23,-19],[55,-16],[40,-37],[30,-12],[-12,-10],[-24,-4]],[[69244,23583],[-17,-5],[-5,19],[1,25],[-10,20],[-5,22],[4,20],[28,3],[28,-7],[8,-35],[-21,-48],[-11,-14]],[[64398,25092],[-20,-5],[-18,11],[-11,32],[23,27],[12,-19],[9,-20],[5,-26]],[[60515,24801],[-12,-11],[-56,10],[-6,22],[17,34],[9,14],[29,-7],[24,-28],[4,-9],[-9,-25]],[[57734,72539],[-21,-12],[-6,2],[-9,26],[12,65],[-11,41],[-1,18],[17,24],[11,36],[27,40],[72,46],[17,5],[-1,-37],[-24,-92],[-21,-46],[6,-37],[-34,-11],[-34,-68]],[[57548,72272],[-10,-32],[-11,27],[5,31],[-13,50],[24,74],[0,36],[18,19],[-4,-62],[-14,-49],[14,-40],[7,-46],[-16,-8]],[[57738,72899],[-6,-9],[-14,26],[0,14],[14,16],[7,3],[2,-10],[0,-23],[-3,-17]],[[57505,73132],[-28,-8],[5,46],[-13,36],[21,-20],[14,-24],[7,-5],[-2,-15],[-4,-10]],[[57485,72999],[-8,-1],[10,28],[29,38],[43,34],[14,3],[24,-21],[-44,-34],[-12,-18],[-32,-4],[-24,-25]],[[57096,73137],[-25,-22],[-17,32],[-10,50],[46,72],[11,-6],[6,-19],[-1,-65],[-10,-42]],[[57021,73195],[-22,-44],[-18,5],[-8,20],[12,42],[24,24],[11,-7],[-1,-31],[2,-9]],[[57078,72806],[-13,-30],[-18,11],[7,11],[5,15],[0,22],[-5,13],[3,5],[17,-22],[4,-25]],[[57050,72968],[-5,-9],[-21,37],[-8,21],[10,18],[31,-42],[-7,-25]],[[57451,73623],[34,-19],[9,2],[16,-6],[5,-35],[-22,-6],[-37,-32],[-15,7],[-19,28],[-30,3],[-9,8],[16,33],[29,16],[23,1]],[[57230,73461],[-13,-2],[4,23],[25,40],[34,2],[32,20],[7,0],[-15,-31],[-25,-30],[-49,-22]],[[57183,73035],[-25,-4],[-8,4],[15,10],[11,10],[5,13],[25,23],[16,29],[18,-20],[-23,-13],[-34,-52]],[[57350,72917],[-22,-14],[-14,-29],[-17,21],[0,28],[18,-9],[13,16],[-4,18],[15,-9],[11,-22]],[[56765,73488],[-19,-28],[-3,42],[12,44],[16,3],[6,-19],[-12,-42]],[[56787,73354],[-16,-17],[6,40],[-8,21],[7,17],[10,15],[5,-15],[9,-24],[-13,-37]],[[56815,73020],[0,-34],[-1,-12],[-57,-16],[5,38],[3,13],[19,-18],[7,9],[3,10],[21,10]],[[56928,73440],[-1,-60],[-8,1],[-4,9],[0,23],[3,36],[10,-9]],[[56942,73594],[-9,-39],[-21,45],[-24,31],[-9,27],[-14,16],[-4,36],[17,15],[8,1],[18,-44],[28,-5],[-2,-27],[8,-35],[4,-21]],[[57015,73501],[-10,-37],[-18,6],[-29,40],[-10,18],[-5,18],[12,2],[14,-19],[37,-10],[9,-18]],[[56866,73111],[-5,-3],[-7,25],[-2,22],[3,13],[10,2],[13,-43],[-12,-16]],[[57248,73858],[-27,-33],[-29,47],[-5,15],[21,19],[11,30],[-8,36],[-31,53],[-1,38],[46,16],[27,-33],[14,-3],[-5,-31],[2,-10],[2,-96],[-13,-13],[-2,-26],[-2,-9]],[[57336,74498],[-5,-34],[38,-57],[13,-36],[5,-35],[-3,-10],[-15,19],[-12,6],[4,-25],[13,-21],[-22,-13],[-22,1],[-64,30],[-14,32],[38,48],[8,19],[-27,-2],[-29,-57],[-46,25],[-14,23],[-4,12],[19,51],[32,-2],[17,11],[21,16],[1,24],[50,6],[18,-31]],[[56605,74374],[-12,-20],[-20,9],[-20,65],[52,-54]],[[56635,74399],[-13,-7],[13,46],[23,24],[-9,-38],[-14,-25]],[[56854,74198],[-30,-14],[-8,2],[7,18],[0,7],[-29,33],[4,42],[3,11],[22,-22],[5,-37],[26,-40]],[[57134,75130],[-31,-15],[-35,47],[34,19],[15,-14],[11,-16],[6,-21]],[[57065,74874],[-10,-19],[-8,-34],[-4,-47],[-16,-2],[-10,10],[-3,18],[-1,23],[-7,-1],[-6,-25],[-5,-11],[-16,-2],[-18,15],[1,33],[-4,38],[2,14],[49,3],[14,-28],[18,16],[7,18],[21,11],[-4,-30]],[[56881,75238],[-35,-20],[-37,39],[1,23],[19,47],[10,14],[27,-4],[15,-32],[4,-15],[-5,-26],[1,-26]],[[57213,74963],[-64,-18],[-19,17],[20,35],[37,22],[12,2],[16,-34],[-2,-24]],[[45523,58213],[-22,-8],[-10,28],[-2,11],[12,10],[5,0],[9,21],[11,14],[5,5],[5,-1],[4,-46],[-5,-20],[-12,-14]],[[45451,63194],[-17,-56],[-8,22],[-3,37],[15,52],[8,28],[14,9],[-9,-92]],[[45224,70776],[38,-30],[35,14],[43,-39],[23,-9],[-20,-27],[-21,-36],[-50,9],[-42,34],[-15,26],[-5,23],[14,35]],[[45584,58227],[-3,-16],[-16,2],[4,16],[-4,5],[5,49],[2,7],[8,-18],[1,-8],[3,-37]],[[45462,68190],[-23,-131],[-22,-52],[-13,-17],[-32,-14],[-38,82],[-19,83],[-11,26],[17,21],[25,-3],[54,17],[11,7],[55,84],[55,10],[1,-27],[-60,-86]],[[46190,68497],[-19,-38],[-21,13],[10,83],[9,25],[39,36],[32,15],[9,38],[11,15],[11,-23],[-9,-26],[-6,-84],[-22,-26],[-44,-28]],[[46056,68069],[-38,-65],[-38,15],[-6,11],[38,16],[34,50],[22,110],[35,121],[7,52],[13,20],[19,2],[8,-4],[9,-27],[0,-61],[-10,-102],[-18,-89],[-75,-49]],[[46520,56126],[-4,-15],[-18,37],[-96,56],[27,29],[66,9],[20,-17],[9,-15],[3,-27],[-7,-57]],[[45722,68057],[-2,-45],[6,-44],[-1,-69],[-13,-36],[-35,-37],[-26,6],[-15,15],[-27,60],[-1,61],[25,41],[10,51],[64,-9],[6,9],[4,3],[5,-6]],[[45631,58303],[0,-23],[-11,4],[-4,7],[7,43],[11,19],[12,-3],[4,-6],[-2,-16],[-6,-14],[-11,-11]],[[45679,58488],[-2,-13],[-16,11],[23,49],[15,8],[-1,-37],[-11,-8],[-8,-10]],[[43008,61604],[-27,-11],[-12,5],[-3,46],[-6,30],[1,14],[63,59],[21,-10],[16,-47],[-11,-26],[-42,-60]],[[43086,61530],[-22,-13],[-14,1],[-21,21],[7,22],[22,24],[15,5],[12,-43],[1,-17]],[[45226,67984],[-11,-5],[-14,15],[-14,45],[10,34],[8,16],[13,-3],[23,-25],[8,-25],[0,-16],[-23,-36]],[[45582,58447],[-13,-18],[-13,9],[-7,16],[1,29],[15,41],[14,-6],[3,-71]],[[45559,58687],[-15,-70],[-17,7],[-13,42],[-1,18],[36,6],[10,-3]],[[45031,67862],[-27,-94],[-34,35],[-8,12],[-7,19],[33,4],[33,47],[10,-23]],[[43634,61196],[23,-11],[8,4],[15,-2],[16,-30],[3,-33],[-8,-40],[-30,-33],[-18,4],[-21,30],[12,60],[0,51]],[[43247,60400],[-21,-22],[-15,10],[-15,23],[-7,33],[6,28],[29,33],[17,-11],[10,-51],[-4,-43]],[[45046,68256],[-7,-5],[-7,46],[-33,111],[20,50],[37,1],[15,-34],[5,-36],[-7,-21],[2,-42],[-4,-27],[-21,-43]],[[43309,61418],[11,-17],[4,-12],[-17,-7],[-42,22],[-11,-13],[-11,-48],[-21,72],[2,27],[4,8],[30,-19],[51,-13]],[[43642,61439],[-9,-30],[-11,44],[-6,10],[-3,62],[16,19],[8,1],[0,-64],[5,-42]],[[43560,60562],[-8,-2],[-11,26],[2,36],[-1,9],[10,39],[20,-4],[6,-28],[0,-59],[-18,-17]],[[43487,60488],[-17,-53],[-36,4],[-19,22],[-22,66],[0,52],[8,44],[-1,39],[3,10],[11,-6],[2,-26],[34,-64],[12,-13],[25,-75]],[[62354,44883],[14,-79],[0,-60],[-6,-19],[-13,12],[-23,48],[-43,46],[20,4],[12,-4],[12,4],[8,26],[1,16],[11,12],[7,-6]],[[62163,44753],[19,-35],[-54,15],[-8,31],[-1,24],[20,-5],[24,-30]],[[62549,44368],[-17,-5],[-8,15],[-5,36],[5,35],[1,28],[-14,49],[14,28],[12,-32],[6,-2],[18,-23],[-5,-42],[1,-13],[-8,-42],[0,-32]],[[62073,44987],[-5,-8],[-25,33],[-15,8],[-21,53],[8,184],[7,24],[5,10],[12,3],[14,-23],[-4,-119],[19,-79],[12,-63],[-7,-23]],[[61030,47247],[-15,-7],[-6,7],[-9,24],[16,21],[16,39],[36,59],[12,38],[5,8],[-3,-45],[-20,-99],[-18,-7],[-14,-38]],[[61387,50599],[-11,-5],[6,33],[30,43],[13,-10],[2,-10],[-1,-8],[-5,-9],[-34,-34]],[[60971,48286],[21,-123],[-3,-23],[-15,-14],[-8,-1],[-9,20],[-7,41],[-11,-10],[-19,50],[-20,2],[-17,59],[7,51],[-4,88],[21,45],[12,76],[13,-52],[3,-80],[18,-95],[15,-29],[3,-5]],[[66014,40043],[-36,-17],[-39,6],[-15,31],[-3,13],[13,12],[-1,39],[7,63],[8,26],[20,23],[8,51],[17,34],[22,4],[22,-63],[16,-66],[-3,-65],[-16,-25],[-5,-38],[-15,-28]],[[65499,39550],[-40,-17],[-27,6],[-54,49],[-15,33],[-21,91],[5,32],[17,57],[38,23],[41,-9],[18,-15],[21,-66],[28,-68],[-4,-80],[-7,-36]],[[63428,44145],[0,-21],[-36,8],[-6,72],[18,3],[4,29],[11,4],[11,-64],[-2,-31]],[[63871,42106],[-32,-106],[9,89],[36,127],[11,10],[-24,-120]],[[48418,42627],[-25,-3],[2,27],[19,29],[13,-4],[0,-33],[-9,-16]],[[61073,49017],[2,-30],[-5,-27],[1,-87],[-1,-58],[-16,-80],[-13,-28],[-12,8],[-9,13],[-8,22],[15,147],[-7,107],[30,-10],[23,23]],[[65427,49139],[1,-53],[-13,18],[-4,34],[-18,26],[-9,24],[20,29],[23,-78]],[[52426,54008],[7,-3],[41,2],[12,-30],[-1,-45],[-43,-131],[-8,-55],[-17,-46],[-14,-4],[-49,27],[-9,17],[-3,22],[5,52],[4,16],[23,10],[8,9],[13,56],[4,51],[10,39],[17,13]],[[51849,51912],[-28,-42],[-10,11],[-7,29],[-8,64],[3,30],[13,35],[28,34],[17,3],[17,-46],[0,-47],[-25,-71]],[[52062,52746],[-11,-15],[-12,12],[-3,23],[16,44],[7,11],[6,-9],[4,-12],[1,-18],[-8,-36]],[[52027,54388],[-26,-18],[-18,4],[24,77],[12,-17],[16,-7],[-8,-39]],[[37741,38512],[9,-16],[-16,2],[-18,-14],[-28,-12],[-11,23],[24,32],[9,24],[6,-5],[8,-17],[17,-17]],[[36504,36634],[-5,-7],[-18,72],[35,69],[12,-28],[-9,-55],[-10,-38],[-5,-13]],[[36531,35848],[-19,-26],[4,137],[10,45],[11,34],[14,21],[10,-29],[-8,-67],[-25,-81],[3,-34]],[[37427,38082],[0,-30],[-11,15],[-31,-12],[-11,23],[42,97],[8,-14],[6,-18],[5,-25],[-5,-16],[-3,-20]],[[53132,71862],[-43,-41],[9,36],[28,43],[7,-10],[-1,-28]],[[53043,71268],[-7,-3],[-13,-16],[-8,-1],[-20,17],[-7,0],[-10,12],[3,68],[3,19],[49,2],[27,-40],[4,-10],[1,-12],[-12,-22],[-10,-14]],[[48774,83055],[-56,-73],[-23,13],[-19,-6],[-6,2],[11,26],[13,61],[24,24],[29,64],[23,17],[9,-2],[5,-6],[11,-71],[-16,-26],[-5,-23]],[[48164,84438],[-16,-4],[-1,9],[28,39],[17,6],[6,-4],[-12,-22],[-22,-24]],[[48581,83783],[-35,0],[-12,5],[-15,14],[-17,79],[6,28],[7,13],[7,11],[19,5],[18,-15],[7,-14],[15,-54],[3,-46],[-3,-26]],[[48395,84299],[-111,-32],[-38,3],[-4,16],[8,10],[31,10],[13,77],[-47,36],[-3,10],[4,17],[5,7],[29,18],[12,4],[10,-2],[21,-21],[23,-43],[30,-7],[21,-19],[-4,-84]],[[48297,84061],[10,-74],[10,-46],[0,-16],[-9,-22],[-45,-29],[-15,0],[0,7],[10,30],[-9,33],[4,26],[-4,4],[-9,-3],[-33,-41],[-11,-4],[-1,8],[8,34],[1,22],[5,14],[9,13],[11,10],[8,1],[9,-10],[27,28],[24,15]],[[48341,83994],[-6,-6],[-14,1],[-5,10],[-3,14],[0,26],[8,19],[36,28],[-16,10],[-1,7],[10,24],[39,36],[10,7],[10,-1],[-20,-65],[-48,-110]],[[49710,86701],[-7,-7],[-27,59],[20,67],[24,-2],[4,-18],[-2,-16],[-13,-2],[-1,-5],[4,-31],[0,-36],[-2,-9]],[[49636,86714],[6,-40],[14,10],[22,-39],[11,0],[18,16],[-4,-36],[-18,-101],[-6,-17],[-3,-31],[-4,-6],[-6,-61],[-12,-21],[-11,-48],[-4,-5],[-16,19],[16,74],[6,43],[-4,22],[-9,20],[-24,1],[-20,-9],[-4,12],[-1,16],[-5,5],[-27,-1],[-7,4],[-6,15],[-1,12],[25,9],[22,-4],[34,24],[-21,78],[-28,7],[-6,8],[5,13],[15,7],[24,40],[14,6],[17,-1],[-2,-41]],[[49784,86873],[0,-7],[-14,-49],[0,-18],[-23,2],[-4,5],[-4,28],[3,30],[3,8],[7,3],[7,-6],[12,15],[6,0],[7,-11]],[[49120,85710],[-16,-7],[-15,0],[-25,33],[-9,25],[2,16],[10,5],[24,-8],[12,-28],[1,-18],[3,-7],[15,-7],[-2,-4]],[[48834,82558],[11,-11],[30,2],[-10,-24],[-32,-27],[-22,-26],[-26,-22],[-13,25],[-15,-1],[-22,49],[-4,72],[29,19],[41,-1],[33,-55]],[[49291,85962],[-31,-1],[16,34],[19,9],[36,-4],[-6,-15],[-34,-23]],[[49186,85680],[-3,-2],[-10,11],[-17,38],[27,7],[12,-5],[-5,-16],[-4,-33]],[[49150,85846],[-3,-14],[21,0],[30,-12],[19,-2],[15,-15],[-8,-28],[-10,-8],[-10,-1],[-36,28],[-48,-12],[-10,4],[-6,7],[-2,10],[0,20],[-3,6],[-17,-19],[-8,2],[-4,9],[-2,19],[2,26],[10,38],[17,8],[26,-5],[29,-21],[9,-13],[0,-11],[-11,-16]],[[48160,87445],[-6,-22],[-7,1],[-26,26],[-21,15],[-7,13],[-6,21],[12,2],[14,-4],[36,-20],[10,-20],[1,-12]],[[48139,87237],[5,-18],[-6,2],[-19,20],[-33,48],[-11,39],[-2,18],[8,-2],[7,-16],[31,-11],[8,-8],[0,-19],[10,-23],[2,-30]],[[48003,87637],[25,-22],[9,-16],[-14,-15],[-18,-4],[-21,3],[-34,17],[-12,38],[24,-1],[28,7],[13,-7]],[[48158,87688],[-7,-77],[-12,0],[-20,22],[-15,4],[-5,-11],[1,-14],[8,-9],[24,-52],[2,-15],[-3,-7],[-23,15],[-57,67],[-44,110],[60,18],[43,-29],[48,-22]],[[49241,85936],[-24,-14],[-10,12],[-2,37],[-29,16],[-14,10],[-10,18],[2,6],[19,8],[32,-34],[13,-28],[23,-8],[3,-4],[-3,-19]],[[48220,87706],[-13,-42],[-20,7],[-5,4],[-5,11],[3,31],[-1,45],[22,-37],[19,-19]],[[48278,85462],[-36,-100],[-13,-3],[-13,-25],[-37,-28],[33,0],[9,-10],[0,-19],[-6,-12],[-43,-46],[-29,-18],[-31,-48],[-16,0],[-16,-31],[-13,-13],[-7,0],[-9,6],[-19,30],[35,30],[4,16],[24,18],[-2,5],[-39,24],[-15,17],[2,8],[18,19],[-9,2],[-6,10],[-10,4],[-4,10],[-1,24],[2,26],[12,11],[4,12],[5,3],[17,-6],[18,-20],[20,8],[24,-4],[1,5],[-18,49],[3,10],[10,12],[55,35],[68,60],[17,9],[5,-8],[7,-31],[-1,-41]],[[48255,84656],[-8,-7],[-10,1],[-11,10],[-13,27],[30,19],[13,-11],[4,-13],[0,-14],[-5,-12]],[[48293,84968],[-1,-26],[-5,-30],[7,-32],[1,-22],[12,-8],[7,-10],[52,-12],[49,4],[9,-10],[1,-15],[-8,-16],[-27,-30],[-33,-48],[-10,-10],[-11,-1],[-7,5],[-6,86],[-35,-11],[-29,1],[-16,10],[-11,20],[-22,52],[-65,21],[-18,28],[-6,18],[3,9],[13,21],[17,-7],[11,4],[6,10],[0,8],[-9,18],[0,6],[66,23],[5,37],[15,3],[16,-12],[23,-38],[6,-46]],[[47998,85070],[31,-32],[-25,-54],[-38,0],[-54,39],[0,8],[4,12],[8,10],[9,2],[13,-7],[19,11],[15,-4],[18,15]],[[47986,84743],[-12,-3],[-15,3],[-10,9],[-9,35],[-2,22],[4,40],[-1,47],[32,2],[8,-7],[5,-142],[0,-6]],[[47236,82899],[-1,-17],[-21,21],[-10,22],[-56,11],[23,22],[12,-6],[40,-1],[11,-10],[2,-42]],[[47939,84657],[-24,-8],[-9,4],[-2,8],[6,20],[19,7],[13,-11],[2,-10],[-5,-10]],[[56109,86599],[-20,-3],[-29,29],[-3,11],[11,6],[-8,23],[3,10],[22,-18],[12,-21],[-12,-5],[20,-22],[4,-10]],[[55461,86513],[2,-13],[-11,3],[-8,-4],[-6,-16],[-12,5],[-5,23],[9,34],[22,2],[9,-34]],[[55552,86607],[9,0],[3,5],[15,-4],[23,-22],[4,-12],[16,-6],[5,-13],[-18,-39],[-11,0],[-8,4],[-15,-4],[-8,-7],[-3,-16],[0,-34],[-65,-7],[-15,10],[-20,77],[4,20],[14,8],[12,2],[1,-41],[18,4],[5,27],[1,20],[-4,9],[-12,8],[-7,13],[10,21],[18,9],[16,-28],[12,-4]],[[55893,88272],[3,-11],[17,3],[21,20],[16,-9],[-2,-28],[-10,1],[-3,4],[-14,-16],[-2,-9],[-16,-7],[-29,28],[-18,45],[42,0],[-4,-11],[-1,-10]],[[55321,85208],[-5,-36],[-15,3],[-13,26],[27,41],[40,-2],[14,-9],[-48,-23]],[[54591,84268],[-15,-29],[-12,2],[-9,39],[-2,99],[5,49],[61,178],[27,14],[38,109],[10,48],[17,44],[10,39],[8,15],[17,-7],[8,-7],[-18,-23],[2,-29],[-1,-13],[-48,-128],[-12,-83],[-17,-21],[-69,-296]],[[54190,83537],[-10,-10],[-46,17],[-56,40],[9,78],[14,34],[102,-88],[1,-33],[-14,-38]],[[53808,83169],[7,-39],[-8,-19],[-31,32],[-32,0],[-18,-51],[-14,-2],[-49,46],[-7,23],[-2,18],[7,65],[-1,20],[15,22],[2,32],[27,34],[24,1],[8,-28],[11,-20],[40,-22],[6,-10],[4,-14],[-19,-27],[-6,-14],[6,-23],[30,-24]],[[53485,83505],[-10,-9],[-43,7],[-48,-40],[-18,12],[7,26],[5,9],[16,11],[11,16],[4,25],[10,-14],[30,-5],[14,-8],[12,-12],[10,-18]],[[53518,83868],[-26,-24],[-6,1],[-9,34],[14,20],[8,17],[6,0],[8,-19],[5,-29]],[[53155,83462],[50,-36],[33,2],[22,-14],[6,-23],[2,-51],[-24,-15],[-26,5],[-36,-19],[-117,83],[2,69],[4,27],[56,7],[28,-35]],[[52912,83437],[-19,-6],[-21,12],[-35,48],[-4,12],[18,-8],[23,-25],[18,-5],[25,-21],[-5,-7]],[[52794,83459],[-29,-8],[-14,14],[-28,5],[-9,89],[2,5],[14,-6],[47,-41],[16,-45],[1,-13]],[[52981,83381],[-12,-3],[-17,46],[-2,15],[20,30],[12,34],[33,52],[19,61],[7,-1],[-8,-55],[-43,-151],[-9,-28]],[[52946,83976],[-5,-11],[-17,11],[-2,37],[6,34],[-7,30],[8,19],[25,-45],[7,-21],[-9,-25],[-6,-29]],[[53134,83189],[-43,-1],[-16,23],[-17,6],[9,29],[12,10],[41,-19],[13,-36],[1,-12]],[[53070,84822],[-12,-13],[-38,19],[17,26],[42,13],[24,-4],[-27,-27],[-6,-14]],[[52307,83402],[-6,-12],[3,82],[30,86],[13,-2],[-13,-23],[-4,-16],[-5,-33],[2,-17],[70,-5],[-8,-15],[-71,-10],[-11,-35]],[[49672,78285],[-10,-50],[-18,46],[-25,41],[-5,37],[0,10],[29,-27],[29,-57]],[[49704,81042],[-24,-20],[-7,-23],[-6,-9],[-15,-6],[-15,-1],[-58,47],[-14,-2],[13,22],[37,17],[20,23],[47,-22],[22,-26]],[[51357,82413],[-28,-41],[-17,12],[-4,9],[8,32],[41,53],[0,-65]],[[52887,76530],[9,-22],[1,-13],[-6,-15],[3,-33],[-24,28],[-35,-14],[-21,3],[-6,24],[5,15],[33,3],[11,7],[20,-3],[10,20]],[[52355,74347],[-16,-57],[-17,40],[-1,35],[3,10],[20,-15],[11,-13]],[[52301,75483],[-9,-26],[-13,2],[5,19],[12,39],[15,13],[6,-11],[-7,-23],[-9,-13]],[[51192,74793],[-5,-7],[-85,67],[-28,7],[-7,10],[1,35],[2,15],[57,7],[46,-24],[25,-67],[2,-11],[-8,-32]],[[50442,74119],[-6,-7],[-18,7],[-28,0],[-1,23],[4,16],[5,17],[17,-33],[27,-6],[0,-17]],[[50401,74261],[-10,-35],[-42,12],[-10,15],[9,40],[13,5],[0,28],[13,29],[60,23],[14,-20],[3,-28],[-36,-61],[-14,-8]],[[41350,74542],[-12,-27],[-21,10],[-7,10],[6,59],[17,14],[17,-24],[0,-42]],[[42479,74103],[-6,-6],[-58,16],[-16,21],[-7,39],[10,13],[25,8],[37,-7],[24,-28],[0,-36],[-9,-20]],[[42283,74052],[-13,-7],[-74,44],[-26,21],[-34,51],[96,-62],[51,-47]],[[42044,74034],[-29,-1],[-27,44],[40,23],[12,-14],[8,-16],[6,-21],[-10,-15]],[[42181,73993],[23,-23],[-35,-5],[-11,-11],[-29,16],[-33,-3],[-22,31],[-5,33],[11,20],[30,0],[71,-58]],[[42875,73640],[17,-4],[89,9],[24,-6],[-3,-43],[-17,-17],[-52,-11],[-82,27],[-27,37],[-4,27],[0,12],[17,10],[38,-41]],[[54046,72495],[-10,-19],[-26,1],[-24,29],[0,61],[27,-12],[25,-41],[8,-19]],[[54230,77224],[5,-20],[-35,38],[-13,26],[-3,11],[46,-55]],[[54113,77751],[-34,-12],[-16,22],[-4,18],[-29,6],[-17,25],[-3,11],[24,28],[13,45],[16,-27],[20,-51],[11,-14],[19,-51]],[[54119,77625],[7,-25],[-26,23],[-23,9],[-5,17],[3,14],[5,14],[18,-2],[3,-14],[18,-36]],[[54218,77382],[-7,-16],[-18,29],[-16,20],[-12,23],[-23,30],[-8,34],[-34,69],[-6,19],[18,-28],[14,-18],[12,-4],[30,-44],[30,-57],[35,-49],[-8,-2],[-7,-6]],[[54219,77143],[4,-8],[-1,-6],[-14,8],[-4,-2],[-68,126],[-7,24],[24,-29],[66,-113]],[[54269,77173],[19,-43],[-18,9],[-18,27],[-11,28],[28,-21]],[[54024,77568],[-2,-22],[-17,28],[-9,51],[-21,82],[-3,23],[11,23],[0,23],[-15,72],[12,11],[8,2],[3,-50],[7,-29],[20,-35],[-4,-58],[4,-83],[4,-18],[2,-20]],[[54891,76479],[37,-39],[-111,51],[13,5],[12,1],[49,-18]],[[55725,73953],[4,-67],[19,-12],[26,-60],[-2,-31],[-6,-10],[-43,28],[-10,-13],[-13,5],[-7,34],[1,11],[-8,20],[-5,9],[-17,-26],[-11,-5],[0,24],[16,66],[7,11],[13,-22],[10,8],[8,36],[1,36],[3,11],[14,-53]],[[55802,73620],[29,-56],[-23,14],[-26,-39],[-31,45],[-20,46],[-4,18],[20,43],[19,-44],[22,-7],[14,-20]],[[55746,74083],[-11,-5],[-9,3],[-9,-2],[-8,-11],[1,45],[10,57],[11,33],[17,15],[7,-26],[-1,-92],[-8,-17]],[[55766,73922],[-14,-6],[-17,55],[-7,38],[7,2],[7,-5],[8,-14],[0,-15],[3,-15],[7,-19],[6,-21]],[[55577,74557],[6,-32],[-35,20],[-25,29],[-21,71],[-45,81],[0,24],[17,18],[36,12],[15,-13],[9,-13],[3,-16],[-20,-31],[-5,-14],[16,-28],[0,-11],[7,-55],[8,-20],[20,-16],[14,-6]],[[56541,73689],[-11,-14],[-12,1],[-9,5],[-4,11],[5,6],[7,23],[6,6],[9,-3],[5,-9],[4,-26]],[[56403,72689],[-3,-25],[-28,17],[-8,26],[-2,57],[8,28],[5,9],[13,-32],[27,-47],[-12,-33]],[[51096,81646],[28,-31],[5,-10],[2,-11],[-34,-12],[-37,38],[-24,-9],[-9,18],[0,12],[25,9],[44,-4]],[[35829,91907],[-43,-20],[-9,5],[-9,15],[-22,70],[-7,34],[5,41],[-8,29],[39,35],[32,5],[43,-8],[72,-35],[-5,-11],[-16,-18],[-44,-24],[-15,-53],[-3,-27],[2,-20],[-12,-18]],[[39713,89591],[-43,0],[-14,45],[4,50],[49,15],[26,-34],[-10,-50],[-12,-26]],[[35129,92765],[-26,-4],[-75,29],[-12,11],[-5,14],[3,16],[24,30],[45,43],[32,8],[20,-27],[20,-37],[2,-18],[-1,-22],[-5,-19],[-9,-15],[-13,-9]],[[34717,93773],[-39,-39],[-32,-23],[-70,-66],[-12,-3],[-18,9],[-15,18],[-26,4],[-9,11],[-4,9],[-12,6],[-18,3],[-30,-7],[-27,7],[-21,29],[38,20],[24,17],[91,6],[25,-7],[16,0],[25,4],[54,21],[8,10],[48,-12],[4,-17]],[[35645,92658],[-37,-2],[-86,11],[-7,6],[-1,13],[12,37],[38,5],[45,-20],[49,-29],[6,-13],[-19,-8]],[[37148,86855],[-32,-70],[-32,15],[-16,31],[-31,15],[-34,-4],[-1,12],[110,74],[53,20],[-4,-31],[-10,-27],[-3,-35]],[[14974,80272],[8,-52],[-34,9],[-12,10],[0,25],[6,23],[26,-8],[6,-7]],[[16001,79144],[-1,-13],[-10,-10],[-6,2],[0,16],[-3,2],[-12,-18],[1,36],[6,39],[5,1],[7,-26],[13,-29]],[[15973,79259],[-2,-11],[-15,13],[-5,12],[1,27],[3,18],[3,4],[9,-8],[3,-4],[3,-51]],[[15894,79880],[3,-13],[-11,-12],[-8,-2],[-12,20],[-6,2],[5,-30],[-2,-10],[-26,18],[-5,15],[8,16],[16,16],[6,2],[32,-22]],[[15883,79741],[-4,-6],[-15,8],[-9,13],[-3,16],[6,30],[7,8],[5,-2],[2,-27],[13,-28],[-2,-12]],[[15830,79781],[7,-19],[-30,12],[-13,11],[-3,11],[-5,34],[2,12],[13,4],[25,-43],[4,-22]],[[15952,79583],[13,-76],[6,31],[38,-54],[0,-27],[-4,-9],[-8,-3],[-8,8],[-6,19],[-9,10],[-18,6],[-9,21],[-4,15],[0,42],[-5,14],[-10,2],[-9,11],[-14,29],[-2,8],[7,24],[15,41],[11,19],[7,-2],[9,-13],[10,-22],[-2,-15],[-41,-31],[-2,-7],[21,-9],[7,-7],[7,-25]],[[15513,80374],[4,-12],[-62,45],[-27,27],[-10,19],[-6,11],[-32,28],[-5,13],[7,10],[21,-6],[35,-21],[32,-35],[43,-79]],[[15730,80003],[-4,-7],[-43,41],[-29,54],[-12,32],[57,-81],[29,-26],[2,-13]],[[15712,79927],[-11,-15],[-7,2],[-5,10],[-18,102],[8,-3],[24,-31],[-5,-12],[18,-31],[4,-21],[-8,-1]],[[15284,80661],[-7,-5],[-7,66],[9,23],[2,12],[-1,13],[15,-30],[6,-20],[2,-27],[0,-8],[-19,-24]],[[14822,80417],[-11,-2],[-18,7],[-19,16],[-35,44],[-3,10],[3,9],[9,7],[3,11],[-8,32],[27,20],[25,-17],[11,-20],[13,-36],[6,-41],[1,-28],[-4,-12]],[[15226,80700],[-3,-30],[-17,49],[-28,105],[4,24],[12,35],[11,2],[18,-16],[16,-29],[3,-11],[10,-30],[5,-27],[-11,-33],[-20,-39]],[[17125,70753],[-16,-6],[-18,12],[-16,56],[-17,43],[9,13],[14,-42],[35,-64],[9,-12]],[[17155,68514],[-12,-22],[-32,120],[0,29],[9,15],[15,-3],[0,-30],[13,-26],[5,-24],[2,-59]],[[16654,71381],[-19,-8],[-15,8],[-23,55],[50,7],[21,-24],[3,-7],[-17,-31]],[[16699,71474],[57,-30],[30,14],[6,-14],[-4,-12],[-69,-23],[-21,16],[-2,21],[-7,21],[10,7]],[[17125,71074],[14,-42],[-20,5],[-21,-3],[-6,24],[-7,32],[-4,8],[-14,3],[-1,3],[-2,15],[4,8],[45,-36],[12,-17]],[[30176,75740],[-8,-11],[-3,28],[6,32],[5,0],[3,-17],[-3,-32]],[[29407,74700],[-32,-87],[-1,17],[41,108],[-8,-38]],[[29392,75185],[-13,-2],[13,55],[24,25],[9,-5],[0,-19],[-3,-17],[-16,-26],[-14,-11]],[[32019,70445],[-25,-20],[-7,2],[-5,7],[26,19],[21,46],[7,-3],[-17,-51]],[[30414,75677],[-77,-28],[-12,18],[19,8],[24,43],[16,5],[25,-24],[5,-22]],[[30210,75743],[-13,-15],[-16,2],[8,22],[3,31],[8,34],[4,11],[9,9],[-3,-94]],[[30561,75613],[-21,-9],[-49,21],[40,18],[7,6],[5,27],[1,13],[15,-57],[2,-19]],[[28949,72113],[-50,-41],[-6,3],[33,29],[23,9]],[[28990,72497],[-4,-12],[-19,64],[19,-21],[4,-17],[0,-14]],[[29074,73668],[-13,-10],[43,116],[24,96],[11,34],[-10,-68],[-19,-62],[-36,-106]],[[29015,72142],[-37,-16],[-3,6],[42,32],[14,116],[2,53],[-7,95],[1,19],[6,-30],[7,-88],[-3,-67],[-12,-97],[-10,-23]],[[28749,71798],[-7,-6],[25,72],[50,91],[14,14],[-42,-78],[-40,-93]],[[23121,68060],[-10,-3],[12,31],[21,16],[45,60],[18,4],[10,20],[4,3],[-3,-25],[-36,-36],[-61,-70]],[[22957,67568],[-9,-33],[3,50],[22,112],[46,147],[20,25],[-53,-162],[-29,-139]],[[23600,68632],[-14,-6],[61,89],[12,29],[16,-1],[-27,-50],[-48,-61]],[[23008,66911],[-4,-26],[-23,125],[-37,282],[-2,161],[6,56],[10,-228],[41,-289],[9,-81]],[[26414,68918],[-28,-21],[-30,15],[19,3],[13,-6],[35,30],[18,22],[21,9],[-48,-52]],[[27383,69683],[-12,-140],[-5,50],[-1,48],[9,28],[9,14]],[[25215,69172],[1,-27],[-13,14],[-20,1],[8,9],[7,9],[3,10],[25,33],[-7,-25],[-4,-24]],[[24502,68836],[-11,-8],[-46,50],[-3,21],[23,20],[14,-2],[22,-25],[8,-8],[3,-10],[-2,-16],[-8,-22]],[[25325,69013],[-7,-18],[7,87],[-11,74],[12,-32],[4,-39],[-5,-72]],[[28428,65811],[1,-13],[-28,-36],[20,-26],[19,56],[15,-46],[8,-86],[-1,-15],[1,-12],[3,-17],[1,-24],[-16,-75],[-54,8],[-2,63],[-8,12],[-13,91],[-17,29],[-24,74],[14,19],[18,-6],[10,9],[25,7],[16,10],[12,-22]],[[28425,64488],[-11,-18],[-13,26],[-8,2],[-11,10],[-21,29],[-5,29],[17,2],[23,-5],[39,-16],[-4,-34],[-6,-25]],[[28326,64680],[-6,-10],[-15,22],[-22,9],[-13,33],[-12,13],[-1,12],[20,9],[14,-4],[16,-26],[9,-46],[10,-12]],[[28158,64834],[38,-13],[13,8],[13,2],[13,-5],[19,-48],[-16,-6],[-13,0],[-10,8],[-34,3],[-23,14],[-12,12],[-6,14],[18,11]],[[28548,66764],[-6,-5],[-24,58],[-19,17],[30,41],[13,35],[0,76],[7,42],[-2,36],[7,37],[-9,42],[-26,33],[-50,131],[-79,32],[-41,1],[22,21],[21,-2],[32,-13],[39,-6],[23,-39],[22,-51],[21,-20],[8,-14],[-1,-14],[3,-14],[27,-24],[26,-39],[8,-113],[-36,-54],[-6,-164],[-10,-30]],[[29428,64932],[6,-10],[-17,-23],[-40,28],[-9,-2],[-8,31],[-3,22],[2,21],[24,-16],[12,-30],[33,-21]],[[29325,65707],[-22,-63],[-12,6],[7,78],[15,12],[6,0],[6,-33]],[[29714,64050],[-8,-42],[-30,-81],[-65,-20],[-73,-4],[-5,22],[-2,20],[5,30],[0,12],[-3,12],[26,13],[18,37],[27,7],[34,-27],[19,-1],[27,29],[22,63],[13,-8],[-5,-62]],[[29387,64639],[-20,-18],[5,30],[37,51],[21,44],[11,16],[5,12],[16,17],[8,28],[-2,24],[-17,38],[0,27],[6,20],[29,9],[-8,-29],[12,-82],[-39,-103],[-33,-31],[-31,-53]],[[28708,66524],[46,-65],[39,-24],[42,-82],[18,-29],[4,-26],[-7,-120],[-10,-73],[2,-63],[-10,18],[-10,42],[-17,24],[-5,13],[29,2],[3,66],[14,51],[-2,54],[-34,59],[-24,53],[-36,16],[-34,52],[-20,7],[-24,-10],[9,31],[6,41],[4,8],[17,-45]],[[28982,65351],[-12,-4],[-21,16],[-48,70],[-23,6],[8,39],[17,-14],[39,-60],[15,-30],[25,-23]],[[29211,65031],[-2,-15],[-35,115],[-44,28],[-26,28],[6,15],[17,7],[3,37],[-7,39],[-24,80],[-13,54],[-6,12],[-1,45],[27,-70],[12,-62],[18,-61],[13,-105],[35,-36],[25,-51],[2,-60]],[[29081,65783],[2,-30],[-19,6],[-28,-11],[-9,0],[6,20],[19,27],[1,26],[-24,37],[-27,92],[-13,22],[-6,35],[-23,38],[5,20],[4,4],[16,-9],[35,-134],[2,-12],[59,-131]],[[28367,64589],[-10,-2],[-27,24],[-9,20],[10,27],[2,30],[4,1],[4,-35],[22,-15],[1,-8],[13,-30],[-10,-12]],[[27212,67081],[-10,-15],[-20,11],[-11,20],[-5,38],[17,-41],[7,-9],[22,-4]],[[28404,66075],[0,-70],[3,-52],[-3,-19],[-30,-34],[-8,-20],[-28,-20],[-17,-27],[-9,45],[-17,27],[-2,47],[-13,-16],[-19,10],[-30,35],[-19,48],[27,8],[5,-30],[22,37],[-5,19],[-4,3],[-7,36],[32,94],[7,60],[-15,98],[14,6],[36,-34],[16,-34],[0,-46],[16,-35],[21,-86],[27,-50]],[[27342,66013],[-18,-6],[15,23],[5,34],[8,-26],[0,-17],[-10,-8]],[[27726,67556],[4,-42],[-25,98],[-32,154],[-17,120],[12,-33],[11,-66],[47,-231]],[[27066,64269],[-26,-31],[-55,-43],[-30,-1],[-30,16],[-20,36],[-12,35],[1,17],[19,-28],[16,-14],[13,9],[10,16],[-31,114],[2,25],[24,62],[65,-19],[11,-11],[10,-40],[14,-31],[17,-83],[2,-29]],[[27199,67138],[-1,-34],[-14,57],[-9,62],[13,-20],[11,-65]],[[27958,64898],[1,-15],[-49,42],[-21,44],[-8,10],[13,1],[55,-72],[9,-10]],[[28196,67240],[34,-18],[18,2],[11,12],[49,-5],[41,17],[6,-30],[-1,-16],[-86,-15],[-78,-45],[-43,-31],[-21,-3],[-15,16],[-52,93],[14,-10],[38,-52],[24,10],[22,34],[4,26],[-4,13],[10,41],[29,-39]],[[27671,66325],[-55,-108],[6,27],[22,58],[7,28],[14,17],[14,31],[1,37],[20,25],[6,4],[-35,-119]],[[25569,62168],[-13,-11],[11,34],[1,21],[16,89],[10,-1],[3,-8],[-28,-124]],[[25596,61879],[-21,-81],[-2,23],[9,60],[12,21],[8,22],[2,26],[10,-13],[-3,-25],[-15,-33]],[[24532,62601],[-31,-13],[-6,13],[63,58],[11,-2],[4,-8],[-33,-28],[-8,-20]],[[27157,57246],[-3,-27],[-21,49],[12,8],[5,-1],[7,-29]],[[27397,62988],[9,-11],[11,7],[4,12],[42,-9],[7,-24],[-33,-1],[-14,-15],[-8,-3],[-28,4],[-4,55],[8,6],[6,-21]],[[25850,63538],[-15,-18],[-7,64],[11,61],[14,36],[28,4],[18,12],[2,-16],[-15,-48],[-36,-95]],[[32602,61773],[-7,-8],[-13,35],[-20,10],[-18,21],[0,4],[0,11],[4,12],[9,9],[22,-28],[11,-36],[10,-17],[2,-13]],[[33084,59805],[-15,-61],[-31,38],[-3,48],[3,29],[18,54],[15,36],[10,12],[6,-47],[-3,-109]],[[33103,60192],[-2,-33],[-7,-6],[-11,27],[-45,-4],[-7,25],[-1,11],[22,42],[-26,11],[-10,18],[-22,87],[2,26],[9,13],[15,2],[28,-28],[20,-40],[7,-1],[3,-11],[-4,-29],[12,-24],[5,-17],[12,-69]],[[33052,57680],[-45,-32],[-118,-8],[-48,12],[-37,-9],[67,70],[8,30],[29,6],[9,9],[9,155],[-4,38],[-5,20],[-12,15],[-26,20],[-5,11],[17,17],[35,9],[26,19],[55,4],[26,16],[45,5],[-22,-71],[-10,-27],[4,-65],[-5,-43],[6,-55],[13,-37],[-9,-35],[-1,-54],[-2,-20]],[[31054,58838],[-14,-64],[-8,28],[-1,52],[-6,20],[-11,12],[-6,17],[0,26],[42,-41],[4,-50]],[[33123,58282],[-15,-6],[2,23],[26,40],[41,26],[10,1],[-6,-35],[-58,-49]],[[32736,61486],[-1,-34],[-19,10],[-1,30],[9,31],[5,3],[7,-40]],[[33474,59378],[-8,-11],[-25,23],[-9,28],[-1,88],[15,8],[29,-70],[17,-25],[-18,-41]],[[32264,58254],[9,-75],[-3,-14],[-25,-51],[-21,-3],[-17,1],[-13,10],[-17,33],[-16,-10],[-40,12],[-11,11],[15,41],[28,16],[10,4],[8,-25],[20,-22],[23,-2],[6,38],[32,57],[12,-21]],[[32499,62339],[-44,-29],[2,17],[35,40],[13,-3],[-6,-25]],[[32856,58762],[-18,-2],[7,21],[2,37],[10,44],[15,30],[15,-8],[-6,-98],[-25,-24]],[[32848,61966],[-4,-15],[-23,28],[-7,51],[1,11],[3,6],[9,-10],[12,-4],[8,-17],[1,-50]],[[32991,60996],[-15,-2],[-7,5],[-2,34],[12,24],[7,6],[10,-27],[3,-22],[-8,-18]],[[32856,61657],[-9,-23],[-31,9],[-6,29],[-1,20],[19,41],[22,-18],[9,-19],[6,-4],[0,-17],[-3,-12],[-6,-6]],[[32977,60627],[-26,-13],[-11,100],[-18,72],[3,45],[3,17],[38,-28],[12,-33],[7,-89],[-8,-71]],[[32964,61192],[-32,-6],[-22,5],[-5,41],[11,35],[-8,42],[5,25],[11,17],[18,-22],[3,-32],[11,-29],[51,-61],[-43,-15]],[[32891,61063],[-22,-26],[-11,8],[-14,50],[-9,138],[7,22],[5,9],[30,-17],[12,-19],[13,-13],[-7,-25],[4,-103],[-8,-24]],[[33007,59422],[-8,-9],[-21,39],[3,45],[12,25],[12,14],[12,2],[4,-38],[-3,-52],[-11,-26]],[[29711,64763],[17,-9],[9,1],[32,-17],[19,-24],[4,-10],[-10,-21],[-29,40],[-26,5],[-36,-1],[-14,8],[10,43],[24,-15]],[[30902,58789],[-14,-8],[-54,56],[-44,90],[-1,47],[11,-4],[12,-18],[17,-64],[52,-42],[21,-57]],[[30094,64380],[-1,-8],[-16,23],[-30,0],[-5,30],[12,5],[38,-11],[9,-26],[-7,-13]],[[29745,64231],[-37,-28],[-3,33],[18,27],[22,-32]],[[30033,64424],[-5,-7],[-16,20],[-2,16],[-6,1],[-10,14],[3,19],[22,1],[9,-52],[5,-12]],[[29907,64430],[32,-32],[19,5],[2,-7],[-11,-7],[-2,-6],[-31,-9],[-9,2],[-2,22],[2,32]],[[5300,85585],[-20,-9],[-22,5],[-17,57],[13,1],[28,38],[60,30],[15,4],[-57,-126]],[[7498,84749],[-35,-19],[-7,1],[-21,-38],[-17,-16],[-22,30],[5,46],[20,30],[97,-10],[7,-9],[1,-7],[-8,-6],[-20,-2]],[[7772,86613],[-13,-2],[17,28],[13,56],[17,-8],[3,-10],[-28,-57],[-9,-7]],[[7643,85532],[-9,-4],[-20,18],[-13,19],[9,14],[39,30],[19,0],[8,-4],[3,-10],[-2,-13],[-8,-18],[-26,-32]],[[7433,85166],[-8,-16],[-7,4],[-16,19],[-31,28],[-15,18],[-1,8],[11,9],[38,-22],[15,-20],[14,-28]],[[6787,83998],[-11,-19],[-21,2],[-12,6],[-3,16],[32,48],[7,6],[6,-2],[3,-20],[-1,-37]],[[7032,84352],[-19,-14],[-6,5],[-1,11],[5,18],[9,18],[29,34],[29,23],[15,-2],[6,-14],[-19,-30],[-48,-49]],[[7164,84397],[-13,-1],[-21,15],[3,18],[29,22],[29,-3],[3,-12],[-2,-14],[-2,-8],[-9,-8],[-17,-9]],[[9335,86664],[6,-16],[53,4],[16,-3],[6,-7],[-7,-11],[-21,-14],[-60,-25],[-49,-33],[-6,3],[-9,36],[-9,15],[-6,20],[0,7],[9,14],[18,20],[13,8],[46,-18]],[[9689,86599],[-9,-14],[-24,5],[-13,9],[44,37],[7,-8],[-5,-29]],[[9843,86300],[-14,-3],[20,38],[27,41],[26,27],[32,11],[-3,-20],[-43,-35],[-45,-59]],[[8962,86297],[-31,-8],[-7,17],[16,42],[13,24],[10,6],[35,48],[39,35],[36,51],[37,72],[6,27],[17,3],[28,-18],[17,-25],[-8,-20],[-92,-103],[-8,-13],[-8,-35],[-8,-13],[-12,-5],[-9,-15],[-5,-25],[-11,-14],[-18,-1],[-12,-7],[-6,-12],[-19,-11]],[[8883,86442],[-15,-17],[-55,10],[12,35],[42,22],[46,-34],[-30,-16]],[[8984,86664],[0,-15],[-9,-14],[8,-27],[-14,-46],[-6,-29],[-8,-19],[-7,-7],[-8,4],[-2,11],[5,16],[-18,-1],[-6,40],[10,13],[4,17],[1,12],[12,51],[4,3],[2,-12],[3,-3],[7,5],[9,22],[4,3],[9,-24]],[[8908,86881],[-35,-5],[-16,7],[-3,8],[7,29],[0,12],[17,5],[21,-14],[6,-14],[3,-28]],[[13094,83464],[6,-8],[7,5],[12,21],[20,-4],[14,-7],[9,-8],[-5,-30],[-4,-49],[-8,-17],[-8,-24],[-28,14],[-23,31],[-33,53],[-19,38],[-1,16],[-12,12],[-22,66],[-13,52],[-21,6],[-26,15],[-10,29],[7,25],[37,12],[55,-64],[9,-28],[20,-32],[3,-44],[10,-18],[24,-62]],[[12781,84587],[18,-40],[26,4],[14,-30],[11,-46],[-8,-29],[-11,7],[-13,-17],[-8,-56],[4,-55],[-4,-56],[-15,-57],[-3,-38],[-6,-11],[-7,-4],[-8,10],[-12,8],[-15,-32],[-19,0],[-15,73],[13,121],[31,25],[-18,32],[-39,39],[3,21],[-29,62],[-2,14],[5,52],[27,46],[37,8],[25,-20],[14,-17],[4,-14]],[[12971,83838],[6,-16],[0,-11],[-40,-38],[-1,-8],[-9,-23],[-9,-9],[-15,-26],[-28,-27],[4,83],[-28,48],[28,24],[19,-7],[31,-3],[30,22],[12,-9]],[[13517,83571],[28,-75],[2,-27],[-28,-9],[-21,4],[-11,8],[-3,13],[7,38],[-14,22],[-16,8],[-15,-14],[0,38],[11,27],[-7,36],[0,28],[4,9],[15,-1],[30,-29],[18,-76]],[[13126,84403],[-3,-8],[-36,1],[-12,7],[-5,24],[3,23],[8,18],[10,34],[8,56],[52,-63],[16,-28],[8,-35],[-18,-13],[-22,-6],[-9,-10]],[[13302,84164],[-6,-96],[-11,5],[-10,1],[-22,-14],[-22,6],[-11,11],[-4,12],[4,28],[-12,16],[-42,6],[-16,7],[-9,30],[-2,39],[7,14],[21,11],[16,47],[10,7],[35,94],[17,-7],[31,-57],[39,-83],[-13,-77]],[[13117,84243],[-15,-2],[-16,9],[-40,47],[-1,14],[6,15],[22,29],[10,7],[54,-3],[17,-8],[4,-13],[0,-14],[-6,-13],[-1,-15],[3,-15],[-7,-15],[-30,-23]],[[12691,85385],[-2,-15],[-38,2],[-38,21],[-19,27],[4,13],[35,11],[34,-26],[24,-33]],[[14184,82090],[-9,-26],[-37,63],[-13,18],[-28,67],[-5,29],[1,17],[5,6],[9,-4],[8,-8],[53,-74],[15,-35],[1,-53]],[[13631,83225],[-6,-1],[-3,12],[2,25],[9,42],[4,9],[36,-7],[5,-3],[1,-8],[-2,-13],[-12,-19],[-34,-37]],[[13603,81774],[-5,-1],[-9,12],[-7,19],[-4,51],[3,20],[3,8],[24,-32],[-5,-77]],[[13823,82925],[-8,-21],[-20,-32],[-13,-13],[-6,6],[-18,4],[-19,32],[-14,13],[-10,1],[-5,-12],[-1,-15],[3,-20],[-2,-9],[-6,2],[-5,9],[-6,16],[-1,17],[4,17],[13,24],[42,47],[13,9],[14,-2],[23,-22],[5,-7],[17,-44]],[[13931,82469],[-6,-2],[-18,7],[-60,98],[-43,35],[-29,48],[-30,31],[18,50],[16,-6],[56,-41],[44,-39],[25,-26],[53,-110],[-4,-16],[-22,-29]],[[14465,81493],[-4,-9],[-11,0],[-18,10],[-13,21],[-16,66],[2,12],[5,12],[25,24],[10,-3],[3,-18],[15,-39],[5,-11],[0,-46],[-3,-19]],[[14342,82027],[-21,-7],[7,31],[2,18],[-4,17],[-3,33],[-1,79],[21,49],[33,1],[-1,-25],[-14,-111],[-7,-51],[-5,-19],[-7,-15]],[[14079,82368],[-4,-5],[-11,8],[-11,15],[-19,43],[-6,18],[-4,29],[3,5],[9,-3],[5,-5],[30,-70],[8,-35]],[[14120,82440],[-2,-4],[-28,0],[-8,6],[-5,12],[-2,19],[4,22],[17,42],[1,18],[3,8],[12,-22],[5,-19],[3,-82]],[[11377,91921],[-23,-21],[-37,22],[-9,11],[42,30],[19,-1],[39,-18],[14,-15],[-45,-8]],[[33056,56951],[-17,-12],[-3,58],[5,15],[30,47],[8,8],[6,-9],[-2,-13],[14,-21],[-3,-26],[-16,-29],[-22,-18]],[[27741,50130],[-5,-22],[-27,2],[-7,7],[0,25],[6,81],[7,34],[22,32],[18,16],[23,-3],[25,-29],[-29,-55],[-16,-8],[-6,-7],[-11,-73]],[[35602,51017],[-30,-11],[38,144],[34,67],[1,133],[36,118],[34,49],[47,14],[26,-72],[-32,-205],[-9,-1],[-43,-108],[-48,-75],[-54,-53]],[[28037,56597],[-12,-25],[-5,24],[9,25],[3,0],[5,-24]],[[28080,52564],[-15,-4],[-7,28],[19,32],[6,6],[-3,-62]],[[28301,53307],[-7,-13],[-14,23],[-5,29],[8,21],[12,-7],[5,-18],[1,-35]],[[33105,57107],[-33,-19],[0,15],[9,27],[17,7],[7,10],[11,6],[6,-1],[7,-8],[-16,-15],[-8,-22]],[[37639,50149],[-28,-56],[9,65],[-4,45],[3,35],[19,34],[6,5],[-2,-41],[1,-13],[-4,-74]],[[39237,44298],[-10,-12],[-2,36],[29,47],[4,54],[15,-25],[4,-28],[0,-12],[-40,-60]],[[39193,44081],[-9,-33],[-11,5],[-5,22],[-8,22],[4,18],[8,10],[20,-2],[1,-42]],[[37532,51083],[-18,-27],[-5,-15],[-15,11],[3,16],[4,-2],[5,47],[25,-6],[1,-24]],[[36183,51997],[12,-30],[-40,-120],[-21,-18],[-24,-3],[-31,36],[-48,-3],[-15,9],[-1,52],[20,56],[40,-3],[69,45],[39,-21]],[[36028,52959],[-28,-26],[-16,10],[-15,69],[5,57],[20,19],[16,-4],[6,-8],[14,-93],[-2,-24]],[[35929,51767],[-76,-113],[-25,37],[-6,22],[5,21],[-1,9],[8,39],[43,32],[21,5],[27,-10],[5,-27],[-1,-15]],[[36265,51778],[-73,-18],[-34,29],[8,24],[25,38],[30,28],[28,12],[28,-15],[8,-33],[-2,-32],[-18,-33]],[[35992,51923],[-5,-85],[-50,36],[4,87],[24,24],[20,46],[7,56],[1,77],[8,14],[6,5],[6,-5],[3,-116],[2,-70],[-26,-69]],[[36068,52069],[-30,-19],[-5,18],[0,72],[8,40],[38,11],[4,12],[11,7],[7,-25],[-1,-41],[-32,-75]],[[24907,51398],[-15,-1],[-43,56],[3,55],[17,37],[56,18],[23,-34],[-2,-66],[-19,-48],[-15,-9],[-5,-8]],[[25161,51318],[-33,-24],[-11,11],[-7,11],[-2,15],[19,35],[17,20],[16,41],[29,24],[9,-6],[5,-8],[2,-14],[-9,-33],[-18,-23],[-17,-49]],[[27332,56067],[-15,-3],[-31,24],[-23,48],[-2,15],[1,16],[12,49],[17,17],[6,0],[16,-57],[-11,-21],[5,-35],[22,-26],[3,-27]],[[24604,51577],[-28,-10],[-24,20],[-10,31],[-2,46],[2,15],[52,16],[17,-38],[0,-57],[-7,-23]],[[24882,51071],[-11,-1],[-16,24],[12,45],[13,-11],[9,-12],[5,-18],[-12,-27]],[[24646,51857],[18,-37],[9,-106],[56,-112],[7,-62],[-5,-29],[2,-11],[27,-44],[18,-47],[-30,-108],[-62,-46],[-67,2],[-13,12],[-18,41],[-4,37],[11,35],[34,54],[53,48],[6,37],[-21,35],[-14,71],[-34,50],[-16,152],[-11,8],[-23,-21],[-11,18],[-2,10],[25,35],[5,24],[36,12],[15,-20],[9,-38]],[[24840,51650],[-13,-17],[-52,20],[-16,33],[13,46],[11,18],[31,-17],[32,-51],[-6,-32]],[[19644,36209],[-43,-18],[2,32],[11,27],[31,-16],[15,-3],[-16,-22]],[[20416,64291],[-8,-47],[-21,19],[-8,30],[-1,48],[11,9],[17,-21],[4,-14],[6,-24]],[[19190,62638],[-17,-12],[-24,36],[6,27],[14,19],[14,-35],[7,-35]],[[19287,66246],[8,-65],[-15,10],[-18,35],[-13,44],[1,20],[3,4],[26,-26],[8,-22]],[[19498,65755],[-6,-3],[-14,31],[-6,75],[3,8],[27,-93],[-1,-11],[-3,-7]],[[18568,68578],[-2,-10],[-29,35],[-64,122],[-23,61],[-4,28],[2,64],[22,-8],[25,-42],[12,-40],[0,-45],[48,-21],[7,-98],[6,-46]],[[18140,70106],[-9,-2],[-17,26],[1,25],[4,2],[17,-21],[6,-19],[-2,-11]],[[18008,68012],[-4,-19],[-47,39],[26,67],[-4,70],[12,15],[10,-23],[13,-90],[-6,-59]],[[18972,65894],[-3,-27],[-84,108],[20,10],[23,-8],[44,-83]],[[19139,66831],[3,-20],[-2,-6],[-11,14],[-19,-86],[-6,-8],[12,118],[12,17],[13,3],[-2,-32]],[[18832,68551],[-21,-136],[-21,2],[-44,43],[-5,27],[17,157],[13,21],[39,21],[6,-19],[4,-47],[12,-69]],[[18873,65982],[-6,-7],[-24,67],[-3,46],[-10,19],[-24,15],[21,93],[17,193],[8,-35],[-18,-195],[1,-26],[8,-24],[10,-40],[1,-44],[16,-40],[3,-22]],[[96382,25818],[12,-70],[-25,14],[-11,20],[20,35],[4,1]],[[84531,57952],[-7,-3],[13,61],[10,-9],[3,-6],[0,-28],[-19,-15]],[[84799,57593],[2,-29],[-35,75],[-8,53],[12,-2],[16,-20],[13,-77]],[[84148,56111],[3,-14],[-1,-14],[-29,-27],[-9,1],[-3,44],[7,21],[14,-18],[12,21],[6,-14]],[[84939,55853],[-4,-32],[-17,77],[-7,19],[9,65],[19,-32],[0,-97]],[[84991,57369],[-5,-15],[-8,31],[7,68],[5,11],[7,-43],[-6,-52]],[[84613,58463],[-35,-4],[-15,26],[-19,78],[21,16],[21,-4],[15,-27],[15,-52],[-3,-33]],[[84681,58522],[-5,-30],[-8,8],[-7,14],[-11,44],[-3,33],[16,-18],[9,-33],[9,-18]],[[87449,48136],[-7,-4],[0,28],[8,25],[8,14],[9,1],[-18,-64]],[[87409,47955],[-5,-9],[-7,18],[-1,12],[10,32],[9,18],[11,1],[-3,-26],[-14,-46]],[[85551,50151],[-14,-48],[-24,2],[-4,7],[29,30],[13,9]],[[85445,49933],[7,-25],[-28,16],[-12,25],[12,15],[7,4],[14,-35]],[[84458,48402],[-3,-28],[-10,32],[-9,15],[1,34],[13,-12],[8,-41]],[[84340,48806],[-1,-58],[-11,3],[-9,20],[-3,20],[1,15],[5,13],[18,-13]],[[83548,47742],[-29,-3],[-8,5],[-3,56],[32,-24],[10,-2],[-2,-32]],[[84160,46920],[-9,-34],[-16,10],[4,33],[8,19],[22,28],[22,5],[13,-10],[4,-11],[-34,-11],[-14,-29]],[[82654,47023],[-7,-1],[-12,11],[5,24],[-7,40],[2,32],[16,18],[33,2],[1,-24],[-31,-102]],[[69450,90150],[-49,-7],[-54,44],[-51,86],[10,21],[31,-7],[51,-2],[33,-14],[44,-9],[-5,-40],[0,-16],[14,-17],[-14,-30],[-10,-9]],[[76903,95736],[-15,-6],[-13,4],[-4,7],[1,29],[25,38],[1,12],[12,6],[31,-7],[15,-16],[2,-7],[-21,-38],[-34,-22]],[[77815,97703],[-61,-7],[7,40],[4,11],[31,6],[20,-10],[44,-7],[-45,-33]],[[94851,91532],[-12,-1],[9,39],[1,17],[-27,28],[-50,21],[-13,17],[-3,50],[11,78],[-23,42],[8,37],[59,41],[24,31],[27,25],[4,-3],[27,-24],[-2,-52],[-20,-37],[-46,-14],[-6,-25],[6,-44],[1,-57],[5,-51],[28,-52],[6,-26],[-3,-25],[-11,-15]],[[86032,70078],[-9,-10],[6,45],[22,40],[2,-26],[-21,-49]],[[85115,72864],[-4,-38],[-18,25],[-5,82],[19,-24],[8,-45]],[[84695,74617],[-16,-17],[0,30],[12,25],[12,3],[-8,-41]],[[83680,68021],[-24,-13],[-9,0],[0,42],[20,39],[8,-13],[5,-21],[0,-34]],[[81542,64979],[3,-27],[-22,41],[-6,2],[-11,15],[-6,25],[17,1],[16,-30],[9,-27]],[[81330,64286],[-6,-11],[-8,20],[-2,30],[-6,16],[14,21],[6,22],[15,-4],[7,-7],[-14,-23],[-3,-10],[-3,-54]],[[81289,64308],[-27,-12],[-6,2],[10,30],[24,21],[-1,-41]],[[81665,64637],[-33,0],[-7,5],[-4,13],[12,22],[45,30],[-11,-32],[-2,-38]],[[79768,57832],[-23,-35],[-2,29],[20,19],[7,15],[6,0],[-8,-28]],[[78699,58017],[-11,-22],[-16,46],[0,12],[27,-36]],[[52385,83359],[-11,-14],[-26,2],[-15,13],[5,14],[14,11],[11,2],[18,-7],[4,-21]],[[51870,82708],[-25,-2],[7,15],[24,12],[13,0],[-19,-25]],[[25947,92747],[11,-12],[64,16],[54,18],[84,45],[50,15],[152,0],[26,-9],[-11,-26],[-7,-8],[5,-11],[17,-16],[33,-17],[13,16],[9,37],[23,153],[9,46],[5,44],[-1,41],[-11,26],[-39,16],[-53,-3],[-28,4],[-33,8],[-25,13],[-16,17],[-31,52],[-24,28],[-60,52],[-28,17],[14,21],[55,23],[33,23],[39,65],[23,11],[84,-9],[114,-51],[72,-44],[19,-5],[0,8],[-18,21],[-82,54],[-38,40],[-17,29],[8,12],[46,13],[6,14],[-63,17],[-31,0],[-26,-12],[-28,-1],[-51,22],[-14,13],[-30,38],[-15,34],[-17,21],[-7,16],[-3,51],[2,30],[7,26],[12,22],[33,39],[19,12],[35,5],[76,-20],[203,-71],[-5,23],[-227,96],[-81,24],[-20,35],[122,133],[111,31],[56,38],[91,2],[85,-25],[1,7],[-38,46],[3,12],[48,27],[89,32],[108,26],[22,13],[28,9],[51,9],[127,3],[71,-3],[95,-20],[55,-35],[17,-21],[30,-69],[24,-95],[35,-40],[56,-21],[39,-24],[22,-26],[6,-32],[-10,-39],[7,-40],[25,-41],[20,-24],[42,-26],[1,-14],[-13,-16],[-28,-23],[-70,-69],[-90,-76],[-64,-66],[-3,-20],[133,104],[42,-4],[2,-15],[-28,-50],[-33,-45],[-33,-29],[6,-11],[63,-50],[-11,-9],[-31,5],[-12,-5],[-9,-9],[-6,-14],[0,-20],[5,-25],[-1,-18],[-6,-13],[7,-5],[18,2],[16,10],[27,34],[88,93],[57,34],[18,4],[52,-23],[13,1],[-58,72],[-5,18],[12,26],[7,9],[32,20],[26,10],[15,-4],[24,-36],[11,-25],[19,-11],[44,14],[28,30],[36,-20],[54,-48],[-5,-48],[0,-49],[3,-35],[65,-65],[44,-28],[9,-1],[-2,10],[-9,22],[-24,21],[-23,34],[-20,40],[12,95],[34,50],[32,-13],[43,-29],[34,-2],[53,3],[108,-58],[58,-1],[-5,23],[-44,12],[-64,31],[-101,38],[-46,44],[-8,20],[1,22],[6,20],[10,16],[20,17],[97,50],[69,22],[51,7],[87,-1],[100,-9],[55,-14],[62,-36],[79,-35],[28,-6],[33,0],[38,8],[36,-3],[114,-52],[30,-27],[18,-32],[14,-32],[8,-31],[-3,-24],[-95,-108],[-41,-18],[-28,-41],[-40,-77],[-35,-42],[-3,-8],[7,-2],[21,19],[36,53],[26,46],[47,38],[78,45],[68,22],[58,-2],[49,-6],[39,-11],[24,-10],[7,-7],[16,-34],[-1,-23],[-10,-26],[-19,-29],[-84,-33],[-47,-25],[-29,-10],[-87,-9],[4,-10],[65,-14],[71,4],[-1,-16],[-34,-44],[-11,-38],[9,-31],[-1,-26],[-26,-53],[-28,-48],[10,-7],[66,69],[18,76],[27,66],[31,37],[23,14],[74,5],[40,39],[35,12],[15,1],[29,-15],[-1,-15],[-43,-70],[-92,-112],[38,13],[25,27],[34,26],[38,40],[25,-36],[39,-27],[23,-61],[38,-29],[23,-23],[-3,39],[-33,77],[9,31],[25,16],[79,65],[55,-22],[34,-19],[17,5],[43,-3],[69,-10],[67,-19],[66,-25],[50,-31],[35,-34],[21,-24],[8,-14],[12,-34],[-9,-23],[-50,-53],[-27,-24],[-27,-11],[-73,11],[-23,-7],[-24,-16],[-76,-73],[-42,-32],[-41,-20],[-10,-10],[89,1],[24,21],[21,41],[39,42],[74,19],[103,-41],[52,2],[39,41],[44,28],[17,6],[9,-3],[33,-30],[10,-26],[0,-60],[-5,-18],[-29,-46],[-73,-68],[-47,-25],[-52,-14],[-57,-23],[-20,-19],[-20,-26],[-20,-18],[-25,-14],[33,-22],[12,1],[13,13],[33,50],[24,23],[14,4],[14,-2],[14,-10],[14,-18],[-1,-43],[-42,-171],[7,0],[26,47],[74,178],[18,36],[36,36],[80,54],[63,29],[70,24],[37,9],[43,-6],[28,-28],[37,-5],[46,7],[30,-4],[33,-11],[29,-20],[48,-24],[110,-44],[14,-10],[12,-16],[12,-25],[-1,-24],[-15,-23],[-18,-15],[-22,-5],[-23,-13],[-42,-34],[-13,-6],[-66,-14],[-61,-7],[-38,-14],[-73,-37],[-101,-68],[1,-16],[40,-8],[33,10],[45,47],[42,18],[66,15],[91,12],[39,-2],[7,-2],[5,-11],[3,-20],[-15,-26],[-17,-12],[-47,-58],[31,-15],[42,-7],[24,16],[22,36],[25,19],[27,4],[24,9],[21,15],[5,9],[-30,19],[-2,11],[12,28],[22,30],[23,19],[17,2],[57,-21],[39,-35],[98,-107],[12,-21],[34,-79],[7,-35],[-6,-25],[-8,-15],[-10,-5],[-22,-1],[-130,33],[-60,-4],[-26,-9],[-21,-14],[-16,-17],[-12,-21],[-23,-12],[-82,0],[-47,-12],[-80,-28],[-28,-16],[-7,-20],[49,4],[81,26],[75,8],[127,-59],[41,-9],[23,9],[28,2],[101,-4],[35,-7],[51,-22],[78,-49],[15,-14],[9,-15],[2,-16],[0,-39],[-8,-13],[-27,-9],[-112,10],[-35,9],[-42,-11],[-34,4],[-44,15],[-48,28],[-72,-26],[-58,17],[-59,-15],[-117,-62],[13,-11],[160,53],[31,-3],[51,-20],[80,-38],[23,-16],[0,-60],[-12,-41],[-25,-45],[-37,6],[-85,28],[-35,4],[-26,-4],[-34,-19],[-17,0],[-137,36],[-31,2],[-3,-4],[6,-7],[125,-56],[92,-6],[57,-10],[34,-17],[16,-13],[2,-37],[30,-38],[28,-15],[18,-1],[30,14],[30,2],[25,-9],[31,-21],[37,-6],[33,-13],[26,-2],[71,6],[31,-8],[8,-7],[-13,-12],[-66,-29],[-10,-28],[37,-36],[20,-28],[-1,-20],[-20,-47],[-5,-19],[6,-2],[48,38],[7,-4],[5,-53],[6,3],[16,43],[-7,58],[28,23],[88,18],[-15,-91],[-2,-47],[-39,-79],[-32,-25],[1,-6],[23,-10],[14,-1],[14,13],[33,60],[66,64],[12,1],[0,-23],[-9,-42],[31,-20],[29,19],[16,17],[37,-2],[17,-8],[5,-19],[-17,-79],[3,-19],[39,-52],[4,3],[-8,25],[-8,62],[8,28],[32,34],[65,50],[25,10],[15,-7],[24,-24],[-8,-14],[-26,-15],[-19,-27],[-13,-39],[14,-21],[53,-2],[54,32],[30,-16],[37,-42],[66,-67],[39,18],[47,-51],[-64,-40],[20,-86],[-82,4],[-46,-7],[-31,8],[-34,-3],[31,-20],[59,-9],[6,-25],[46,0],[35,5],[63,-1],[4,30],[41,17],[23,19],[20,-12],[57,-12],[77,-59],[-34,-35],[-9,-33],[-12,-28],[-6,-25],[-14,-17],[-109,-99],[18,-1],[46,24],[91,35],[50,15],[36,-10],[18,0],[16,13],[30,-15],[62,-13],[71,81],[43,-16],[40,-50],[86,-89],[45,-51],[15,-23],[-2,-23],[-41,-25],[-20,-5],[-55,46],[-50,24],[-31,-3],[-30,-18],[10,-9],[121,-71],[21,-52],[2,-23],[-81,-35],[-26,-2],[-57,17],[-32,31],[-28,11],[-37,3],[-12,-6],[41,-52],[-4,-16],[-21,-10],[-11,-25],[81,-46],[61,-46],[9,-19],[-41,-13],[-29,-4],[-62,7],[-35,10],[-9,-11],[35,-24],[14,-16],[10,-23],[7,-22],[1,-20],[-28,-17],[-35,-46],[-14,-48],[-31,-5],[-13,9],[-42,-15],[-55,21],[-20,22],[-61,90],[-1,-10],[15,-46],[-3,-27],[-64,-20],[0,-7],[39,-15],[48,-11],[-8,-42],[1,-181],[-11,-64],[-23,-56],[-34,-53],[-36,35],[-15,36],[-12,18],[-17,15],[-23,7],[-23,0],[-25,-32],[-28,28],[-26,33],[10,88],[11,44],[-4,-1],[-16,-20],[-36,-64],[-23,-79],[-31,30],[-28,38],[-22,38],[-37,43],[-36,51],[-19,60],[-8,13],[-21,50],[-8,14],[-8,5],[-17,31],[6,34],[28,39],[26,28],[42,28],[50,16],[22,36],[28,66],[30,46],[33,26],[-16,4],[-42,-22],[-30,-32],[-35,-54],[-32,-34],[-84,-40],[-30,-8],[-36,-4],[-78,5],[-18,14],[9,38],[56,68],[-9,5],[-20,-24],[-27,-17],[-23,-9],[-34,3],[-41,43],[-19,13],[-39,15],[-16,14],[-66,104],[-13,28],[-7,27],[-21,23],[-35,18],[-8,-3],[13,-23],[0,-20],[-30,-12],[-31,4],[-33,21],[-3,-28],[35,-51],[1,-64],[-10,-6],[-24,-4],[-16,8],[-53,48],[-50,33],[-36,18],[-4,-13],[23,-57],[27,-57],[44,-47],[69,-56],[32,-32],[-25,-46],[-22,-14],[-13,-5],[-42,0],[-77,25],[-37,28],[-52,67],[-87,69],[-19,-1],[-61,-28],[9,-4],[40,-2],[29,-9],[69,-55],[6,-23],[-18,-25],[1,-32],[20,-39],[20,-25],[41,-18],[20,-2],[8,-11],[-25,-87],[-2,-24],[7,-10],[9,0],[52,35],[22,9],[19,2],[22,-10],[26,-22],[14,-23],[5,-23],[7,-15],[52,-24],[-5,-12],[-53,-37],[-3,-5],[11,-3],[33,-22],[31,-34],[19,-41],[4,-21],[0,-19],[4,-11],[16,-2],[7,7],[7,-1],[9,-10],[8,-32],[19,-92],[10,-25],[5,-1],[3,92],[9,15],[33,-16],[47,-36],[34,-32],[4,-15],[-25,-29],[5,-13],[19,-19],[17,7],[12,33],[22,32],[25,22],[48,-18],[39,-48],[6,-16],[26,-21],[22,11],[44,-54],[-21,-25],[-45,-36],[-5,-12],[11,2],[87,1],[23,-15],[5,-28],[-38,-76],[-35,6],[-47,2],[-24,-4],[4,-10],[65,-35],[18,-29],[25,-30],[12,-25],[-1,-11],[-10,-17],[5,-6],[44,-11],[28,10],[34,4],[30,-3],[3,-11],[-5,-28],[-31,-25],[9,-7],[36,8],[17,-12],[21,-62],[25,-48],[-20,-11],[-22,-5],[3,-61],[14,-64],[1,-60],[-5,-54],[-20,-12],[-22,1],[-8,14],[-53,161],[-13,29],[-16,25],[-56,70],[2,-11],[14,-32],[12,-48],[16,-96],[8,-61],[-4,-23],[-11,-6],[-3,-11],[5,-17],[43,-63],[21,-38],[15,-39],[13,-26],[13,-14],[-3,-11],[-19,-9],[-32,-4],[-16,5],[-58,36],[-8,-11],[32,-133],[-1,-32],[-16,-11],[-20,13],[-24,38],[-36,42],[-49,46],[-47,37],[-11,-1],[-7,-11],[-7,-2],[-9,7],[-16,28],[-16,18],[-68,62],[-7,0],[7,-18],[6,-41],[-7,-8],[-18,3],[-34,18],[-23,40],[-28,70],[-16,26],[-1,-17],[8,-67],[-1,-22],[-17,-6],[-8,6],[-7,18],[-6,29],[-17,23],[-25,15],[-14,16],[-7,29],[-5,6],[-45,-6],[-23,20],[-65,81],[-59,88],[-38,46],[-14,12],[20,-57],[22,-84],[6,-39],[-10,-1],[-22,17],[-113,108],[-69,51],[-39,9],[-63,6],[-14,-28],[34,-62],[33,-47],[32,-32],[50,-61],[46,-79],[19,-25],[62,-34],[33,-9],[34,-2],[3,-12],[-16,-23],[-4,-14],[75,-35],[28,-20],[27,-32],[15,-8],[65,-82],[16,-14],[58,-26],[19,-17],[32,-53],[20,-27],[28,-64],[21,-29],[52,-32],[22,-10],[10,-12],[-7,-29],[-6,-12],[-30,-20],[5,-28],[17,-50],[-1,-31],[-18,-12],[-37,-14],[-19,1],[-28,12],[-35,20],[-70,50],[-105,35],[-39,18],[-13,17],[-20,10],[-260,48],[-44,12],[-27,15],[-25,22],[-100,49],[-12,11],[-67,85],[-49,100],[-17,13],[-54,13],[-45,-8],[-30,-11],[-46,4],[-30,16],[-63,45],[-64,23],[-56,39],[-29,14],[3,10],[41,58],[-12,0],[-73,-45],[-26,14],[-43,35],[-32,35],[-66,97],[-38,35],[5,8],[43,3],[34,-3],[23,8],[44,39],[19,25],[2,14],[-37,4],[-8,7],[-7,16],[-17,21],[-27,25],[-31,10],[-107,-9],[-19,11],[0,17],[21,47],[12,19],[3,10],[-4,3],[-14,-2],[-62,-42],[-14,3],[-24,45],[-15,51],[-11,17],[-14,6],[-51,50],[-72,95],[-27,30],[-30,27],[-21,11],[3,14],[46,79],[2,12],[-40,-4],[-59,16],[-28,-20],[-18,-1],[-21,11],[-12,-4],[-11,-65],[-9,-16],[-12,-9],[-11,2],[-9,11],[0,15],[-9,79],[-21,12],[-58,3],[-13,6],[-14,15],[-12,27],[-10,40],[-12,22],[-13,3],[-11,-3],[-8,-10],[-18,-6],[-28,-3],[-1,-15],[27,-28],[25,-40],[25,-52],[-15,-35],[-55,-18],[-48,-5],[-41,7],[-32,12],[-44,29],[-63,-9],[-15,-76],[-13,-4],[-60,1],[-24,-6],[-80,-42],[-25,-6],[-18,5],[-18,-11],[-27,-24],[-37,-2],[-47,19],[-39,8],[-33,-3],[-33,12],[-34,25],[-29,11],[-36,-2],[-9,4],[-54,55],[-17,22],[-35,68],[-7,27],[-1,29],[3,21],[13,32],[13,76],[12,25],[17,23],[32,29],[120,51],[24,20],[-1,14],[-27,62],[0,16],[9,9],[19,37],[9,10],[21,6],[44,-19],[37,-7],[50,-3],[83,-25],[115,-49],[66,-33],[50,-50],[36,-49],[5,-25],[-16,-38],[-9,-11],[1,-13],[9,-15],[29,-21],[7,8],[-3,26],[6,22],[15,17],[1,23],[-11,28],[-13,24],[-17,21],[-74,70],[-7,23],[25,11],[108,-24],[42,6],[16,27],[17,19],[18,10],[37,4],[51,-13],[25,-2],[23,5],[29,15],[42,50],[28,11],[41,8],[31,1],[56,-20],[35,0],[-3,34],[-23,63],[-28,66],[-23,22],[-57,41],[-68,78],[-34,49],[-9,24],[4,16],[12,24],[123,86],[97,86],[42,44],[21,31],[21,22],[22,14],[47,16],[13,22],[3,36],[8,32],[44,85],[33,23],[51,16],[33,20],[41,70],[-4,17],[-19,13],[-14,20],[-62,182],[-42,89],[-49,76],[-45,94],[-73,92],[-1,24],[13,28],[-6,6],[-76,-40],[-18,-2],[-29,17],[-20,22],[-16,38],[1,20],[11,19],[15,47],[0,24],[-5,22],[-6,16],[-9,9],[-23,6],[-38,2],[-13,-8],[43,-71],[-7,-17],[-54,-7],[-24,3],[-22,8],[-20,14],[-63,74],[-13,27],[4,20],[-5,11],[-13,-7],[-17,0],[-24,7],[-5,8],[44,40],[3,12],[-21,13],[-30,3],[-8,12],[10,12],[41,22],[15,14],[-25,11],[-13,1],[-28,-24],[-42,-48],[-30,-18],[-41,22],[-27,8],[-18,-5],[-28,-38],[-61,-27],[-109,-65],[-46,-20],[-51,4],[-9,13],[0,22],[4,18],[6,14],[2,18],[-4,73],[9,21],[17,12],[32,12],[81,-15],[37,3],[27,17],[26,24],[27,33],[5,31],[-28,50],[-10,11],[-72,39],[-40,14],[-35,6],[-26,11],[-16,17],[-15,27],[-1,18],[2,24],[15,17],[64,20],[0,5],[-53,14],[-25,-2],[-21,-16],[-27,-37],[-16,-11],[-48,22],[-29,3],[-19,11],[-11,10],[7,10],[24,11],[41,32],[3,18],[-29,28],[-15,7],[-60,10],[-72,-10],[-28,5],[-12,32],[-7,37],[-4,44],[-13,75],[-14,39],[-19,4],[-88,-16],[-20,0],[-15,6],[-57,50],[-24,18],[-13,4],[-42,53],[-16,10],[-19,26],[-22,42],[-24,13],[-26,-16],[-26,-24],[-26,-30],[-14,-26],[-2,-21],[16,-16],[91,-28],[24,-18],[19,-30],[15,-36],[10,-43],[-1,-32],[-11,-22],[-20,-19],[-57,-30],[-58,-17],[-59,-5],[-28,4],[-152,59],[-27,0],[-35,8],[-79,24],[-43,3],[-76,20],[-128,11],[-25,-9],[34,-27],[30,-14],[25,0],[37,-24],[48,-47],[28,-29],[22,-34],[1,-12],[-23,-23],[-178,122],[-109,-42],[-51,-16],[-43,-3],[-54,17],[-121,59],[-46,20],[-16,3],[-106,-25],[-91,-1],[-185,24],[-67,17],[-18,17],[-22,8],[-40,0],[-105,19],[-97,-43],[-116,40],[-35,23],[-11,16],[-33,66],[-5,36],[10,32],[9,22],[10,12],[-64,-37],[-22,-6],[-29,-1],[-87,13],[-14,-7],[5,-12],[23,-19],[2,-12],[-48,-8],[-73,9],[-33,-4],[-14,-5],[-33,-30],[-14,-7],[-17,3],[-77,67],[-62,43],[-73,16],[-33,14],[-18,16],[-100,137],[-14,29],[-32,107],[-10,23],[-13,15],[25,3],[95,-13],[91,0],[50,-8],[57,-27],[76,-19],[53,-4],[87,7],[98,18],[11,14],[-63,24],[-57,31],[-52,41],[-31,17],[-53,11],[-146,8],[-137,27],[-93,37],[-77,41],[-31,22],[-11,18],[-12,54],[-13,90],[-12,61],[-12,31],[-1,27],[26,57],[74,63],[2,10],[-15,3],[-31,16],[-10,23],[-4,37],[0,32],[3,25],[13,33],[32,57],[46,71],[49,65],[9,22],[4,58],[7,43],[6,30],[11,22],[31,43],[38,41],[60,34],[5,13],[1,18],[3,13],[6,9],[149,110],[68,45],[57,29],[69,21],[195,43],[101,12],[127,-3],[233,-24],[28,-17],[7,-9],[10,-24],[-7,-16],[-64,-52],[-80,-44],[-53,-38],[-88,-86],[-24,-30],[-110,-173],[-26,-28],[-15,-23],[-11,-63],[4,-22],[17,-36],[59,-79],[16,-36],[0,-34],[-7,-81],[-1,-41],[3,-39],[12,-56],[22,-73],[51,-74],[79,-74],[59,-50],[59,-36],[69,-54],[15,-26],[-32,-29],[-74,-44],[-98,-19],[-52,-18],[-65,-39],[-82,-30],[-32,-19]],[[30697,99663],[227,-10],[73,4],[84,-26],[51,-3],[83,5],[61,-6],[226,-6],[47,-10],[-1,-11],[-48,-26],[-66,-25],[-423,-82],[-31,-13],[83,-4],[121,3],[94,9],[111,28],[37,2],[70,13],[137,38],[109,20],[49,-9],[42,-14],[28,-2],[15,11],[23,30],[14,11],[36,7],[22,-1],[35,-14],[40,-33],[36,-23],[20,0],[83,26],[41,3],[96,-9],[39,-12],[7,-12],[-25,-13],[-16,-11],[-6,-10],[14,-11],[58,-23],[83,-51],[-1,-19],[-45,-38],[1,-9],[214,40],[217,-18],[61,-12],[23,-15],[25,-24],[27,-34],[-19,-35],[-95,-55],[-98,-43],[-58,-38],[-88,-22],[-305,-92],[-149,-30],[-85,-30],[-39,-5],[-181,6],[-48,-16],[-26,-28],[-58,-13],[-84,-9],[-172,-7],[-39,-31],[-10,-21],[-17,-16],[-15,-8],[-492,-111],[-10,-18],[50,-8],[63,8],[717,134],[137,9],[128,-10],[-14,-31],[-181,-88],[-231,-80],[-115,-61],[-291,-104],[-237,-105],[-92,-52],[-122,-95],[-42,-23],[-51,-9],[-60,4],[-54,14],[-72,35],[-65,39],[-21,7],[13,-19],[126,-132],[-14,-25],[-232,-27],[-103,-23],[-53,-6],[-38,4],[-36,-2],[-36,-10],[-2,-10],[32,-11],[92,-9],[206,30],[33,-2],[52,-15],[3,-13],[-55,-42],[-166,-50],[21,-2],[48,-18],[-1,-16],[-52,-38],[-25,-12],[-160,-35],[-70,-8],[-62,4],[-281,77],[-99,11],[-94,19],[-69,-3],[-74,-22],[33,-12],[136,-21],[114,-4],[47,-9],[18,-14],[49,-51],[8,-27],[-11,-25],[-15,-18],[-18,-10],[-30,-5],[-111,3],[-41,-6],[-48,-15],[-61,-6],[-109,3],[-128,-22],[-67,-4],[-76,10],[-81,24],[-86,12],[-145,11],[12,-14],[51,-6],[104,-37],[50,-51],[47,-8],[96,-42],[69,-6],[72,-14],[102,18],[68,-3],[-14,-102],[-30,-10],[-164,0],[-79,15],[-34,15],[-76,17],[-68,-10],[-62,2],[-42,-10],[-67,1],[-174,-18],[-92,0],[-68,11],[-79,4],[-90,-4],[7,-12],[38,-4],[55,-19],[52,-29],[43,-13],[51,7],[52,14],[190,23],[84,3],[75,-10],[49,-12],[35,-15],[44,-40],[109,-5],[84,-13],[133,-58],[37,-4],[15,-15],[-28,-38],[-4,-22],[-92,-44],[-144,-12],[-158,4],[-113,-5],[-12,-6],[78,-11],[180,-51],[69,-28],[13,-16],[-100,-61],[-87,-122],[-29,-10],[-30,-3],[-77,2],[-98,-30],[-74,-6],[-134,11],[-154,-1],[-13,-19],[-7,-38],[1,-57],[9,-76],[-8,-56],[-26,-35],[-32,-26],[-58,-25],[-60,-16],[-44,-5],[-75,-1],[-213,-18],[-105,1],[-81,8],[-83,25],[-140,71],[-40,16],[-38,9],[1,-15],[42,-40],[35,-26],[28,-11],[-7,-12],[-62,-20],[-67,-8],[-81,0],[-2,-7],[27,-21],[35,-19],[24,-6],[61,6],[72,24],[44,8],[89,-6],[35,-9],[110,-54],[16,-2],[82,27],[118,1],[44,-21],[16,-43],[2,-34],[-12,-26],[27,-25],[67,-25],[52,-6],[37,14],[56,35],[24,8],[23,-2],[34,-25],[46,-48],[5,-56],[-38,-64],[-46,-42],[-180,-69],[-55,-27],[-43,-28],[-63,-26],[-123,-34],[-64,-6],[-140,-37],[-31,-2],[-45,6],[-9,18],[11,32],[15,30],[19,27],[0,23],[-39,35],[-28,16],[-27,9],[-54,-5],[-30,-10],[-33,-2],[-35,6],[-29,15],[-59,63],[-22,8],[-29,-2],[-25,9],[-23,20],[-38,19],[10,-15],[38,-35],[26,-36],[15,-35],[-7,-27],[-321,-16],[-138,8],[-28,25],[-66,103],[-14,-183],[-241,-30],[-56,5],[-93,20],[-121,50],[-50,33],[-20,32],[-15,18],[-9,3],[-30,-39],[-33,-81],[-83,21],[-104,20],[-38,80],[-2,-115],[-169,15],[-81,-4],[-23,100],[-4,112],[-33,-71],[14,-59],[5,-73],[-72,21],[-157,10],[-56,10],[7,96],[13,97],[202,96],[60,45],[44,18],[69,12],[89,7],[60,-6],[70,6],[82,17],[59,5],[11,6],[-17,9],[-63,62],[-23,14],[-23,6],[-45,3],[-45,27],[-25,24],[-28,32],[-43,62],[-44,69],[22,37],[72,30],[72,21],[73,11],[60,0],[73,-16],[103,-32],[59,-36],[74,-76],[49,-61],[39,-27],[177,-50],[59,-8],[70,4],[143,13],[70,14],[31,16],[16,23],[21,18],[63,41],[96,85],[54,68],[12,22],[11,28],[9,32],[-30,-17],[-167,-167],[-35,-30],[-97,-51],[-42,-8],[-66,2],[-89,23],[-104,-36],[-63,9],[-56,25],[0,118],[-71,95],[78,48],[65,29],[115,77],[26,1],[84,-12],[-46,17],[-45,26],[-100,-7],[35,166],[-67,-124],[-68,-65],[-42,-33],[-46,-18],[-176,-17],[43,61],[40,90],[-42,-34],[-99,-50],[-74,-27],[-61,-14],[-118,4],[-59,25],[17,62],[0,77],[36,35],[54,46],[59,61],[40,63],[158,29],[153,11],[128,34],[63,6],[60,-16],[244,-26],[100,-20],[44,-15],[33,-5],[34,22],[44,21],[152,-2],[42,3],[39,10],[47,20],[56,30],[8,15],[-38,-1],[-39,-8],[-58,-21],[-56,-12],[-57,2],[-115,19],[-200,3],[-102,8],[-47,9],[-27,12],[-23,19],[-20,25],[10,17],[41,10],[35,2],[57,-14],[63,-23],[69,-3],[-24,21],[-88,42],[-60,36],[-51,44],[-40,43],[-87,68],[-70,68],[-50,30],[-52,15],[-160,18],[-32,12],[-76,59],[-20,100],[-34,61],[32,77],[54,35],[318,-27],[135,4],[172,-10],[92,-19],[106,-47],[94,-53],[91,-36],[83,-48],[91,-73],[54,-34],[47,-21],[62,-19],[118,-23],[103,-7],[53,3],[57,16],[41,20],[-45,6],[-119,-3],[-82,11],[-47,23],[-50,31],[-79,59],[-60,39],[-131,63],[-97,62],[-78,60],[-7,25],[56,18],[69,13],[432,40],[258,48],[105,56],[12,13],[346,78],[244,29],[94,5],[85,13],[3,7],[-74,11],[-75,5],[-171,0],[-152,9],[-46,18],[10,28],[14,25],[46,40],[49,31],[209,88],[140,38],[41,25],[-302,-57],[-106,-41],[-106,-62],[-55,-19],[-39,5],[-35,-6],[-31,-16],[-25,-30],[-21,-44],[-19,-30],[-17,-16],[-43,-23],[-104,-44],[-242,-63],[-82,-16],[-70,-3],[-226,-35],[-68,-2],[-76,11],[33,31],[119,56],[32,25],[-77,-5],[-78,-16],[-172,-12],[-69,-23],[-66,-42],[-53,-26],[-40,-11],[-55,-6],[-202,-3],[-45,2],[-116,32],[-103,-11],[-43,2],[-78,23],[-23,14],[3,20],[45,37],[53,35],[170,78],[109,37],[158,31],[369,35],[17,26],[-374,-29],[-318,-36],[-52,-14],[-74,-35],[-235,-129],[-70,-33],[-106,-7],[-81,11],[-63,16],[-109,38],[-83,21],[-39,13],[-23,14],[-18,17],[-15,18],[27,16],[210,33],[284,-6],[128,7],[125,20],[186,51],[201,71],[40,22],[-74,5],[-54,-5],[-131,-26],[-208,-68],[-181,-24],[-448,-13],[-142,-19],[-63,4],[-47,19],[-52,34],[9,28],[107,31],[84,7],[15,7],[-119,30],[-11,15],[69,34],[148,50],[76,15],[137,10],[142,-5],[5,9],[-140,19],[-105,4],[-138,-14],[-369,-80],[-31,2],[-53,14],[15,20],[197,85],[6,13],[-141,-2],[-42,4],[-40,10],[-58,-9],[-75,-27],[-52,-12],[-31,4],[-78,33],[10,27],[62,35],[57,25],[77,23],[126,29],[90,10],[148,0],[70,13],[62,22],[78,36],[86,25],[140,20],[118,-6],[65,-18],[51,-31],[56,-24],[5,19],[46,24],[58,10],[69,-3],[61,-12],[79,-28],[63,-13],[30,0],[38,16],[99,1],[-2,6],[-32,17],[-40,12],[-352,82],[-10,18],[119,17],[74,21],[35,5],[87,43],[57,22],[105,25],[43,-7],[53,-22],[51,-14],[151,-13],[65,-14],[115,-81],[46,-26],[66,-27],[39,-10],[77,-6],[8,15],[-92,38],[-25,22],[11,18],[20,10],[28,1],[72,-17],[192,-56],[288,-67],[110,-15],[68,-24],[62,-29],[61,-20],[11,2],[-57,45],[-139,55],[-371,94],[-147,50],[-72,33],[-53,34],[-1,19],[50,21],[68,17],[85,7],[11,7],[-78,26],[-45,22],[1,16],[93,12],[57,-4],[108,-28],[91,-13],[15,8],[-94,75],[-9,17],[14,9],[33,10],[98,-5],[161,-37],[290,-18],[79,3],[-12,8],[-115,23],[-121,30],[-53,18],[-39,24],[-47,21],[-4,9],[75,16],[196,-3],[182,-24],[155,9],[97,-6],[39,-8],[70,-26],[224,-96],[23,-15],[26,-23],[27,-32],[38,-8],[74,21],[49,21],[-21,20],[-124,46],[-28,20],[-61,34],[-139,59],[-37,28],[-23,24],[383,22],[370,-20],[60,-14],[40,-19],[38,-30],[60,-30],[119,-46],[171,-29],[-33,20],[-127,51],[-58,35],[1,23],[10,18],[20,13],[144,47],[206,15],[24,-3],[161,-73],[76,-30],[53,-12],[2,5],[-74,34],[-56,18],[-6,12],[94,35],[59,9],[251,10],[28,-3],[24,-10],[59,-39],[22,-5]],[[23803,93182],[38,-4],[24,7],[76,-2],[18,-14],[-1,-15],[-9,-24],[6,-21],[51,-40],[47,-28],[42,-34],[63,-72],[13,-21],[10,-22],[16,-80],[2,-31],[-6,-88],[-5,-17],[-16,-20],[5,-8],[50,-23],[39,-46],[21,-15],[49,-24],[9,-9],[12,-16],[28,-66],[46,-59],[3,-13],[-10,-28],[7,-9],[18,-10],[16,5],[14,21],[15,6],[17,-9],[12,-16],[17,-38],[25,-31],[-2,-10],[-12,-8],[-68,-8],[-37,6],[-35,15],[-25,16],[-22,24],[-9,-2],[-12,-20],[-25,-29],[-16,-27],[18,-12],[89,1],[19,-8],[23,-19],[-26,-31],[-60,-53],[-129,-103],[-38,-26],[9,-8],[14,-2],[45,5],[41,14],[51,-6],[22,-12],[-8,-11],[14,-17],[83,-42],[52,8],[53,40],[41,20],[51,-2],[14,-5],[-5,-10],[-38,-22],[-34,-25],[-3,-7],[42,10],[94,-16],[45,-4],[34,4],[31,-6],[29,-17],[9,-11],[-27,-6],[-25,0],[-22,-11],[-18,-20],[-13,-26],[-8,-33],[-19,-13],[-31,6],[-13,9],[7,13],[-9,2],[-25,-10],[-20,0],[-5,-9],[137,-104],[44,-91],[30,-38],[3,-10],[-20,-26],[-1,-19],[9,-56],[-4,-45],[-14,-78],[13,-25],[29,-22],[18,-27],[12,-10],[9,-22],[10,-14],[12,-6],[8,8],[5,20],[11,19],[31,34],[30,54],[5,17],[-5,42],[4,18],[28,64],[9,44],[8,69],[15,48],[32,40],[56,82],[20,16],[22,8],[40,-2],[28,-26],[39,-49],[49,-44],[90,-60],[25,-23],[51,-59],[21,-59],[15,-84],[13,-50],[10,-17],[5,-25],[-1,-34],[-4,-26],[-7,-19],[-11,-11],[-27,-4],[-34,6],[-9,8],[-18,40],[-7,2],[-31,-29],[-4,-16],[12,-54],[-2,-102],[3,-23],[33,-106],[55,-81],[138,-155],[8,-18],[15,-64],[7,-13],[9,-8],[11,-2],[15,6],[51,48],[44,51],[31,27],[18,2],[18,9],[21,17],[13,18],[7,19],[9,77],[8,37],[21,50],[8,14],[107,127],[9,16],[45,147],[17,67],[2,41],[-6,36],[3,30],[12,24],[13,16],[22,17],[13,24],[7,2],[19,0],[24,-16],[17,-3],[113,19],[0,9],[-66,31],[1,16],[5,21],[21,24],[26,7],[6,15],[0,19],[9,31],[-8,11],[-62,42],[-36,-2],[-9,5],[-31,35],[-11,50],[-1,20],[4,33],[4,9],[-2,15],[-8,20],[0,19],[6,16],[-4,19],[-14,22],[-6,18],[15,56],[1,17],[-15,24],[-10,9],[8,6],[25,2],[31,-7],[36,-18],[43,0],[52,17],[52,9],[91,-4],[21,-5],[90,-52],[70,-26],[32,3],[156,-11],[68,6],[35,-3],[68,-28],[-4,-24],[-30,-39],[-38,-8],[-34,-14],[32,-21],[92,-28],[22,-44],[6,-21],[-11,-18],[6,-10],[21,0],[55,16],[61,-10],[89,-35],[10,-7],[15,-27],[-2,-11],[-78,-67],[-41,-27],[-54,-27],[-1,-15],[75,-3],[58,-7],[27,-9],[14,-13],[19,-27],[3,-22],[-2,-29],[-6,-20],[-69,-59],[-31,-18],[-53,-21],[-23,-17],[-26,3],[-28,20],[-28,5],[-52,-17],[-29,1],[-13,-6],[-2,-13],[25,-37],[14,-14],[6,-11],[-11,-18],[3,-6],[8,-7],[47,-80],[10,-6],[10,3],[20,23],[13,9],[5,-1],[0,-12],[-22,-70],[-2,-19],[0,-17],[11,-35],[23,-38],[30,-35],[45,-46],[60,-49],[22,-24],[33,-56],[7,-22],[-9,-59],[-24,-97],[-15,-55],[-7,-14],[-45,-39],[-26,-9],[-42,1],[-14,-8],[-22,-31],[-30,-55],[-24,-35],[-17,-14],[-32,-17],[-50,-51],[-24,-20],[-86,-21],[-69,-68],[-28,-23],[-30,-12],[-32,-2],[-19,11],[-10,42],[-7,14],[-24,29],[-50,83],[-22,29],[-14,6],[-30,-5],[-14,3],[-33,26],[-11,17],[1,7],[25,9],[-11,14],[-43,37],[-18,20],[-2,6],[-43,26],[-43,7],[-53,-42],[-21,-29],[1,-9],[26,-11],[11,6],[22,26],[11,8],[33,-4],[28,-18],[10,-16],[4,-11],[75,-83],[26,-17],[12,-20],[8,-33],[16,-37],[36,-61],[39,-75],[8,-30],[-20,-14],[-10,-1],[-30,11],[-78,35],[-9,-1],[-20,-18],[-17,-42],[-5,-4],[-42,17],[-78,36],[-52,31],[-27,26],[-32,41],[-37,56],[-45,17],[-52,-20],[-76,-7],[-158,6],[-21,-5],[-8,-7],[14,-30],[-4,-9],[-10,-6],[-3,-9],[18,-32],[27,-23],[79,-30],[52,-25],[32,-22],[10,-19],[1,-20],[-15,-41],[-8,-15],[-183,-203],[-70,-82],[-35,-50],[-32,-33],[-27,-17],[-45,-9],[-62,-2],[-81,8],[-42,26],[-76,70],[-54,41],[-23,14],[-20,39],[-18,7],[-39,7],[-39,21],[-92,70],[-48,28],[-44,15],[-39,3],[-15,-4],[27,-36],[-12,-2],[-31,8],[-32,0],[-55,26],[-55,-4],[-39,5],[-48,14],[-51,7],[-82,0],[-29,-3],[-5,-7],[40,-31],[68,-37],[-9,32],[2,8],[23,11],[107,-19],[122,-42],[31,-4],[34,-15],[38,-25],[52,-51],[99,-116],[32,-29],[43,-27],[215,-40],[75,0],[149,-11],[79,-21],[22,-15],[7,-51],[-7,-26],[-43,-79],[-27,-58],[-168,-245],[-22,-57],[-9,-34],[-30,-34],[-76,-55],[-76,-46],[-46,-10],[-41,11],[-26,14],[-39,45],[-3,-4],[29,-72],[-7,-7],[-23,9],[-53,32],[-17,-6],[-10,-9],[-14,0],[-18,10],[-32,26],[-9,13],[-7,40],[-6,7],[-64,-23],[-10,-7],[26,-16],[9,-12],[25,-58],[2,-13],[-19,-8],[-61,23],[-7,-2],[30,-59],[12,-27],[1,-15],[-39,-66],[-25,-27],[-35,-10],[-21,6],[-24,17],[-18,-2],[-11,-22],[-20,-15],[-29,-9],[-37,4],[-45,17],[-120,62],[-37,9],[-70,9],[-9,9],[1,8],[10,8],[-3,7],[-15,6],[-15,-6],[-16,-16],[-28,-5],[-40,7],[-59,24],[-116,62],[-128,53],[-74,68],[28,-62],[-3,-20],[-14,-19],[-2,-18],[29,-44],[40,-15],[40,1],[1,7],[-16,11],[-15,16],[-7,24],[7,4],[36,-12],[23,-15],[177,-81],[53,-15],[40,-15],[11,-10],[-14,-20],[-71,-50],[-1,-8],[49,4],[59,45],[33,20],[32,13],[43,-22],[55,-56],[44,-32],[63,-18],[37,-19],[62,-53],[10,-27],[6,-111],[-2,-27],[-8,-27],[-14,-26],[-26,-15],[-38,-3],[-30,-11],[-65,-59],[-28,-9],[-117,18],[-45,16],[-21,-1],[-12,-13],[-12,-6],[-46,-5],[-8,-11],[3,-16],[9,-22],[11,-13],[18,-16],[26,-11],[53,-12],[6,-30],[-2,-10],[-18,-20],[-20,2],[-35,24],[-18,1],[-15,-13],[-21,-4],[-27,4],[-15,-10],[-3,-25],[-9,-19],[-31,-30],[-17,-22],[0,-18],[18,-12],[21,-28],[23,-45],[5,-19],[-15,5],[-19,18],[-24,29],[-36,27],[-80,35],[-15,-1],[8,-9],[53,-36],[20,-24],[3,-17],[-45,-38],[-1,-13],[12,-11],[3,-9],[-16,-18],[-26,-16],[-51,-2],[-4,-9],[19,-19],[6,-12],[-16,-16],[-11,-2],[-58,7],[15,-40],[9,-14],[18,-20],[32,-19],[1,-7],[-11,-16],[-19,-20],[-81,-59],[-56,-70],[-8,-22],[14,-45],[1,-12],[-15,-21],[-33,6],[-7,-8],[8,-22],[2,-31],[-5,-42],[-24,-66],[-43,-88],[-33,-81],[-23,-73],[-16,-36],[-31,-2],[-23,-23],[16,-12],[9,-14],[7,-21],[-7,-67],[-19,-111],[-13,-89],[3,-274],[-3,-121],[-9,-67],[-14,-37],[-24,-11],[30,-10],[20,-17],[9,-26],[8,-42],[12,-19],[13,3],[13,-4],[11,-12],[33,-59],[37,-17],[2,-33],[-15,-184],[0,-24],[17,46],[18,144],[23,63],[19,14],[77,7],[81,-16],[31,-2],[27,8],[28,-17],[6,-18],[8,-75],[8,-43],[48,-153],[23,-86],[29,-133],[10,-38],[59,-178],[11,-49],[5,-37],[-2,-26],[-11,-40],[-19,-54],[-18,-42],[-17,-28],[-18,-22],[-18,-14],[1,-3],[21,6],[20,15],[39,37],[15,8],[43,5],[1,-13],[-20,-28],[4,-2],[30,22],[64,31],[252,103],[59,9],[85,-19],[69,-43],[75,-56],[79,-41],[124,-38],[37,-18],[73,-19],[34,-21],[40,-52],[65,-67],[49,-42],[54,-39],[55,-73],[88,-164],[22,-20],[54,-27],[102,-35],[151,-81],[66,-32],[43,-13],[43,-22],[43,-32],[32,-35],[23,-38],[19,-25],[35,-28],[18,-19],[2,-30],[-42,-116],[-1,-10],[42,84],[24,24],[19,11],[39,-1],[59,-14],[53,0],[44,13],[39,6],[31,-1],[23,4],[14,10],[17,0],[68,-29],[27,-2],[99,-27],[63,10],[11,-5],[22,-36],[19,-3],[31,6],[31,-10],[51,-46],[23,-40],[23,-82],[2,-25],[-42,-190],[-13,-73],[-2,-65],[8,-36],[37,-62],[6,-17],[22,-91],[6,-39],[-3,-45],[-11,-75],[3,-56],[9,-85],[-3,-58],[-17,-31],[-11,-29],[-9,-54],[0,-21],[9,-40],[16,-23],[26,-25],[24,-38],[45,-92],[33,-51],[39,-75],[8,-38],[-11,-25],[-14,-17],[-32,-23],[-14,-17],[3,-4],[47,12],[27,-1],[23,-19],[19,-36],[32,-30],[43,-25],[44,-43],[74,-100],[13,-23],[19,-52],[26,-82],[13,-54],[1,-25],[-14,-25],[-49,-46],[-50,-81],[16,4],[32,34],[56,67],[30,13],[29,-7],[45,-20],[39,-27],[35,-36],[51,-95],[55,-76],[30,-65],[-9,41],[-20,48],[-51,76],[-22,39],[-5,19],[-2,21],[4,37],[10,55],[13,39],[16,22],[10,24],[6,25],[8,19],[44,33],[12,-3],[9,-41],[10,-8],[21,-6],[17,-15],[14,-21],[10,-23],[6,-22],[13,-73],[9,-34],[2,41],[11,65],[8,26],[27,39],[-2,17],[-11,22],[-56,97],[-1,24],[15,14],[11,26],[5,40],[12,28],[35,40],[30,62],[16,42],[12,23],[13,5],[-18,17],[-4,11],[-1,51],[-8,54],[-12,25],[-34,53],[-6,16],[-6,60],[4,30],[9,26],[-5,24],[-32,45],[-12,39],[-14,93],[-13,118],[-14,86],[-16,56],[-3,35],[9,14],[11,44],[10,10],[16,-2],[1,5],[-25,23],[-12,30],[1,11],[21,29],[-3,12],[-16,16],[-49,28],[18,10],[11,23],[-2,7],[-20,10],[-22,17],[-17,27],[-20,42],[-13,34],[-12,56],[-22,63],[-9,16],[-11,10],[-12,5],[0,10],[13,14],[210,106],[18,16],[103,59],[48,33],[48,48],[66,49],[32,31],[21,31],[105,122],[44,62],[26,53],[37,64],[49,75],[31,63],[13,54],[16,91],[4,82],[3,119],[-1,106],[-14,167],[-7,53],[-15,62],[-37,125],[-6,35],[-23,57],[-74,151],[-92,101],[-18,26],[-36,30],[-56,34],[-36,28],[-94,104],[-31,13],[-11,27],[-3,19],[4,50],[5,34],[7,26],[7,16],[52,77],[29,61],[20,34],[22,26],[41,34],[23,44],[-6,17],[-18,19],[-4,19],[31,47],[4,13],[-4,45],[6,10],[38,3],[54,-64],[13,5],[-17,18],[-21,43],[3,18],[40,47],[1,21],[-12,29],[-1,24],[23,55],[-6,12],[-65,11],[-11,16],[4,7],[31,19],[2,7],[-54,125],[-9,37],[23,46],[26,20],[-3,12],[-35,2],[-21,7],[-21,35],[8,23],[8,10],[20,54],[20,11],[-4,9],[-74,-23],[-35,19],[-35,-5],[-16,6],[6,19],[62,86],[29,47],[18,43],[10,28],[1,14],[-6,93],[3,26],[25,24],[37,44],[-51,41],[-32,39],[-21,20],[-16,19],[-21,40],[-15,53],[-17,106],[-3,58],[4,42],[7,21],[11,22],[47,41],[82,60],[64,24],[47,-13],[90,-15],[73,-34],[222,-86],[40,-38],[-37,-33],[5,-8],[84,62],[22,12],[19,3],[63,-24],[25,-4],[32,-20],[76,-66],[6,6],[-21,34],[12,15],[60,35],[62,29],[44,28],[47,37],[32,20],[16,2],[21,-11],[56,-49],[36,-25],[29,-26],[40,-47],[16,-10],[31,-32],[41,3],[13,-3],[4,-7],[7,-21],[4,-14],[0,-14],[-9,-42],[-30,-66],[13,-1],[18,14],[24,25],[19,9],[40,-20],[38,-32],[13,-17],[15,-28],[12,-15],[12,-27],[-1,-9],[-11,-14],[-46,-22],[9,-9],[53,14],[17,14],[11,24],[16,6],[63,-41],[9,-14],[-4,-11],[-10,-13],[-27,-14],[-24,-35],[-4,-15],[17,-11],[41,-4],[0,-8],[-24,-16],[-3,-20],[53,-71],[36,-32],[21,-5],[48,-2],[39,-12],[86,-40],[51,-8],[44,13],[29,2],[25,-16],[8,-11],[4,-23],[0,-34],[14,-24],[28,-14],[23,2],[31,27],[25,5],[9,20],[7,37],[8,20],[18,6],[15,-11],[9,-17],[16,-51],[4,-23],[-1,-20],[-8,-19],[-16,-20],[-23,-21],[-19,-31],[-22,-70],[-9,-46],[-2,-28],[1,-29],[4,-33],[9,-27],[21,-37],[1,-13],[2,-30],[-2,-14],[-12,-27],[-34,-26],[-46,-7],[-152,-1],[-41,6],[10,-24],[43,-8],[38,0],[145,-15],[20,-15],[17,-28],[12,-28],[12,-57],[2,-27],[-6,-31],[-15,-33],[-10,-44],[-5,-55],[8,-29],[78,-3],[15,-20],[-1,-15],[-28,-56],[-3,-15],[13,-38],[-2,-11],[-7,-11],[-8,-28],[-7,-46],[-9,-30],[-21,-22],[-11,-5],[-8,6],[-21,62],[-9,9],[-8,-6],[-4,-9],[0,-14],[-4,-14],[-7,-14],[-31,-23],[-50,-16],[1,-16],[34,-9],[43,-28],[25,-4],[38,22],[75,71],[31,19],[27,7],[30,1],[34,-5],[68,9],[17,-7],[20,-15],[25,-25],[17,-23],[9,-23],[15,-85],[21,-23],[4,-16],[2,-25],[-1,-49],[-23,-100],[-11,-36],[-31,-50],[-36,-23],[-64,-21],[-33,-18],[-25,-25],[-1,-13],[72,42],[79,20],[23,24],[17,22],[17,50],[32,130],[18,40],[25,7],[11,-14],[26,-76],[0,-19],[-7,-16],[-42,-74],[15,7],[43,70],[9,21],[5,32],[14,23],[5,-11],[13,-82],[0,-60],[3,-19],[-5,-56],[5,-10],[13,49],[4,37],[6,26],[7,16],[52,50],[61,40],[40,36],[33,17],[50,17],[31,33],[14,50],[12,35],[10,20],[33,34],[17,2],[17,-12],[20,-26],[21,-40],[13,-30],[4,-23],[4,-78],[4,0],[19,60],[3,21],[-2,23],[-6,22],[-20,49],[-7,31],[1,18],[22,11],[31,4],[5,8],[-23,21],[-1,11],[22,36],[13,1],[26,-5],[-5,18],[0,12],[7,5],[42,-11],[5,14],[36,1],[4,12],[-32,18],[-30,12],[-10,9],[-7,15],[-9,35],[2,9],[9,0],[14,-9],[9,18],[9,43],[9,18],[28,-21],[1,9],[-23,68],[4,13],[35,5],[21,-9],[55,-49],[11,5],[-9,14],[-28,29],[-26,19],[-23,9],[-17,16],[-19,45],[-3,18],[2,24],[13,50],[7,11],[14,8],[19,5],[21,-5],[44,-33],[7,11],[-23,18],[-13,16],[-6,21],[2,24],[19,49],[9,40],[39,109],[12,20],[12,12],[8,13],[31,3],[57,-39],[18,-23],[4,-32],[-30,-45],[-51,-33],[-16,-14],[10,-9],[49,27],[42,12],[34,0],[28,-53],[4,-73],[-16,-60],[21,30],[26,17],[22,-40],[2,-32],[12,-31],[24,-40],[25,-36],[-28,-37],[-33,-23],[7,-16],[46,-18],[6,-18],[-5,-24],[7,1],[32,36],[27,-5],[34,-79],[-25,-46],[-39,-21],[-30,-9],[-43,2],[-17,-7],[8,-15],[41,-1],[63,12],[47,19],[20,1],[22,-8],[7,-6],[-23,-13],[-1,-5],[8,-13],[18,-44],[-2,-10],[-17,-25],[27,-5],[38,12],[11,-14],[23,-52],[15,-53],[-64,-73],[-32,-15],[-48,-39],[-13,-31],[-28,-39],[18,0],[49,64],[24,15],[18,-4],[7,-11],[-3,-18],[16,3],[66,37],[28,7],[36,3],[3,-13],[-22,-89],[-38,-69],[-70,-42],[-24,-25],[-31,-40],[12,-7],[66,52],[45,21],[64,17],[28,-3],[51,-104],[28,-10],[24,5],[44,-30],[16,-29],[-4,-21],[-15,-13],[-7,-19],[18,-58],[-11,-33],[-32,-29],[-23,-14],[-24,-5],[-24,-25],[-10,-4],[-33,6],[11,-15],[16,-8],[26,-4],[30,8],[30,-1],[46,-19],[20,-23],[0,-6],[-10,-13],[-15,-42],[-10,-15],[9,-12],[23,-18],[17,-6],[23,6],[25,-8],[82,-99],[-4,-51],[-12,-40],[5,-44],[0,-55],[-44,-15],[-148,25],[-84,39],[-5,12],[24,26],[-21,2],[-24,-10],[-11,-10],[29,-41],[77,-36],[35,-44],[38,-4],[11,-8],[21,-25],[-6,-9],[-39,-3],[-30,-30],[19,-17],[69,-16],[49,-4],[25,-17],[-20,-19],[-58,-22],[-2,-33],[43,-14],[38,8],[16,-3],[11,-80],[7,-17],[-41,-14],[-1,-16],[28,-13],[45,-10],[15,-15],[3,-24],[9,-12],[26,-3],[29,30],[17,25],[25,-9],[1,-31],[30,-36],[10,-6],[9,-51],[24,45],[17,-9],[20,-2],[-7,-44],[-11,-34],[15,-22],[12,-32],[33,-43],[-9,-21],[-38,-45],[-20,-72],[-5,-24],[-20,-41],[-26,-40],[16,4],[60,73],[36,25],[78,13],[19,20],[29,9],[18,-23],[1,-42],[24,-14],[24,14],[22,-12],[-13,-26],[-71,-108],[-21,-44],[-6,-31],[24,43],[90,97],[9,14],[20,42],[18,27],[48,-10],[25,-19],[11,-55],[19,-59],[30,-65],[78,-32],[28,-6],[49,23],[7,30],[38,10],[27,-4],[9,-59],[29,-31],[28,-26],[27,-14],[40,-6],[22,-28],[0,-12],[-22,-30],[-22,-45],[-38,-31],[-53,-1],[-72,-20],[-3,-17],[-16,-19],[-39,-20],[-21,-14],[-35,-72],[-20,-31],[-24,-6],[-34,3],[-22,-6],[-16,-14],[-10,-19],[-7,-7],[-45,-20],[-82,-55],[-44,-2],[-26,7],[-21,-5],[-14,-15],[-39,-27],[-12,-16],[-7,-19],[-5,-38],[-5,-14],[-7,-8],[-33,8],[-37,25],[7,-27],[58,-44],[17,-25],[-16,-21],[-37,-34],[-4,-18],[15,-10],[-6,-15],[-20,-16],[2,-7],[2,-6],[51,23],[45,50],[29,50],[14,14],[58,19],[34,22],[49,39],[54,58],[58,76],[74,59],[91,42],[66,22],[42,1],[2,7],[-37,14],[-32,2],[-39,-10],[-12,24],[2,10],[12,17],[33,15],[161,-21],[55,-17],[60,-137],[14,-44],[4,-32],[-6,-20],[-24,-24],[-69,-48],[-9,-12],[-1,-7],[30,-9],[9,-14],[15,-52],[31,34],[58,83],[48,38],[40,11],[47,5],[17,-1],[6,-27],[25,-54],[23,-14],[45,-7],[40,-67],[15,-46],[14,-27],[-1,-19],[2,-15],[11,-23],[5,-19],[-3,-45],[-23,-77],[17,-71],[-7,-31],[-4,-51],[14,-33],[5,-20],[-13,-11],[-88,-28],[-35,-1],[-9,-17],[27,-5],[48,1],[59,-17],[27,-19],[11,-27],[-3,-21],[-17,-16],[-33,3],[-32,15],[2,-14],[47,-35],[14,-17],[26,-22],[5,-30],[-6,-30],[-90,-120],[-73,-76],[-74,-67],[-119,-129],[-12,-6],[-21,-3],[-57,21],[-45,-5],[-85,-25],[-24,-15],[-47,-45],[-18,-6],[-51,-9],[-47,6],[-19,-7],[-23,-21],[-6,-12],[-7,-38],[-115,-168],[-31,-57],[-59,-60],[-65,-106],[-57,-43],[-19,-58],[-54,-36],[-100,-9],[-47,-10],[-55,16],[-42,-25],[-62,-8],[-30,6],[-121,-57],[-31,54],[-23,21],[-68,3],[-55,22],[-50,4],[-48,10],[-32,0],[-33,-6],[-52,2],[-29,-30],[-96,9],[-41,27],[-34,6],[-44,-6],[-43,-20],[-94,22],[-100,-19],[-87,13],[-24,13],[-138,-35],[-53,20],[-48,-54],[-32,11],[-35,-8],[-12,11],[-23,-8],[-15,-29],[-20,-3],[-33,-52],[-56,-41],[-82,-226],[-7,-87],[-31,-59],[-27,-8],[-22,-1],[-141,-44],[-63,-34],[18,-27],[-21,-21],[-33,-8],[-36,-25],[-24,-28],[-11,-39],[-72,-64],[-84,-147],[-40,-108],[-49,-78],[-34,-30],[-25,-5],[-25,10],[-41,36],[-30,4],[-76,51],[-177,52],[27,-19],[23,-32],[47,-8],[47,0],[99,-63],[48,-22],[30,-19],[25,-43],[-18,-84],[-19,-69],[-24,-53],[-85,-137],[-41,-46],[-72,-163],[-74,-77],[-40,-47],[-42,-74],[-99,-56],[-37,-15],[-34,8],[-41,-46],[-49,-28],[-15,-42],[-117,-114],[-45,-15],[-39,-30],[-11,-51],[-34,-32],[-10,-23],[-29,-72],[-53,-94],[-66,-15],[-24,-32],[-27,-53],[-39,-36],[-77,17],[18,-22],[69,-34],[7,-51],[-34,-12],[-72,-68],[-98,-117],[40,22],[82,85],[61,30],[80,89],[57,17],[11,20],[9,73],[6,26],[26,73],[33,61],[26,84],[47,54],[71,45],[66,98],[36,30],[35,22],[15,40],[21,23],[58,46],[64,13],[64,38],[50,21],[30,36],[44,19],[132,104],[36,49],[48,99],[41,51],[14,54],[60,87],[62,116],[30,83],[46,45],[89,132],[47,52],[20,6],[53,47],[34,48],[54,49],[97,60],[91,72],[123,63],[144,93],[117,50],[82,7],[100,24],[35,-3],[156,-40],[74,-50],[85,-106],[13,-27],[2,-39],[-45,19],[-40,1],[28,-22],[47,-65],[-3,-81],[-26,-73],[-79,-36],[-20,-29],[-16,-47],[-16,-18],[-39,-22],[-21,-30],[-62,-49],[-28,-6],[-32,11],[-78,47],[-47,44],[-24,-24],[-20,-25],[-46,8],[-21,-11],[-34,12],[-71,-56],[20,-6],[56,32],[19,-4],[42,-41],[100,-45],[26,-29],[25,-95],[16,-15],[35,10],[39,47],[32,25],[63,20],[-13,-31],[48,3],[48,-42],[-18,-30],[-24,-59],[-16,-116],[-49,-78],[-64,-76],[16,-19],[19,-11],[41,22],[28,-1],[31,-15],[-10,-59],[-11,-40],[7,-38],[18,-71],[25,-16],[10,-92],[14,-50],[-2,-40],[25,-25],[4,-41],[92,-12],[19,-16],[63,-15],[12,-12],[12,-22],[-63,-49],[51,-36],[47,-59],[38,12],[16,-2],[42,-36],[12,-19],[6,-16],[21,4],[31,14],[54,-4],[59,-20],[-5,-32],[-9,-21],[46,7],[28,-23],[10,11],[7,14],[57,38],[73,79],[9,-9],[3,-30],[10,-49],[28,-34],[33,-8],[45,26],[18,-22],[22,-43],[20,-57],[-1,-20],[-26,-17],[-24,-26],[99,-10],[10,-11],[10,-22],[-10,-22],[-9,-11],[-18,13],[-33,-12],[-28,-29],[-31,-16],[-20,-2],[-22,-14],[-20,-20],[-20,-6],[-65,-52],[-66,-33],[-69,-54],[-71,-34],[-73,-40],[-16,-4],[-19,2],[-41,-40],[-21,6],[-21,-7],[-25,9],[-16,16],[13,-42],[3,-39],[-6,-16],[-12,-20],[-42,3],[-16,14],[-20,21],[-9,33],[-21,24],[-13,-33],[1,-25],[-16,-33],[-18,57],[-34,-21],[-14,-61],[7,-17],[10,-46],[-16,-25],[-12,7],[-25,-68],[-31,-25],[-31,-69],[-37,-53],[-11,-36],[-62,-81],[-24,2],[-17,-2],[-26,-34],[-5,-68],[-11,9],[-12,-2],[-6,-22],[-9,-3],[-23,20],[-27,-11],[-21,15],[-27,100],[-14,35],[-26,12],[-6,-22],[-10,-20],[-25,41],[-18,153],[0,37],[26,129],[64,116],[-21,4],[-56,-81],[6,20],[9,20],[19,33],[29,31],[39,17],[27,3],[18,17],[27,30],[5,16],[-24,-18],[-39,-18],[10,23],[10,13],[209,208],[42,34],[84,44],[12,28],[-12,19],[33,-17],[-3,-23],[-5,-18],[-2,-29],[3,-28],[34,-14],[27,-52],[-13,71],[25,40],[96,54],[80,6],[25,25],[-68,17],[-81,-9],[-50,19],[-70,-12],[-73,11],[-22,-15],[-19,-34],[-23,15],[-12,3],[-11,11],[24,58],[74,87],[46,75],[12,15],[10,31],[-24,-5],[-22,-12],[-15,34],[-27,47],[-2,-20],[13,-57],[-51,-101],[-34,-7],[-44,-47],[-62,-41],[-73,-78],[-95,-66],[-19,-1],[-43,55],[12,24],[11,34],[-11,-10],[-7,-14],[-25,-24],[21,-45],[-11,-17],[-30,-22],[-27,-32],[-25,-22],[-20,28],[-54,-35],[-46,-9],[-10,17],[-3,28],[-16,7],[-30,-8],[-11,15],[-2,-18],[8,-29],[6,-57],[-9,-26],[2,-34],[26,-10],[6,-10],[1,-13],[-57,-88],[-48,13],[-26,-24],[-27,-6],[-12,-40],[-15,-8],[-20,3],[-18,11],[-13,-6],[-19,-70],[-16,6],[-6,-26],[-8,-11],[-12,-9],[-10,31],[-7,30],[-9,6],[-13,8],[-13,0],[-9,-5],[-11,-19],[-16,-16],[-12,13],[-9,23],[-8,-36],[-12,-38],[2,-44],[-5,-26],[-11,7],[-11,23],[-31,18],[-25,-1],[5,24],[24,35],[-8,7],[-11,-5],[-5,5],[8,32],[1,35],[-10,-12],[-14,-37],[-31,-30],[1,-49],[-30,-102],[-1,-43],[-19,-34],[-25,-30],[-33,9],[-25,-26],[-13,-29],[-11,-5],[-5,38],[-5,11],[-9,-55],[-9,-4],[-4,40],[-4,26],[-13,-23],[-9,-59],[-9,5],[-2,22],[-7,7],[-2,-25],[3,-36],[-5,-19],[-8,10],[-9,17],[-15,-13],[-14,-5],[0,17],[3,22],[-27,-12],[-32,-39],[-26,-55],[9,-9],[10,-17],[-44,-84],[-44,-76],[-34,-123],[-14,-15],[-11,-22],[-13,-75],[-14,-66],[8,-30],[5,-30],[13,-30],[11,-3],[11,5],[9,-1],[5,-13],[-2,-15],[-13,-4],[-26,-26],[-22,-11],[-11,-32],[-16,-37],[-32,-58],[13,-18],[50,-20],[22,-21],[34,-109],[-8,-10],[-3,-20],[30,-28],[9,-78],[25,-27],[36,-16],[45,24],[37,32],[-1,27],[-24,61],[-5,29],[-18,19],[-6,-16],[-11,21],[-2,12],[11,5],[12,-2],[14,-11],[36,-67],[10,-89],[3,-56],[-4,-19],[-11,4],[-20,-4],[-96,-29],[-21,-25],[-49,-28],[-3,14],[3,28],[-3,59],[-10,3],[-75,-96],[-30,-6],[-24,-28],[-6,16],[-4,71],[15,61],[-8,-1],[-26,-36],[-11,22],[-5,24],[-8,14],[-9,5],[7,-53],[-17,-40],[-5,-104],[-22,-43],[-68,-27],[-45,6],[-40,-9],[-53,-20],[-29,12],[-30,-21],[-103,-6],[-21,11],[-28,-39],[-44,-24],[-111,-88],[-25,-33],[-29,-50],[-21,-27],[-16,-9],[-10,-22],[-11,-15],[10,50],[12,43],[10,82],[-3,66],[-12,28],[-12,18],[14,-66],[2,-80],[-5,-47],[-27,-91],[-12,-21],[-13,-19],[-10,-8],[-10,-15],[-11,-23],[-10,-45],[6,-42],[53,-15],[15,13],[7,-30],[4,-42],[-4,-45],[-9,-45],[-7,-57],[-5,-86],[-9,-78],[-1,24],[5,94],[-9,-10],[-6,-22],[-16,-121],[-22,-65],[-21,-45],[-21,7],[5,-36],[-6,-18],[-5,-39],[-13,-26],[-12,3],[-17,-18],[-6,-13],[-1,-26],[-11,-23],[-42,-119],[-35,-35],[-9,5],[10,56],[6,57],[-22,24],[-21,13],[-23,-1],[-27,44],[-34,32],[-47,86],[1,24],[-1,41],[14,63],[14,45],[19,23],[56,23],[14,36],[8,30],[-28,-52],[-41,-17],[-22,-19],[-18,-29],[-10,-37],[-24,-44],[2,-29],[4,-21],[-2,-44],[15,-43],[30,-70],[5,-109],[23,-72],[35,-85],[27,-24],[1,-32],[-12,-52],[-17,-24],[22,5],[10,-12],[10,-43],[0,-44],[-4,-25],[-6,-10],[0,25],[-5,9],[-7,-11],[-5,-13],[-2,-49],[-5,-25],[-18,-7],[-19,-66],[-17,-37],[-67,-249],[2,-42],[-12,-14],[-19,-11],[-19,-25],[-12,-27],[-12,-74],[-22,-84],[-14,35],[-4,30],[7,77],[24,128],[26,79],[21,37],[16,76],[-21,12],[-32,-1],[6,35],[9,31],[-16,31],[-10,4],[-10,12],[12,26],[5,27],[-3,34],[5,25],[-9,-4],[-13,-27],[-8,-10],[-5,23],[-6,-5],[-4,-16],[-9,-9],[-18,22],[-26,25],[-15,43],[-8,34],[8,61],[18,10],[24,-9],[31,0],[-4,13],[-11,-2],[-33,49],[-11,30],[-18,8],[-8,-29],[-9,-7],[11,62],[15,3],[22,17],[-6,36],[-14,16],[-25,-20],[0,26],[5,32],[19,0],[16,-10],[14,52],[1,24],[-24,-34],[-5,73],[23,72],[22,31],[27,-1],[28,5],[-17,13],[-18,7],[13,28],[12,5],[11,24],[-27,-3],[3,46],[-13,-9],[-16,-5],[-6,-19],[1,-33],[-4,-21],[-13,-18],[-20,-13],[-2,23],[-7,11],[-3,-50],[-5,-17],[-15,47],[-5,-10],[1,-13],[-4,-23],[-13,-12],[1,-29],[-5,-16],[-42,25],[-1,-8],[24,-56],[17,-18],[2,-30],[-15,-25],[-20,21],[-4,-1],[11,-37],[7,-33],[-7,-27],[1,-33],[-1,-30],[-5,-26],[10,-121],[12,-33],[12,-32],[6,-29],[-12,-5],[-20,25],[-17,18],[-21,59],[-4,24],[-5,19],[3,-43],[7,-48],[65,-107],[12,-42],[9,-32],[-2,-31],[-17,22],[-15,28],[-38,32],[-49,19],[-28,74],[1,-31],[-7,-26],[-16,32],[-11,27],[-4,29],[-20,-2],[-22,-25],[-22,6],[-2,50],[5,27],[24,62],[23,33],[10,41],[-4,64],[-4,-65],[-13,-33],[-20,-24],[-27,-44],[-6,-41],[-8,-77],[11,-25],[11,-7],[34,17],[18,-8],[39,-91],[72,-37],[27,-23],[22,-48],[32,-27],[25,-40],[1,-27],[-9,-30],[-3,-42],[-11,-27],[-26,-3],[-15,7],[-84,147],[-10,14],[-31,77],[-36,41],[-11,-1],[52,-76],[21,-53],[37,-75],[26,-32],[20,-50],[18,-23],[50,-33],[-18,-24],[28,-20],[4,-37],[-3,-42],[-38,16],[-1,-31],[3,-18],[-16,-15],[-24,20],[-61,113],[1,-15],[5,-18],[35,-72],[31,-44],[27,-20],[21,-36],[7,-22],[5,-34],[-15,-22],[-18,-13],[-17,23],[-12,24],[-27,40],[-8,46],[-20,-3],[-84,58],[-68,7],[7,-12],[8,-8],[54,-14],[22,-26],[44,-24],[26,-6],[11,-73],[35,-49],[5,-37],[25,-4],[43,36],[28,-13],[40,-10],[9,-30],[7,-55],[14,-63],[37,-246],[55,-202],[7,-34],[-13,30],[-41,134],[-23,96],[-23,170],[-7,38],[-8,16],[-5,-13],[-2,-21],[4,-17],[-9,-56],[4,-26],[14,-26],[17,-67],[13,-89],[-18,36],[-19,19],[-29,15],[-25,26],[1,-37],[-2,-40],[-20,12],[-14,13],[12,-42],[-26,13],[-17,-3],[-11,-38],[-15,-23],[-23,-7],[-33,34],[-11,42],[-4,47],[-2,-55],[6,-58],[-2,-43],[32,-9],[30,8],[40,-2],[26,8],[16,14],[38,-12],[3,-53],[-4,-52],[-3,-56],[11,0],[12,18],[6,100],[35,37],[12,-3],[11,-32],[4,-32],[4,-45],[-9,-68],[-53,-80],[-38,-74],[-20,-15],[-28,8],[-32,19],[-15,4],[-12,-6],[-8,22],[-4,42],[-13,14],[-9,-2],[-7,-44],[-29,-13],[-41,19],[-42,37],[18,-40],[105,-74],[12,-14],[11,-20],[-15,-32],[-11,-36],[-2,-28],[-4,-18],[-42,-48],[-23,9],[-58,86],[27,-75],[21,-31],[43,-17],[80,28],[26,-31],[-22,-54],[-21,-37],[-28,-5],[-25,-10],[-7,-26],[-18,-2],[-27,-1],[-43,-2],[-23,6],[-33,-54],[-12,-7],[-18,10],[-7,43],[-8,21],[0,-80],[3,-22],[6,-16],[-38,-43],[-37,-54],[-13,-15],[-15,-27],[-30,-78],[-8,-57],[-11,-64],[-1,29],[2,48],[-8,55],[-5,-101],[-12,-47],[-109,3],[-47,-25],[-74,-86],[-22,-38],[-60,-145],[-16,-94],[-12,40],[3,29],[0,24],[-15,-51],[15,-76],[-13,-28],[-40,-54],[-22,-8],[-25,-16],[-8,-52],[-33,-49],[-19,-22],[-36,13],[11,-46],[-13,-36],[-23,-27],[-28,-18],[-16,2],[-13,-9],[-11,-23],[-26,-21],[-28,12],[-30,7],[-18,-12],[29,-21],[16,-31],[-3,-41],[-8,-15],[-18,-22],[-8,3],[-5,20],[-6,40],[-9,-9],[-1,-18],[-8,-7],[-25,64],[1,-49],[9,-37],[9,-19],[8,-12],[3,-17],[-18,-42],[-9,-10],[-16,-7],[-10,-26],[3,-22],[-14,-49],[-34,-30],[-10,1],[-9,-9],[5,-22],[9,-16],[-1,-14],[-9,-20],[-17,-6],[-10,-23],[3,-21],[6,-12],[-1,-21],[-21,-20],[-4,-21],[10,-6],[7,6],[6,-4],[-12,-34],[-11,-21],[-10,-37],[-24,-11],[1,-12],[13,-11],[12,-28],[-22,-53],[-13,4],[-8,12],[-5,-42],[2,-22],[-5,-46],[-8,-55],[-6,-22],[1,-42],[4,-41],[13,-52],[20,-214],[13,-74],[24,-200],[41,-194],[57,-235],[93,-284],[11,-40],[-12,-35],[-4,-35],[-1,-54],[3,-52],[11,-64],[22,-98],[-12,20],[-31,140],[-4,82],[5,117],[-7,-3],[-6,-38],[-3,-44],[-8,-18],[-11,68],[1,31],[11,36],[-3,13],[-18,18],[-4,29],[2,29],[-10,15],[-8,-1],[5,-70],[9,-43],[11,-104],[17,-63],[10,-52],[118,-561],[28,-72],[10,-51],[11,-107],[2,-138],[-19,-252],[-5,-171],[-2,5],[-2,18],[-5,2],[-16,-78],[-23,-71],[-8,-110],[-10,-56],[-33,-58],[-20,1],[-50,-43],[-35,11],[-42,-25],[-27,3],[-16,52],[3,23],[6,24],[11,5],[36,-54],[7,23],[-11,27],[-21,15],[-16,17],[-31,125],[-33,85],[-6,57],[-56,35],[-41,53],[-27,94],[-15,166],[-18,19],[-8,13],[18,62],[19,51],[-15,-13],[-11,-19],[-14,-45],[-10,-7],[-9,7],[-11,87],[3,108],[15,40],[-23,2],[-23,-16],[3,-36],[-3,-20],[-18,6],[-13,12],[-17,38],[-25,71],[-49,197],[-10,27],[-17,29],[8,9],[14,6],[32,88],[25,54],[9,37],[-2,16],[-11,23],[-14,-20],[-7,5],[-16,47],[-16,13],[-11,-10],[12,-38],[10,-14],[-4,-56],[-4,-18],[-10,-16],[-15,9],[-7,-14],[-9,15],[-9,24],[-10,40],[26,225],[24,144],[3,163],[2,24],[-2,44],[-33,94],[-145,231],[-112,273],[-97,103],[-74,-23],[-12,-21],[-6,-26],[5,-31],[-7,-13],[-20,2],[-26,-7],[-70,-72],[-25,3],[-22,-19],[-17,-14],[-43,-8],[-37,-15],[-16,8],[-10,42],[0,43],[8,-33],[13,-26],[6,10],[2,23],[-13,45],[-41,58],[-48,84],[14,-3],[4,18],[-15,24],[7,27],[10,29],[-20,-4],[-18,-21],[-1,-24],[-3,-20],[-10,3],[-18,24],[-89,68],[-77,39],[59,17],[32,-14],[-3,21],[-8,13],[-26,17],[-32,-7],[-21,8],[-21,-16],[-22,-25],[-21,-12],[-80,-18],[-65,-19],[11,20],[11,13],[38,20],[6,41],[-9,39],[-10,-9],[-11,-31],[-13,22],[-14,0],[-4,-49],[-19,-33],[-8,-33],[-54,-26],[-7,9],[16,31],[-1,18],[-19,-15],[-30,-60],[-106,-19],[5,13],[23,3],[32,19],[-7,32],[-12,34],[-11,4],[-8,21],[1,64],[-7,38],[-18,39],[-6,-8],[-12,-66],[-11,-87],[-5,-28],[-32,-2],[-28,6],[-95,-11],[-35,30],[-15,6],[-9,-1],[-41,-27],[-48,-21],[-11,7],[-16,1],[-34,-71],[-40,-33],[-102,60],[-25,47],[-22,10],[-28,6],[-29,-58],[-23,-79],[36,-44],[30,-21],[50,18],[28,38],[23,-1],[11,8],[10,20],[19,-16],[1,-16],[-14,-22],[-17,-19],[-11,-22],[20,-45],[31,-15],[12,7],[7,50],[19,32],[26,-7],[-3,-20],[3,-19],[12,-33],[-1,-47],[2,-11],[-28,-20],[-21,-8],[-17,-27],[9,-15],[-17,-14],[-11,6],[-6,-6],[-2,-16],[-9,-16],[13,-46],[26,-30],[19,-38],[74,-50],[18,1],[18,-50],[14,-18],[14,-8],[-1,-35],[-25,-25],[-7,-31],[-6,-17],[-11,22],[-11,15],[-26,-47],[-13,-10],[6,51],[-10,20],[-15,52],[-21,31],[-16,11],[-12,20],[-14,8],[-13,-2],[-21,12],[-1,27],[-6,20],[-16,25],[-78,45],[-1,-19],[6,-14],[11,-9],[13,-19],[0,-54],[-6,-23],[-2,-33],[-5,-34],[-10,-26],[-21,-18],[-10,15],[-15,72],[-22,23],[-34,2],[-23,-16],[-25,-70],[-21,-11],[-70,36],[-80,55],[2,18],[13,6],[24,-7],[-1,19],[-25,61],[-4,28],[3,34],[-8,-1],[-15,-28],[-51,24],[-14,28],[-30,81],[-42,3],[-19,49],[-35,-20],[-17,-23],[-15,-35],[6,-19],[15,-29],[-7,-14],[-49,-21],[-114,24],[-34,21],[-44,46],[-62,37],[-30,6],[-29,-7],[-86,-4],[-19,-10],[-17,-16],[-11,18],[-5,31],[10,5],[11,19],[10,36],[1,22],[-7,15],[-13,1],[-29,-95],[16,-53],[-1,-19],[-58,-11],[-132,-107],[-51,-58],[2,19],[62,75],[-21,12],[-36,-19],[-13,7],[15,62],[-4,55],[-26,1],[-16,-43],[-11,1],[-14,19],[-11,-6],[8,-98],[16,-41],[13,-52],[-36,-64],[-34,-53],[-3,-51],[-34,-66],[-32,-38],[-74,-88],[-22,-19],[-33,-42],[-47,-30],[-44,-49],[-15,-8],[28,42],[34,41],[-29,-6],[-44,19],[-28,1],[0,-15],[-21,-21],[-21,31],[-9,21],[-5,18],[-9,4],[-9,-8],[32,-127],[14,-5],[15,-13],[-19,-29],[-20,-23],[-32,-15],[-27,47],[-6,-59],[-3,-58],[-9,-14],[-15,-22],[-7,16],[-4,23],[-9,-20],[-14,-15],[-22,-3],[-17,-8],[0,-24],[4,-24],[30,19],[-11,-62],[-27,-62],[-23,-14],[-34,9],[-8,-6],[-8,-13],[40,-96],[-25,-145],[-17,-52],[-11,-7],[-12,-2],[-44,47],[-24,36],[21,-98],[58,-29],[3,-37],[-1,-31],[-11,-38],[-11,-49],[8,-35],[9,-85],[8,-39],[8,-119],[10,-51],[52,-189],[18,-2],[2,-20],[-1,-40],[-5,-119],[-17,-97],[-55,-203],[-24,-126],[-44,-360],[-14,-236],[-3,-111],[-4,-15],[4,-17],[-10,-245],[5,-210],[-3,-32],[-17,-63],[-11,-88],[5,-39],[-1,-27],[17,-133],[5,-100],[50,-171],[28,-60],[34,-51],[13,-30],[-6,-72],[-14,-37],[-6,-59],[-7,49],[2,62],[11,34],[1,25],[-21,26],[-37,86],[-45,153],[32,-244],[11,-39],[9,-16],[14,-17],[4,-27],[0,-19],[40,-170],[45,-175],[3,-48],[18,-58],[114,-246],[70,-184],[25,-174],[15,-54],[7,-75],[46,-83],[14,-54],[24,-30],[20,-90],[38,-53],[-9,-1],[-33,27],[2,-18],[28,-37],[54,-37],[13,0],[-21,19],[-18,26],[6,4],[38,-32],[105,-11],[47,-75],[60,-32],[32,-96],[38,-100],[24,-5],[19,0],[56,17],[88,63],[30,30],[59,42],[90,8],[28,-12],[67,26],[33,32],[11,29],[5,22],[62,30],[13,6],[63,6],[31,11],[35,7],[26,-45],[0,-22],[-17,-21],[8,-20],[31,-34],[56,-13],[19,5],[26,49],[46,48],[-1,55],[-9,31],[-13,2],[-3,17],[9,40],[-2,14],[-29,-39],[-6,0],[3,18],[6,15],[83,85],[22,35],[28,31],[60,115],[13,218],[12,38],[40,67],[4,20],[3,45],[-1,114],[2,90],[-2,102],[7,90],[7,26],[23,145],[47,64],[82,76],[19,13],[261,80],[37,20],[45,52],[33,17],[60,-1],[18,7],[4,7],[0,7],[11,7],[34,-7],[65,-31],[24,-8],[58,-36],[63,-15],[10,6],[8,11],[6,22],[-6,18],[-6,-1],[-11,-10],[-13,-1],[-25,15],[5,13],[25,-1],[17,6],[24,22],[26,-16],[35,-75],[24,-24],[2,-108],[4,-19],[8,-29],[-12,-84],[-13,-69],[-17,-57],[-37,-89],[-45,-71],[-56,-159],[-13,-75],[1,-59],[9,-58],[-3,-21],[-6,-22],[-12,2],[-22,-28],[-28,-82],[-1,-25],[13,-23],[16,11],[21,1],[12,7],[12,-2],[-3,-47],[-13,-33],[-8,-11],[-15,-5],[-17,-19],[-9,-18],[1,-54],[9,-4],[20,40],[12,-2],[2,-17],[-26,-139],[-16,-143],[-23,-82],[-8,-121],[-11,-51],[-14,-51],[-8,3],[-21,96],[-23,25],[-4,23],[12,117],[-6,65],[-11,-3],[-15,-35],[-19,-31],[0,-45],[-22,-73],[-6,-25],[-15,-65],[15,-9],[14,7],[32,-3],[13,-71],[-4,-61],[-30,-158],[-4,-55],[-14,-81],[19,-54],[-18,-72],[-6,-46],[-1,-69],[9,-132],[-15,-190],[-25,-83],[-16,-32],[-28,-82],[-37,-25],[-51,-133],[-9,-35],[5,-38],[15,-12],[12,-4],[24,-32],[30,-25],[18,50],[-9,29],[-8,15],[1,14],[102,-128],[27,-16],[21,37],[12,12],[29,44],[9,10],[48,18],[23,-1],[21,-44],[16,-25],[30,21],[26,5],[105,-42],[42,19],[76,4],[35,-11],[49,59],[31,12],[37,27],[-5,29],[-9,12],[56,-12],[83,-60],[89,11],[32,32],[21,9],[91,-61],[24,-47],[19,-4],[14,10],[4,10],[-18,10],[-8,15],[72,-29],[135,-222],[3,-18],[-58,65],[-31,-5],[-8,-10],[2,-36],[3,-17],[13,-2],[10,10],[24,-12],[15,-24],[19,-36],[12,-40],[12,-1],[12,24],[23,3],[15,-26],[11,1],[-15,42],[-35,41],[9,1],[77,-74],[21,-92],[19,-21],[18,-29],[-7,-21],[-9,-14],[-18,-69],[-6,-6],[-1,51],[-10,7],[-13,-18],[-7,-26],[11,-35],[10,0],[11,-9],[31,-236],[-7,-42],[-19,-65],[-18,-56],[-18,-35],[-23,-148],[-20,-241],[14,-217],[-7,-200],[6,-48],[2,-59],[-15,-10],[-8,1],[-9,37],[1,31],[9,38],[4,50],[-5,27],[-9,-58],[-15,-26],[-10,-9],[-10,-29],[10,-55],[14,-40],[4,-29],[-5,-34],[-3,-117],[-5,3],[-5,16],[-14,1],[-2,-47],[1,-26],[-12,-21],[-4,-20],[10,-14],[11,-9],[13,2],[12,-58],[3,-47],[-26,-44],[-9,-36],[-14,-43],[-8,-43],[-3,-31],[10,-98],[18,-69],[15,-44],[20,-10],[7,-23],[8,-36],[3,-46],[36,-155],[28,-86],[62,-158],[26,-29],[45,-127],[16,-21],[9,-37],[46,-31],[13,-23],[18,-31],[36,-54],[2,-27],[-3,-26],[10,-74],[18,-10],[19,14],[5,-14],[-4,-13],[-9,-15],[-3,-64],[31,-30],[15,-26],[51,13],[19,-7],[13,7],[-14,51],[-19,38],[1,17],[15,-13],[11,-25],[25,-32],[46,-111],[53,-26],[42,3],[39,15],[63,43],[45,78],[36,34],[116,74],[42,77],[17,10],[17,10],[36,58],[20,46],[21,22],[62,-16],[39,-22],[28,3],[27,-15],[11,-33],[12,-14],[65,3],[54,-16],[117,-98],[70,-97],[37,-103],[90,-133],[8,-12],[23,-83],[37,-53],[38,-87],[16,-59],[12,-11],[11,-22],[-5,-16],[-12,-17],[-3,-35],[8,-19],[8,-12],[22,8],[12,40],[-8,178],[-13,89],[-15,27],[-13,35],[9,27],[24,12],[31,31],[115,170],[39,159],[30,58],[34,37],[41,-9],[33,20],[10,51],[-9,69],[-13,41],[12,61],[13,91],[-1,76],[16,46],[-6,18],[-23,-37],[-18,-16],[10,30],[33,76],[16,115],[13,48],[46,67],[10,32],[34,50],[56,108],[22,30],[108,-69],[34,4],[-6,-13],[-16,-4],[-23,-19],[-6,-41],[15,-44],[17,-12],[14,28],[14,80],[22,88],[6,92],[15,32],[24,11],[41,-18],[32,-19],[33,-3],[101,14],[164,240],[77,52],[47,50],[31,99],[8,74],[22,28],[24,0],[11,18],[3,23],[57,64],[33,8],[28,-1],[65,-56],[29,-98],[5,-68],[-40,-74],[-10,-32],[-9,-28],[-18,-34],[-20,-21],[-106,-53],[-11,-11],[-13,-22],[0,-50],[2,-39],[32,-129],[12,-32],[41,-70],[-9,-10],[-16,-1],[12,-92],[25,-63],[1,-39],[-19,-123],[-36,-74],[-25,-86],[-20,-34],[-44,-168],[34,-101],[4,-50],[29,-73],[19,-23],[12,-30],[-6,-49],[12,-67],[15,-35],[18,-14],[23,0],[67,44],[15,20],[10,36],[34,73],[2,93],[7,113],[-8,73],[-35,104],[-15,75],[-35,69],[-21,118],[-9,37],[-6,51],[-8,91],[23,32],[-2,74],[57,21],[123,120],[77,31],[87,64],[20,32],[17,52],[14,7],[45,-50],[22,17],[9,39],[-12,75],[-26,0],[-78,-27],[-8,32],[0,29],[-18,89],[11,68],[12,55],[22,22],[33,24],[25,-37],[15,-35],[8,-33],[6,-92],[13,-93],[14,-64],[23,-49],[17,4],[12,8],[81,11],[50,-33],[63,-17],[59,-71],[60,-85],[15,-63],[6,-59],[14,-40],[-14,-41],[7,-69],[18,-69],[26,-44],[74,-12],[81,30],[125,27],[40,23],[206,12],[39,-33],[4,-33],[0,-26],[67,-124],[54,-16],[46,-40],[48,-22],[52,-30],[30,4],[22,11],[26,2],[184,207],[98,-6],[15,14],[13,18],[-36,32],[-82,12],[-25,-21],[-14,53],[27,-2],[91,18],[105,-11],[85,38],[43,6],[24,-8],[68,25],[128,-29],[101,24],[-12,-34],[-33,-21],[-53,-7],[-41,-50],[-87,9],[-61,-18],[19,-14],[0,-51],[9,-11],[8,0],[21,-38],[6,-25],[7,-53],[-10,-56],[-12,-26],[25,9],[14,26],[-2,27],[2,31],[14,-10],[9,-14],[32,-148],[22,-78],[6,3],[5,3],[7,15],[10,36],[9,-23],[5,-9],[5,-3],[-5,34],[6,42],[-2,15],[10,3],[12,-5],[17,-12],[30,-49],[20,-51],[1,-28],[8,-16],[12,-16],[7,-26],[1,41],[-8,30],[-2,34],[40,1],[10,45],[21,-27],[56,-123],[21,-21],[62,-24],[38,-59],[23,-53],[-14,-56],[-36,-28],[-14,-35],[-9,-34],[0,-35],[-11,-40],[-1,-14],[-7,-56],[-15,-68],[-19,-72],[-104,-2],[26,-29],[23,-22],[39,-57],[30,45],[44,3],[48,49],[18,8],[88,-26],[22,36],[17,11],[48,-7],[42,-39],[10,-9],[40,-92],[23,-20],[4,0],[0,24],[21,-10],[52,-63],[77,-103],[108,-195],[31,-75],[20,-35],[33,-85],[9,-41],[-1,-166],[-28,-112],[-7,-84],[-2,-113],[-16,-64],[22,35],[6,101],[19,62],[24,67],[33,16],[35,-28],[28,-5],[24,-20],[53,-108],[52,-86],[18,-68],[55,-34],[32,-54],[10,-47],[7,-122],[-11,-185],[3,-9],[4,-12],[11,67],[2,53],[8,54],[14,63],[24,31],[140,-32],[64,-30],[82,-52],[12,-55],[0,55],[-4,56],[23,40],[50,14],[75,-19],[64,23],[87,-3],[133,-45],[59,-31],[25,-28],[4,-50],[-2,-64],[-10,-62],[-21,-82],[20,30],[27,152],[19,54],[20,7],[109,-126],[51,-11],[103,-68],[38,-88],[86,-145],[45,-45],[1,-39],[-10,-60],[29,53],[45,-84],[13,-41],[14,-76],[-5,-49],[-6,-25],[-1,-19],[14,27],[7,21],[3,51],[10,63],[15,1],[12,-38],[24,-163],[9,-33],[4,-52],[-2,-23],[2,-22],[26,99],[3,45],[24,2],[37,-52],[30,-75],[40,-243],[6,-225],[17,-118],[46,-245],[3,-45],[7,-55],[15,-58],[16,-96],[1,-18],[-11,-26],[16,-2],[14,-15],[9,-61],[11,-41],[21,-56],[43,-19],[33,-7],[37,-31],[27,-41],[21,-138],[-7,-87],[2,-61],[-11,-24],[-30,-40],[-7,-22],[-62,-103],[-14,-49],[-33,-65],[-33,-125],[-48,-114],[-17,-29],[-26,-7],[-16,-17],[-37,-93],[-51,-31],[-4,-54],[-29,-124],[-26,-67],[-16,-23],[-41,-122],[-5,-54],[0,-94],[-28,-57],[-28,-37],[-4,-80],[-12,-27],[-11,-18],[-58,21],[-91,-88],[-30,-21],[98,-5],[32,-46],[69,31],[83,110],[32,24],[65,75],[27,50],[48,60],[10,26],[27,29],[15,-36],[1,-23],[-22,-44],[6,-28],[14,-36],[5,-49],[2,-37],[9,-66],[30,-88],[1,-30],[-4,-38],[14,-32],[15,-19],[51,-95],[39,53],[25,15],[15,23],[33,14],[27,-22],[51,-32],[37,34],[75,78],[-23,-138],[-17,-127],[-13,-51],[-13,-138],[-13,-37],[-10,-42],[17,15],[14,20],[18,53],[14,92],[55,247],[16,22],[45,28],[78,197],[31,-1],[19,-45],[19,-27],[4,54],[27,22],[-28,27],[-5,24],[-2,40],[19,55],[-12,48],[40,61],[-3,45],[14,38],[18,39],[21,19],[3,33],[13,14],[10,4],[20,-37],[22,44],[21,17],[9,-7],[12,-20],[12,-8],[10,4],[26,28],[24,-46],[15,-10],[-4,26],[-8,23],[6,20],[11,12],[36,-11],[19,-20],[21,-38],[28,-3],[23,4],[14,-21],[23,1],[11,-33],[35,-46],[7,-31],[28,-16],[27,-19],[28,-5],[28,5],[1,-40],[21,-11],[26,9],[21,-48],[53,-37],[38,-56],[24,10],[27,-15],[30,-121],[6,-87],[13,12],[12,39],[16,71],[29,23],[14,-27],[30,-44],[25,-47],[11,-31],[19,-5],[-16,-38],[16,4],[19,27],[17,-55],[13,-60],[2,-62],[-12,-35],[-10,-22],[-12,-44],[-13,-7],[-14,-14],[16,-32],[10,-30],[24,82],[16,23],[23,13],[13,-59],[2,-55],[-38,-23],[0,-44],[-12,-24],[-7,-29],[-6,-59],[-8,-50],[-23,-218],[0,-36],[27,38],[52,112],[16,118],[20,117],[22,37],[14,0],[20,-13],[1,-38],[-3,-22],[-22,-58],[-9,-32],[9,-32],[50,97],[22,33],[19,-6],[38,44],[76,9],[5,51],[16,22],[41,-6],[82,-45],[29,-37],[43,-35],[23,-41],[96,-76],[69,-8],[34,35],[43,-36],[23,-41],[44,-21],[45,-12],[35,29],[88,10],[112,42],[66,-10],[75,-28],[54,-71],[45,-41],[27,-40],[44,-41],[94,-111],[33,-64],[58,-88],[59,-37],[32,-91],[25,-42],[61,-154],[71,-108],[47,-109],[90,-69],[35,-115],[61,-14],[26,-17],[32,-49],[44,-27],[56,8],[63,-6],[50,23],[120,-43],[19,-21],[24,-49],[44,-182],[26,-202],[13,-154],[30,-120],[16,-226],[14,-71],[1,-54],[12,-13],[7,-152],[-3,-61],[-11,-80],[-1,-35],[2,-23],[-5,-33],[-2,-32],[12,-72],[0,-57],[-15,-70],[-21,-181],[-53,-302],[-51,-173],[-71,-178],[-47,-93],[-18,-10],[-17,19],[12,-50],[-11,-43],[-47,-131],[-46,-86],[-49,-150],[-4,-3],[-62,-58],[-37,-47],[-47,-85],[-43,-135],[-9,-18],[-16,10],[0,-69],[-37,-108],[-11,-16],[0,30],[7,24],[3,25],[-1,29],[-10,-21],[-22,-82],[7,-59],[-16,-90],[-60,-257],[-75,-217],[-17,-66],[-62,-146],[-45,-70],[-12,-1],[-15,6],[-7,112],[-36,68],[-10,12],[-15,-72],[-12,-20],[-18,-4],[19,-31],[6,-36],[-19,-73],[-1,-66],[-34,-72],[-20,-53],[-10,-67],[-7,-62],[16,17],[7,-13],[5,-19],[-3,-29],[-11,-54],[2,-134],[-4,-30],[11,-33],[12,56],[6,-16],[-32,-359],[13,-162],[4,-183],[15,-179],[16,-160],[1,-13],[-22,-185],[-28,-183],[-17,-150],[-11,-161],[-11,-78],[-4,-79],[13,-188],[4,-35],[-34,-84],[-37,-41],[-21,-40],[-45,-151],[-25,-224],[-1,-118],[12,-249],[-9,-102],[-14,-67],[-17,-45],[-44,-53],[-39,-131],[-17,-137],[-27,-50],[-5,-76],[-21,-83],[-56,-124],[-36,-36],[-18,-34],[-11,-72],[-35,-119],[-25,-154],[6,-53],[1,-8],[9,-178],[-3,-46],[-34,-49],[-128,-91],[-34,-39],[-77,-156],[-4,-36],[3,-53],[12,-30],[-13,-33],[-15,-59],[-22,4],[-127,0],[-69,-19],[-36,4],[-16,14],[-18,23],[-6,30],[10,46],[-6,27],[-19,-1],[-20,-13],[-4,-27],[1,-20],[8,-28],[4,-35],[-8,-30],[-40,-4],[-46,-28],[-56,-12],[-45,-20],[-21,26],[21,13],[29,-7],[32,21],[-7,25],[-45,32],[-51,-19],[-28,-39],[-61,4],[-75,-29],[-12,-30],[2,-57],[15,-13],[14,-26],[-14,-24],[-13,-11],[-79,-27],[-73,-112],[-31,-14],[-27,-49],[-3,-42],[-8,-25],[-18,-2],[-38,23],[-50,1],[-35,-18],[-183,-182],[-66,-72],[-75,-148],[-126,-166],[-67,-99],[-12,-26],[-11,-1],[-21,-21],[9,-17],[14,-2],[-6,-57],[-26,-40],[-50,-103],[-11,7],[16,54],[-25,2],[-36,20],[-15,-22],[9,-54],[-14,-22],[-24,-3],[-23,6],[-24,39],[11,-70],[51,-18],[22,-16],[8,-27],[-40,-126],[-34,-17],[-3,-17],[18,0],[10,-35],[-12,-141],[-16,-26],[-10,-1],[-10,-24],[14,-46],[13,-33],[-2,-65],[-5,-54],[0,-52],[17,-101],[6,-104],[7,-37],[4,-42],[-11,-39],[6,-63],[-19,-107],[10,-154],[-4,-144],[-8,-76],[-12,-59],[-29,-76],[-1,-77],[-62,-71],[-69,-99],[-63,-118],[-69,-166],[-80,-252],[-73,-360],[-89,-272],[-36,-98],[-48,-109],[-64,-128],[-86,-128],[-94,-114],[-34,-51],[-33,-73],[-8,30],[7,49],[-4,37],[-1,48],[19,9],[28,-30],[14,20],[11,21],[34,12],[65,125],[48,47],[28,79],[4,42],[-1,85],[16,22],[35,-8],[7,24],[-3,27],[6,59],[48,52],[22,63],[-7,160],[8,7],[20,-25],[9,11],[10,70],[-5,36],[-23,10],[-79,-79],[-26,3],[-4,62],[-39,29],[-15,52],[-4,35],[-14,14],[1,-61],[4,-59],[34,-69],[-8,-28],[-17,-32],[-11,-71],[1,-92],[-9,28],[-12,16],[-5,-99],[-23,-38],[-7,-38],[6,-43],[-12,-30],[-58,-80],[-58,-55],[-13,-26],[-6,-61],[-9,-63],[-26,-55],[-21,-110],[1,-47],[7,-69],[11,-46],[-18,-31],[-23,-59],[-19,-67],[-46,-251],[-40,-151],[-31,-74],[-44,-78],[-125,-196],[-13,-21],[-15,-41],[-17,-97],[-58,-133],[-12,-76],[-62,-78],[-44,-89],[-29,2],[-26,-38],[-149,-115],[-54,22],[-39,-1],[-37,51],[-84,19],[-53,-21],[-71,-56],[-21,1],[-15,3],[-39,23],[-21,50],[-108,57],[-88,129],[-104,2],[-79,-17],[-12,18],[-8,33],[-17,48],[-68,114],[-54,113],[-10,111],[7,121],[16,144],[-2,44],[19,26],[20,5],[19,37],[17,56],[3,43],[-13,78],[-10,110],[-10,55],[-6,-53],[14,-228],[-8,-32],[-14,-37],[-16,-2],[-19,6],[-13,-23],[-9,-100],[-25,-218],[4,-51],[21,-84],[7,-53],[6,-41],[5,-76],[-12,-34],[-11,-6],[-14,-19],[16,-93],[13,-43],[38,-87],[144,-122],[60,-72],[68,-97],[37,-100],[3,-83],[-54,-124],[-6,-103],[11,-73],[20,-68],[52,-88],[39,-32],[52,4],[9,-25],[5,-21],[8,-178],[-1,-67],[-15,-61],[-100,-282],[-86,-172],[-31,-94],[-11,-102],[-27,-48],[-148,-154],[-230,-137],[-186,-71],[-42,-24],[-299,-78],[-58,-11],[-75,7],[-61,-10],[-68,21],[-61,25],[-34,61],[-41,7],[-11,-30],[20,-78],[-9,-93],[11,-54],[24,-11],[23,-27],[21,-37],[-35,-4],[13,-29],[15,-18],[-2,-61],[-13,-148],[-34,-32],[-9,-8],[-11,-32],[-21,-142],[-7,-92],[9,-59],[41,-124],[-15,-81],[-26,-44],[-112,-90],[-45,-36],[-70,-25],[-114,-4],[-42,6],[-97,82],[-73,49],[-66,39],[-64,23],[9,12],[4,21],[-18,12],[-13,3],[-42,-43],[-18,-43],[-5,-38],[-1,-92],[8,-76],[30,-189],[3,-103],[-14,-130],[20,-76],[24,-34],[56,-34],[21,-23],[24,3],[7,-9],[-4,-16],[-14,-33],[1,-35],[42,-10],[43,7],[46,16],[11,24],[0,50],[-53,9],[6,18],[41,21],[53,33],[27,7],[18,-23],[12,-21],[16,-54],[9,-71],[1,-86],[-7,-81],[-7,-28],[-14,-35],[-95,-43],[-26,11],[-25,61],[-8,63],[-21,42],[-46,34],[-45,-10],[-45,-59],[-44,-19],[-15,-53],[110,-86],[52,-24],[17,0],[17,-11],[-15,-32],[-16,-20],[-79,-44],[-34,-31],[-41,-60],[-57,-132],[-17,-28],[-9,-34],[-6,-91],[19,-150],[-20,-63],[12,-70],[-6,-47],[-20,-67],[-80,-106],[-14,-78],[28,-45],[-2,-40],[-9,-36],[-33,0],[-120,24],[-44,-39],[-41,-49],[-11,-23],[-14,-14],[-83,-26],[-16,-17],[-88,-184],[-38,-115],[-45,-112],[-12,-47],[-3,-66],[7,-59],[6,-44],[16,-56],[33,-64],[170,-260],[35,-23],[181,-28],[40,-36],[23,-58],[9,-51],[-10,-128],[-11,-41],[-20,-36],[-43,-47],[-51,-25],[14,-18],[21,2],[46,16],[19,-16],[15,-50],[-28,-21],[-9,-24],[-20,-38],[-105,-148],[-56,-45],[-52,-59],[-70,-61],[-27,-34],[-37,-73],[-56,-79],[-61,-170],[-2,-33],[9,-22],[-34,-298],[-12,-35],[-24,-37],[-65,-62],[-31,-7],[-41,35],[-23,38],[-22,63],[-28,66],[-1,-23],[9,-40],[-6,-42],[-70,-19],[-18,-20],[63,9],[43,-13],[18,-15],[16,-32],[15,-38],[-12,-21],[-35,-18],[-44,-32],[-53,-58],[-29,-68],[-13,-48],[-14,-98],[-4,-64],[-22,-50],[-35,-44],[2,-11],[24,23],[18,7],[16,-59],[22,-119],[10,-82],[-2,-25],[-6,-33],[-45,-8],[-39,1],[-29,-15],[15,-15],[27,6],[37,-36],[41,15],[19,-23],[13,-22],[63,-172],[55,-106],[27,-63],[-13,-29],[-157,54],[-35,30],[-30,3],[-57,-36],[-32,-88],[-16,-25],[-40,-23],[-40,-5],[-134,-85],[-48,-7],[-33,-23],[-32,-32],[-12,-70],[5,-42],[-36,-152],[-9,-84],[0,-44],[10,-70],[-13,-120],[-25,-26],[-59,-34],[-41,24],[-69,22],[-50,46],[-63,33],[-21,20],[-56,92],[-6,31],[-4,39],[30,56],[16,4],[46,-2],[39,9],[25,-30],[6,-65],[-10,-34],[-10,-22],[3,-16],[28,23],[14,145],[94,72],[31,42],[30,66],[5,18],[2,25],[-20,20],[-44,27],[-142,-137],[-64,-36],[-42,-39],[-50,-71],[-9,-21],[-11,-46],[-5,-52],[-49,24],[-76,74],[-15,28],[15,38],[23,31],[2,107],[6,38],[16,30],[29,33],[14,7],[12,-14],[2,-25],[48,2],[93,94],[38,3],[51,-22],[57,13],[11,10],[11,22],[-42,26],[-41,13],[-115,10],[-25,-10],[-34,-51],[-11,13],[-7,25],[-39,18],[-19,-4],[-18,-24],[3,-37],[-10,-41],[-36,-39],[-25,-64],[1,-49],[-1,-26],[-9,-14],[-19,-16],[-60,11],[-34,52],[-13,35],[-38,39],[83,47],[29,27],[27,61],[20,39],[-14,27],[-17,0],[1,-43],[-18,-36],[-38,17],[-57,-52],[-35,14],[-56,-16],[-28,28],[-6,36],[10,38],[-10,63],[-16,15],[-16,-4],[-7,38],[-17,66],[-8,18],[-8,31],[9,7],[19,-8],[17,-20],[26,-3],[57,-43],[24,10],[13,10],[5,36],[0,34],[10,0],[32,-43],[21,4],[36,-12],[19,5],[34,16],[54,48],[27,49],[14,7],[16,-6],[12,-15],[0,-34],[12,-32],[17,-26],[5,-31],[-3,-32],[-31,-43],[-6,-16],[11,-16],[12,8],[18,21],[10,30],[2,16],[1,22],[-1,27],[-25,76],[-3,18],[0,35],[28,32],[8,25],[2,48],[-15,33],[-61,77],[-101,76],[-12,-8],[-8,-14],[10,-10],[13,-5],[90,-63],[24,-37],[15,-10],[19,-24],[-5,-36],[-91,-34],[-72,-76],[-55,-46],[-37,17],[-18,47],[-19,60],[-28,35],[-16,-4],[-13,7],[-11,18],[-21,-15],[-49,42],[-13,18],[35,58],[39,-22],[9,165],[-12,37],[-51,41],[-24,-5],[-34,5],[-23,19],[-26,8],[-22,11],[-29,25],[-34,14],[-47,104],[-20,55],[-11,60],[72,2],[42,10],[10,25],[-15,47],[-20,38],[15,36],[21,27],[22,-12],[56,-61],[9,-41],[39,-126],[10,-12],[4,-11],[82,-71],[11,1],[-5,59],[23,81],[23,26],[11,0],[1,13],[-22,34],[11,44],[-7,1],[-19,-28],[-40,-140],[-24,-26],[-33,64],[-18,45],[-10,17],[4,71],[65,-14],[-22,23],[-77,42],[-19,20],[-14,7],[-25,49],[-32,41],[55,74],[27,52],[88,-27],[17,16],[-15,38],[-17,-12],[-27,24],[-43,72],[2,36],[7,67],[17,14],[36,14],[41,-22],[17,-17],[16,8],[-16,49],[-27,19],[-29,35],[3,39],[9,33],[8,35],[5,50],[-3,39],[8,17],[13,8],[1,15],[-26,-3],[-9,-49],[-3,-45],[-19,-35],[-7,-41],[-5,-48],[-10,-55],[-23,21],[-13,21],[-5,15],[3,28],[-6,175],[-1,147],[11,114],[32,45],[14,13],[13,-6],[20,1],[14,16],[-45,28],[-28,-16],[-20,-22],[-37,17],[-7,58],[-21,51],[-4,65],[2,93],[51,-8],[42,-18],[110,2],[90,-90],[40,12],[-2,18],[-30,22],[-19,51],[-11,14],[-6,31],[-1,35],[-23,129],[-9,-3],[-9,-44],[-18,-74],[-26,-36],[-40,-15],[-40,-8],[-34,14],[-8,31],[1,35],[-15,17],[-39,16],[-11,8],[-13,32],[19,49],[15,29],[18,-6],[18,-13],[23,-38],[22,-7],[25,30],[5,21],[-16,13],[-14,5],[-23,16],[-44,58],[22,59],[52,68],[16,16],[-14,57],[16,63],[-16,51],[-29,56],[-39,12],[-8,-16],[-2,-23],[6,-17],[-3,-12],[-9,0],[-50,12],[-33,37],[-54,34],[-7,26],[-6,39],[19,67],[-10,1],[-35,-52],[-53,-27],[-40,-9],[-17,-20],[-7,-18],[11,-10],[22,-2],[17,-65],[-4,-25],[-8,-16],[-19,-4],[-38,45],[-20,51],[0,40],[14,54],[61,74],[17,31],[36,34],[48,78],[41,43],[-20,36],[-21,53],[2,75],[84,30],[37,-13],[47,3],[26,18],[18,3],[40,21],[17,29],[4,22],[0,20],[-4,23],[-7,62],[7,21],[17,24],[22,8],[10,-2],[27,-22],[-6,-32],[-10,-39],[-22,-153],[-11,-35],[-17,-30],[12,-62],[-18,-44],[-76,-47],[-10,-2],[6,-17],[44,4],[34,10],[34,39],[11,60],[14,117],[18,17],[22,3],[11,-27],[-4,-62],[0,-60],[-28,-176],[-35,-71],[-4,-19],[2,-22],[27,3],[21,38],[15,49],[15,68],[-2,49],[5,30],[6,100],[11,50],[-1,71],[-19,26],[-26,16],[-7,43],[14,86],[50,-3],[48,59],[31,21],[18,-5],[62,-56],[12,-1],[-2,21],[-9,14],[-25,19],[-45,60],[-61,10],[11,78],[12,72],[30,9],[49,24],[94,107],[17,81],[4,91],[-45,23],[-48,60],[-39,31],[-35,40],[7,59],[5,97],[43,21],[20,132],[-29,102],[7,76],[38,64],[6,45],[11,49],[33,5],[1,27],[-3,49],[-22,58],[-1,80],[21,94],[33,-6],[6,4],[-23,57],[-19,63],[3,25],[18,21],[21,12],[23,-32],[33,-103],[5,27],[-13,104],[-11,130],[-35,-17],[-31,9],[-12,20],[-12,30],[11,35],[11,27],[23,33],[49,12],[35,42],[11,87],[-11,-9],[-19,-76],[-32,-26],[-16,4],[-19,14],[-38,67],[-21,15],[-20,2],[-17,-17],[-44,-117],[-19,-20],[-78,-9],[-28,14],[-31,17],[3,29],[10,31],[17,16],[1,17],[-24,5],[-28,32],[-13,41],[-5,73],[-25,116],[-5,83],[17,59],[38,232],[12,119],[20,104],[0,68],[52,63],[20,38],[45,211],[6,114],[-71,346],[-11,66],[-3,82],[17,136],[2,52],[-15,75],[-40,122],[-1,62],[17,64],[-16,80],[8,49],[9,39],[63,-21],[29,10],[15,23],[12,65],[6,103],[4,44],[5,64],[31,26],[11,61],[26,84],[26,238],[27,58],[27,68],[-11,100],[18,46],[15,34],[14,61],[19,58],[46,83],[11,101],[35,176],[7,112],[11,76],[-3,71],[21,86],[20,73],[7,40],[46,97],[8,76],[-17,52],[0,81],[-13,112],[30,41],[12,31],[39,179],[-3,70],[11,87],[-25,103],[-4,231],[-14,179],[-23,188],[2,105],[-15,131],[0,76],[11,171],[74,108],[15,121],[9,163],[-3,119],[-8,54],[-36,87],[-10,157],[7,41],[31,44],[21,61],[11,95],[23,75],[9,181],[18,144],[10,50],[30,63],[5,17],[5,48],[-2,113],[5,70],[23,136],[3,63],[26,141],[6,101],[12,53],[-5,60],[8,134],[-18,76],[-4,44],[22,137],[16,34],[24,64],[11,72],[2,45],[-32,227],[-4,78],[7,180],[11,116],[-3,93],[3,48],[6,60],[21,72],[5,52],[-7,21],[-26,27],[-21,66],[-2,65],[7,47],[2,67],[31,13],[17,37],[16,70],[20,169],[9,209],[12,125],[8,63],[7,130],[12,85],[2,78],[-2,60],[-30,304],[0,112],[13,174],[0,244],[-2,57],[-12,54],[-3,72],[-18,127],[-17,253],[0,134],[-7,114],[-16,30],[-20,39],[-91,130],[-34,69],[-32,33],[-78,111],[-8,36],[-9,114],[-11,32],[-26,41],[-68,55],[-26,28],[-27,50],[-40,36],[-44,72],[-26,59],[-29,38],[-91,54],[-45,54],[-85,76],[-38,49],[-91,59],[-27,28],[-90,138],[-62,46],[-51,77],[-153,166],[-24,53],[-23,81],[-34,49],[-38,112],[-57,66],[-54,87],[-20,80],[-36,101],[-11,54],[-32,53],[-2,107],[-22,49],[16,24],[17,11],[21,165],[-12,83],[-56,151],[-21,72],[-15,93],[-22,55],[-34,116],[-21,102],[-45,75],[-12,27],[-7,38],[-25,26],[-1,79],[-17,150],[-25,76],[-90,140],[-2,55],[-7,99],[-20,106],[-99,332],[-26,99],[-25,161],[-22,91],[-25,162],[-37,123],[-24,107],[-25,133],[-2,71],[-45,122],[-24,112],[-42,94],[-42,72],[-18,50],[-58,240],[-8,71],[-40,132],[-40,95],[-25,76],[-32,69],[-195,212],[-69,88],[-23,42],[-10,66],[4,38],[20,36],[28,-27],[17,11],[13,47],[1,72],[-17,92],[-63,177],[5,38],[12,42],[-24,86],[-27,68],[-13,53],[15,200],[14,51],[95,203],[26,86],[40,54],[42,82],[49,62],[6,8],[40,29],[17,29],[20,26],[18,41],[11,39],[28,180],[26,114],[-5,54],[-21,74],[-5,109],[2,33],[-3,25],[-14,-45],[4,-160],[-13,-72],[-17,-18],[-12,13],[7,117],[-13,-22],[-21,-79],[-34,-59],[-1,-19],[-9,-25],[-26,23],[-20,24],[-65,132],[-43,28],[-25,46],[-6,19],[-3,27],[26,27],[28,37],[2,82],[0,65],[-20,109],[9,144],[-5,56],[-23,119],[17,60],[60,44],[20,29],[13,95],[14,56],[27,-22],[21,2],[-28,21],[-24,85],[-3,40],[44,116],[24,30],[28,62],[25,93],[6,147],[-10,105],[-8,111],[15,28],[36,15],[30,36],[15,33],[36,-5],[41,51],[66,26],[91,58],[20,52],[-9,92],[-8,40],[-38,57],[19,74],[46,56],[60,-44],[7,87],[-22,76],[4,144],[7,29],[16,39],[20,26],[12,8],[21,-13],[13,29],[49,-13],[15,12],[10,20],[12,14],[15,35],[9,40],[7,16],[17,-6],[1,18],[9,23],[30,53],[-1,23],[-8,51],[2,19],[17,6],[21,15],[10,48],[14,42],[15,63],[17,4],[9,72],[22,64],[46,189],[-13,-4],[-11,-26],[-13,3],[-14,15],[4,85],[-8,10],[-23,-65],[-19,67],[-2,40],[8,40],[-1,27],[-31,-20],[2,25],[19,26],[9,27],[17,29],[7,44],[4,69],[7,74],[-5,36],[-9,31],[-8,137],[2,80],[-4,62],[-8,54],[-37,69],[59,80],[21,60],[-27,124],[-35,105],[-1,62],[10,-8],[11,2],[11,132],[-3,41],[-19,67],[-24,1],[-21,83],[-13,19],[-9,52],[-34,102],[-27,53],[-8,16],[-67,165],[-58,205],[-12,93],[15,6],[14,-3],[8,15],[9,27],[-7,63],[28,47],[11,32],[7,-3],[19,-55],[26,-31],[33,-46],[21,-10],[-26,47],[-44,63],[-13,42],[-12,57],[-17,-25],[-8,-21],[-9,-12],[-8,15],[-1,18],[-26,4],[-7,17],[-7,9],[3,-36],[5,-22],[-2,-27],[-9,-1],[-7,27],[-9,25],[-13,105],[-29,49],[-14,16],[-11,7],[-17,33],[-22,18],[-29,52],[-37,37],[-44,14],[-54,-9],[-19,-20],[-12,-27],[-6,-12],[-32,-30],[-12,-43],[-7,-37],[-16,-42],[18,-25],[-104,-142],[-21,-20],[-47,-15],[-11,-15],[-14,-28],[-2,-42],[2,-37],[14,-28],[12,-17],[29,-85],[52,-106],[9,-39],[8,-57],[-15,-27],[-12,-11],[-49,-5],[-17,-23],[-7,-35],[-18,-29],[-64,-28],[-49,-3],[-16,33],[-4,92],[-33,158],[-8,108],[-8,-13],[-18,-13],[-6,-27],[-5,-80],[-6,-27],[-14,2],[-28,29],[-37,26],[-48,170],[-5,32],[-9,38],[-37,16],[-32,29],[-34,4],[-17,-16],[-18,21],[-3,46],[-36,-21],[-47,7],[-41,20],[-28,-10],[-24,-33],[4,-85],[-7,-16],[-19,64],[-26,61],[-23,37],[-2,88],[-9,48],[-34,44],[-30,30],[-21,-6],[13,-50],[34,-65],[3,-25],[-1,-33],[-23,5],[-21,14],[-26,4],[-17,20],[-36,77],[26,66],[8,43],[-1,90],[-6,43],[-28,67],[-44,72],[-61,60],[-29,47],[-73,37],[-27,24],[-22,45],[-3,33],[8,50],[-20,63],[-86,125],[-48,46],[-11,26],[-7,9],[7,-86],[21,-52],[55,-48],[15,-28],[6,-37],[-32,-70],[-16,-18],[-5,-38],[-10,-12],[-11,22],[-45,110],[-86,53],[-16,32],[-32,101],[-14,91],[5,61],[35,96],[11,41],[-2,26],[1,37],[-13,26],[-33,35],[-21,27],[6,14],[38,37],[2,33],[0,11],[0,15],[-24,64],[-36,76],[-141,234],[-52,140],[-28,101],[-27,53],[-76,107],[-17,43],[-76,143],[-57,85],[-1,35],[24,45],[11,-2],[13,-32],[20,-36],[10,-1],[14,17],[0,17],[2,61],[-23,25],[-12,50],[-11,34],[3,21],[-1,24],[-31,19],[-30,-14],[-17,9],[-12,13],[-7,-8],[5,-58],[-16,-35],[-14,-25],[-26,-7],[-44,-2],[-66,28],[-48,39],[-26,0],[8,-13],[21,-8],[27,-27],[-8,-8],[-99,57],[-114,112],[-68,18],[-78,30],[-46,71],[-35,30],[-106,95],[-36,16],[-150,-2],[-64,37],[-73,72],[-50,66],[-115,182],[-8,13],[-74,157],[-78,172],[-30,56],[-29,43],[-40,79],[-104,174],[-54,80],[-50,95],[-45,53],[-45,34],[-20,20],[-17,26],[-10,2],[-5,-35],[16,-18],[19,-15],[14,-1],[16,-13],[46,-48],[7,-25],[-130,97],[-53,9],[-6,15],[27,50],[-9,18],[-9,3],[-28,-35],[-11,-2],[-2,23],[1,21],[-18,32],[-11,-1],[-10,-22],[-25,-42],[1,-17],[49,-18],[16,-10],[-3,-11],[-42,0],[-51,-19],[-92,-116],[-86,-50],[-122,-113],[-54,-5],[-29,-18],[-82,43],[-105,105],[-158,33],[-107,138],[-106,57],[-67,132],[-41,6],[-26,21],[-96,48],[-95,32],[-93,115],[-61,37],[-52,46],[-115,79],[-43,43],[-41,68],[-66,69],[-28,59],[-32,21],[-45,109],[-23,47],[-20,21],[-21,8],[-62,-9],[-91,48],[-43,12],[-88,72],[-118,80],[-39,91],[-32,86],[-60,113],[-37,48],[-64,57],[-36,46],[-55,35],[-93,91],[-29,77],[-18,68],[-49,83],[-55,156],[-14,57],[-10,88],[-13,51],[-15,39],[8,29],[27,36],[46,8],[33,39],[4,32],[-2,19],[-21,49],[-26,13],[-20,1],[-5,18],[15,20],[18,48],[25,58],[18,53],[4,75],[-3,76],[7,63],[-62,74],[-7,31],[-19,84],[-34,98],[1,195],[-41,173],[-42,86],[-22,30],[-59,134],[-46,77],[-46,146],[-45,93],[-58,156],[-41,78],[-189,262],[11,0],[55,-64],[9,5],[2,32],[-7,37],[-10,9],[-15,-8],[-20,8],[-10,12],[-29,8],[-38,44],[-16,45],[-1,52],[-54,110],[-20,62],[10,-5],[14,-25],[15,-7],[17,0],[12,10],[-4,18],[-12,15],[-78,58],[-26,41],[-64,68],[-15,24],[-10,65],[-16,3],[-13,-18],[-38,-18],[-10,21],[-1,20],[27,22],[24,61],[0,22],[-14,-25],[-20,-28],[-21,-15],[-32,-13],[-16,9],[-14,14],[-22,54],[-11,176],[20,61],[23,61],[20,35],[11,-27],[12,-3],[-9,31],[-19,28],[-7,29],[-1,26],[-9,48],[-57,102],[-54,-8],[-22,3],[-20,39],[-17,65],[-9,55],[-1,29],[-5,29],[-93,48],[-28,41],[-27,51],[-12,42],[-11,32],[-9,54],[-7,63],[11,82],[13,39],[-64,30],[-24,1],[-21,-16],[-18,21],[-37,24],[-45,85],[-53,155],[-57,50],[-19,54],[-24,48],[-20,60],[-4,26],[-6,15],[-29,42],[-32,71],[-9,57],[-8,87],[-22,31],[-21,14],[-5,41],[2,24],[-7,44],[-44,105],[-23,87],[-12,27],[-11,39],[-6,81],[-18,101],[-36,120],[-29,82],[-15,82],[7,83],[-5,51],[-4,12],[3,17],[10,-9],[8,15],[-1,53],[-10,16],[-29,17],[-12,11],[-70,22],[-39,30],[-3,70],[-19,32],[-16,20],[-52,41],[-9,-21],[-7,-39],[-21,-8],[-19,-2],[-32,27],[-79,103],[-17,17],[-25,9],[-12,16],[-53,55],[11,-29],[15,-30],[14,-87],[-16,-63],[-10,-220],[11,-44],[23,-70],[16,-112],[5,-82],[14,-66],[-4,-155],[5,-47],[22,-77],[41,-73],[9,-38],[53,-55],[33,-72],[65,-98],[20,-42],[58,-152],[2,-46],[11,-56],[33,12],[15,-42],[-2,-20],[4,-15],[17,3],[15,-11],[31,-166],[17,-22],[21,-10],[24,-18],[1,-42],[-1,-34],[21,-49],[-4,-66],[17,-56],[-3,-55],[7,-43],[50,-97],[62,-77],[13,-101],[26,-93],[25,-23],[27,-39],[-4,-40],[2,-24],[35,-73],[6,-94],[30,-61],[9,-4],[6,9],[-22,61],[-10,40],[-2,63],[8,8],[62,-99],[7,-74],[21,-42],[1,-56],[13,-34],[4,-49],[20,-80],[1,-112],[10,-82],[40,-125],[32,-26],[6,-61],[33,-159],[38,-87],[19,-73],[3,-45],[-14,-68],[-2,-47],[21,-143],[31,-73],[35,-18],[6,-10],[-3,-20],[12,-18],[13,23],[7,32],[-7,37],[-1,27],[6,19],[11,3],[67,-98],[11,-38],[25,-43],[23,-55],[9,-42],[19,-36],[9,-81],[46,-37],[25,-68],[2,-43],[-12,-110],[-11,-31],[-37,-47],[-27,-56],[-27,-34],[-27,-21],[-23,4],[-23,65],[-26,193],[-18,41],[-12,61],[-20,50],[-75,76],[-37,81],[-37,53],[-39,78],[-106,129],[-44,66],[-29,65],[-19,-1],[-14,-7],[-6,18],[-1,33],[-6,22],[-62,98],[-13,55],[-3,62],[14,162],[6,95],[-4,49],[-6,6],[-6,27],[-2,78],[-15,84],[-56,174],[-41,34],[-37,25],[-101,154],[-27,76],[-7,44],[-3,89],[-14,-52],[-19,-38],[-42,3],[-48,-43],[-29,40],[-15,46],[-24,55],[-26,11],[-17,2],[-31,68],[-26,21],[-36,9],[-32,34],[-9,38],[-5,53],[-12,32],[-49,62],[-39,69],[-38,45],[-11,36],[-1,25],[59,-7],[71,-27],[34,8],[21,25],[20,18],[3,-19],[-4,-37],[20,-33],[26,-27],[19,3],[-18,29],[-12,60],[5,22],[0,29],[-26,-6],[-4,15],[23,45],[25,120],[13,118],[-27,103],[-46,72],[-98,210],[-59,108],[-17,40],[-16,19],[-48,25],[-40,60],[-71,85],[-30,44],[-21,104],[-16,14],[5,71],[-7,127],[-12,32],[-38,31],[-9,86],[-2,82],[-8,57],[-65,96],[-3,46],[0,44],[-7,44],[-35,91],[-42,79],[-14,38],[-2,77],[-15,21],[6,5],[13,-2],[8,10],[1,54],[-63,84],[-18,116],[-34,61],[-8,23],[-18,109],[0,4],[-2,63],[-13,22],[-17,-14],[-7,82],[4,39],[-2,38],[-16,92],[-41,113],[-89,140],[-46,47],[-35,59],[-23,16],[-28,5],[-9,-27],[-32,18],[5,66],[-32,92],[-25,10],[-65,-6],[-87,50],[-25,30],[-9,54],[-41,47],[-53,46],[-30,-11],[-39,7],[-55,33],[-33,4],[-63,-9],[-23,7],[-22,41],[-24,21],[5,51],[-3,47],[4,36],[-11,79],[9,73],[-8,26],[-13,21],[-42,30],[-7,37],[7,52],[-11,35],[-35,32],[-32,73],[-40,39],[-17,67],[-25,42],[-8,36],[-56,131],[-59,102],[-9,58],[-2,81],[23,49],[12,43],[-1,39],[-4,29],[-20,51],[-79,30],[-64,124],[-4,96],[-25,98],[0,63],[-4,69],[19,15],[17,-6],[-1,-27],[5,-49],[20,-37],[19,-16],[18,-36],[13,-11],[13,-3],[-7,23],[-8,15],[-9,48],[-18,61],[-20,33],[-11,61],[-9,15],[-5,22],[20,27],[27,19],[36,6],[103,-9],[21,15],[19,-5],[13,2],[-28,16],[-16,-5],[-18,3],[-37,-3],[-15,7],[-16,19],[-11,2],[-34,-33],[-15,4],[-36,36],[-15,5],[-25,-20],[-4,-90],[8,-66],[-15,-7],[-17,27],[-27,17],[-22,25],[-32,46],[-16,17],[-18,-39],[-1,18],[9,45],[-3,75],[28,-60],[-8,42],[-22,47],[-17,16],[-20,83],[-47,50],[-38,80],[-77,134],[-5,117],[-28,148],[12,85],[-1,59],[-14,91],[-15,49],[-62,135],[-60,90],[-9,69],[-4,69],[13,62],[12,64],[8,17],[3,-7],[-2,-13],[8,-5],[3,29],[6,15],[-9,2],[1,9],[5,18],[18,85],[-1,107],[19,131],[-1,44],[-12,93],[-13,56],[-23,40],[10,58],[0,55],[-40,80],[-15,104],[-3,45],[4,116],[-11,50],[-27,82],[12,72],[12,43],[30,190],[7,15],[13,0],[22,32],[-10,8],[-16,-16],[14,75],[15,64],[10,24],[5,209],[9,160],[14,53],[-5,55],[6,74],[-4,74],[31,359],[-4,43],[9,59],[-9,153],[4,171],[-8,22],[-4,24],[8,3],[14,-25],[66,0],[42,24],[16,-8],[17,-31],[23,-7],[28,6],[-9,8],[-13,2],[-29,29],[-17,28],[-51,-1],[-11,18],[-58,-18],[-17,19],[-32,-13],[8,54],[-2,68],[2,66],[8,-48],[19,-52],[10,59],[6,72],[-19,29],[-32,20],[-11,68],[75,58],[-40,12],[-15,26],[-20,4],[-1,-20],[-6,-27],[-7,35],[-2,41],[-8,70],[-31,113],[-18,147],[-23,72],[-45,69],[-12,40],[-11,103],[7,77],[-9,54],[22,-3],[56,-42],[71,-34],[21,-24],[34,-19],[189,-28],[13,3],[24,17],[11,-2],[27,-40],[14,-4],[18,2],[14,7],[23,28],[3,-11],[-1,-25],[8,-36],[17,-47],[7,-29],[-34,-82],[-7,-2],[-1,28],[-4,5],[-64,-139],[-22,-66],[-2,-29],[0,-18],[9,-4],[21,7],[30,27],[1,6],[-28,-10],[-13,0],[1,31],[4,14],[18,47],[19,27],[28,30],[16,24],[11,35],[30,43],[6,11],[-2,35],[2,7],[15,-5],[6,-60],[-4,-27],[-26,-32],[-3,-12],[5,-44],[-5,-4],[-10,5],[-3,-3],[25,-48],[8,-38],[1,-33],[-7,-65],[-7,-10],[-12,3],[-17,21],[-3,-7],[-13,-50],[-5,4],[-8,60],[-4,4],[-25,-27],[-11,-26],[-8,-41],[-11,-20],[31,-4],[28,8],[23,-19],[8,-1],[21,19],[6,14],[17,62],[9,11],[13,1],[12,9],[19,34],[0,14],[-6,77],[2,43],[-4,14],[-8,14],[1,14],[6,23],[1,21],[-6,18],[3,21],[17,45],[3,20],[22,45],[-6,18],[-15,22],[-10,19],[-10,30],[-8,10],[-2,-4],[11,-50],[-3,-3],[-27,27],[-7,16],[-3,23],[2,17],[15,17],[18,6],[-2,15],[-22,46],[-15,21],[-11,10],[-15,3],[-7,7],[-2,11],[3,15],[9,4],[23,-6],[13,11],[-1,18],[-4,10],[1,66],[-9,53],[-5,9],[-5,1],[-6,-7],[-14,-2],[-10,18],[-10,34],[-18,80],[-11,21],[-27,26],[-10,0],[-11,-8],[-7,-12],[-6,-27],[-4,-8],[-4,1],[-3,7],[-8,37],[2,16],[9,20],[-1,7],[-20,-6],[-8,5],[-4,10],[1,42],[-11,23],[13,10],[32,8],[34,1],[9,18],[10,43],[-24,-40],[-14,-4],[-44,15],[-29,-2],[-4,8],[2,9],[6,9],[4,31],[7,85],[9,31],[3,16],[-2,4],[-38,-59],[-3,-19],[4,-16],[-4,-33],[-18,-10],[-10,5],[-20,-28],[-6,-3],[-91,50],[-10,6],[-15,23],[-23,40],[-7,34],[9,28],[8,14],[10,0],[10,-10],[21,-47],[8,-29],[22,4],[35,37],[8,14],[-35,-14],[-15,1],[-15,15],[-16,30],[-8,34],[0,107],[5,20],[17,16],[11,25],[-1,11],[-10,22],[-15,16],[-15,9],[-4,-3],[23,-46],[0,-18],[-26,-46],[-4,-13],[0,-45],[-3,-9],[-21,-13],[-23,-35],[-39,-12],[-36,4],[-20,17],[-61,86],[-22,36],[0,30],[-42,107],[0,23],[-14,33],[-16,5],[-4,32],[33,68],[21,58],[2,18],[-1,28],[-5,62],[5,27],[-21,-36],[-4,-26],[5,-27],[-3,-30],[-12,-43],[-21,-45],[-42,-21],[-74,12],[-8,6],[-5,15],[-4,66],[-5,-8],[-8,-35],[-7,-51],[-9,-11],[-15,-1],[-12,8],[-9,17],[-19,2],[-34,-14],[-17,6],[-19,0],[-40,15],[-47,4],[-12,11],[1,22],[8,11],[49,10],[48,23],[47,12],[-2,11],[-21,4],[-108,-26],[-34,4],[-6,4],[-1,26],[13,24],[21,23],[6,18],[-12,7],[-20,-5],[-9,14],[10,55],[-9,55],[-13,-52],[-19,-29],[-91,-13],[-15,-15],[-12,0],[-58,28],[-25,17],[-23,25],[-42,57],[-33,37],[-1,67],[7,43],[15,49],[59,104],[21,19],[18,7],[87,9],[65,13],[12,7],[-95,7],[-85,-5],[-29,-16],[-37,-67],[-9,-28],[-10,-21],[-7,0],[-12,7],[-4,9],[-6,22],[-19,34],[-9,40],[-5,59],[1,26],[10,34],[28,66],[-36,-2],[4,55],[13,61],[34,35],[34,26],[31,34],[55,22],[18,-46],[47,-14],[13,-21],[17,-38],[20,-36],[25,-35],[7,-3],[-11,30],[-40,65],[-2,23],[-10,25],[-52,36],[-10,14],[-9,36],[-4,24],[6,22],[53,69],[13,37],[0,17],[-5,19],[-11,34],[-3,0],[3,-51],[-2,-20],[-6,-22],[-8,-17],[-12,-11],[-114,-158],[-12,-9],[-42,-14],[-22,-17],[-12,-22],[-19,-58],[-25,-115],[-30,-93],[-25,121],[-46,92],[89,92],[2,14],[-8,49],[2,15],[8,21],[23,32],[-1,3],[-26,-12],[-41,-71],[-16,-22],[-8,-3],[-1,41],[22,109],[18,105],[6,30],[16,30],[-15,-2],[-72,-47],[-24,29],[-20,153],[-36,59],[-60,49],[-59,22],[-13,43],[-12,53],[16,62],[26,29],[23,14],[23,-7],[1,-22],[-15,-61],[20,-6],[81,-74],[17,-6],[34,28],[18,-1],[44,-23],[15,-28],[42,-54],[-6,32],[-46,66],[-25,22],[-45,4],[-28,-11],[-12,3],[-24,17],[-21,28],[-21,61],[-5,29],[1,21],[5,19],[9,17],[17,13],[26,7],[7,8],[-32,35],[-15,0],[-52,-51],[-10,-5],[-5,10],[-4,1],[-15,-25],[-12,-11],[-42,-79],[-7,-37],[-2,-57],[-5,-35],[-7,-14],[-50,-27],[-28,-55],[-34,48],[-38,45],[-25,80],[-45,14],[-52,45],[-20,41],[28,82],[41,63],[6,74],[6,16],[70,19],[46,37],[-47,4],[-29,-6],[-52,-26],[-57,51],[-29,47],[-10,40],[10,34],[2,34],[5,47],[5,20],[12,26],[25,17],[22,54],[9,37],[44,111],[16,48],[31,67],[61,105],[-20,-6],[-10,-9],[-9,1],[-9,11],[-9,24],[-8,35],[-5,-16],[-1,-66],[-6,-57],[-11,-39],[-30,-80],[-18,-31],[-12,29],[10,50],[17,40],[3,54],[-16,65],[-10,53],[-4,40],[-1,36],[3,33],[7,35],[11,39],[-1,4],[-14,-30],[-10,-32],[-7,-35],[-3,-37],[2,-40],[5,-35],[17,-65],[6,-39],[1,-27],[-38,-92],[-13,-45],[1,-19],[3,-46],[-40,-76],[-52,-38],[-11,12],[-11,12],[-65,10],[-24,82],[-12,64],[-19,55],[0,13],[17,37],[65,31],[1,12],[-24,8],[-6,13],[-7,60],[2,53],[-2,35],[-10,72],[-17,43],[-41,86],[-4,21],[18,27],[12,25],[-71,-43],[-96,-46],[-42,-32],[-9,-13],[-3,-11],[8,-30],[-1,-10],[-9,-18],[-10,-51],[-21,-53],[-10,-11],[-38,20],[-10,17],[-19,70],[5,19],[13,15],[19,34],[24,52],[45,133],[29,1],[52,26],[-82,13],[-12,7],[-11,18],[-9,29],[-17,33],[-31,11],[-13,12],[-21,39],[-14,18],[-7,22],[-1,26],[-6,13],[-21,5],[-12,9],[-3,67],[-42,17],[-18,15],[-28,42],[-7,21],[-3,17],[7,46],[-3,9],[-25,-5],[-153,72],[8,95],[-28,125],[-31,51],[6,19],[7,11],[13,0],[59,-37],[56,-44],[7,7],[-89,92],[-22,28],[-5,33],[-1,18],[7,10],[84,-9],[4,7],[-84,27],[-17,0],[-18,-39],[-9,-9],[-18,2],[-6,6],[-22,47],[-20,33],[-38,45],[-7,33],[-2,47],[5,45],[31,103],[13,18],[3,11],[-10,-1],[-9,-10],[-25,-48],[-27,-78],[-21,-27],[-14,6],[-20,32],[-43,39],[-50,10],[-31,40],[-46,111],[-6,55],[-6,14],[-25,18],[-16,26],[-24,135],[-31,93],[-8,50],[3,49],[-4,5],[-11,-38],[-3,-20],[-20,-5],[19,-39],[5,-19],[-10,1],[-19,-5],[33,-66],[14,-102],[21,-76],[14,-62],[7,-47],[9,-44],[25,-99],[3,-20],[-3,-16],[-8,-19],[-14,-7],[-45,13],[-17,25],[-24,44],[-34,21],[-84,-10],[-6,3],[0,37],[10,65],[-8,26],[-44,96],[1,19],[60,44],[-29,3],[-24,-17],[-9,11],[-14,62],[-9,23],[-5,4],[-2,-58],[10,-31],[1,-17],[-1,-25],[-7,-18],[-11,-11],[-11,-2],[-20,12],[-23,23],[-19,11],[-8,10],[-9,25],[-15,20],[-74,24],[-44,30],[-3,-8],[13,-31],[2,-19],[-11,-5],[-20,-30],[6,-4],[21,10],[23,-1],[39,-19],[35,-23],[12,-13],[6,-20],[4,-7],[34,-23],[2,-12],[-22,-35],[45,3],[27,-12],[34,-56],[11,-30],[2,-40],[-7,-11],[-14,-8],[-92,-13],[-34,-48],[-7,-1],[-25,13],[-46,38],[-58,36],[-131,108],[-3,5],[-3,20],[-9,11],[-17,9],[-25,27],[-32,45],[-19,36],[-8,25],[-18,29],[-59,61],[-31,23],[-28,13],[-24,3],[-6,8],[11,13],[2,8],[-53,13],[-50,28],[-127,80],[-65,50],[-39,24],[-16,13],[-7,11],[9,12],[26,12],[17,13],[27,51],[2,16],[-14,37],[-7,33],[0,19],[4,18],[4,12],[11,12],[9,6],[10,-4],[32,-46],[4,-17],[-1,-63],[9,-73],[3,5],[3,24],[2,47],[4,22],[6,22],[12,12],[36,-7],[17,4],[-71,33],[-44,62],[-8,7],[-24,3],[-26,-26],[-66,-82],[-19,-14],[-83,-46],[-57,-9],[-63,7],[-54,15],[-136,72],[-21,17],[31,44],[2,14],[-11,45],[-9,13],[-13,8],[-4,-6],[0,-13],[3,-25],[-10,-13],[-23,-14],[-39,-15],[-120,37],[-124,30],[-110,7],[-156,-25],[-83,-24],[-48,-2],[-47,4],[-4,17],[21,10],[-1,12],[-27,39],[-40,23],[-55,8],[-32,11],[-8,14],[-19,14],[-31,13],[-13,23],[10,71],[11,43],[10,30],[27,48],[-9,-3],[-39,-36],[-33,-37],[-32,-48],[-18,-22],[-24,-20],[-37,5],[-50,30],[-43,15],[-36,1],[-15,5],[25,27],[14,22],[19,34],[5,17],[-132,5],[-5,19],[0,13],[-4,11],[-19,8],[-27,-6],[-43,-22],[-19,17],[7,9],[14,7],[28,31],[-38,16],[-20,18],[-10,16],[1,55],[10,35],[87,34],[-27,13],[-56,-5],[-37,-29],[-43,-41],[-30,-16],[-15,11],[-20,3],[-25,-3],[-16,-11],[-9,-18],[-10,-12],[-11,-6],[-8,2],[-12,18],[-25,12],[-12,14],[-7,-9],[-9,-27],[-9,-13],[-42,-14],[-23,2],[-28,34],[-4,12],[10,29],[61,115],[-6,-1],[-20,-18],[-39,-46],[-18,-14],[-30,-1],[-14,5],[-17,-4],[-20,-12],[-13,-14],[-6,-15],[4,-2],[30,17],[17,4],[5,-8],[-24,-52],[-14,-50],[-13,-12],[-22,2],[-24,-5],[0,-14],[44,-39],[16,-6],[20,-14],[3,-14],[-7,-38],[-6,-15],[-9,-8],[-36,1],[-12,-4],[-24,-24],[-12,-19],[4,-2],[21,16],[31,9],[39,1],[30,9],[20,16],[19,-4],[18,-26],[6,-22],[-8,-19],[-15,-13],[-23,-9],[-15,-12],[-6,-16],[-3,-24],[-1,-32],[6,-58],[-5,-7],[-8,-5],[-13,0],[-12,-14],[-27,-76],[-9,-9],[-12,8],[-10,0],[-9,-10],[-19,-8],[-30,-5],[-25,2],[-45,16],[-18,12],[-15,19],[-40,-20],[-11,9],[-25,53],[-5,-3],[-5,-58],[-8,-20],[-25,-41],[-13,-71],[-4,-3],[-5,11],[-15,63],[-8,14],[-23,-36],[-2,-14],[6,-47],[-6,-7],[-45,25],[-11,2],[-3,-5],[15,-37],[-1,-13],[-65,-71],[-17,3],[-10,7],[-12,-1],[-41,-27],[-11,1],[-15,16],[-7,-1],[-4,-16],[-1,-32],[-15,-30],[-49,-49],[-13,-23],[-9,-31],[-8,-3],[-28,20],[-33,13],[-5,-6],[10,-19],[-2,-12],[-14,-4],[-18,2],[-22,7],[-31,-8],[-40,-25],[-33,0],[-46,41],[-12,3],[-4,12],[9,33],[13,25],[9,12],[44,32],[50,12],[31,19],[39,40],[20,30],[40,77],[-3,6],[-9,4],[-88,-73],[-13,-7],[-17,1],[-70,28],[-14,12],[-11,35],[20,80],[13,39],[35,60],[44,64],[15,41],[24,110],[-2,51],[-10,61],[-1,36],[10,12],[102,56],[49,43],[94,62],[25,0],[19,-22],[22,-17],[25,-13],[32,1],[39,16],[62,-6],[128,-41],[27,-2],[1,5],[-19,29],[-89,17],[-37,16],[-104,74],[-24,28],[10,14],[26,11],[8,10],[4,19],[15,25],[25,32],[39,31],[75,46],[-29,2],[-54,-8],[-19,-9],[-36,-33],[-14,-23],[-20,-46],[-8,-8],[-37,-7],[-101,-4],[-17,23],[-9,4],[-13,-4],[-92,-59],[-34,-30],[-23,-35],[-37,-25],[-49,-16],[-37,-20],[-39,-40],[-14,-30],[0,-14],[9,-45],[-10,-9],[-22,-3],[-36,-30],[-76,-89],[-10,-32],[0,-11],[12,-25],[-8,-17],[-22,-25],[-48,-41],[-31,-16],[-20,-1],[-20,6],[-35,26],[-28,2],[-2,-4],[39,-28],[39,-36],[24,-30],[10,-24],[0,-25],[-9,-25],[-27,-44],[-27,-13],[-70,-13],[-22,-11],[-7,-8],[48,-18],[4,-10],[-6,-37],[-13,-12],[-40,-22],[-35,-6],[-6,4],[7,29],[-2,7],[-13,6],[-19,-11],[-47,-43],[-5,-7],[17,-11],[-4,-10],[-26,-30],[-10,-21],[-17,-20],[-76,-64],[5,-15],[-19,-56],[-11,-49],[13,-20],[64,-24],[31,-6],[37,-17],[66,-45],[22,-30],[3,-14],[-2,-15],[-8,-21],[-21,-38],[-50,-58],[-22,-16],[-34,-13],[-12,-10],[-43,-54],[-12,-30],[2,-26],[-9,-18],[-56,-35],[2,-6],[20,-3],[-7,-31],[-3,-43],[-10,-8],[-36,1],[-44,-17],[-3,-5],[-1,-31],[-118,-23],[-25,-59],[-14,-18],[-45,-43],[-29,-18],[-32,-10],[-17,-15],[-1,-18],[-9,-17],[-28,-26],[-14,-34],[-10,-5],[-51,-8],[-11,-11],[-5,-46],[-9,-1],[-19,11],[-24,-9],[-53,-51],[-12,-18],[1,-10],[8,-10],[13,-31],[-1,-20],[-20,-58],[-8,-9],[-25,-14],[-10,-32],[-23,4],[-19,-6],[-12,-21],[-14,-12],[-14,-4],[-18,-16],[-22,-31],[-20,-19],[-18,-9],[-18,-2],[-18,5],[-16,-4],[-14,-11],[-13,-18],[-11,-50],[-14,-22],[-9,-4],[-17,4],[-27,10],[-28,-4],[-44,-30],[-14,-23],[28,-5],[14,-7],[-1,-7],[-14,-6],[-25,1],[-14,-6],[-19,-13],[-45,-14],[-17,-10],[-34,-58],[-4,-13],[4,-3],[19,6],[23,-10],[11,-12],[8,-15],[7,-29],[4,-4],[-43,-49],[-12,-21],[-8,-8],[-5,6],[-6,55],[-3,9],[-10,1],[-10,-17],[-22,-65],[-23,-32],[-178,-83],[-26,-19],[-5,-35],[-7,-31],[-12,-24],[-14,-16],[-3,11],[1,86],[-3,18],[-18,11],[-8,-2],[-11,-5],[-18,-18],[-10,-5],[-14,1],[-23,-18],[-55,-59],[-36,-15],[-10,-12],[-15,-32],[-10,-12],[-15,-1],[-20,10],[-16,-7],[-12,-24],[-13,-9],[-35,17],[-15,-11],[-20,-31],[-21,-20],[-22,-9],[-56,-11],[-23,7],[-5,9],[1,38],[9,28],[9,13],[11,12],[17,1],[31,-8],[-4,9],[-11,11],[-29,19],[-28,10],[-16,-6],[-23,-15],[-15,-17],[-8,-19],[-10,-63],[-6,-17],[-67,-111],[-26,-34],[-25,2],[-13,-13],[-17,-27],[-17,-13],[-14,1],[-12,5],[-8,9],[1,9],[11,8],[-4,22],[-19,37],[-13,19],[-24,3],[-4,-17],[8,-84],[-1,-19],[-15,-24],[-41,-27],[-12,2],[-37,53],[-34,11],[-2,-17],[7,-36],[-8,-32],[-25,-31],[-19,-15],[-13,1],[-1,21],[12,42],[3,35],[-6,28],[1,22],[7,15],[45,41],[20,7],[10,-11],[13,-1],[15,6],[10,14],[4,19],[20,26],[35,31],[40,57],[46,83],[53,72],[62,60],[66,48],[134,66],[10,-4],[-12,-21],[8,-14],[13,-1],[49,10],[20,14],[6,-13],[-7,-17],[-30,-17],[1,-14],[43,-67],[13,-10],[12,1],[4,9],[-3,48],[14,9],[30,2],[19,-6],[9,-15],[17,-12],[25,-10],[15,3],[6,16],[-10,19],[-48,40],[-13,18],[-3,23],[7,31],[14,45],[24,60],[21,42],[42,47],[29,23],[72,72],[140,73],[34,47],[47,52],[20,13],[0,-20],[6,-18],[32,-12],[20,-4],[10,4],[2,19],[-4,34],[-1,33],[2,30],[4,24],[21,43],[31,49],[43,57],[27,26],[25,14],[24,25],[42,58],[14,10],[30,11],[11,-5],[7,-14],[8,-10],[30,-8],[21,13],[-4,7],[-16,5],[-11,8],[-10,35],[-20,21],[-5,24],[4,37],[17,87],[3,90],[16,51],[31,19],[69,13],[-40,23],[-16,0],[-26,11],[-10,56],[0,40],[18,47],[64,80],[71,55],[-10,4],[-8,17],[32,110],[32,98],[-43,-84],[-50,-64],[-145,-74],[-99,-63],[-47,-14],[-31,15],[-24,60],[-14,22],[-18,39],[8,50],[14,35],[31,6],[34,-17],[31,-1],[-39,34],[-56,30],[-26,-9],[-19,-49],[-26,-34],[-23,12],[-14,14],[10,-41],[-18,-63],[-6,-43],[25,-115],[-5,-45],[-45,-21],[-37,37],[-76,145],[-27,41],[-60,69],[-20,-10],[-25,-34],[-24,-9],[-65,50],[-30,37],[-28,46],[-44,-25],[-38,-30],[-44,-48],[-30,0],[-81,-41],[-9,-1],[-11,-22],[-11,-10],[-10,-43],[-109,-33],[-108,19],[38,23],[42,19],[37,44],[-16,60],[-3,30],[1,38],[40,54],[-42,0],[-27,-19],[-25,40],[-12,79],[29,47],[13,36],[12,50],[1,43],[-23,72],[-63,153],[-29,115],[-50,60],[37,100],[41,91],[54,40],[-4,6],[-30,0],[-19,-5],[-18,-30],[-18,-22],[-56,-116],[-37,-56],[-23,-16],[38,-22],[6,-19],[7,-41],[-10,-51],[-10,-28],[-45,2],[-40,-41],[-95,-44],[-128,-26],[-63,3],[-65,52],[0,30],[3,26],[-94,90],[-54,89],[-38,2],[-33,23],[-39,37],[3,30],[6,21],[-24,15],[-31,-2],[-36,11],[94,114],[32,77],[27,11],[34,-12],[47,-30],[40,-14],[14,-14],[15,-27],[-16,-45],[-14,-31],[17,8],[50,49],[37,43],[17,-4],[12,-8],[20,-44],[25,-45],[56,43],[30,53],[-25,24],[-31,13],[-79,19],[20,15],[50,-2],[19,15],[-20,20],[-25,18],[-68,-60],[-124,3],[-87,35],[-87,-6],[-13,7],[-17,19],[49,45],[34,25],[2,14],[-20,2],[-38,-12],[-17,21],[3,36],[-6,-4],[-15,-19],[-21,10],[-18,16],[9,17],[19,24],[-8,3],[-17,-5],[-16,-31],[3,-25],[0,-36],[-28,-7],[-24,5],[-17,36],[-17,78],[-48,20],[-12,39],[30,51],[-13,26],[-32,8],[-37,-25],[-17,22],[-3,25],[-1,36],[10,3],[9,-7],[74,20],[7,10],[-59,30],[-16,31],[24,18],[44,2],[61,19],[-25,33],[-6,18],[-5,31],[10,51],[72,117],[71,98],[22,22],[32,12],[30,-9],[31,-21],[6,9],[-11,9],[-13,40],[43,15],[26,45],[2,13],[-28,-18],[-29,-31],[-7,31],[-7,71],[12,68],[10,30],[24,29],[69,11],[13,-6],[2,14],[-41,42],[17,34],[15,17],[84,27],[45,-9],[58,-31],[33,-39],[-5,-20],[-8,-12],[-17,-13],[-7,-10],[3,-8],[25,24],[40,28],[23,-12],[17,-23],[20,1],[63,19],[32,20],[39,53],[51,34],[73,108],[21,44],[25,7],[23,-4],[15,-37],[23,-10],[130,9],[67,16],[46,35],[48,59],[28,40],[13,52],[-17,66],[-18,56],[-23,127],[-64,83],[-46,25],[-30,-3],[22,53],[61,-6],[40,11],[33,26],[10,19],[16,40],[-5,42],[-9,23],[-22,26],[-27,37],[-18,12],[-16,-1],[-78,-74],[-46,-2],[-35,14],[-30,-42],[-85,-37],[-45,-38],[-84,-93],[-21,-43],[-26,-2],[-19,82],[-91,79],[-28,-27],[15,-25],[21,-17],[34,-8],[-15,-23],[-11,-32],[-34,30],[-61,43],[-63,22],[-164,-3],[-108,-44],[-10,9],[-10,4],[-18,-11],[-8,-17],[-11,-12],[-22,-4],[-45,7],[-85,27],[-194,41],[-50,24],[-44,59],[1,40],[19,17],[-1,58],[-38,15],[-77,82],[-28,35],[6,4],[14,-9],[26,-7],[64,11],[22,53],[48,16],[44,-8],[-10,15],[-11,11],[-114,27],[-16,-8],[-205,48],[-162,84],[-13,16],[-15,36],[22,35],[22,17],[1,-20],[3,-19],[93,45],[48,58],[92,10],[22,16],[28,31],[41,54],[58,28],[39,25],[51,15],[44,-25],[13,-3],[80,-5],[26,11],[11,8],[8,12],[-78,45],[8,25],[10,18],[91,52],[70,17],[37,-1],[108,68],[59,19],[112,13],[92,3],[25,-24],[-49,5],[-22,-4],[15,-9],[18,-17],[-5,-22],[-31,-66],[3,-53],[-20,-17],[-19,-24],[94,-76],[146,-5],[79,14],[45,-23],[38,-5],[103,12],[78,-16],[33,6],[72,113],[28,18],[31,-20],[40,-16],[25,12],[21,-29],[-10,61],[-14,23],[-118,41],[-78,-20],[-25,23],[8,47],[-84,115],[-35,24],[-42,1],[-21,40],[-18,51],[36,21],[33,10],[30,-17],[33,-67],[32,-10],[-9,-68],[39,-62],[89,-57],[70,21],[50,-1],[30,-12],[74,-52],[37,-6],[116,27],[1,51],[-9,37],[-28,23],[-78,-5],[-62,38],[-52,-10],[-96,-58],[-48,23],[-30,31],[-49,31],[-6,60],[41,69],[30,32],[-27,24],[-68,17],[-119,-18],[-5,24],[0,25],[-48,-49],[-50,10],[-66,-5],[-148,43],[-52,54],[-22,43],[-40,119],[-50,75],[-351,252],[-159,64],[-77,70],[-48,17],[-46,8],[-59,22],[40,28],[27,10],[-28,-30],[21,-7],[35,17],[18,20],[27,85],[28,129],[-7,51],[194,-10],[129,8],[43,12],[163,20],[43,14],[78,43],[92,77],[80,101],[12,27],[5,-7],[7,5],[9,38],[10,90],[39,85],[168,193],[77,77],[26,35],[27,25],[19,-24],[9,-7],[5,-11],[-16,-6],[-26,-25],[-36,-16],[-9,-9],[22,2],[63,18],[36,22],[179,41],[97,66],[3,15],[144,84],[20,-4],[23,-10],[-40,-55],[28,-14],[-25,-66],[52,-1],[12,-30],[3,26],[-1,37],[4,37],[8,25],[36,-11],[83,27],[-100,4],[-60,59],[-33,1],[111,87],[102,53],[23,-1],[11,-10],[2,-16],[-22,-10],[-21,-19],[10,-16],[15,-3],[48,14],[22,17],[105,-2],[30,13],[8,12],[134,2],[25,9],[85,46],[78,57],[36,31],[61,79],[53,51],[87,51],[21,-6],[-28,-10],[-20,-22],[27,-29],[183,-59],[46,-4],[18,-35],[-15,-34],[-47,-38],[-95,-39],[29,-15],[19,-35],[28,-4],[46,13],[35,21],[74,70],[24,39],[17,9],[62,-9],[35,-20],[40,-35],[-15,-34],[-16,-20],[52,-26],[57,-6],[55,-21],[77,44],[60,9],[57,-2],[73,24],[125,-32],[31,8],[50,-5],[53,-20],[19,-21],[-57,-44],[-9,-46],[20,-19],[36,-4],[4,-27],[23,-6],[112,2],[-9,-13],[-5,-15],[-35,-34],[200,-20],[27,19],[41,8],[88,26],[33,-12],[39,-26],[36,-6],[34,6],[78,38],[91,2],[37,-13],[39,6],[118,-44],[44,-5],[58,-57],[30,-1],[34,24],[29,-1],[29,-23],[47,-7],[22,-37],[24,-13],[178,-27],[88,13],[129,-4],[62,-17],[65,2],[107,-63],[56,-9],[11,-15],[161,-15],[56,33],[98,8],[88,28],[50,0],[59,-7],[22,3],[16,12],[142,-47],[79,-55],[35,-40],[166,-57],[48,-32],[33,-36],[19,-3],[14,10],[58,-3],[22,-5],[39,-9],[126,-19],[119,11],[221,-61],[137,-114],[111,-57],[45,-38],[72,-34],[169,-75],[53,-7],[98,-36],[61,5],[104,-9],[71,-28],[140,-79],[29,-7],[8,6],[-49,78],[-8,7],[-56,29],[-67,14],[-5,6],[-12,27],[4,11],[14,5],[50,-1],[29,5],[4,11],[-21,2],[-25,11],[-30,18],[-17,17],[61,115],[21,-11],[32,26],[58,-17],[10,10],[7,58],[9,14],[16,11],[80,10],[99,-10],[11,5],[-10,39],[-1,16],[6,35],[6,18],[12,10],[46,-8],[15,-17],[15,-30],[16,-17],[49,-17],[6,-11],[-19,-45],[-19,-24],[-41,-62],[-3,-16],[63,28],[71,38],[60,22],[51,4],[36,12],[22,21],[16,22],[31,70],[21,12],[87,-4],[21,2],[13,7],[-2,8],[-19,11],[-25,3],[0,5],[9,12],[14,6],[42,8],[29,-25],[19,-2],[63,28],[98,74],[39,21],[34,3],[29,-13],[22,4],[29,41],[12,23],[17,19],[73,43],[46,10],[29,-8],[33,-18],[28,-7],[37,5],[27,-2],[13,8],[47,50],[15,0],[14,-14],[24,-36],[0,-18],[-31,-44],[-225,-126],[-69,-54],[-34,-20],[-36,-11],[-69,-9],[-27,-11],[-46,-10],[-109,-17],[-21,-9],[-14,-10],[-39,-66],[-18,-22],[-38,-33],[-41,-20],[-58,-7],[-36,-31],[-42,-60],[-33,-42],[-39,-36],[-42,-46],[-11,-25],[13,-32],[7,-10],[42,-18],[16,4],[-15,17],[-35,25],[-5,9],[9,7],[166,-19],[36,19],[12,16],[-2,9],[-45,3],[-10,15],[-7,29],[-2,23],[4,17],[10,22],[49,35],[52,15],[40,20],[22,19],[60,32],[23,27],[13,20],[2,10],[-11,7],[9,18],[43,16],[20,1],[61,-15],[11,-12],[-6,-31],[8,2],[24,39],[13,13],[14,3],[13,-5],[14,-13],[8,-38],[1,-63],[3,-25],[16,43],[11,20],[59,93],[40,51],[46,50],[65,37],[152,61],[85,17],[43,15],[21,13],[14,17],[24,19],[4,-2],[-9,-39],[-6,-12],[-56,-24],[-5,-19],[6,-29],[9,-19],[13,-9],[23,6],[33,23],[41,34],[89,86],[8,16],[22,69],[51,31],[92,35],[22,22],[-80,19],[-17,13],[-3,8],[15,19],[-36,20],[-14,12],[1,36],[11,25],[24,24],[14,5],[36,-15],[30,-18],[104,-85],[42,-42],[25,-33],[58,-102],[26,-59],[21,-61],[21,-44],[20,-27],[100,-107],[52,-45],[44,-28],[49,-22],[57,-16],[38,-2],[60,46],[1,29],[-26,50],[-27,35],[4,21],[35,40],[-3,14],[8,42],[24,-8],[10,1],[13,15],[17,29],[22,24],[27,19],[7,12],[-26,9],[-16,0],[-12,4],[-8,8],[11,9],[57,22],[11,22],[19,14],[23,5],[15,-6],[16,-17],[1,-28],[-7,-46],[-2,-37],[18,-87],[16,-19],[63,-25],[-4,-22],[-72,-91],[-16,-23],[-7,-17],[2,-14],[13,-12],[24,-9],[63,-3],[18,8],[122,3],[22,6],[19,18],[28,44],[31,14],[10,12],[19,52],[10,61],[9,26],[14,16],[19,5],[48,-6],[22,5],[88,-5],[88,4],[92,-11],[58,-12],[54,-20],[104,-46],[41,-26],[145,-113],[43,-23],[79,-22],[274,-49],[34,-13],[72,-51],[50,-30],[59,-29],[73,-25],[144,-37],[24,-13],[26,-3],[30,5],[132,-22],[35,1],[25,-4],[31,-15],[45,-6],[-2,11],[-51,59],[2,9],[21,1],[64,-10],[15,17],[21,-1],[49,-8],[53,-18],[56,-28],[68,-24],[104,-60],[57,-50],[55,-62],[29,-43],[6,-24],[11,-12],[17,0],[7,-9],[-16,-53],[-9,-14],[-12,-9],[-49,-11],[-136,13],[-25,-43],[-76,-37],[-13,-16],[-4,-11],[6,-38],[-10,-12],[-62,-43],[-2,-12],[40,-18],[43,-30],[34,-7],[43,4],[54,-11],[65,-25],[45,-12],[25,2],[35,-4],[44,-12],[59,-4],[129,1],[39,-8],[54,-4],[105,1],[19,1],[33,21],[22,6],[38,1],[108,14],[38,0],[34,11],[45,23],[27,4],[10,-14],[19,-6],[27,2],[52,23],[120,71],[43,0],[32,22],[8,0],[8,-9],[30,-52],[9,-8],[20,-4],[20,-27],[20,-39],[16,-11],[113,-2],[39,-11],[12,-11],[13,-31],[7,-60],[5,-22],[16,-33],[11,-9],[10,9],[28,84],[10,13],[18,-4],[6,-5],[28,-62],[40,-46],[100,-84],[16,-31],[6,-23],[-6,-21],[-17,-18],[-27,-15],[-37,-11],[-34,4],[-32,19],[-10,1],[11,-17],[66,-70],[17,-28],[16,-18],[14,-10],[13,-15],[12,-21],[55,-56],[16,-27],[62,-84],[30,-33],[23,-19],[8,-1],[-5,15],[-79,111],[-41,70],[-5,17],[-3,26],[-2,85],[6,13],[28,11],[35,-39],[13,-5],[9,2],[5,10],[20,-9],[36,-29],[12,0],[-27,54],[-19,27],[-7,19],[18,28],[-10,14],[-45,41],[-24,42],[-21,65],[-2,25],[3,26],[-3,22],[-29,43],[-31,30],[-24,35],[-5,19],[3,50],[19,21],[36,29],[9,30],[-16,31],[-3,14],[10,-2],[70,15],[18,-5],[26,6],[35,19],[28,9],[36,-2],[20,5],[24,8],[13,9],[22,36],[12,6],[37,-4],[21,-8],[9,3],[-1,50],[7,18],[37,37],[39,4],[25,10],[30,20],[21,19],[21,29],[9,38],[-7,11],[-44,15],[-26,-8],[-59,-27],[-61,-34],[-24,-33],[-6,-41],[-12,-18],[-47,17],[-21,0],[-25,-7],[-27,-16],[-29,-25],[-42,-4],[-56,15],[-33,5],[-34,-26],[2,-20],[15,-28],[-15,-17],[-82,-6],[-21,4],[-44,-12],[-17,3],[-12,13],[-89,58],[-9,11],[22,47],[82,126],[9,8],[152,22],[91,23],[169,69],[32,6],[108,46],[45,12],[41,-8],[60,-24],[32,-21],[22,-26],[18,-37],[23,-81],[8,-69],[14,-26],[51,-48],[26,-18],[16,-6],[14,11],[9,2],[7,-4],[7,-31],[9,-3],[30,4],[32,-12],[5,-10],[-7,-37],[9,-16],[40,-34],[37,-12],[44,-6],[81,6],[68,16],[51,26],[42,-29],[84,-71],[50,-51],[41,-23],[84,-29],[19,-15],[31,-2],[43,12],[48,-5],[54,-21],[37,-9],[127,40],[20,2],[47,19],[31,6],[36,0],[27,5],[17,13],[68,-1],[122,-14],[84,-17],[49,-23],[41,-12],[32,-3],[31,4],[30,11],[32,20],[68,11],[11,5],[-1,11],[-14,17],[-39,32],[-27,31],[-5,20],[1,24],[8,14],[16,4],[26,-15],[34,-34],[98,-126],[24,-17],[13,-17],[90,-45],[42,-9],[50,29],[22,17],[11,17],[0,17],[4,24],[-5,14],[-13,20],[-36,26],[-59,34],[-53,10],[-48,-14],[-55,-29],[-23,12],[-68,81],[-17,31],[0,8],[31,-9],[2,9],[-19,40],[-12,13],[-39,62],[-5,18],[24,5],[11,7],[15,-1],[70,-37],[35,17],[83,23],[-33,36],[-7,35],[3,8],[27,5],[53,-29],[25,-4],[19,11],[19,1],[21,-10],[19,-15],[37,-43],[17,-26],[20,-39],[7,-6],[97,-3],[54,35],[-1,-12],[-12,-27],[-68,-105],[1,-13],[36,6],[17,8],[10,13],[9,29],[6,9],[101,49],[29,8],[-18,-53],[-37,-188],[-8,-65],[-8,-23],[-40,-72],[1,-25],[43,-61],[8,-17],[4,-50],[8,-9],[36,-1],[37,16],[44,11],[7,-11],[-24,-60],[1,-6],[42,16],[19,2],[8,-3],[31,-31],[3,-23],[0,-35],[-3,-24],[-11,-14],[-13,-6],[-16,-4],[-14,2],[-44,-5],[-26,6],[-25,19],[-18,5],[-21,-15],[-34,3],[-37,41],[-15,-4],[-5,-6],[0,-9],[17,-27],[132,-143],[20,-29],[4,-43],[3,0],[12,43],[-8,20],[-67,83],[-9,31],[3,8],[18,9],[96,-21],[38,4],[25,15],[13,18],[9,99],[17,63],[-10,57],[-26,90],[-21,54],[-47,53],[-5,20],[53,163],[9,14],[12,6],[42,2],[30,14],[47,-19],[26,-5],[33,17],[72,69],[28,21],[36,40],[43,59],[48,43],[76,40],[47,32],[10,12],[-44,2],[-10,6],[-9,30],[4,57],[-1,31],[-5,28],[-9,25],[-14,23],[-13,13],[-11,4],[-8,-2],[-4,-8],[-12,-54],[-15,-39],[-20,-21],[-43,-14],[-72,-10],[-30,19],[-4,16],[10,62],[25,27],[66,53],[42,42],[1,7],[-39,1],[-9,8],[-9,52],[3,20],[6,22],[27,16],[84,20],[65,23],[2,-8],[-52,-70],[-5,-16],[20,-16],[50,41],[32,34],[6,11],[-30,4],[-1,14],[5,26],[-2,17],[-33,22],[-40,-12],[-34,-23],[-28,-7],[-41,0],[-30,5],[-18,11],[-23,25],[-26,38],[-33,38],[-12,4],[-10,-4],[-22,-37],[-9,-4],[-130,52],[-56,28],[-26,22],[-34,13],[-39,4],[-32,11],[-24,16],[-19,23],[-15,31],[-27,38],[-62,77],[-16,49],[-2,19],[4,49],[58,82],[10,24],[20,17],[29,11],[21,4],[47,-11],[-28,26],[-3,13],[29,45],[-6,2],[-78,-34],[-20,2],[-28,21],[-52,75],[-1,47],[17,65],[5,38],[-15,33],[6,10],[16,9],[7,10],[-7,36],[11,20],[38,38],[36,33],[22,10],[19,-2],[19,-10],[21,-19],[34,-19],[26,-5],[19,10],[33,71],[11,18],[-11,8],[-63,0],[-28,5],[-16,7],[-11,27],[9,15],[62,50],[29,53],[86,73],[87,34],[43,11],[34,3],[15,-5],[18,-36],[4,-39],[47,-48]],[[27574,82227],[-19,-8],[-58,16],[-24,11],[-71,41],[-135,61],[-46,31],[-10,22],[25,48],[13,19],[15,12],[143,22],[55,-11],[65,-97],[38,-66],[15,-52],[0,-26],[-6,-23]],[[29549,90889],[-135,-1],[-74,4],[-29,9],[-26,13],[-29,45],[-19,45],[-1,20],[5,17],[7,11],[91,15],[74,-19],[64,-22],[83,-4],[25,-9],[9,-6],[7,-11],[9,-53],[1,-28],[-2,-21],[-60,-5]],[[28367,88404],[24,-25],[24,2],[14,-20],[32,-63],[3,-10],[-1,-21],[-17,-26],[-18,-13],[-37,-20],[-42,-9],[-23,14],[-64,58],[-59,68],[-19,38],[8,16],[25,11],[51,11],[83,-6],[16,-5]],[[27222,88107],[11,-17],[3,-24],[-4,-32],[-7,-30],[-10,-27],[-25,-44],[-76,-77],[-28,-42],[-22,-25],[-124,-111],[-16,-6],[-16,2],[-34,17],[-34,3],[-90,-45],[-4,8],[-4,48],[-9,27],[-40,57],[-2,13],[0,16],[3,13],[45,54],[101,193],[24,10],[49,-22],[24,-7],[17,1],[72,41],[68,-5],[63,24],[29,0],[23,-4],[13,-9]],[[27904,87794],[22,-16],[36,-52],[14,-26],[4,-36],[-10,-48],[-5,-44],[-13,-34],[-25,-42],[-22,-50],[-20,-56],[-15,-38],[-13,-18],[-14,-10],[-14,-1],[-23,21],[-30,42],[-24,25],[-31,18],[-17,23],[-3,23],[-1,76],[1,37],[4,32],[7,25],[16,34],[44,75],[26,29],[16,7],[43,-6],[18,2],[14,9],[15,-1]],[[20956,96279],[-43,-10],[-84,23],[-56,10],[-45,42],[-49,57],[-39,62],[-14,37],[-28,22],[-10,36],[-51,57],[8,9],[48,8],[77,-11],[36,-20],[47,-34],[60,-54],[18,-24],[4,-33],[11,-17],[51,-4],[63,-43],[12,-17],[13,-34],[-1,-16],[-10,-34],[-18,-12]],[[23476,96654],[70,-22],[76,11],[81,2],[182,-10],[120,6],[31,-3],[47,-14],[25,-18],[23,-28],[-59,-18],[-50,-89],[-7,-5],[-54,-1],[-27,-7],[-159,13],[-438,5],[-19,11],[-58,53],[-4,21],[11,24],[12,16],[14,8],[128,39],[55,6]],[[22558,97915],[6,-75],[-6,-38],[-14,-28],[-12,-7],[-17,0],[-76,21],[-23,13],[-1,11],[-8,21],[-50,27],[-95,-4],[-40,3],[-16,8],[-10,12],[-9,47],[2,17],[11,29],[7,7],[70,27],[20,2],[85,-10],[75,-1],[38,-7],[34,-17],[20,-26],[9,-32]],[[25046,96352],[-73,-33],[-37,1],[-212,67],[-43,33],[-8,23],[-2,32],[0,43],[9,30],[12,10],[25,10],[49,7],[46,-4],[70,-12],[70,-19],[92,-60],[34,-28],[7,-37],[0,-22],[-5,-17],[-10,-10],[-24,-14]],[[24016,95061],[18,-43],[3,-18],[1,-37],[-8,-49],[-5,-9],[-7,-4],[-4,-13],[0,-21],[-7,-12],[-15,-5],[-99,-10],[-62,2],[-91,-6],[-45,3],[-30,11],[-43,22],[-91,55],[-45,2],[-116,19],[-63,58],[-24,11],[-25,-18],[-7,4],[-6,12],[-7,20],[-12,10],[-48,-5],[-9,6],[-2,18],[0,15],[9,23],[51,65],[25,5],[31,12],[17,35],[-2,33],[48,49],[28,15],[51,34],[172,54],[48,4],[63,-4],[62,-17],[47,-28],[97,-70],[44,-43],[23,-43],[21,-25],[26,-54],[-9,-21],[-6,-28],[3,-14]],[[19495,97148],[49,-34],[17,1],[21,-6],[10,-9],[29,-43],[6,-21],[2,-27],[-5,-23],[-10,-19],[-27,-11],[-62,-8],[-87,11],[-75,-14],[-35,-2],[-93,9],[-24,7],[-52,26],[-40,11],[-16,-6],[-20,-23],[-37,-28],[-23,-7],[-68,4],[-103,48],[-118,-14],[-123,-28],[-48,-5],[-14,8],[-19,21],[3,11],[36,32],[82,33],[60,19],[118,28],[141,15],[52,17],[33,23],[92,37],[53,16],[73,13],[58,-1],[74,-30],[56,-15],[34,-16]],[[17131,95379],[-79,-37],[-57,4],[-75,27],[-61,10],[-21,9],[-3,9],[20,26],[26,21],[62,41],[105,78],[69,30],[67,21],[69,47],[38,21],[33,2],[33,-9],[4,-13],[-35,-64],[-25,-26],[-49,-67],[-93,-112],[-28,-18]],[[20753,93847],[-14,-3],[-26,14],[-39,29],[-63,60],[-75,59],[-12,36],[-19,26],[-96,63],[-62,26],[-48,13],[-7,17],[33,51],[37,41],[23,15],[70,13],[236,27],[54,1],[56,-13],[78,-56],[32,-6],[20,-13],[17,-21],[9,-21],[0,-44],[-8,-64],[-11,-25],[-47,-82],[-49,-46],[-10,-29],[-20,-23],[-35,-29],[-24,-16]],[[22221,94438],[235,-123],[33,10],[71,6],[73,19],[102,15],[63,27],[26,8],[45,5],[25,0],[70,-15],[29,-11],[15,-11],[16,-19],[28,-49],[4,-18],[-1,-5],[-26,-30],[-17,-13],[-36,-12],[-30,-4],[-27,-21],[-29,5],[-9,-19],[4,-12],[8,-6],[15,1],[17,8],[33,-4],[18,-13],[15,-21],[-11,-20],[-59,-27],[-87,-31],[-105,-98],[-56,-41],[-11,-13],[-6,-13],[2,-24],[2,-10],[16,-4],[51,34],[34,16],[33,9],[60,0],[25,-5],[44,-20],[41,-32],[9,-11],[-4,-11],[-17,-12],[-2,-8],[39,-15],[43,-43],[3,-26],[-19,-26],[-5,-18],[9,-8],[21,5],[51,29],[55,15],[22,-2],[14,-6],[14,-40],[12,-45],[2,-37],[-9,-31],[-13,-23],[-33,-30],[-30,-11],[-16,0],[2,-5],[35,-25],[15,-19],[6,-19],[-2,-18],[-5,-16],[-41,-57],[2,-9],[12,-3],[26,-33],[3,-78],[-93,-24],[-22,-18],[-25,-28],[-29,-22],[-67,-22],[-33,-3],[-167,19],[-17,11],[-11,19],[-7,29],[-1,22],[2,16],[0,9],[-5,3],[-19,-16],[-19,-29],[11,-33],[52,-91],[10,-39],[2,-16],[-3,-13],[-59,-53],[-34,-18],[-36,-9],[-33,7],[-32,22],[-24,10],[-51,-1],[-15,11],[-15,22],[-35,76],[-50,54],[-42,61],[-108,89],[-56,53],[-75,86],[-31,19],[-26,8],[-51,6],[-12,11],[-19,29],[-32,22],[-11,3],[-19,-6],[-50,-20],[-63,22],[-14,15],[-8,25],[-8,14],[-21,13],[-18,31],[-119,63],[-71,72],[-14,26],[-2,10],[7,35],[17,39],[21,39],[14,16],[46,33],[37,8],[51,-4],[27,-8],[24,-22],[11,-26],[12,-18],[38,-19],[20,-15],[30,-36],[24,-43],[21,-14],[52,-5],[53,7],[114,27],[5,4],[7,16],[13,98],[8,0],[39,-45],[11,-5],[16,9],[10,23],[-1,10],[-24,53],[-15,23],[-13,15],[-14,4],[-31,-4],[-24,10],[-5,15],[4,19],[13,21],[14,12],[27,6],[32,-6],[44,-25],[28,-6],[40,7],[-51,15],[-70,58],[-30,11],[-36,-25],[-25,-9],[-47,-12],[-37,-2],[-156,89],[-9,9],[-11,23],[1,11],[16,17],[38,22],[58,13],[39,3],[34,-17],[49,-44],[43,-26],[4,9],[-8,26],[-20,38],[-14,10],[-34,11],[-33,26],[-15,20],[-8,20],[-1,22],[7,15],[13,8],[120,22],[83,-24],[53,-4],[22,30],[-7,6],[-28,-8],[-32,0],[-19,17],[-1,9],[25,23],[37,10]],[[26411,89435],[10,-7],[11,4],[20,29],[44,82],[13,7],[18,-1],[65,-52],[24,-30],[13,-41],[14,-16],[51,-21],[49,-7],[65,-21],[23,-16],[51,-78],[6,-5],[59,-32],[89,-72],[23,-10],[87,-24],[32,-17],[30,-27],[34,-49],[39,-77],[31,-123],[2,-24],[-3,-14],[-12,-16],[-50,-50],[4,-9],[48,4],[105,31],[65,-23],[22,-3],[5,1],[24,39],[25,-6],[38,-38],[24,-30],[10,-23],[-2,-13],[-25,-5],[60,-22],[53,-35],[-11,-23],[-57,-51],[-57,-45],[-67,-66],[-17,-11],[-9,0],[-37,12],[-54,32],[-164,73],[-51,15],[-64,9],[-9,17],[-16,110],[-29,19],[-99,23],[-29,13],[-2,22],[7,38],[-14,19],[-33,-1],[-33,-8],[-53,-26],[-25,-24],[-9,-25],[-6,-55],[-7,-26],[-18,-35],[-82,-88],[-33,-27],[-33,-7],[-13,-9],[-22,-32],[-33,-80],[-14,-23],[-21,-24],[-46,-36],[-46,-29],[-77,-33],[-42,-11],[-29,11],[-20,76],[-41,223],[-7,15],[-8,9],[-10,4],[-138,-29],[-76,3],[-75,-50],[-19,-3],[-39,1],[-27,8],[-7,6],[-5,21],[2,23],[9,25],[34,66],[28,41],[13,13],[129,74],[31,24],[16,25],[0,25],[-6,33],[-23,80],[-5,73],[0,36],[8,55],[33,135],[11,66],[20,234],[11,67],[16,62],[15,37],[42,73],[31,30],[41,20],[8,-2],[8,-9],[15,-31],[56,-29],[18,-28],[12,-31],[7,-40],[-7,-18],[-26,-27],[-5,-11],[1,-9],[51,-42],[38,-102]],[[28979,91199],[145,-51],[14,-19],[7,-16],[4,-19],[0,-38],[-3,-15],[-14,-36],[-1,-12],[11,-123],[-1,-67],[-10,-56],[-21,-45],[-31,-34],[-24,-20],[-105,-48],[-75,-12],[-79,-2],[-100,-13],[-46,3],[-24,5],[-17,10],[-19,30],[-23,51],[-18,58],[-23,102],[0,12],[21,83],[29,56],[50,82],[57,81],[14,14],[26,14],[64,23],[54,-6],[23,3],[29,10],[33,3],[53,-8]],[[27906,94270],[47,-7],[300,14],[63,-11],[189,-64],[48,-21],[25,-28],[21,-45],[10,-10],[69,-26],[28,-32],[10,-17],[14,-38],[31,-22],[36,-12],[11,-11],[-5,-48],[15,-22],[33,-27],[13,-18],[-26,-22],[-61,-13],[-170,13],[-228,31],[-133,-9],[-67,-14],[-161,-49],[-51,-8],[-51,-1],[-89,40],[-32,22],[-11,16],[-21,49],[-17,58],[-9,48],[-10,37],[-31,12],[-90,14],[-30,20],[-14,17],[-13,27],[0,27],[7,25],[6,6],[11,1],[-25,29],[-9,33],[-1,46],[4,29],[7,13],[17,8],[39,5],[58,-1],[81,-33],[64,-4],[98,-27]],[[22861,95890],[3,-26],[-4,-19],[-9,-14],[-1,-17],[9,-18],[37,-45],[12,-25],[2,-25],[-2,-17],[-23,-32],[-10,-43],[-1,-22],[14,-35],[0,-16],[-26,-28],[-54,-25],[8,-13],[117,-30],[9,-7],[0,-70],[20,-76],[-8,-1],[-28,24],[-52,28],[-63,-53],[7,-90],[42,-40],[12,-23],[-4,-13],[-35,-6],[-12,2],[-35,19],[-21,27],[-7,-1],[-6,-13],[4,-14],[24,-24],[11,-29],[-11,-8],[-36,-8],[-48,0],[-76,-13],[-38,-2],[-36,7],[-49,1],[-41,-3],[-24,6],[-23,14],[-26,-3],[-57,-35],[-89,11],[-80,3],[-16,11],[-18,23],[-35,70],[6,18],[86,9],[2,6],[-61,25],[-70,18],[-32,15],[7,27],[-2,7],[120,32],[88,62],[54,25],[4,12],[46,13],[106,7],[4,18],[-200,-10],[-274,-35],[-85,-18],[-71,10],[-300,-54],[-13,0],[-31,17],[-27,33],[19,22],[88,43],[44,37],[-5,21],[35,35],[56,5],[96,-29],[49,-29],[45,-14],[39,3],[41,20],[-11,3],[-69,-11],[-8,3],[-35,33],[-15,20],[-10,21],[-1,15],[21,28],[-79,9],[-29,19],[-14,24],[3,11],[25,28],[67,39],[-8,10],[-97,-1],[-22,5],[-42,24],[9,27],[39,39],[30,23],[19,7],[31,0],[73,-15],[21,-8],[56,-38],[14,-21],[-2,-21],[11,-15],[43,-22],[186,-115],[35,-27],[23,-12],[43,-9],[26,2],[20,8],[3,10],[-80,40],[-20,22],[-17,29],[7,9],[24,4],[58,-4],[69,8],[-76,12],[-50,16],[-52,1],[-64,26],[0,8],[16,9],[87,11],[17,5],[1,7],[-29,18],[-26,9],[-132,21],[-47,24],[-15,11],[-4,11],[17,28],[71,35],[51,17],[89,12],[71,-1],[40,-5],[94,-59],[45,-39],[77,7],[-22,40],[-15,45],[23,17],[64,29],[51,-15],[66,-40],[15,-13],[75,-25],[44,-8],[23,-13],[7,-17]],[[21270,97531],[65,-11],[77,-37],[73,-79],[4,-10],[0,-13],[-3,-16],[-9,-21],[-13,-12],[37,-15],[4,-8],[-3,-17],[4,-12],[23,12],[19,19],[5,12],[4,32],[57,17],[60,23],[28,5],[47,-5],[112,-56],[43,-5],[16,-7],[14,-13],[1,-14],[-23,-32],[-9,-20],[6,-13],[58,-11],[134,22],[117,-53],[65,-63],[47,-21],[8,-11],[-14,-11],[-13,-29],[-39,-22],[-8,-10],[21,-26],[1,-17],[-2,-22],[7,-13],[53,-14],[119,-93],[22,-26],[14,-32],[1,-11],[-17,-18],[-19,-51],[-10,-12],[-49,-10],[-88,-9],[-83,-17],[-88,22],[-87,34],[-26,22],[-22,28],[-5,10],[-9,44],[-4,9],[-37,24],[-32,37],[-63,3],[-147,38],[-63,8],[-64,-2],[-89,-15],[-17,4],[-15,11],[-14,18],[-3,14],[14,23],[-262,-29],[-75,-35],[-105,6],[-53,14],[-69,33],[-32,29],[-30,38],[-3,29],[24,20],[25,11],[26,4],[142,-23],[125,-11],[54,11],[25,32],[-30,16],[-120,7],[26,17],[101,16],[53,26],[-10,8],[-30,10],[-137,-2],[-48,9],[-3,9],[11,10],[77,51],[-3,10],[-33,16],[-29,22],[-11,3],[-68,-20],[-95,-75],[-22,-11],[-22,1],[-21,12],[1,16],[21,19],[44,58],[-4,21],[-42,14],[-114,-10],[-63,-1],[-9,17],[-3,30],[3,29],[15,45],[22,35],[13,12],[151,-7],[245,21],[71,2],[78,-21]],[[24476,98578],[36,-48],[134,-115],[61,-42],[103,-51],[13,-19],[1,-8],[-3,-28],[30,-10],[88,-16],[99,-28],[18,1],[34,17],[42,5],[54,-4],[26,-12],[19,-18],[8,-13],[1,-10],[-19,-19],[2,-8],[12,-8],[2,-11],[-20,-41],[5,-15],[50,-37],[45,-19],[89,-20],[58,2],[36,-13],[1,8],[-17,23],[-34,34],[-65,18],[-9,19],[-5,34],[6,22],[33,18],[27,6],[84,1],[45,-8],[80,-25],[8,-14],[4,-27],[3,-54],[-2,-12],[-67,-30],[-15,-21],[17,-6],[58,-5],[90,-19],[35,-2],[35,-44],[27,-41],[-20,-52],[-26,-82],[-21,-19],[-21,-28],[15,-6],[88,12],[18,4],[59,28],[86,-7],[29,-7],[15,-10],[26,-31],[22,-41],[16,3],[40,51],[15,12],[20,12],[9,-2],[40,-47],[91,-82],[31,-34],[6,-26],[-39,-29],[-30,-15],[-223,-62],[-99,-35],[-50,-28],[-25,-9],[-54,5],[-12,-5],[-16,-44],[-18,-19],[-46,-30],[-65,-55],[-38,-24],[-68,18],[-17,25],[-10,58],[-1,24],[2,13],[9,20],[29,49],[-3,6],[-14,-5],[-45,-24],[-18,-13],[-16,-23],[-8,-38],[7,-70],[-6,-28],[-18,-14],[7,-11],[53,-15],[9,-7],[6,-12],[3,-17],[-3,-16],[-16,-25],[-30,-10],[-38,11],[-82,61],[-36,-3],[-9,-7],[8,-22],[25,-48],[5,-41],[-12,-33],[-23,-53],[-16,-29],[-9,-3],[-41,-1],[-35,14],[-104,93],[-51,39],[-76,78],[-19,15],[-12,4],[-10,-33],[20,-31],[68,-72],[41,-53],[29,-43],[4,-19],[-9,-7],[-15,4],[-20,16],[-62,25],[-26,15],[-16,16],[-31,13],[-45,8],[-45,2],[-45,-5],[-8,-8],[50,-23],[18,-12],[13,-17],[9,-19],[-17,-13],[-63,-7],[-84,5],[-137,17],[-136,28],[-125,44],[-91,44],[-36,23],[-11,17],[34,16],[119,19],[119,13],[-19,11],[-217,25],[-71,4],[-38,-6],[-44,4],[-34,20],[-45,37],[-23,25],[3,10],[17,5],[99,-4],[13,3],[-49,19],[-157,37],[-59,33],[-11,12],[-4,13],[1,12],[59,25],[183,59],[62,9],[63,1],[44,16],[38,56],[189,20],[146,25],[12,7],[-109,-4],[-155,5],[-65,37],[-45,7],[-49,0],[-57,-12],[-98,-35],[-47,-9],[-107,-36],[-29,3],[-15,4],[-5,7],[19,24],[28,17],[-5,5],[-42,4],[-48,-1],[-34,-6],[-122,-32],[-55,-23],[-17,-3],[-59,38],[-95,20],[-21,16],[20,63],[27,13],[73,11],[217,57],[13,11],[20,29],[-50,-7],[-109,-27],[-90,-14],[-71,0],[-51,4],[-33,8],[-40,17],[-128,83],[-36,39],[-4,36],[-9,26],[-38,65],[276,-40],[107,-8],[208,-2],[10,3],[3,11],[-4,17],[2,13],[7,9],[77,23],[12,8],[-91,4],[-168,-39],[-59,0],[-67,56],[-71,-10],[-34,4],[-53,14],[-26,12],[-16,15],[-7,13],[2,10],[14,12],[62,16],[28,1],[73,-10],[55,1],[-18,17],[-79,43],[-70,47],[5,80],[57,17],[60,2],[58,-20],[77,-2],[56,-23],[37,-44],[44,1],[69,-8],[155,1],[-28,15],[-49,14],[-109,18],[-53,63],[-114,33],[-88,17],[1,15],[67,79],[80,28],[128,-10],[85,14],[108,28],[106,-13],[28,2],[16,8],[14,17],[0,15],[-14,14],[-34,17],[-135,2],[-60,7],[-23,9],[-7,14],[-4,14],[0,15],[4,9],[11,5],[33,6],[126,0],[76,8],[83,-10],[173,-39],[55,-20],[60,-34],[31,-30]],[[23807,96147],[52,-5],[44,8],[38,-2],[56,-23],[53,-36],[40,-16],[13,-8],[5,-9],[6,-27],[0,-12],[-3,-10],[-18,-25],[-15,-30],[-30,-27],[-16,-20],[-14,-26],[31,15],[119,85],[77,-10],[117,7],[141,35],[67,5],[67,-3],[50,-10],[108,-47],[37,-22],[14,-16],[3,-11],[-22,-18],[-67,11],[-111,10],[-20,5],[-18,0],[-12,-6],[8,-25],[22,-5],[133,-6],[436,-78],[19,-25],[-5,-11],[-16,-12],[-31,-17],[-252,-18],[-143,16],[-120,26],[-41,-6],[35,-35],[72,-10],[61,-21],[25,-17],[128,-13],[21,-13],[40,-34],[33,-3],[33,-24],[27,-41],[13,-5],[39,7],[64,-36],[21,-19],[0,-14],[-15,-22],[-29,-31],[-73,-35],[-6,-11],[86,4],[16,-5],[101,-63],[13,-1],[8,6],[10,23],[-4,21],[-13,28],[4,21],[19,13],[19,7],[19,0],[21,-8],[102,-77],[131,37],[24,-17],[20,-30],[9,-5],[49,61],[30,15],[123,-73],[75,-16],[30,-15],[55,-18],[79,-6],[13,27],[-45,35],[26,15],[109,29],[58,-4],[107,42],[66,5],[40,0],[133,63],[31,10],[23,22],[52,-3],[141,-36],[40,3],[150,36],[56,8],[55,-1],[141,-21],[105,-22],[33,-12],[-12,-29],[6,-9],[13,-7],[35,-8],[131,-1],[57,-7],[46,-28],[10,-11],[-1,-11],[-45,-30],[7,-7],[45,-6],[100,-4],[22,-7],[21,-37],[21,-52],[0,-20],[-35,-35],[-95,-46],[-106,-39],[-7,-10],[34,-18],[35,-9],[27,2],[85,18],[19,-1],[38,-18],[18,-17],[17,-24],[-30,-22],[-121,-27],[-72,36],[-24,7],[-16,-3],[9,-15],[35,-28],[11,-18],[-12,-9],[-6,-18],[1,-26],[-3,-27],[-11,-42],[-5,-2],[-263,-8],[-32,-8],[-74,-29],[-56,-15],[-36,-2],[-36,5],[-96,31],[-64,-6],[-25,3],[-55,20],[-13,10],[-22,27],[-16,37],[1,22],[7,32],[-4,17],[-16,0],[-17,6],[-52,33],[-32,10],[-6,-6],[10,-25],[6,-8],[34,-19],[6,-21],[-14,-55],[-5,-8],[-34,-40],[-25,-12],[-68,-1],[-105,-28],[-50,-4],[-67,7],[-42,12],[-27,15],[-27,21],[-13,2],[-7,-46],[-13,-6],[-23,1],[-35,14],[-28,33],[-9,0],[-4,-19],[-7,-13],[-8,-6],[-74,-20],[-41,0],[-43,23],[-28,-2],[-36,-13],[-87,24],[-21,1],[18,-39],[-29,-6],[-62,1],[-103,13],[-64,-19],[-114,11],[-116,3],[-22,9],[-15,18],[-1,16],[6,23],[17,33],[28,45],[10,23],[-26,11],[-15,15],[-13,1],[-41,-17],[-27,-50],[-20,-14],[-9,12],[-7,30],[-9,15],[-11,-1],[-11,-8],[-11,-15],[-15,-6],[-22,4],[-7,-7],[6,-20],[2,-18],[-2,-16],[-18,-17],[-52,-24],[-31,-7],[-79,-4],[-48,7],[-96,29],[-53,1],[-64,48],[-51,11],[3,18],[22,32],[-1,9],[-69,-47],[-10,-15],[9,-34],[-10,-3],[-47,13],[-47,-10],[-12,3],[-32,25],[-57,26],[-25,28],[-39,90],[-20,59],[2,12],[29,16],[-4,13],[-36,34],[-39,28],[-12,19],[-5,20],[-5,28],[-1,21],[5,13],[22,42],[62,76],[8,14],[3,13],[-8,40],[-12,40],[-12,29],[-34,39],[-46,42],[-66,73],[-48,58],[-58,80],[-28,7],[-32,-3],[-70,-28],[-24,-13],[-5,-9],[-52,-2],[-148,7],[-56,9],[-42,-3],[-72,-20],[-77,4],[-48,56],[-110,31],[-33,17],[-22,24],[7,15],[63,14],[26,15],[12,12],[-62,-10],[-27,1],[-186,77],[-57,14],[-10,7],[-4,9],[0,11],[5,17],[55,-22],[25,-1],[39,6],[14,14],[-9,7],[-64,26],[-30,19],[-12,15],[12,20],[3,13],[21,8],[37,1],[48,10],[88,26],[59,10],[59,-2],[142,-27],[142,-34],[89,-26]],[[23276,97079],[66,-15],[113,7],[41,-11],[106,-39],[32,-23],[8,-17],[0,-9],[-35,-19],[-71,-28],[-17,-22],[63,-27],[32,-24],[15,-17],[0,-18],[-42,-48],[-31,-14],[-48,2],[-23,-5],[-60,-22],[-95,-21],[-129,-9],[-35,-13],[-65,-22],[-43,-3],[-14,12],[-6,18],[3,13],[9,15],[-21,15],[-92,28],[-54,39],[-8,13],[-2,11],[119,7],[52,8],[23,13],[4,7],[-23,3],[-82,26],[-138,16],[-7,19],[-57,36],[-6,35],[-12,10],[-39,15],[-6,5],[-12,22],[-1,12],[2,12],[71,23],[-10,16],[-54,61],[-14,34],[2,13],[34,18],[47,0],[124,-5],[59,-8],[59,-14],[65,-22],[97,-19],[31,-12],[58,-41],[7,-12],[-4,-13],[14,-12]],[[19317,96833],[223,-14],[9,-3],[1,-10],[-17,-33],[-25,-24],[-119,-30],[-153,-28],[-32,-13],[2,-8],[13,-10],[25,-12],[119,2],[29,-5],[10,-8],[6,-12],[4,-15],[0,-53],[-6,-30],[-17,-27],[-48,-20],[-86,-26],[-59,-11],[-46,4],[-46,-3],[-202,-48],[-62,-1],[-55,12],[-75,46],[-78,18],[-34,21],[-33,11],[-9,16],[-3,13],[6,11],[14,10],[4,9],[-13,25],[-6,24],[-22,35],[-4,20],[0,13],[4,14],[15,25],[8,5],[46,4],[60,13],[139,37],[305,47],[93,-4],[40,9],[75,4]],[[17902,96407],[21,-23],[2,-9],[-10,-9],[-33,-15],[-164,-51],[-32,-24],[12,-20],[59,-41],[60,-35],[13,-18],[-28,-17],[-55,5],[-20,-1],[-20,-8],[6,-16],[60,-52],[20,-28],[0,-14],[-11,-14],[-26,-19],[-40,-25],[-68,-19],[-148,-26],[-5,-21],[1,-15],[-3,-38],[-6,-18],[-17,-29],[-13,-14],[-22,-9],[-32,-6],[-40,0],[-67,26],[-30,16],[-42,35],[-8,24],[5,28],[11,45],[18,46],[25,46],[8,29],[-10,12],[-18,0],[-54,-19],[-35,-7],[-27,-13],[-20,-21],[-11,-22],[-6,-43],[-10,-23],[-29,-13],[-44,0],[-17,-7],[-8,-16],[6,-12],[43,-27],[6,-30],[-6,-18],[-46,-33],[-11,-11],[-29,-52],[-11,-13],[-24,-12],[-24,1],[-23,19],[-33,36],[-22,31],[-12,26],[-9,11],[-16,-8],[-19,-26],[0,-21],[4,-31],[-1,-19],[-28,-23],[4,-10],[49,-28],[6,-12],[0,-19],[-3,-9],[-20,1],[-16,-22],[-19,-17],[-49,-33],[-69,-4],[-57,-16],[-12,1],[-14,26],[-15,50],[-14,29],[-20,15],[-26,58],[-12,18],[-11,8],[-10,2],[-15,-12],[-33,-82],[-54,-21],[-29,-4],[-30,2],[-74,23],[-60,8],[-41,-9],[-68,-34],[-27,-9],[-37,4],[-16,13],[-14,21],[-1,12],[10,5],[17,24],[0,9],[-17,14],[0,11],[6,7],[-2,6],[-8,3],[-17,-3],[-61,-16],[7,17],[29,37],[71,72],[26,21],[16,6],[209,24],[15,7],[99,97],[28,22],[29,18],[143,58],[13,14],[22,40],[13,10],[31,16],[102,82],[94,59],[47,37],[65,37],[75,16],[227,28],[163,-37],[38,-2],[19,10],[17,17],[25,-7],[60,-5],[14,4],[25,19],[-17,11],[-73,19],[-5,10],[2,9],[26,23],[31,14],[90,11],[41,-3],[43,-15],[55,-32],[127,-56]],[[19919,95654],[35,-1],[41,6],[46,-4],[21,-13],[15,-23],[0,-13],[-3,-10],[-6,-9],[-60,-58],[-14,-20],[19,-5],[10,3],[59,44],[45,13],[34,4],[57,-9],[22,-8],[15,-8],[9,-11],[22,-41],[16,-54],[2,5],[1,31],[3,23],[55,16],[1,5],[-20,13],[-16,18],[-12,33],[4,12],[12,14],[35,28],[42,17],[36,4],[137,-29],[54,-25],[21,-12],[8,-9],[12,-28],[23,-78],[-1,-25],[-10,-40],[-44,-76],[-7,-51],[-44,-127],[-31,-35],[-33,-24],[-138,-43],[-104,-43],[-26,-7],[-27,-1],[-86,15],[-99,27],[-57,-7],[-56,-20],[-36,-6],[-33,3],[-33,7],[-44,19],[23,8],[10,10],[-9,10],[-46,14],[-48,-32],[-139,-73],[-187,-25],[-58,-15],[-44,-19],[-22,-16],[-35,-38],[-53,-28],[-96,-31],[-123,-48],[-220,-49],[-138,-8],[-138,16],[-44,13],[-46,21],[-93,49],[-26,17],[-31,39],[18,25],[50,30],[75,26],[150,36],[135,58],[49,11],[130,9],[66,-5],[48,3],[31,8],[47,20],[68,42],[50,39],[12,18],[-16,17],[-25,2],[-81,-40],[-41,-13],[-44,-1],[-61,-14],[-60,-5],[-11,0],[-62,39],[-33,6],[-16,-4],[-14,-10],[-26,-28],[-16,-10],[-27,-8],[-107,-8],[-104,-14],[-23,9],[-14,16],[-3,10],[-1,33],[-7,14],[9,28],[12,21],[14,15],[71,43],[10,11],[-34,-2],[-80,-21],[-11,7],[-18,24],[-9,2],[-11,-10],[-6,-14],[-13,-58],[-13,-30],[-32,6],[-40,18],[-15,3],[-9,-6],[3,-10],[41,-50],[0,-17],[-26,-31],[-114,-51],[-44,-13],[-16,5],[-14,14],[-13,22],[-29,31],[-18,7],[-19,1],[-18,-7],[-17,-13],[-10,-15],[-10,-26],[-20,-21],[-13,-3],[-115,42],[-93,75],[-101,-11],[-46,2],[-138,28],[-17,17],[-10,22],[1,12],[6,12],[17,25],[35,37],[15,12],[21,10],[29,8],[73,4],[189,2],[37,5],[206,72],[24,12],[30,23],[7,10],[-1,6],[-254,-57],[-109,-12],[-166,9],[-31,9],[-8,16],[35,42],[18,16],[48,15],[114,21],[154,19],[100,0],[84,15],[51,17],[-170,-1],[-204,-8],[-30,5],[-58,23],[-3,16],[23,19],[9,15],[-17,33],[5,13],[38,27],[68,29],[42,5],[81,-11],[230,-10],[45,4],[-28,13],[-40,9],[-178,17],[-37,7],[-7,10],[-3,15],[2,19],[13,20],[55,42],[162,35],[64,5],[65,-3],[65,-15],[29,-14],[15,-16],[7,-16],[1,-26],[3,-11],[12,-17],[37,-42],[28,-13],[128,24],[53,6],[54,-8],[78,-24],[101,-75],[130,-77],[-1,-16],[-49,-26],[-10,-11],[7,-7],[50,-5],[46,4],[45,-6],[10,-7],[16,-28],[23,-49],[27,-37],[31,-24],[31,-13],[45,-1],[46,8],[74,-3],[381,-28],[23,5],[16,15],[9,26],[4,22],[-5,29],[-8,14],[-236,94],[-21,38],[116,54],[8,12],[2,17],[-4,21],[-15,21],[-62,39],[-55,6],[-82,38],[-12,10],[-11,15],[-8,21],[1,16],[11,12],[80,39],[33,21],[100,98],[46,39],[33,19],[34,11],[74,5],[77,-36],[17,-2],[7,-10],[-3,-17],[-10,-16],[-27,-29],[-7,-12],[2,-13],[19,-29],[6,-19],[4,-32],[3,-5],[47,-27],[42,-36],[20,-55],[-16,-19],[-35,-27],[-21,-22],[-7,-18],[5,-10],[27,-6]],[[24119,94562],[109,-27],[53,-18],[26,-12],[50,-40],[25,-12],[97,24],[68,8],[151,-10],[127,-34],[48,-24],[28,-23],[-7,-26],[-24,-41],[-27,-38],[-56,-61],[-47,-31],[-11,-14],[-8,-21],[-18,-29],[-50,-65],[-14,-11],[-71,-28],[25,-12],[11,-11],[-10,-29],[-45,-69],[-46,-63],[-33,-39],[-59,-55],[-32,-15],[-44,-5],[-263,48],[-66,-1],[-176,-25],[17,-12],[64,-19],[41,-20],[55,-63],[8,-16],[3,-18],[-2,-36],[-4,-9],[-87,-97],[-29,-71],[-18,-58],[-29,-16],[-98,24],[-32,0],[-110,-17],[-52,8],[8,88],[-8,95],[-16,90],[-82,161],[-9,29],[-6,31],[-3,33],[0,33],[6,67],[0,34],[-4,88],[-11,132],[-1,47],[1,19],[3,14],[18,19],[34,13],[17,2],[108,-40],[50,-13],[33,0],[2,5],[-30,8],[-27,18],[-46,51],[-20,44],[-5,14],[-1,16],[3,15],[6,15],[23,22],[18,10],[68,26],[69,15],[151,11],[42,-8],[66,29],[38,6],[67,-10]],[[22933,91959],[9,-7],[16,6],[12,19],[8,4],[12,-4],[39,-34],[29,-35],[32,-25],[50,-23],[110,-73],[32,-49],[34,-77],[31,-58],[26,-41],[29,-32],[46,-36],[41,26],[18,7],[15,-11],[14,-27],[-7,-12],[-18,-16],[-29,-17],[-42,-2],[-20,-5],[-32,-28],[-26,-35],[-36,-11],[-67,-57],[-37,-22],[-55,-5],[-114,44],[-71,-6],[-58,9],[-64,48],[-51,26],[-97,39],[-6,6],[-4,13],[-2,20],[-5,14],[-6,7],[-16,-1],[-15,-14],[-30,-11],[-46,2],[-20,9],[-15,12],[-8,15],[-1,17],[-5,13],[-7,9],[-16,0],[-26,-8],[-10,-11],[5,-13],[-4,-8],[-46,0],[-18,8],[-34,24],[-15,24],[-19,43],[2,11],[12,26],[16,19],[103,10],[48,11],[53,29],[61,52],[13,15],[1,11],[-4,12],[-19,30],[-7,20],[6,9],[25,1],[-13,12],[-11,16],[-4,10],[1,16],[19,4],[24,-8],[47,-47],[18,-9],[32,-7],[-34,32],[-35,67],[-4,24],[1,13],[9,36],[8,14],[11,10],[33,21],[53,14],[28,2],[27,-11],[24,-23],[54,-37],[8,-15],[-1,-7],[-20,-10],[-3,-9],[8,-14]],[[18188,93659],[18,-7],[32,6],[47,19],[60,15],[74,13],[19,-15],[12,3],[22,24],[4,16],[-3,18],[1,40],[12,23],[44,50],[23,18],[37,9],[89,-6],[84,-28],[112,-28],[165,-71],[52,-30],[5,-26],[-29,-55],[-71,-79],[-57,-28],[-22,-18],[37,-12],[24,-20],[36,29],[27,33],[38,27],[13,3],[3,-6],[-7,-14],[-2,-14],[1,-13],[4,-8],[23,-4],[13,5],[50,38],[49,59],[75,38],[20,19],[65,16],[-1,12],[3,44],[-22,19],[-77,40],[-37,48],[8,37],[42,-5],[115,-4],[24,-5],[111,-62],[39,-39],[31,-19],[65,-28],[22,-23],[16,-9],[5,-10],[-5,-10],[-2,-23],[12,-8],[42,-9],[12,-9],[16,-30],[19,-50],[17,-55],[27,-103],[54,-137],[18,-86],[7,-16],[12,-11],[34,-16],[27,-22],[31,-7],[7,2],[8,19],[20,31],[94,59],[5,9],[-11,14],[-3,9],[1,7],[20,5],[-66,75],[-43,71],[-27,89],[-4,25],[-4,55],[-9,15],[-15,13],[-6,17],[2,21],[-3,18],[-17,37],[-67,261],[0,26],[9,19],[24,11],[38,2],[13,6],[-15,10],[-25,27],[-3,13],[17,26],[86,-11],[62,-24],[106,-55],[11,3],[12,28],[22,17],[34,-6],[96,-40],[112,-71],[74,-36],[53,-48],[35,-45],[23,-35],[1,-13],[-5,-14],[5,-19],[16,-22],[8,-20],[7,-43],[15,-56],[3,-28],[99,-250],[19,-45],[12,-20],[69,-97],[37,-70],[3,-48],[5,-13],[2,-22],[-2,-30],[-8,-25],[-14,-22],[-14,-30],[-22,-67],[-1,-16],[15,-23],[97,-79],[59,-95],[28,-16],[74,-59],[81,-34],[27,-15],[26,-21],[7,-1],[16,4],[4,6],[1,9],[-22,45],[-2,17],[11,3],[83,-76],[45,-31],[61,-32],[105,-74],[15,-6],[57,7],[15,-5],[10,-7],[4,-10],[2,-44],[16,-21],[90,9],[25,-2],[16,-7],[13,-14],[20,-47],[17,-92],[1,-33],[-8,-56],[-13,-20],[-17,-7],[-48,7],[-33,17],[-18,23],[-16,48],[-7,10],[-7,-10],[-16,-45],[-10,-19],[-13,-14],[-24,4],[-35,19],[-66,50],[-23,12],[-15,-2],[-31,-17],[-49,-31],[-20,-23],[8,-15],[6,-19],[3,-22],[-2,-17],[-6,-10],[-16,-13],[-34,-2],[-49,9],[-39,18],[-68,46],[-15,6],[-21,-10],[-8,-14],[13,-19],[34,-24],[42,-41],[11,-8],[11,0],[4,-7],[5,-22],[-2,-38],[-21,-76],[-2,-18],[9,4],[57,75],[29,21],[65,32],[27,24],[82,7],[30,-13],[18,-23],[1,-10],[-21,-27],[-4,-14],[-1,-17],[2,-15],[5,-13],[14,-13],[26,6],[8,-4],[14,-13],[9,-20],[0,-29],[-19,-62],[-34,-21],[-105,-37],[-36,-20],[-70,-14],[-26,-18],[-17,-5],[-74,2],[-85,-11],[-98,23],[-69,10],[-79,36],[-30,-9],[-31,-24],[-148,28],[-18,20],[6,14],[35,42],[2,9],[-1,8],[-68,7],[-75,23],[-75,11],[-57,-3],[-37,8],[-36,19],[-19,17],[-4,16],[0,17],[3,34],[-5,24],[-16,18],[-34,17],[-33,-2],[-28,-18],[-26,-35],[-50,-96],[-24,-16],[-65,-70],[-24,-17],[-117,-27],[-140,-11],[-52,-22],[-49,-40],[-60,-39],[-146,-48],[-135,-27],[-142,-12],[-105,-18],[-31,9],[-47,-3],[-51,-27],[-57,-5],[-219,-10],[-100,-17],[-55,-5],[-44,2],[-30,8],[-28,23],[-30,37],[-60,97],[-17,41],[6,70],[-4,40],[-20,88],[-4,7],[-105,33],[-70,10],[-104,2],[-128,-4],[-127,10],[-68,12],[-67,19],[-114,51],[-7,5],[-8,17],[-12,28],[-28,37],[-78,82],[-31,49],[-5,13],[-7,36],[-10,59],[-3,36],[9,22],[7,5],[162,43],[284,47],[261,32],[118,-3],[69,-15],[70,-7],[126,-3],[160,-22],[31,2],[72,15],[21,12],[113,-2],[22,8],[20,13],[-26,25],[-108,55],[-286,97],[-70,21],[-100,22],[-58,3],[-74,-12],[-28,0],[-72,-19],[-69,-12],[-131,-12],[-189,-8],[-26,2],[-39,15],[-28,4],[-185,-11],[-165,15],[-188,149],[-32,46],[7,18],[23,20],[93,58],[34,13],[139,31],[138,38],[110,35],[53,12],[52,2],[42,11],[-9,11],[-34,13],[0,18],[18,9],[69,9],[72,-11],[37,3],[10,13],[-10,9],[-69,21],[-331,-59],[-155,-5],[-107,-26],[-59,1],[-70,25],[-10,8],[-1,10],[22,34],[75,20],[38,57],[-41,1],[-134,-12],[-59,5],[-79,22],[-23,26],[-10,18],[-2,23],[3,63],[6,34],[5,8],[98,105],[62,22],[43,33],[1,13],[-10,14],[-40,34],[-17,17],[-9,17],[7,25],[23,36],[67,57],[162,114],[82,48],[79,26],[110,55],[284,91],[254,92],[93,-24],[27,-19],[12,-16],[10,-23],[9,-29],[12,-63],[1,-32],[-2,-33],[-6,-29],[-9,-27],[-19,-32],[-29,-38],[-60,-65],[-7,-19]],[[16740,94534],[2,-2],[71,53],[44,3],[30,-5],[10,-6],[6,-11],[3,-23],[2,-58],[4,-7],[9,3],[16,14],[78,85],[33,23],[23,7],[96,13],[65,0],[71,-8],[54,-12],[88,-35],[69,-40],[63,-43],[212,-161],[90,-47],[35,-27],[15,-20],[13,-25],[4,-23],[-5,-21],[-10,-15],[-21,-13],[-130,-54],[-69,-16],[-67,-24],[-162,-84],[-111,-40],[-144,-78],[-272,-126],[-32,-25],[-15,-18],[-77,-143],[-29,-33],[-71,-34],[-89,-9],[-25,-9],[-5,-50],[-32,-82],[-15,-55],[-22,-148],[-5,-15],[-16,-28],[-28,-29],[-86,-35],[-64,-18],[-86,-15],[-21,10],[-21,24],[-22,2],[-13,-4],[-114,-103],[-109,-41],[-47,-38],[-33,-18],[-27,-5],[-44,3],[-32,17],[-29,27],[-22,28],[-56,118],[-24,40],[-21,20],[-55,72],[-15,14],[-209,91],[-101,51],[-25,18],[-23,11],[-130,-7],[-18,2],[-4,8],[15,27],[6,16],[2,17],[-2,27],[2,4],[49,27],[-8,5],[-5,10],[-4,15],[5,11],[15,6],[17,24],[21,43],[15,24],[22,16],[38,41],[27,17],[23,21],[1,9],[-10,8],[-3,16],[5,50],[-1,25],[5,22],[8,17],[11,11],[97,37],[4,10],[2,12],[-3,14],[-5,9],[-15,8],[-26,2],[-23,21],[-5,10],[9,29],[44,45],[14,22],[48,101],[86,63],[23,67],[65,72],[0,10],[-21,24],[-60,17],[-29,26],[-19,29],[-87,170],[-15,13],[-5,20],[-18,13],[4,12],[341,51],[235,16],[243,44],[68,2],[52,-8],[52,-23],[69,-40],[90,-39],[170,-58],[106,-12],[-42,-45],[-6,-14],[0,-10]],[[34402,78779],[-6,-5],[-19,8],[9,18],[7,5],[9,2],[4,-5],[-1,-13],[-3,-10]],[[23742,95477],[-27,0],[-35,12],[-10,12],[-8,17],[-5,22],[-7,18],[-10,13],[-2,10],[6,9],[11,5],[27,2],[57,22],[11,-2],[8,-12],[7,-31],[9,-19],[22,-34],[10,-22],[-2,-6],[-7,-6],[-55,-10]],[[27949,81769],[-12,-4],[-26,4],[-22,15],[-13,18],[86,51],[18,-6],[0,-10],[-13,-27],[-3,-18],[-6,-14],[-9,-9]],[[28103,84184],[-14,-8],[-10,1],[2,19],[14,38],[8,34],[2,28],[6,25],[10,22],[11,11],[15,-1],[4,-70],[-5,-32],[-10,-28],[-14,-22],[-19,-17]],[[28073,84254],[-23,-58],[-18,-56],[-25,-106],[-15,-3],[-13,25],[37,123],[1,14],[-1,12],[-11,18],[-11,-21],[-52,-139],[-13,-22],[-11,-13],[-9,-2],[-22,3],[-44,-40],[74,165],[1,13],[-14,8],[-6,-5],[-60,-104],[-34,-40],[-23,13],[-6,10],[2,13],[59,104],[54,75],[22,48],[9,44],[4,33],[0,36],[3,10],[3,-2],[3,-14],[1,-38],[-12,-77],[-10,-38],[-12,-32],[5,-7],[22,18],[18,38],[15,57],[9,50],[10,80],[3,-3],[4,-16],[10,-11],[15,-7],[9,-10],[6,-26],[7,-12],[23,-10],[9,-8],[6,-29],[-1,-16],[3,-9],[7,-5],[-8,-31]],[[27814,84547],[-7,-10],[-14,11],[0,29],[13,22],[10,-1],[10,-12],[-3,-15],[-9,-24]],[[27856,84974],[-4,-5],[-12,4],[-5,-38],[-4,-3],[-9,23],[7,20],[-1,14],[2,10],[12,23],[7,5],[4,-2],[4,-29],[-1,-22]],[[27784,84220],[-14,-4],[-17,8],[9,42],[14,18],[36,17],[7,11],[11,6],[17,0],[19,15],[21,32],[7,4],[-14,-46],[-16,-34],[-80,-69]],[[27698,86188],[-9,-2],[-2,7],[7,24],[12,3],[13,26],[12,-9],[-4,-15],[-16,-22],[-13,-12]],[[27795,82548],[-1,-17],[-18,3],[-9,10],[-8,15],[-2,12],[7,11],[21,-7],[10,-27]],[[27760,86273],[-29,-4],[13,34],[10,16],[12,11],[24,4],[16,-14],[-15,-25],[-31,-22]],[[27911,84479],[-9,-7],[-7,0],[7,51],[-8,18],[-1,9],[4,9],[5,2],[11,-16],[6,-17],[2,-16],[0,-16],[-4,-11],[-6,-6]],[[23116,93857],[-45,-6],[-41,40],[-2,38],[3,21],[5,18],[15,16],[43,18],[19,-13],[7,-17],[6,-6],[28,-14],[13,-16],[-2,-19],[-8,-28],[-10,-18],[-11,-8],[-20,-6]],[[22957,94772],[-84,-34],[-18,13],[-8,12],[65,53],[28,14],[27,-16],[7,-13],[-3,-9],[-14,-20]],[[22702,94394],[-80,-13],[-36,6],[-20,-16],[-15,-7],[-44,-3],[-90,29],[-24,10],[-9,9],[4,9],[16,9],[69,12],[25,10],[11,13],[17,11],[24,8],[65,8],[146,41],[72,5],[28,-3],[9,-11],[2,-10],[-4,-11],[-22,-28],[-30,-21],[-79,-46],[-35,-11]],[[24944,91831],[6,-36],[-24,-49],[-8,-8],[-10,-4],[-9,6],[-28,38],[-8,24],[10,12],[22,15],[15,7],[20,-6],[6,10],[8,-9]],[[24863,91716],[-23,-6],[-14,24],[-12,5],[-5,16],[-24,3],[2,25],[7,12],[22,10],[17,-4],[17,-25],[8,-20],[7,-25],[-2,-15]],[[29444,87913],[-15,-5],[-55,7],[-69,27],[-35,25],[2,8],[15,4],[18,-4],[29,-17],[80,-9],[25,-10],[8,-16],[-3,-10]],[[29199,91214],[-21,-4],[-32,36],[-66,40],[-25,30],[-1,14],[2,22],[8,27],[23,30],[24,5],[35,-7],[25,-21],[27,-59],[19,-29],[5,-21],[-9,-10],[1,-10],[4,-6],[-1,-11],[-8,-16],[-10,-10]],[[28185,86824],[-38,-6],[0,8],[16,24],[59,20],[44,6],[-10,-20],[-26,-16],[-45,-16]],[[28060,91124],[-23,-6],[-30,30],[0,17],[6,41],[55,10],[24,-24],[11,-24],[-43,-44]],[[28700,88360],[-29,-6],[-38,13],[-38,25],[-85,80],[64,54],[102,-63],[31,-40],[-7,-63]],[[31993,87879],[53,-6],[33,2],[14,-9],[13,-28],[-17,-40],[-19,-16],[-31,-4],[-50,13],[-17,8],[-16,22],[7,15],[25,5],[4,7],[-6,12],[0,10],[7,9]],[[32588,90469],[-34,-15],[-19,19],[13,6],[19,23],[26,20],[11,17],[43,8],[15,-1],[5,-6],[-24,-26],[-55,-45]],[[31046,86544],[-25,-5],[-12,12],[0,35],[8,26],[29,55],[25,62],[15,14],[31,-10],[18,-17],[18,-30],[8,-22],[-7,-34],[-22,-29],[-25,-21],[-61,-36]],[[30462,87873],[-20,-2],[-37,4],[-40,12],[-23,14],[-19,29],[-4,33],[-38,48],[-42,16],[-23,33],[24,3],[34,-8],[49,-14],[45,-19],[64,-42],[21,-40],[21,-28],[7,-22],[-6,-10],[-13,-7]],[[31991,87192],[-7,-7],[-6,2],[-21,30],[-28,13],[-10,12],[-84,63],[-9,28],[-2,22],[28,11],[56,10],[49,-1],[46,-13],[9,-14],[24,-26],[-6,-30],[-2,-40],[-10,-19],[-15,-14],[-12,-27]],[[31134,91901],[-7,-4],[-72,26],[-6,21],[36,24],[29,12],[22,2],[22,-4],[21,-25],[-25,-23],[-20,-29]],[[27936,92043],[11,-33],[7,-11],[-11,-15],[-41,-31],[-92,-13],[-46,14],[22,-44],[4,-19],[-6,-8],[-20,2],[-31,13],[-19,15],[-4,18],[-7,4],[-9,-10],[-8,2],[-19,27],[-14,9],[-92,16],[-4,7],[5,12],[14,18],[20,5],[52,-7],[4,4],[4,22],[4,9],[36,-3],[22,5],[13,-11],[12,-26],[17,5],[26,-4],[28,9],[43,23],[33,9],[46,-13]],[[28325,92001],[14,-29],[3,-15],[-20,-17],[-74,-33],[-46,-28],[-22,-7],[-31,7],[-37,-14],[-15,2],[17,23],[58,67],[49,7],[16,14],[14,-5],[8,12],[1,17],[17,13],[16,0],[32,-14]],[[28432,88704],[-20,-26],[-59,9],[-8,8],[-2,10],[9,12],[61,12],[26,1],[14,-4],[1,-4],[-22,-18]],[[26910,90024],[28,-7],[21,1],[4,-9],[-22,-28],[-13,-5],[-25,20],[-18,25],[-5,15],[-2,16],[4,3],[28,-31]],[[27997,91500],[-19,-4],[-23,11],[-8,19],[-4,19],[4,10],[10,9],[13,21],[18,32],[27,22],[60,21],[8,7],[27,58],[9,9],[30,6],[3,8],[-10,14],[0,14],[10,15],[15,12],[39,10],[35,-2],[9,-4],[7,-10],[11,-27],[1,-6],[-16,-24],[-42,-36],[-26,-31],[-5,-10],[-3,-13],[-9,-15],[-31,-38],[-20,-36],[-21,-20],[-56,-19],[-43,-22]],[[28612,91672],[-35,-7],[-26,4],[-17,13],[-13,19],[-16,46],[6,22],[2,38],[3,15],[6,7],[37,14],[21,-2],[32,-15],[69,-4],[18,-14],[4,-8],[-1,-10],[-4,-12],[-34,-35],[-17,-24],[-12,-29],[-23,-18]],[[31936,87487],[6,-5],[7,6],[6,-5],[4,-16],[6,-12],[17,-14],[5,-11],[0,-11],[-14,-16],[-9,0],[-66,37],[-18,39],[-1,19],[7,18],[10,8],[13,0],[16,-10],[11,-27]],[[25857,92230],[32,-4],[30,5],[22,-5],[13,-16],[9,-17],[5,-18],[-12,-13],[-49,-11],[-34,6],[-35,15],[-17,-7],[-41,11],[-20,14],[-17,21],[0,13],[43,14],[17,12],[54,-20]],[[26743,89744],[35,-23],[36,-13],[57,-6],[8,-5],[0,-11],[-8,-16],[-19,-22],[-14,0],[-31,15],[-12,7],[-13,17],[-6,2],[-9,-6],[-2,-7],[4,-10],[-5,-2],[-39,6],[-6,6],[3,18],[27,27],[-23,8],[-8,10],[-35,-17],[-19,-4],[-30,12],[-4,60],[-3,23],[-14,15],[-9,16],[-13,12],[-27,12],[-23,30],[-4,14],[3,10],[13,14],[79,-30],[48,-29],[46,-36],[23,-26],[2,-17],[-5,-17],[-14,-17],[11,-20]],[[25945,90861],[-11,-1],[-19,9],[-43,35],[-9,15],[-4,17],[0,21],[3,20],[14,42],[-26,33],[-6,19],[3,10],[14,26],[4,16],[14,22],[37,44],[37,-10],[32,-36],[9,-24],[-3,-26],[3,-37],[8,-49],[3,-36],[-4,-22],[-14,-41],[-12,-20],[-16,-18],[-14,-9]],[[26479,89616],[-15,-6],[-15,3],[-13,17],[-11,30],[-17,22],[-39,28],[-7,11],[-11,37],[-2,37],[-9,34],[0,16],[7,25],[33,6],[26,-10],[5,-7],[8,-14],[6,-18],[31,-47],[18,-38],[25,-78],[0,-15],[-7,-16],[-13,-17]],[[24154,87467],[-11,-1],[-26,29],[-5,15],[33,9],[23,-26],[-2,-12],[-12,-14]],[[21603,95630],[58,-35],[3,-9],[-11,-6],[-75,-19],[-29,-15],[-25,-35],[-19,-16],[-101,-10],[-103,1],[20,33],[56,56],[-44,22],[-158,-38],[-60,24],[51,60],[-51,5],[-71,0],[-46,36],[16,42],[94,24],[122,20],[131,31],[103,-3],[40,-14],[14,-49],[12,-59],[18,-5],[55,-41]],[[21881,95955],[-72,-2],[-33,6],[-2,11],[29,13],[95,22],[57,39],[21,5],[73,6],[43,-1],[55,-10],[-132,-49],[-134,-40]],[[21105,95957],[13,-3],[43,12],[27,2],[30,-22],[8,-14],[110,-36],[38,-16],[5,-10],[-13,-15],[-33,-20],[-31,-13],[-44,-11],[-222,-2],[-24,5],[-14,18],[-28,65],[-19,36],[-8,24],[5,14],[24,13],[82,21],[36,0],[23,-5],[9,-11],[-3,-14],[-14,-18]],[[21388,96858],[-32,-12],[-37,7],[-6,7],[0,9],[3,10],[42,36],[38,12],[23,3],[18,-13],[10,-18],[-59,-41]],[[21752,96599],[-39,-6],[-69,3],[-83,21],[-22,24],[-5,38],[1,22],[7,4],[51,5],[96,6],[78,-5],[88,-22],[36,-14],[18,-10],[22,-20],[8,-8],[5,-16],[-110,-4],[-52,-6],[-30,-12]],[[25076,95914],[-13,-8],[-42,4],[-14,-8],[-22,5],[-31,16],[-36,32],[-41,48],[-32,41],[-1,12],[10,19],[32,13],[76,15],[52,0],[48,-31],[14,-11],[8,-13],[1,-12],[-4,-11],[-22,-24],[-10,-16],[0,-17],[5,-23],[9,-16],[13,-8],[0,-7]],[[23311,95339],[-21,-19],[-23,-1],[-30,18],[-32,-7],[-45,-36],[-16,-22],[-12,-7],[-37,-7],[-16,6],[-15,19],[-14,32],[10,24],[35,16],[93,27],[26,13],[3,14],[6,9],[8,4],[62,-23],[29,-16],[22,-18],[-2,-8],[-31,-18]],[[23526,94760],[-13,-2],[-25,3],[-93,26],[-16,10],[-4,8],[21,9],[8,10],[23,12],[42,0],[44,-29],[21,-27],[1,-12],[-9,-8]],[[18380,96632],[-76,-19],[-51,0],[-89,28],[-103,84],[-14,30],[39,5],[28,9],[17,13],[34,15],[76,21],[10,-8],[-2,-18],[6,-16],[28,-4],[26,-11],[53,-36],[36,-7],[13,-8],[6,-12],[22,-21],[0,-11],[-30,-22],[-29,-12]],[[16368,95475],[-22,-3],[-24,6],[5,15],[54,41],[3,11],[0,9],[-7,11],[14,15],[22,5],[7,-5],[2,-12],[-5,-36],[-6,-18],[-10,-14],[-14,-14],[-19,-11]],[[18455,96049],[-42,-18],[-289,27],[-15,9],[-8,12],[52,33],[64,14],[146,11],[51,-13],[34,-15],[19,-12],[8,-24],[-20,-24]],[[21078,95066],[-53,-3],[-90,18],[-54,33],[-17,16],[2,8],[9,7],[13,22],[31,63],[12,17],[48,36],[36,10],[75,-3],[44,-19],[18,-12],[13,-15],[13,-32],[3,-21],[22,-24],[7,-14],[0,-14],[-6,-14],[-12,-13],[-29,-21],[-85,-25]],[[34594,81530],[-20,-58],[-14,-28],[-13,-9],[-28,-8],[-59,-9],[-25,-8],[-3,-39],[4,-20],[8,-16],[11,-4],[24,9],[9,-1],[7,-8],[6,-15],[3,-20],[0,-25],[-4,-31],[-20,-73],[-25,-40],[-33,-33],[-7,-12],[-5,-15],[-4,-48],[-16,-38],[-52,-96],[-20,-22],[0,-17],[-8,-46],[-16,-36],[-43,-85],[-10,-30],[-5,-24],[1,-33],[-2,-15],[-10,-28],[-14,-27],[-3,-13],[6,-23],[5,-8],[1,-22],[-4,-34],[18,22],[40,78],[31,47],[20,16],[15,21],[15,46],[20,44],[19,15],[9,-9],[7,-21],[-1,-28],[-10,-33],[0,-10],[24,24],[41,21],[15,-3],[30,-30],[26,3],[40,18],[7,-8],[-7,-27],[-15,-26],[-37,-36],[-90,-72],[-28,-49],[5,2],[20,21],[20,11],[21,2],[9,-7],[-3,-14],[-3,-37],[-54,-74],[13,3],[62,33],[39,-46],[52,16],[31,16],[0,-10],[6,-20],[0,-33],[3,-5],[15,11],[3,12],[-1,58],[5,6],[10,-9],[6,-15],[2,-42],[-7,-43],[-9,-39],[-23,-57],[3,-24],[-6,-27],[5,-1],[23,25],[1,10],[-2,24],[3,11],[19,26],[31,31],[11,4],[4,-7],[-2,-19],[10,5],[20,28],[18,16],[17,6],[18,19],[19,32],[20,27],[21,21],[9,2],[-3,-35],[4,-40],[1,-34],[4,-7],[17,36],[9,13],[11,6],[12,-3],[87,13],[27,-9],[30,-24],[37,-36],[14,-33],[3,-42],[-4,-29],[-27,-37],[-24,-24],[-14,-24],[-5,-25],[-5,-15],[-16,-20],[-72,-59],[17,-2],[41,13],[28,3],[1,-9],[-11,-16],[-21,-17],[-2,-8],[1,-11],[22,-12],[29,6],[24,-9],[-3,-14],[-19,-46],[-5,-28],[-26,-25],[-50,-37],[-13,-15],[3,-3],[46,28],[24,7],[14,0],[17,27],[26,9],[26,-17],[39,46],[14,6],[24,-5],[15,8],[26,32],[20,15],[4,-1],[4,-13],[2,-36],[-5,-32],[-6,-21],[-21,-45],[-13,-16],[-12,-6],[-21,2],[-9,-7],[-20,-35],[-35,-36],[-22,-14],[14,-20],[5,-37],[-8,-12],[-37,-12],[-2,-6],[-13,-8],[-31,-13],[21,-6],[39,9],[4,-6],[-5,-27],[-11,-27],[-46,-70],[0,-7],[7,-35],[9,-26],[11,-18],[26,-1],[19,8],[27,47],[62,146],[55,41],[45,45],[11,-9],[5,-11],[-2,-11],[-23,-37],[-12,-31],[-31,-94],[-12,-45],[-6,-47],[1,-81],[4,-14],[9,-19],[19,17],[31,40],[20,38],[15,63],[10,24],[10,-1],[10,-13],[2,-30],[8,-42],[6,-41],[-4,-46],[-5,-25],[-63,-186],[6,-33],[2,-20],[-2,-22],[-20,-89],[-19,-55],[-11,-24],[-12,-15],[-15,-5],[-13,8],[-11,21],[-10,11],[-9,1],[-17,-4],[-42,-45],[-9,-3],[-6,6],[-8,24],[6,120],[4,40],[-9,30],[9,52],[1,19],[-6,7],[-10,-4],[-17,-26],[-22,-47],[-23,-42],[-42,-57],[-18,-11],[-8,2],[-8,8],[-12,24],[1,22],[5,29],[17,68],[34,101],[28,72],[5,31],[-7,13],[-7,27],[-11,78],[-13,64],[-16,28],[-41,32],[-7,-8],[-4,-43],[-48,-124],[-8,-54],[-6,-20],[-9,-14],[-21,-17],[6,29],[22,64],[-3,6],[-28,-51],[-21,-29],[-26,-7],[-16,2],[-15,-8],[-65,-121],[-3,-41],[-11,-33],[-32,-60],[-17,-21],[-24,-4],[-21,11],[-15,-2],[-33,-19],[-38,-8],[-16,4],[-10,7],[-19,24],[-2,16],[1,10],[10,25],[22,32],[18,11],[45,16],[33,24],[25,35],[12,21],[47,110],[60,39],[29,31],[21,40],[3,14],[-30,-20],[-15,-5],[-25,7],[-11,14],[-34,-4],[-47,6],[-7,-10],[-6,-54],[-6,-28],[-7,-9],[-11,-6],[-21,-6],[-55,19],[-11,11],[-14,8],[-60,-18],[-13,2],[12,12],[60,40],[6,112],[-3,18],[-17,-16],[-28,-16],[-20,5],[-9,10],[-8,-9],[-19,-59],[-12,-7],[-17,-3],[-38,-21],[-73,-15],[-14,-15],[-49,5],[-145,33],[-52,-3],[-62,20],[-12,8],[-87,-3],[-26,4],[2,25],[-3,6],[-25,-27],[-23,-18],[-29,-15],[-91,-26],[-49,-6],[-28,18],[-11,19],[-17,59],[-12,74],[0,13],[6,26],[19,36],[87,94],[69,96],[30,49],[28,18],[46,41],[2,5],[-45,-5],[-32,11],[-32,5],[-62,-11],[-62,0],[0,21],[29,40],[62,68],[6,1],[-19,-32],[-5,-24],[8,-16],[9,-10],[36,-4],[8,14],[12,73],[27,85],[14,61],[25,47],[13,7],[11,-9],[37,-11],[38,-43],[12,-3],[4,3],[-14,13],[-11,20],[-5,19],[14,59],[16,17],[3,12],[-32,0],[-26,16],[-8,27],[1,47],[9,28],[21,37],[25,25],[15,-6],[30,-34],[18,10],[-3,10],[-27,53],[-9,39],[1,19],[59,187],[29,100],[40,153],[9,24],[20,45],[9,12],[25,0],[16,6],[-23,19],[-8,14],[-1,15],[6,15],[9,12],[31,24],[22,40],[13,48],[-2,16],[-7,16],[0,9],[17,10],[42,56],[5,11],[16,75],[19,33],[17,17],[28,21],[86,52],[51,46],[34,-3],[10,-32],[49,-21],[9,23],[-12,28],[10,11],[40,10],[7,-4],[12,-16],[-2,-14]],[[34573,81059],[-9,-6],[-9,0],[-8,7],[-1,11],[8,23],[21,12],[17,-3],[-1,-12],[-9,-19],[-9,-13]],[[34846,80408],[-43,-34],[-10,-13],[-12,-7],[-9,11],[-12,35],[2,12],[12,2],[7,-5],[1,-11],[5,-6],[9,0],[32,35],[16,5],[6,-6],[-4,-18]],[[34622,81733],[-14,-1],[-3,7],[6,22],[15,26],[20,7],[-6,-38],[-18,-23]],[[34974,80497],[20,-37],[11,-10],[-72,-41],[-8,-2],[-5,4],[-1,38],[4,29],[5,5],[16,-18],[17,36],[13,-4]],[[34370,78823],[-24,-25],[-9,14],[2,17],[13,39],[-1,11],[-14,76],[2,13],[4,5],[21,-16],[3,-21],[-10,-46],[7,-31],[9,-23],[-3,-13]],[[34937,79171],[-14,-20],[-14,0],[2,18],[17,34],[8,24],[1,15],[3,11],[13,13],[11,23],[-5,-43],[-22,-75]],[[22162,91478],[-9,-18],[-11,-6],[-22,-21],[-8,-3],[-13,14],[-11,22],[-4,3],[-7,0],[-14,-15],[-7,1],[-5,9],[-3,19],[0,29],[7,43],[1,16],[-4,12],[3,12],[10,10],[12,4],[30,-4],[23,-17],[12,-23],[23,-18],[7,-13],[-10,-56]],[[22223,91597],[-6,-34],[-34,9],[-15,12],[-13,28],[-2,8],[3,10],[14,25],[9,9],[23,-11],[10,-14],[8,-23],[3,-19]],[[22136,92451],[-3,-5],[-60,22],[-23,12],[-8,10],[-5,19],[-3,28],[12,14],[27,-1],[28,-11],[44,-31],[-12,-10],[-1,-20],[5,-20],[-1,-7]],[[23468,91920],[37,-39],[0,-19],[-5,-31],[-11,-24],[-16,-16],[-23,-8],[-29,-1],[-13,7],[10,24],[7,8],[1,21],[-5,35],[-6,22],[-16,12],[-12,1],[-3,-12],[5,-23],[-4,-30],[-13,-38],[-9,-17],[-18,9],[-8,14],[2,23],[-4,22],[4,22],[12,34],[17,22],[21,12],[26,-1],[29,-13],[24,-16]],[[21897,91818],[-23,-5],[-4,1],[2,16],[-2,8],[-6,5],[20,13],[3,10],[-7,7],[-27,14],[-8,13],[2,11],[10,10],[19,-2],[41,-18],[19,-26],[8,-20],[-13,-3],[-11,-8],[-11,-16],[-12,-10]],[[21709,91351],[-11,-1],[-16,10],[-90,35],[-11,11],[10,15],[33,19],[22,19],[17,30],[51,-16],[19,-14],[8,-12],[3,-17],[-3,-41],[-17,-9],[-15,-29]],[[20961,91247],[-16,-2],[-28,9],[-43,21],[-31,21],[-21,23],[-3,16],[16,9],[24,4],[57,-3],[28,-8],[36,-34],[7,-19],[2,-12],[-5,-11],[-23,-14]],[[20028,90668],[-14,-48],[-6,5],[-9,23],[-20,11],[-21,25],[0,55],[8,25],[-2,35],[22,21],[16,-25],[5,-42],[-4,-20],[16,-22],[7,-5],[4,-17],[-2,-21]],[[19676,91003],[31,-6],[23,4],[17,-23],[7,-23],[-2,-8],[-8,-4],[-49,26],[-18,16],[-6,14],[5,4]],[[19974,90440],[35,-5],[45,1],[-8,-44],[-17,-29],[-14,-8],[-6,16],[-26,35],[-9,34]],[[19632,91008],[-10,-2],[-38,34],[8,30],[35,-31],[5,-18],[0,-13]],[[33057,84123],[3,-14],[-43,10],[-15,9],[-1,9],[2,15],[8,17],[20,13],[11,-7],[23,-17],[3,-11],[-11,-24]],[[32849,84996],[23,-17],[6,-63],[-44,4],[-50,42],[-10,31],[1,5],[7,5],[13,-7],[12,11],[13,3],[29,-14]],[[30789,85852],[-17,-42],[-23,5],[-8,-8],[-6,-1],[10,39],[1,27],[-5,27],[8,13],[30,1],[0,-31],[4,-11],[7,-6],[-1,-13]],[[56159,86618],[35,-13],[15,5],[17,-30],[-29,-20],[-2,-24],[12,-14],[4,-22],[-29,0],[-13,18],[-6,23],[-13,16],[-18,13],[9,16],[5,24],[13,8]],[[55958,86710],[-4,-27],[-19,3],[-19,-5],[-15,27],[-9,45],[3,9],[12,10],[9,-24],[42,-38]],[[56064,86486],[-28,-20],[-10,5],[3,33],[16,15],[28,2],[-9,-35]],[[32109,86616],[-10,-40],[-32,15],[-50,30],[-20,20],[-7,22],[0,30],[15,5],[37,3],[32,-42],[9,-6],[26,-37]],[[85047,71849],[-4,-14],[-12,4],[-12,40],[-5,31],[-13,18],[20,27],[25,-49],[1,-57]],[[70136,47593],[-6,-23],[-12,-10],[-5,58],[-17,41],[7,0],[15,-21],[6,-56],[5,17],[-1,17],[3,16],[-2,18],[-9,28],[3,5],[13,-23],[2,-19],[-2,-48]],[[11234,46693],[-18,-5],[-3,29],[6,15],[8,7],[13,-9],[8,-12],[-1,-11],[-13,-14]],[[93789,46797],[0,-20],[-16,6],[-36,31],[-1,14],[20,5],[15,-4],[12,-18],[6,-14]],[[55725,86428],[-2,-13],[-23,-3],[-10,12],[-21,-2],[-3,6],[8,12],[17,8],[22,-3],[12,-17]],[[56007,86467],[-24,-6],[-15,17],[6,12],[17,14],[18,-2],[4,-16],[-6,-19]],[[56902,89280],[-42,-19],[-33,12],[-1,37],[21,18],[37,7],[52,-18],[7,-10],[-29,-7],[-12,-20]],[[58321,92048],[-53,-17],[-6,14],[11,22],[14,44],[22,-2],[22,-17],[17,-20],[-27,-24]],[[51377,87030],[-25,-8],[-19,6],[7,55],[10,9],[15,4],[16,-30],[-4,-36]],[[52250,88327],[-27,0],[-32,9],[-21,19],[-3,16],[38,21],[37,12],[18,-23],[1,-37],[-11,-17]],[[52352,88517],[-31,-1],[-20,13],[46,25],[72,25],[6,15],[9,2],[12,-19],[2,-26],[-8,-13],[-88,-21]],[[53474,89805],[-22,-2],[0,23],[13,22],[20,14],[26,4],[29,2],[9,-12],[-17,-16],[-58,-35]],[[53449,89886],[-25,-4],[4,26],[21,24],[8,16],[4,20],[18,14],[26,-19],[1,-31],[-13,-30],[-44,-16]],[[55490,92290],[15,-7],[14,4],[11,-6],[23,-30],[25,-12],[2,-15],[-23,-15],[-31,-4],[-32,5],[-9,19],[-10,31],[-27,31],[-4,27],[23,5],[23,-33]],[[56511,92635],[-6,-18],[-9,-18],[-23,-18],[-66,-74],[-38,-11],[-13,-12],[-15,-7],[-48,10],[-14,-15],[-14,-10],[-34,-4],[-21,4],[-53,27],[-31,29],[-17,26],[49,-1],[17,6],[33,-5],[19,26],[42,-3],[80,18],[29,-10],[67,60],[21,-2],[32,17],[13,-15]],[[55771,92217],[-15,-14],[-23,-5],[-12,8],[-17,6],[-20,-3],[-16,25],[1,20],[23,28],[45,16],[36,-6],[10,-9],[-12,-66]],[[57107,92823],[74,-22],[25,0],[37,-41],[19,4],[-3,-25],[-37,-12],[-58,-7],[-9,-5],[-49,4],[-28,33],[-47,9],[0,11],[30,25],[46,26]],[[56559,92482],[5,-27],[2,-23],[-26,-32],[-59,-42],[3,-11],[-20,-11],[-31,-8],[-17,8],[2,36],[-5,11],[-23,-15],[-24,19],[-1,18],[7,16],[23,25],[37,16],[25,-6],[83,65],[9,-14],[10,-25]],[[56671,92492],[-53,-23],[-31,20],[-13,20],[-1,45],[7,27],[25,15],[16,-11],[4,-8],[29,-9],[34,-28],[-17,-48]],[[53853,91166],[17,-10],[43,3],[8,-4],[-6,-16],[-19,-18],[-39,-11],[-18,-27],[-12,-9],[-34,-1],[-20,-6],[-25,-24],[-20,18],[-5,-13],[-4,-23],[-11,-6],[-34,-9],[-8,53],[16,20],[12,22],[19,4],[17,-2],[30,50],[42,14],[26,1],[25,-6]],[[53603,90941],[-41,-31],[15,56],[22,56],[30,32],[16,-12],[-7,-27],[0,-27],[-7,-13],[-28,-34]],[[54861,91933],[34,-33],[15,10],[29,3],[22,-11],[18,-21],[22,-1],[13,-27],[7,-36],[-16,-27],[-22,-12],[-6,-31],[9,-44],[-49,-15],[-58,-7],[-22,21],[-45,-38],[-46,-60],[-21,-7],[-2,19],[-32,13],[-42,1],[1,14],[8,10],[36,15],[7,30],[-7,54],[7,26],[1,19],[23,21],[77,-10],[9,20],[-6,13],[-39,22],[6,15],[28,14],[28,2],[8,22],[1,10],[4,6]],[[55348,92203],[25,-31],[22,3],[6,12],[15,6],[30,-17],[-4,-28],[-42,-36],[-30,-50],[-38,-12],[-18,6],[-35,-29],[-27,-31],[-28,-38],[-2,-20],[-5,-15],[-104,-15],[-37,-10],[-40,12],[-19,26],[6,14],[40,5],[1,24],[10,14],[13,8],[9,30],[16,8],[30,-7],[20,22],[11,3],[14,-18],[6,25],[-6,23],[3,15],[38,40],[17,29],[24,19],[22,-3],[7,28],[-7,28],[3,18],[20,45],[22,2],[11,-40],[1,-65]],[[54377,91336],[4,-4],[38,56],[41,17],[3,19],[16,19],[-2,31],[9,24],[21,7],[13,8],[15,5],[27,-20],[15,-22],[19,-50],[-8,-48],[-50,-38],[-40,-17],[-41,-43],[-20,-35],[-17,-8],[-11,3],[-10,9],[-21,0],[-22,-31],[-68,-25],[-27,7],[-1,31],[-16,-3],[-26,-36],[-25,-12],[-16,-4],[-31,14],[-83,-63],[-78,-11],[-25,7],[0,38],[50,49],[41,34],[142,23],[88,101],[21,109],[21,39],[-10,23],[-24,4],[-1,34],[12,37],[47,51],[25,22],[42,62],[20,14],[23,0],[23,-16],[-4,-33],[-34,-60],[-50,-51],[6,-37],[20,-30],[5,-51],[1,-50],[-38,-66],[-9,-33]],[[54224,91556],[36,-58],[16,-34],[-13,-64],[-35,-32],[-54,-6],[-38,3],[-24,16],[-3,17],[-14,5],[-37,-22],[-25,-3],[-32,17],[-9,28],[34,35],[16,27],[38,-3],[10,-8],[21,-5],[13,32],[-3,23],[10,15],[46,-11],[0,61],[17,5],[8,-3],[13,-13],[9,-22]],[[53119,89208],[-14,-16],[-33,13],[-63,-10],[-26,15],[20,31],[58,32],[31,-2],[31,-39],[-4,-24]],[[51412,86582],[1,-68],[-25,5],[-12,26],[-3,17],[2,39],[-6,41],[7,20],[10,3],[16,-36],[10,-47]],[[53324,89646],[-18,-18],[-35,5],[-3,15],[9,31],[21,13],[27,-3],[9,-13],[-10,-30]],[[28038,95579],[3,-34],[-20,1],[-65,-22],[-52,-3],[-26,10],[-17,23],[41,43],[47,31],[57,47],[47,30],[23,-6],[22,-16],[-28,-47],[-30,-23],[-2,-34]],[[30092,96385],[-99,-5],[-97,22],[-34,17],[2,27],[14,9],[53,9],[44,2],[29,-4],[70,-16],[50,-16],[33,-5],[-9,-24],[-56,-16]],[[37537,99126],[-56,-10],[-118,61],[-186,61],[-164,40],[-154,107],[-12,38],[21,33],[135,5],[108,15],[274,-66],[138,-56],[46,-45],[-7,-92],[-25,-91]],[[44815,98989],[-29,-18],[-73,7],[-94,52],[-62,43],[-5,50],[32,22],[50,4],[69,-43],[71,-58],[41,-59]],[[45107,97825],[-117,-66],[-174,5],[-103,31],[-30,45],[40,51],[125,41],[156,25],[142,-15],[20,-51],[-59,-66]],[[44723,96758],[-37,-20],[-25,61],[-22,81],[-5,92],[57,45],[29,11],[20,-11],[-5,-40],[0,-82],[19,-55],[-31,-82]],[[44838,95646],[-32,-16],[-108,239],[0,87],[7,66],[49,5],[42,-36],[20,-137],[22,-208]],[[44999,95280],[22,-61],[10,-56],[35,-35],[73,5],[29,-66],[-53,-26],[-214,10],[-88,-5],[-61,41],[2,71],[8,71],[61,41],[51,-36],[62,26],[63,20]],[[45012,96567],[-54,0],[-20,15],[13,27],[75,85],[25,7],[37,-9],[11,-44],[-24,-44],[-63,-37]],[[41679,99979],[267,-35],[141,-40],[30,1],[191,-15],[182,-19],[302,-51],[42,-16],[-32,-14],[-75,-9],[-386,-16],[-700,-21],[-401,-39],[-127,-2],[-11,-59],[54,-3],[89,8],[314,59],[117,9],[219,-5],[285,-22],[114,8],[205,-6],[239,17],[283,37],[77,-82],[104,-81],[83,9],[70,-5],[24,-26],[39,-12],[80,6],[245,-23],[168,-42],[63,-19],[30,-28],[18,-22],[-27,-28],[-105,-49],[-133,-45],[-179,-34],[-207,-22],[-1588,-73],[-54,-17],[-31,-44],[21,-57],[74,-9],[173,32],[300,31],[221,-2],[527,-26],[155,-68],[82,-105],[183,24],[39,18],[29,31],[22,33],[18,36],[19,24],[21,13],[45,11],[105,13],[274,13],[66,-4],[48,-49],[10,-28],[3,-38],[-1,-45],[-6,-55],[-24,-54],[-76,-94],[-61,-52],[-66,-37],[-126,-84],[-44,-23],[-138,-99],[-35,-45],[-2,-34],[24,-6],[40,31],[15,23],[26,23],[205,62],[44,17],[133,74],[86,28],[70,29],[37,20],[206,146],[107,43],[112,0],[20,-73],[135,-12],[59,3],[94,-18],[41,-14],[70,-8],[73,-17],[63,18],[19,12],[62,54],[83,47],[77,59],[26,15],[41,13],[42,5],[115,28],[29,2],[62,-9],[273,-5],[150,-14],[208,-40],[145,-21],[67,-20],[97,-41],[79,-43],[37,-13],[-2,-13],[-27,-19],[-195,-66],[-64,-45],[-185,-83],[-90,-29],[-98,-11],[-109,-2],[-71,-12],[-10,-12],[50,-34],[22,-25],[-3,-22],[-53,-32],[-20,-8],[-192,-24],[-97,-41],[-126,-5],[-89,5],[-123,-44],[48,-36],[44,-16],[137,-32],[1,-19],[-66,-38],[-89,-44],[-105,-31],[-40,-5],[-50,8],[-46,-2],[-101,-14],[-97,-2],[-173,20],[-93,23],[-49,8],[-62,-2],[-24,-9],[-98,-56],[-48,-38],[-31,-39],[-13,-42],[5,-46],[12,-32],[19,-17],[23,-10],[41,-6],[89,6],[35,-3],[11,-10],[19,-29],[-3,-28],[-17,-39],[-12,-45],[-9,-52],[5,-29],[36,-6],[17,2],[19,-9],[23,-21],[17,-22],[11,-23],[-6,-19],[-23,-15],[-52,-17],[-128,-33],[-13,-10],[-10,-21],[-7,-30],[-16,-28],[-23,-25],[-22,-15],[-42,-6],[-54,-1],[-61,-14],[-144,-84],[-2,-9],[54,-27],[-2,-24],[-67,-101],[-18,-50],[-14,-68],[-24,-58],[-33,-47],[-33,-55],[-31,-61],[5,-47],[41,-33],[56,26],[69,86],[74,38],[81,-12],[70,-17],[90,-34],[76,-21],[65,-28],[26,-23],[27,-33],[1,-20],[-48,-12],[-16,4],[-119,54],[-58,14],[-77,-16],[-67,-25],[60,-99],[65,-45],[117,-21],[62,-22],[44,-28],[35,-14],[47,6],[64,28],[88,1],[40,-13],[28,-26],[13,-47],[-3,-70],[-9,-52],[-16,-35],[-32,-47],[-27,-9],[-37,3],[-35,9],[-32,17],[-49,13],[-98,14],[-98,31],[-56,8],[-117,-4],[-127,-20],[-5,-25],[-182,-89],[-37,1],[-50,30],[-71,30],[-41,0],[-62,-38],[-15,-14],[1,-14],[45,-32],[18,-7],[24,-6],[80,-8],[36,-8],[33,-100],[52,-61],[23,-13],[19,-5],[65,3],[83,20],[28,-16],[61,-20],[36,-6],[43,1],[49,-7],[67,-57],[-26,-72],[42,-57],[67,-59],[15,-21],[7,-39],[1,-26],[5,-24],[9,-21],[9,-42],[9,-62],[-2,-51],[-15,-39],[-27,-29],[-42,-18],[-34,5],[-26,27],[-37,29],[-48,31],[-80,3],[-117,-90],[-52,-5],[-42,-9],[-46,-39],[-66,-24],[-59,9],[-103,46],[37,-30],[54,-36],[33,-19],[25,-4],[27,4],[39,15],[88,41],[23,6],[20,-3],[16,-12],[19,-35],[21,-58],[-3,-49],[-26,-41],[-23,-26],[-18,-12],[0,-9],[49,-10],[69,53],[22,66],[32,76],[56,25],[64,-25],[52,-71],[72,-131],[31,-14],[39,-31],[17,-39],[-4,-45],[-9,-33],[-12,-21],[-15,-13],[-27,-8],[-50,-7],[-111,14],[-58,0],[7,-45],[-117,-39],[-133,-15],[-125,30],[-104,47],[34,65],[20,72],[-51,48],[-11,1],[18,-74],[-15,-28],[-57,-35],[-40,-15],[-3,-10],[19,-8],[13,-15],[6,-23],[-7,-23],[-19,-24],[-11,-19],[-2,-16],[18,-20],[38,-22],[41,-11],[191,-5],[77,-13],[182,-53],[8,-17],[-31,-96],[-17,-92],[-35,-17],[-191,-4],[-62,-14],[-90,-42],[-87,-51],[-45,-1],[-178,45],[-68,29],[-147,84],[-110,128],[-51,-53],[-30,-26],[-32,-13],[-31,-2],[-30,9],[-34,20],[-56,47],[-68,46],[-47,22],[-1,-6],[27,-27],[41,-32],[103,-92],[37,-23],[-4,-16],[-65,-15],[-79,-31],[-39,-24],[-60,-56],[-20,-9],[-90,-14],[-29,3],[-67,32],[-99,20],[-59,18],[-82,33],[29,-36],[157,-55],[17,-17],[-32,-33],[-20,-12],[-37,-3],[-56,7],[-56,-1],[-58,-10],[-24,-12],[8,-15],[13,-14],[20,-12],[18,0],[44,38],[33,2],[88,-9],[89,29],[64,13],[48,3],[175,44],[37,50],[58,20],[131,15],[126,-8],[65,-6],[53,-47],[70,-34],[59,-37],[69,-13],[40,-50],[111,-57],[71,-12],[44,-27],[4,-114],[5,-49],[-19,-136],[-57,-31],[11,-72],[-15,-58],[-57,22],[-58,38],[-139,59],[-130,38],[-50,35],[-59,26],[-81,109],[-52,135],[-23,67],[-44,4],[-57,-18],[-49,-19],[-24,-32],[-168,-45],[-61,-30],[-35,0],[-125,-45],[50,-22],[23,-3],[51,12],[31,16],[114,44],[92,7],[33,19],[70,26],[48,8],[7,-7],[5,-12],[33,-165],[-14,-44],[-38,-19],[-80,-31],[-21,-15],[23,-27],[76,25],[50,27],[26,-10],[43,-41],[49,-21],[123,-64],[59,-35],[82,-34],[93,-47],[24,-17],[85,-24],[18,-8],[36,-83],[29,-10],[85,-5],[-15,-32],[-83,-72],[-43,-22],[-10,-15],[4,-25],[2,-42],[17,-78],[20,72],[13,34],[19,10],[17,2],[58,32],[58,-17],[15,-81],[8,-76],[-5,-66],[6,-101],[-2,-35],[14,-29],[14,-124],[14,-37],[-29,-33],[-88,-14],[-35,16],[-87,-6],[0,30],[-5,33],[0,24],[-6,21],[-4,122],[-25,-31],[-1,-24],[-7,-25],[-15,-132],[-22,-32],[-70,8],[-69,-5],[-38,5],[-129,60],[-50,54],[-44,82],[-28,76],[-10,71],[-31,57],[-51,45],[-61,36],[-70,28],[-62,35],[-53,44],[-58,33],[-64,25],[-90,10],[-133,-4],[-89,27],[-22,-2],[-21,-14],[16,-40],[103,-18],[79,-5],[105,3],[64,-10],[24,-23],[16,-42],[9,-59],[-21,-47],[-76,-52],[-39,-25],[-117,-47],[-39,-10],[-97,-4],[-75,5],[-98,23],[-55,5],[-115,3],[-27,-8],[30,-25],[49,-14],[34,-17],[4,-32],[-13,-48],[-13,-33],[-21,-25],[-75,-47],[-31,-15],[-141,-50],[-10,-10],[33,2],[89,17],[26,0],[146,-43],[116,2],[236,40],[19,-1],[16,-6],[15,-15],[16,-23],[-19,-23],[-54,-22],[-84,-22],[-36,-15],[-35,-22],[-64,-53],[-19,-56],[68,-21],[30,27],[36,59],[33,35],[76,24],[94,-12],[72,14],[148,58],[26,4],[217,-34],[197,-65],[103,-25],[138,-14],[246,7],[22,-11],[-8,-23],[-14,-20],[-41,-27],[-50,-18],[-31,-5],[-27,-13],[-59,-13],[-15,-10],[21,-45],[-10,-7],[-52,-1],[-88,-29],[-72,2],[-15,-5],[14,-10],[14,-21],[16,-32],[-9,-22],[-32,-13],[-24,-4],[-85,18],[-14,-3],[13,-13],[7,-20],[2,-28],[-21,-23],[-43,-18],[-81,-51],[-35,-15],[-74,-12],[-15,-7],[30,-39],[-4,-16],[-49,-42],[-76,-27],[-10,-14],[-7,-38],[-6,-15],[-20,-22],[-71,-42],[-51,-21],[-25,-17],[-31,-28],[-40,-16],[-47,-1],[-45,-11],[-74,-30],[-51,-10],[-163,-53],[-76,-8],[-66,-19],[-137,-50],[-64,-16],[-45,-19],[-49,-5],[-80,12],[-43,1],[-27,-8],[-24,-15],[-40,-42],[-34,-4],[-112,34],[3,-15],[29,-36],[-1,-26],[-67,-26],[-36,-7],[-52,11],[-70,28],[-90,59],[-109,89],[-53,30],[4,-29],[12,-28],[20,-27],[5,-20],[-13,-12],[-16,-6],[-20,0],[-3,-7],[33,-43],[25,-44],[-2,-41],[-31,-39],[-26,-23],[-22,-7],[-130,-98],[-37,-13],[-16,-12],[-14,-18],[-38,-81],[-15,-25],[-30,-32],[-13,-6],[-4,-13],[6,-21],[-9,-34],[-22,-49],[-76,-133],[-61,-125],[-27,-41],[-20,-17],[-12,6],[-30,-3],[-15,-22],[-13,-40],[-15,-30],[-16,-21],[-122,-89],[-32,-17],[-28,11],[-34,-4],[-70,47],[-12,17],[-45,39],[2,-20],[8,-11],[6,-17],[16,-20],[34,-105],[-27,-22],[-25,-25],[-63,-42],[-68,-70],[-25,-19],[-5,57],[3,17],[-39,27],[1,-19],[-4,-19],[-27,-74],[-8,-13],[-14,3],[-30,-14],[-30,7],[-26,33],[-11,18],[-47,-48],[-23,1],[-4,-40],[-22,-37],[-30,-16],[-41,1],[-25,-21],[-55,23],[-13,44],[44,60],[12,25],[-8,30],[11,39],[84,125],[57,63],[-3,12],[-77,13],[-68,22],[-66,8],[-29,-8],[46,-36],[66,-35],[-33,-34],[-27,-36],[-29,-97],[-19,-40],[-72,46],[-33,16],[21,-51],[63,-48],[4,-16],[0,-57],[-121,-50],[-125,-8],[-91,-14],[-152,-18],[-59,0],[-5,-19],[149,-89],[22,-16],[-21,-30],[-31,-19],[-48,-65],[-25,-23],[-63,-31],[-115,35],[-59,-16],[-57,11],[-1,-38],[17,-27],[17,-69],[38,6],[48,21],[38,-52],[24,-87],[43,-45],[19,-34],[8,-33],[-27,-32],[-55,-46],[-62,-8],[4,-36],[-27,-26],[-56,7],[-26,18],[-28,9],[-112,10],[113,-70],[40,-32],[18,19],[39,5],[58,-18],[-10,-118],[26,-95],[3,-21],[-62,-57],[-1,-54],[-36,-15],[-40,4],[-2,-59],[-27,-36],[5,-23],[8,-20],[-25,-38],[-22,-45],[-31,-39],[-17,4],[-50,-3],[-60,3],[-49,52],[-20,17],[-23,11],[9,-33],[14,-20],[45,-37],[82,-46],[-2,-33],[-22,-14],[-52,-89],[-18,-1],[-23,-23],[-72,7],[-30,9],[-88,-5],[-30,7],[-26,-3],[24,-25],[51,-23],[57,-23],[87,-17],[-3,-32],[-22,-27],[13,-39],[-10,-29],[-4,-34],[-20,-78],[23,-54],[26,-26],[-3,-35],[12,-55],[-38,-50],[-33,2],[-45,-11],[-16,-22],[73,-20],[-7,-38],[-19,-46],[-21,-100],[-42,-172],[-20,-171],[-91,-141],[-32,-3],[-8,-6],[-45,7],[-69,33],[-54,10],[-36,1],[-5,-16],[30,-27],[46,-10],[37,-18],[66,-16],[23,-31],[16,-33],[-3,-19],[0,-21],[12,-117],[-31,-40],[-24,-37],[-82,5],[-15,13],[-79,38],[5,-18],[57,-52],[20,-26],[-13,-5],[-23,-2],[-33,-18],[-58,10],[3,26],[11,27],[-27,-4],[-29,-14],[-18,5],[-14,-1],[-8,13],[-12,53],[14,27],[48,69],[15,37],[-13,16],[-34,-39],[-36,-63],[-16,-38],[-22,-8],[-55,20],[-158,88],[5,53],[-2,45],[46,5],[34,20],[30,23],[33,43],[31,71],[-4,6],[-90,-91],[-56,-30],[-27,-6],[-14,14],[-44,29],[-29,13],[-67,22],[-12,11],[-19,9],[-27,93],[35,113],[23,32],[15,38],[9,50],[-6,22],[-20,-8],[-9,-17],[1,-27],[-11,-18],[-80,-43],[-79,-35],[-38,-33],[-24,-26],[-19,-25],[-29,2],[-41,-5],[-27,-16],[-41,10],[-26,24],[-32,3],[-35,-12],[-25,1],[2,-16],[16,-41],[-27,-3],[-52,-1],[-26,11],[-20,16],[-17,22],[10,28],[83,52],[38,30],[-24,10],[-80,-9],[-14,7],[-53,-4],[2,77],[-13,19],[-1,9],[-18,21],[-18,6],[-11,7],[-90,18],[-12,43],[-6,44],[-17,55],[-43,14],[-24,24],[19,24],[8,31],[-20,14],[-13,22],[2,14],[-16,38],[-5,30],[18,27],[51,32],[17,13],[9,14],[58,23],[-50,16],[-31,3],[-23,-8],[-21,-31],[-19,-20],[-77,-7],[-11,11],[-5,43],[4,34],[32,47],[-37,23],[-33,8],[-39,22],[-35,23],[-30,27],[-29,31],[-10,4],[11,34],[6,27],[1,58],[-12,25],[26,50],[36,54],[78,82],[-83,-39],[-68,-86],[-15,-4],[-5,16],[-26,55],[-19,15],[-9,17],[-39,29],[-17,23],[-24,44],[-34,52],[-48,103],[-78,119],[-20,67],[25,84],[-27,58],[74,27],[106,31],[55,25],[32,7],[68,5],[22,25],[-37,-6],[-25,3],[-2,12],[9,21],[6,27],[-13,-5],[-66,-46],[-97,-37],[-76,-21],[-13,1],[-26,-13],[-16,-3],[-11,3],[-27,36],[-8,23],[49,63],[36,86],[48,56],[33,7],[57,-3],[20,-5],[-7,33],[3,16],[46,20],[53,8],[38,-6],[24,-39],[31,-72],[41,-24],[-2,34],[-21,45],[-8,68],[-27,29],[-22,14],[-61,-7],[-36,50],[-9,19],[0,24],[-37,72],[-12,36],[-19,47],[-10,3],[13,-60],[17,-42],[24,-93],[12,-38],[-16,-29],[-31,-30],[-27,-17],[-64,-21],[14,46],[8,45],[-32,-16],[-30,-33],[-10,-45],[-20,-41],[-57,-101],[-23,-56],[-21,-27],[-24,-8],[-21,22],[-18,51],[-9,41],[-1,104],[3,49],[-10,65],[-31,153],[-7,54],[-52,29],[-1,9],[-14,31],[-10,31],[9,12],[12,8],[78,46],[58,51],[70,80],[28,25],[102,19],[45,3],[-1,14],[-15,6],[-68,-4],[-92,-32],[-16,-12],[-40,-50],[-31,-27],[-87,-62],[-56,0],[-58,74],[-65,-14],[-44,5],[-13,11],[-10,102],[36,119],[-38,1],[-8,5],[-20,27],[-13,8],[9,14],[94,56],[141,111],[61,43],[37,19],[29,21],[34,47],[11,20],[20,16],[40,19],[44,28],[72,63],[9,23],[-15,5],[-34,-21],[-68,-58],[-49,-32],[-166,-145],[-71,-52],[-38,-34],[-30,-32],[-32,-23],[-33,-14],[-71,-10],[-35,-12],[-21,9],[-10,69],[7,40],[-3,40],[18,58],[26,40],[11,22],[5,16],[55,42],[30,18],[21,42],[121,15],[31,-1],[16,5],[13,13],[-12,9],[-36,7],[-97,-2],[-89,8],[-40,7],[-20,-4],[-32,12],[-35,23],[-55,86],[22,110],[2,53],[69,46],[37,15],[53,35],[71,59],[84,36],[43,7],[36,-6],[131,-51],[68,-10],[60,13],[75,-18],[132,-74],[25,11],[-7,18],[-148,78],[1,23],[38,6],[40,22],[-22,14],[-98,-12],[-29,-18],[-95,-10],[-49,16],[-45,8],[-67,33],[-56,-11],[-35,-13],[-62,-13],[-23,-8],[-122,-106],[-51,-22],[-37,7],[26,69],[7,27],[0,30],[11,40],[62,77],[40,84],[16,53],[31,6],[42,-8],[126,-34],[105,-40],[77,-11],[51,-1],[22,13],[17,22],[7,15],[5,32],[6,12],[17,13],[34,49],[11,34],[-11,20],[-24,-2],[-45,-13],[-6,-6],[1,-10],[-44,-54],[-47,-12],[-110,-18],[-50,-1],[-89,25],[-13,9],[-9,19],[-109,-5],[-33,-5],[-26,2],[13,32],[34,35],[48,114],[41,29],[80,27],[84,-4],[145,-88],[44,-8],[40,7],[96,30],[18,12],[34,36],[40,63],[-2,15],[-61,-35],[-33,-10],[-28,0],[26,115],[10,87],[9,22],[82,-7],[111,12],[26,19],[0,9],[-45,11],[-21,25],[-38,-8],[-50,-16],[-62,2],[5,37],[46,79],[5,36],[18,72],[1,37],[24,36],[72,25],[31,16],[1,16],[-43,64],[11,18],[34,16],[13,11],[-9,8],[-31,7],[-49,-14],[-53,-7],[-47,21],[-37,10],[-24,-3],[-63,-36],[-23,-1],[-27,10],[-183,31],[-22,11],[-65,54],[-54,36],[-72,39],[-93,30],[-114,20],[-68,19],[-34,27],[-58,59],[-44,50],[-8,24],[26,30],[26,22],[50,18],[85,-6],[46,-8],[50,-17],[38,-3],[79,4],[80,-10],[48,-12],[63,-25],[172,-106],[72,-37],[32,-4],[129,-39],[20,0],[53,19],[6,12],[-18,11],[-57,10],[-67,43],[-42,34],[-4,57],[5,32],[10,15],[8,48],[-39,29],[-27,9],[-72,43],[-6,10],[34,5],[34,-3],[73,-21],[38,-3],[28,8],[3,9],[-44,24],[-56,44],[-115,6],[-75,-5],[-48,15],[-51,24],[-32,7],[-67,-16],[-34,-1],[-31,5],[-30,76],[8,23],[24,10],[18,25],[12,26],[40,25],[217,56],[55,42],[-2,7],[-37,-8],[-48,-19],[-31,-4],[-128,24],[-20,-5],[-52,-35],[-70,-38],[-32,2],[-44,23],[-7,16],[-3,19],[48,26],[15,14],[31,38],[-2,18],[-52,-10],[-7,17],[1,30],[-5,37],[-13,37],[-43,57],[-18,14],[-15,21],[-33,77],[10,19],[29,14],[5,7],[-69,-12],[-7,-13],[13,-20],[9,-26],[6,-32],[9,-29],[25,-31],[20,-16],[33,-43],[14,-48],[-4,-25],[-26,-26],[-40,-27],[-13,-23],[-5,-23],[-32,-21],[-19,8],[-16,1],[18,-37],[12,-39],[-14,-38],[-38,-24],[-20,0],[-41,-19],[-103,-10],[-36,4],[-66,20],[-78,10],[-31,26],[-40,47],[-21,42],[0,38],[11,27],[22,17],[27,109],[38,88],[96,91],[27,33],[9,17],[0,14],[-15,8],[-118,-112],[-73,-12],[-21,25],[6,45],[13,11],[59,-5],[23,25],[-37,38],[-39,10],[-9,9],[40,29],[93,-2],[21,20],[34,22],[37,40],[14,34],[3,29],[-8,23],[-1,23],[7,24],[-10,26],[-26,28],[-57,28],[-17,-31],[-18,-13],[-25,-3],[-24,13],[-24,5],[-24,12],[-24,3],[-10,10],[-6,26],[-1,34],[28,16],[39,13],[26,23],[17,34],[3,38],[-12,40],[-32,37],[-58,-36],[-23,-9],[-6,26],[-8,19],[-24,25],[-33,18],[-31,13],[-1,19],[7,21],[14,24],[18,52],[20,-5],[16,5],[-9,42],[-16,36],[-19,20],[-1,9],[-4,10],[-14,25],[-16,19],[-29,52],[-20,19],[-26,11],[-28,0],[-45,-13],[-83,-16],[-66,-8],[-11,4],[33,20],[49,21],[64,14],[19,34],[-7,29],[2,28],[-17,30],[17,16],[58,16],[27,3],[26,21],[-74,50],[-77,33],[-20,14],[-17,22],[-15,30],[-24,31],[-33,31],[-48,30],[-125,54],[-42,38],[-40,57],[-19,25],[-21,18],[-87,43],[-10,18],[89,50],[9,20],[-36,61],[-38,44],[-41,16],[-60,8],[-56,20],[-50,31],[-51,23],[-76,22],[-126,56],[-195,59],[-87,35],[-52,13],[-68,3],[-132,33],[-111,10],[-69,-4],[-22,5],[-51,33],[-79,19],[-41,-7],[-51,-36],[-62,-35],[-32,-4],[-49,32],[-24,22],[-23,8],[-23,-8],[-43,-29],[-41,-21],[-61,-25],[-49,-12],[-63,-3],[-16,-9],[-24,-1],[-32,8],[-31,17],[-28,24],[-25,14],[-22,2],[-50,-13],[-63,-37],[-29,-9],[-24,3],[-30,12],[-59,30],[-33,-3],[-24,-10],[6,-25],[56,-59],[50,-42],[-42,-5],[-368,57],[-46,14],[-68,34],[-56,21],[-96,54],[-74,30],[-24,22],[-6,16],[23,22],[149,72],[56,14],[116,18],[27,11],[9,8],[-30,16],[-151,-6],[-135,11],[-117,28],[-21,10],[-19,17],[-20,26],[5,28],[28,32],[16,22],[5,11],[-147,-77],[-60,-28],[-48,9],[-34,13],[-16,14],[1,16],[5,11],[10,7],[-78,33],[-35,25],[-4,26],[28,27],[27,19],[27,12],[72,11],[263,20],[188,-19],[64,64],[43,21],[127,21],[195,3],[138,-12],[64,-15],[88,-33],[5,10],[-21,30],[-2,25],[36,43],[16,27],[-11,29],[-38,29],[-69,38],[-36,3],[-41,-9],[-49,-21],[-102,-53],[-49,-11],[-80,-3],[-44,7],[-43,8],[-67,28],[-25,5],[-29,-12],[-35,-30],[-34,-21],[-32,-12],[-30,-5],[-43,2],[-173,47],[-40,21],[-2,31],[-53,30],[-60,5],[-8,11],[77,46],[57,19],[-10,6],[-82,1],[-56,-25],[-32,-4],[-74,-1],[-77,13],[-33,11],[-34,25],[-38,14],[-115,21],[-26,12],[-25,19],[-94,55],[-57,40],[-8,22],[66,49],[3,12],[-28,21],[-12,15],[10,22],[57,47],[22,13],[103,28],[104,40],[37,9],[34,3],[136,-3],[42,10],[36,20],[58,20],[123,30],[272,46],[18,6],[1,8],[-24,24],[-5,12],[55,21],[126,33],[86,16],[55,2],[45,7],[63,21],[35,4],[214,8],[95,-12],[46,1],[30,8],[40,24],[74,59],[38,36],[37,56],[48,88],[35,85],[24,83],[18,51],[13,18],[44,23],[47,18],[79,16],[-7,7],[-34,12],[-31,5],[-29,-3],[-53,-18],[-69,-13],[-67,2],[-48,-5],[-44,-17],[-71,-14],[-48,3],[-86,25],[-43,5],[-110,-3],[-32,10],[-28,17],[-23,25],[-16,32],[2,34],[40,60],[15,16],[107,68],[66,31],[66,24],[48,13],[45,7],[43,14],[80,47],[82,40],[102,75],[50,20],[173,32],[47,1],[40,-9],[38,-16],[106,-74],[9,2],[-19,28],[-39,84],[7,34],[61,37],[25,6],[64,-2],[103,-11],[70,-13],[52,-20],[63,-13],[32,1],[23,9],[33,32],[43,54],[17,66],[-8,78],[-13,58],[-16,36],[9,30],[52,36],[48,26],[114,38],[92,9],[55,-2],[72,-18],[100,-10],[91,-34],[146,-78],[97,-39],[81,-18],[79,-29],[117,-64],[62,-27],[36,-10],[32,-1],[-12,18],[-56,37],[-85,42],[-191,75],[-104,53],[-94,60],[-69,36],[-126,35],[2,14],[151,50],[278,44],[313,33],[105,-3],[184,14],[18,22],[39,9],[172,30],[49,0],[76,-15],[80,-27],[37,-24],[51,-42],[25,-59],[-4,-186],[1,-36],[10,-13],[35,20],[42,38],[37,26],[29,41],[20,56],[12,41],[-49,46],[-2,76],[24,41],[69,0],[284,-140],[111,-31],[127,-75],[149,8],[137,-9],[60,3],[30,11],[-42,32],[-195,85],[-88,67],[-62,84],[-15,45],[47,8],[217,-1],[327,-39],[418,-133],[205,-45],[369,-154],[111,-23],[45,-5],[34,19],[21,21],[1,27],[-18,35],[-10,39],[-3,46],[25,89],[60,30],[26,33],[-24,59],[-70,41],[-271,105],[-1,13],[55,14],[81,8],[671,-25],[116,-10],[50,-9],[21,-11],[28,-6],[144,15],[-3,26],[-18,16],[-779,45],[-145,16],[-74,1],[-77,-12],[-158,-6],[-73,2],[-95,54],[86,64],[72,-1],[137,-25],[82,35],[129,29],[128,10],[278,63],[52,5],[65,-3],[143,-16],[57,-15],[65,-33],[38,-10],[45,-2],[61,-15],[89,48],[81,52],[92,33],[131,-19],[83,-25],[75,-30],[107,-16],[182,-102],[34,0],[16,8],[17,19],[6,28],[22,38],[-16,14],[-152,42],[-29,17],[-29,26],[0,22],[28,18],[30,8],[98,-8],[32,6],[31,15],[37,27],[29,7],[66,1],[101,-18],[88,-1],[32,8],[5,17],[8,11],[10,5],[321,1],[79,4],[63,13],[76,2],[66,-8],[83,-17],[81,1],[122,27],[115,13],[634,-4],[208,-16]],[[0,42344],[99999,-29],[-4,-1],[0,11],[-99995,19]],[[0,42538],[9,15],[6,0],[-3,-13],[-12,-11],[0,9]],[[26147,61325],[-21,-33],[-4,15],[10,31],[13,17],[12,-1],[-3,-14],[-7,-15]],[[57056,73397],[-27,-3],[2,44],[10,11],[31,-22],[-1,-14],[-15,-16]],[[96376,51545],[-5,-20],[-6,3],[-3,13],[2,14],[7,6],[5,-5],[0,-11]],[[97120,55201],[-6,-17],[-6,1],[6,13],[4,18],[6,51],[14,19],[10,21],[-3,-22],[-15,-23],[-10,-61]],[[98046,53645],[-17,-19],[-6,3],[21,27],[0,-3],[2,-8]],[[98011,53600],[-20,-22],[-6,12],[8,0],[14,22],[16,1],[-2,-11],[-10,-2]],[[98060,52906],[1,-14],[-16,37],[-9,23],[0,10],[5,-6],[5,-12],[3,-9],[11,-29]],[[98063,52832],[-10,-3],[7,9],[2,11],[-1,36],[4,-3],[1,-15],[1,-21],[-4,-14]],[[98064,52426],[15,-23],[-2,-15],[-5,-18],[-20,-46],[-6,4],[19,42],[8,27],[-11,21],[-5,-5],[-1,0],[-4,20],[4,0],[8,-7]],[[98474,51381],[-9,-16],[-4,14],[5,18],[-8,73],[-12,10],[-8,22],[4,0],[12,-20],[10,-9],[6,-48],[4,-44]],[[98547,51145],[2,-30],[-7,4],[-2,11],[-2,30],[-7,30],[8,-8],[6,-23],[2,-14]],[[96896,56053],[-4,-9],[-27,5],[-12,11],[1,9],[22,-8],[20,-8]],[[97659,55903],[11,-13],[20,1],[19,-32],[-7,2],[-10,14],[-10,6],[-12,-2],[-6,5],[-5,19]],[[97527,55955],[35,-30],[46,14],[-7,-9],[-17,-8],[-12,-8],[-8,0],[-9,3],[-29,21],[-17,27],[4,9],[14,-19]],[[543,43595],[-16,-4],[-16,7],[-9,33],[4,14],[10,-7],[10,-24],[17,-11],[0,-8]],[[10886,41557],[2,-11],[-11,1],[-3,4],[1,20],[7,25],[6,21],[11,20],[21,19],[11,8],[3,-5],[-4,-2],[-35,-41],[-10,-29],[-5,-20],[1,-6],[5,-4]],[[12140,41160],[-5,-12],[-1,12],[-7,6],[-11,12],[-15,14],[-8,3],[-4,8],[6,4],[9,-6],[12,-13],[15,-13],[9,-15]],[[11952,41277],[0,-11],[-26,55],[10,-4],[16,-40]],[[11526,39828],[-8,-11],[3,15],[-6,32],[-6,5],[6,9],[9,-25],[2,-25]],[[10921,41255],[3,-21],[-6,10],[-22,20],[-2,17],[27,-26]],[[10880,41365],[2,-16],[-10,11],[-10,29],[-17,36],[-4,15],[13,-14],[9,-21],[17,-40]],[[10413,42571],[-5,-7],[7,46],[7,6],[-9,-45]],[[10155,42269],[15,-28],[-20,19],[-25,8],[9,5],[15,0],[6,-4]],[[10119,42260],[-11,-3],[-27,34],[11,0],[15,-21],[12,-10]],[[9708,42709],[-2,-26],[-5,25],[-17,40],[-7,18],[8,-3],[23,-54]],[[9587,42436],[1,-10],[-6,1],[-10,29],[-4,25],[-6,29],[-9,21],[-1,19],[0,30],[10,-46],[9,-37],[8,-31],[8,-30]],[[98065,52616],[-7,-2],[5,11],[31,13],[3,4],[5,-7],[0,-7],[-2,-3],[-16,-1],[-12,-6],[-7,-2]],[[2846,84466],[36,-11],[21,7],[18,-6],[3,-13],[-31,-30],[-13,2],[-37,36],[3,15]],[[29815,63385],[12,-13],[-5,-17],[-28,10],[-29,19],[-9,-5],[-6,2],[-17,18],[15,14],[15,4],[17,-1],[35,-31]],[[56812,73228],[-11,-9],[-17,13],[5,32],[11,13],[13,-10],[2,-14],[-3,-25]],[[89496,67175],[-5,-1],[-18,61],[5,3],[10,-9],[12,-36],[-4,-18]],[[86365,73432],[-13,-18],[-15,18],[-2,18],[8,15],[18,10],[9,-14],[-5,-29]],[[0,0],[99608,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-391,0],[-390,0],[-391,0],[-390,0],[-391,0]],[[0,3253],[447,8],[89,-8],[94,-25],[207,-2],[194,-11],[50,-33],[65,-20],[137,17],[110,9],[89,1],[823,-46],[843,-81],[172,-26],[154,-61],[162,9],[957,-47],[148,0],[586,-50],[1026,-114],[89,-4],[97,3],[-51,62],[-96,56],[-129,40],[84,12],[184,1],[-37,29],[-101,16],[-366,19],[-1463,144],[-32,9],[-21,12],[-38,13],[-60,14],[-223,8],[-61,13],[-29,16],[15,7],[17,-3],[340,13],[38,16],[2,11],[-18,8],[-59,10],[-137,48],[-44,21],[23,33],[28,14],[105,11],[31,22],[-20,40],[-241,80],[-162,29],[-107,-20],[-203,-1],[-251,-10],[-68,11],[-70,32],[-82,57],[-42,15],[-80,47],[-106,46],[-561,111],[-98,30],[-702,175],[-29,30],[-18,32],[324,-71],[61,0],[72,18],[55,-5],[75,18],[84,9],[219,-55],[442,-89],[118,-31],[63,-22],[52,-7],[51,-16],[63,9],[38,-8],[92,5],[419,10],[166,-8],[195,-43],[75,-71],[56,-32],[107,25],[90,30],[173,25],[56,-10],[93,-37],[105,-62],[445,17],[187,-3],[133,-28],[485,93],[75,20],[111,65],[-91,20],[-65,7],[-25,33],[44,13],[140,18],[272,28],[161,27],[86,70],[369,109],[117,48],[108,79],[-242,157],[-232,136],[74,42],[73,33],[35,26],[29,37],[-76,45],[-71,33],[-117,32],[-440,77],[-150,33],[60,51],[80,39],[169,17],[1079,60],[1087,74],[27,37],[-144,44],[-123,11],[-45,13],[-17,28],[-1,38],[-14,6],[-46,4],[-196,44],[-41,17],[-65,41],[-17,32],[39,82],[60,35],[104,19],[75,7],[225,-1],[88,10],[37,11],[-7,39],[-25,18],[-1,24],[38,14],[47,-1],[13,29],[-26,47],[-67,25],[-176,43],[-400,65],[-155,49],[-89,38],[-74,44],[-75,21],[-52,23],[11,28],[-24,44],[-29,8],[-127,-19],[-227,10],[-278,41],[-192,47],[-251,127],[-99,63],[73,44],[80,28],[334,65],[50,22],[68,58],[-112,24],[-95,-2],[-84,16],[-342,4],[-193,-8],[-162,72],[-121,71],[-34,36],[-26,64],[41,94],[34,67],[-4,83],[9,113],[58,38],[45,7],[105,-87],[90,-7],[131,17],[83,45],[44,17],[81,4],[156,-20],[71,8],[80,-4],[251,-58],[55,-27],[30,-21],[9,-30],[31,-31],[107,-15],[299,17],[78,-7],[212,-85],[180,-91],[62,-23],[102,-15],[36,13],[31,34],[97,42],[218,52],[52,52],[-29,28],[-84,30],[-51,10],[-28,34],[2,47],[17,45],[57,11],[104,-61],[130,-57],[45,-8],[35,2],[65,20],[78,15],[149,-122],[88,-8],[110,-1],[21,19],[-13,32],[-18,35],[-23,5],[-3,32],[48,30],[33,13],[-13,22],[-53,33],[-31,6],[-28,14],[9,23],[35,10],[49,34],[-15,39],[2,51],[-20,27],[-116,53],[-169,87],[-157,39],[-350,-31],[-124,20],[-81,23],[-88,30],[103,32],[108,22],[32,20],[41,40],[48,29],[39,8],[128,-15],[289,-108],[61,-12],[198,-49],[55,-3],[68,11],[-55,48],[-61,34],[-145,96],[16,46],[94,76],[245,6],[107,27],[139,58],[179,96],[154,12],[192,30],[65,-22],[164,-93],[103,-32],[35,-3],[37,3],[-97,116],[63,14],[80,13],[66,29],[49,24],[168,111],[150,31],[426,48],[146,-44],[123,-5],[27,13],[25,59],[65,115],[55,41],[185,43],[145,-2],[104,-47],[97,-31],[89,-14],[90,1],[134,27],[178,9],[83,14],[96,-26],[236,-9],[183,-37],[113,0],[153,36],[83,5],[299,58],[234,12],[177,-26],[286,16],[290,-12],[117,-21],[652,13],[518,55],[71,19],[111,60],[61,55],[41,17],[87,6],[149,-12],[205,-41],[176,15],[337,-23],[32,19],[32,104],[55,165],[47,49],[77,-13],[233,-94],[5,-40],[-24,-29],[-38,-11],[-11,-80],[31,-23],[52,7],[33,-35],[-73,-60],[-52,-34],[-33,-15],[-23,-115],[-31,-38],[-4,-42],[50,0],[50,18],[44,4],[140,30],[255,35],[84,17],[48,6],[31,23],[-43,57],[-14,47],[26,39],[-7,67],[-24,68],[49,50],[46,-11],[79,8],[45,-25],[69,-22],[66,-11],[63,-45],[21,-98],[-19,-100],[-65,-73],[-121,-66],[-137,-105],[29,-50],[71,17],[309,-5],[199,8],[125,-12],[158,-27],[125,-39],[149,-8],[93,15],[87,-20],[339,84],[138,48],[79,-24],[128,20],[71,-18],[133,30],[84,3],[97,-12],[296,-6],[22,-55],[90,-83],[73,-32],[93,14],[67,25],[106,-9],[153,35],[153,-11],[64,6],[29,23],[25,51],[-47,28],[-134,36],[-123,74],[-55,16],[-88,-9],[-41,13],[-44,24],[57,29],[70,93],[-29,84],[-33,18],[-81,-3],[-98,-30],[-39,21],[-64,11],[-25,78],[-68,146],[-36,42],[-108,38],[-93,19],[-90,24],[-27,58],[17,79],[108,17],[104,-8],[58,-15],[67,-6],[77,-16],[50,-23],[40,-13],[75,0],[260,21],[35,15],[31,28],[55,7],[51,-4],[74,17],[-85,23],[-91,44],[-137,53],[-115,29],[-209,20],[-107,-7],[-67,11],[-239,-6],[-65,21],[-46,58],[-65,138],[-18,72],[44,27],[29,30],[71,3],[103,-12],[34,-14],[25,-43],[-25,-44],[-33,-23],[20,-21],[105,-6],[52,-13],[45,-5],[97,20],[142,8],[71,-20],[85,-15],[125,24],[445,-13],[54,-6],[54,-40],[46,-24],[49,10],[145,-46],[77,-36],[79,-18],[67,-5],[75,9],[98,30],[81,12],[58,-11],[123,-6],[94,-36],[73,15],[77,41],[244,29],[163,-8],[298,-74],[69,-7],[136,44],[44,72],[-6,81],[39,19],[33,-9],[60,56],[82,-5],[51,-10],[31,36],[28,77],[97,6],[70,-12],[92,-49],[0,-41],[-38,-43],[-63,-107],[39,-63],[59,6],[75,-13],[91,27],[58,1],[101,-93],[68,-5],[53,5],[172,84],[50,9],[61,-38],[89,-89],[78,-51],[114,-32],[99,-9],[116,-42],[64,-35],[146,0],[62,-15],[176,-72],[160,36],[83,33],[40,61],[-20,91],[-7,92],[24,38],[42,7],[191,-103],[-12,62],[-16,47],[-49,82],[7,61],[41,19],[80,-32],[96,-16],[79,-36],[155,-128],[50,-112],[105,-28],[73,5],[83,18],[111,16],[86,-5],[79,21],[24,-61],[-74,-88],[-29,-57],[24,-15],[45,13],[37,18],[129,-9],[104,40],[89,14],[84,42],[69,-4],[53,-7],[72,-33],[69,18],[41,-7],[56,-2],[297,145],[67,-3],[85,9],[107,34],[83,15],[68,-1],[121,53],[193,-7],[98,28],[191,32],[128,37],[228,98],[92,58],[100,129],[63,129],[70,171],[-34,111],[-37,49],[-31,54],[-73,111],[-20,139],[7,131],[-26,123],[-26,91],[-54,152],[-66,99],[-77,133],[0,121],[-19,95],[-46,68],[-20,54],[36,11],[33,17],[89,21],[213,-37],[19,54],[54,40],[38,50],[-13,77],[-47,31],[-56,65],[26,52],[45,0],[22,57],[-17,56],[21,70],[41,90],[28,33],[-51,54],[-48,70],[12,54],[24,57],[29,80],[40,57],[26,20],[-7,19],[-61,20],[-56,4],[-101,-36],[-16,7],[-5,19],[-6,39],[10,95],[16,90],[14,13],[40,11],[38,69],[35,4],[22,-23],[7,-91],[12,-21],[-4,-44],[18,-15],[22,28],[41,14],[16,-31],[15,-15],[7,26],[-5,74],[-7,30],[-5,48],[9,23],[10,37],[-17,78],[6,29],[37,47],[18,9],[35,0],[63,-31],[30,-2],[22,14],[14,30],[11,98],[-27,35],[0,31],[16,20],[28,68],[42,4],[41,-6],[40,13],[-14,28],[-12,43],[45,21],[29,6],[77,-27],[30,-15],[28,35],[-9,34],[-30,19],[-5,30],[7,39],[48,-20],[11,8],[13,34],[-8,17],[-6,22],[63,5],[9,9],[13,27],[19,9],[56,-1],[12,14],[6,30],[-31,7],[-39,29],[-6,80],[9,57],[35,50],[42,34],[78,-30],[60,7],[24,-30],[33,-8],[8,34],[-15,30],[-10,49],[96,59],[31,-10],[38,14],[-14,45],[21,57],[27,8],[19,-50],[26,-10],[29,12],[71,58],[35,9],[35,3],[36,34],[9,40],[20,28],[62,38],[25,27],[55,95],[-10,24],[16,20],[163,86],[80,8],[133,52],[81,61],[51,25],[45,68],[55,11],[128,47],[96,77],[133,53],[62,-5],[25,-16],[16,-63],[26,-77],[40,-38],[-15,-34],[-38,4],[-41,-8],[-9,38],[15,28],[-15,25],[-37,-6],[-49,-13],[-33,-19],[-43,-41],[-34,-23],[-113,-61],[-74,-88],[-53,-93],[-32,-63],[-47,-5],[-11,-23],[19,-18],[15,-8],[35,-7],[-6,-27],[-24,-7],[3,-22],[25,-32],[5,-46],[-29,-7],[-44,49],[-50,5],[-39,23],[-25,33],[-24,-7],[-18,-47],[11,-52],[-21,-31],[-24,14],[-9,62],[-23,11],[-32,1],[-77,-67],[-28,-2],[-14,-34],[-45,-38],[-29,-31],[-71,-102],[-40,-43],[-76,-24],[-30,3],[-18,10],[-27,7],[-28,1],[-9,-27],[44,-88],[-24,-30],[-53,2],[-26,25],[-21,-24],[-17,-23],[-17,-34],[26,-72],[41,-32],[30,-6],[11,-27],[-65,-11],[-44,-63],[-20,-44],[-23,-38],[3,-44],[34,-66],[46,-47],[46,-4],[60,15],[14,13],[59,7],[26,46],[19,3],[17,-8],[27,-2],[15,30],[20,11],[28,-8],[54,1],[15,-27],[-17,-30],[-33,-42],[-31,23],[-27,-4],[-15,-22],[29,-47],[-11,-42],[-24,-42],[-29,27],[-4,45],[-40,27],[-39,12],[-26,-47],[-41,-13],[-6,-54],[-17,-50],[-24,15],[-9,62],[-67,50],[-35,7],[-70,-13],[-24,1],[-28,-11],[-20,-42],[29,-31],[10,-42],[-1,-31],[-6,-12],[-5,-26],[32,-37],[1,-50],[-25,1],[-21,15],[-81,130],[-51,58],[-22,51],[-53,12],[-38,1],[-46,-21],[18,-24],[9,-36],[-28,-15],[-35,-56],[-23,-48],[-14,-10],[-18,-28],[75,-61],[11,-24],[4,-41],[-24,-22],[-56,-9],[-99,43],[-43,1],[-15,30],[-22,-4],[-13,-51],[-16,-45],[-24,-30],[7,-46],[19,-11],[-15,-19],[-31,-15],[-21,-18],[46,-17],[9,-15],[2,-22],[-72,-16],[-47,-4],[-28,18],[-26,-9],[-17,-29],[-5,-39],[5,-48],[9,-34],[7,-13],[8,-29],[-43,-74],[-5,-16],[-3,-34],[21,-31],[16,-46],[-23,-23],[-25,-47],[26,-9],[44,-2],[48,6],[72,41],[20,7],[9,-16],[6,-25],[-18,-24],[-130,-68],[-24,-29],[33,-16],[67,-3],[26,-22],[-16,-24],[-24,-23],[-28,-54],[23,-20],[72,-32],[131,-42],[97,-14],[-22,49],[-3,60],[68,49],[35,16],[162,29],[44,-1],[34,-13],[-13,-25],[-37,9],[-65,-16],[-100,-54],[-18,-23],[7,-42],[85,-34],[27,-27],[-37,-81],[6,-52],[43,-57],[57,-65],[28,-43],[43,-25],[70,-61],[38,-61],[12,-140],[57,-116],[67,-53],[8,-46],[-22,-46],[-57,27],[-32,-27],[-12,-49],[40,-34],[64,-42],[138,4],[4,-46],[-32,-27],[-25,-34],[-31,-19],[-52,-12],[-13,-41],[22,-58],[72,26],[53,3],[55,-10],[17,-77],[65,-95],[16,-45],[-12,-43],[-40,-13],[-25,-34],[-36,-29],[-41,-16],[-76,-79],[-33,-8],[-14,-16],[65,-8],[45,-2],[97,64],[37,-14],[24,-42],[12,-49],[-24,-42],[-169,-25],[-82,-23],[-88,-66],[101,-31],[74,11],[37,-12],[51,-23],[56,12],[44,24],[33,-1],[31,-12],[4,-41],[4,-72],[7,-54],[-18,-36],[-88,-26],[-64,1],[-2,-76],[96,-57],[60,30],[53,-15],[0,-91],[41,-101],[36,-6],[30,46],[38,0],[15,-54],[-17,-91],[-29,-50],[-78,21],[-44,16],[-35,-34],[-58,-29],[-51,-4],[-45,45],[-52,34],[-83,17],[-78,8],[26,-39],[35,-23],[14,-69],[28,-72],[65,19],[90,-41],[56,-43],[24,-57],[-31,-91],[-51,-34],[-32,-16],[-56,35],[-39,0],[-41,-16],[-14,-42],[-27,-20],[144,-3],[45,-11],[33,-38],[-52,-50],[-95,8],[-41,-19],[-35,-36],[142,-22],[59,12],[93,38],[22,-38],[-37,-38],[-48,-61],[-100,-19],[-75,-1],[-98,22],[-26,13],[-41,7],[3,-37],[26,-26],[66,-94],[11,-36],[-21,-50],[-58,-37],[-65,-14],[-54,32],[-39,91],[-50,27],[-51,8],[-30,-4],[3,-46],[12,-49],[-20,-35],[-44,18],[-57,-16],[-53,-27],[-48,-30],[98,-14],[65,-3],[46,-46],[-17,-23],[-88,-10],[-86,-20],[-117,-50],[86,-21],[81,1],[57,-5],[47,-9],[13,-27],[-29,-30],[-192,-74],[-201,-91],[-74,-29],[-77,-16],[-179,-78],[-113,-36],[-318,-55],[-497,-139],[-169,-99],[-50,-76],[-32,-11],[-95,-26],[-95,-12],[-251,-8],[-257,37],[-208,8],[-113,-12],[-386,66],[-49,-3],[-60,-12],[-48,0],[-36,9],[-78,4],[-263,-26],[-27,-41],[33,-76],[96,-92],[160,-162],[86,-35],[53,-37],[100,-43],[224,-2],[306,-34],[174,-31],[-6,-60],[-105,-115],[-65,-44],[-155,-80],[-213,-40],[-163,12],[-289,65],[-362,60],[-538,57],[-118,26],[-139,26],[-79,-27],[-60,-25],[-133,-2],[39,-23],[537,-155],[458,-113],[54,-29],[65,-20],[-6,-72],[-26,-57],[-90,-50],[-234,-3],[-293,-40],[-146,-1],[-145,39],[-309,113],[-189,84],[-132,96],[-91,76],[-102,75],[7,-47],[18,-47],[50,-58],[73,-63],[5,-25],[-35,-4],[-53,30],[-45,-28],[-16,-33],[19,-44],[28,-42],[93,-94],[80,-25],[106,-57],[258,-106],[44,-36],[78,-78],[16,-59],[76,-58],[52,-9],[47,2],[16,50],[-3,61],[20,15],[74,15],[193,-21],[821,-12],[78,-35],[31,-45],[21,-93],[-87,-112],[-59,-48],[-97,-29],[-88,-23],[-133,-9],[-275,8],[-269,0],[209,-54],[203,-44],[282,8],[112,12],[97,21],[41,-37],[77,-78],[45,-25],[31,-26],[43,-85],[17,-50],[42,-58],[30,-49],[44,-33],[75,-15],[82,28],[159,13],[154,-45],[99,-14],[132,37],[105,52],[221,47],[41,20],[60,16],[91,-4],[36,-12],[46,-51],[43,-70],[63,-35],[67,-25],[38,-3],[126,-22],[164,21],[73,-21],[12,-40],[39,-32],[49,-11],[665,-180],[229,-35],[353,-18],[274,-2],[38,-11],[53,-35],[-105,-24],[-112,-3],[-169,9],[-60,-5],[-129,10],[-67,-7],[-61,11],[-91,-25],[-166,-19],[37,-27],[62,-6],[126,-10],[172,5],[15,-43],[-158,-10],[-336,-9],[-35,-7],[-26,-22],[50,-11],[31,-12],[16,-31],[-36,-79],[56,-55],[39,-9],[41,8],[71,-22],[69,-30],[146,-2],[173,40],[85,-1],[228,25],[207,-4],[289,48],[48,-1],[44,-6],[-80,-44],[-355,-110],[-127,-21],[-51,-14],[29,-54],[46,-56],[94,-60],[59,-89],[57,-19],[110,41],[27,-31],[5,-61],[-29,-49],[-37,-28],[-26,-27],[-17,-36],[46,-31],[123,-19],[163,-7],[151,-1],[93,-9],[341,194],[137,94],[67,39],[56,29],[288,119],[67,36],[76,53],[141,8],[193,86],[171,66],[68,13],[51,5],[60,14],[150,-5],[107,11],[190,42],[145,27],[154,23],[174,4],[463,44],[132,-19],[146,-46],[95,1],[125,14],[86,18],[39,-53],[20,-69],[-42,-64],[-70,-40],[-19,-66],[95,-33],[108,10],[206,32],[164,42],[45,28],[64,-8],[109,35],[136,146],[171,147],[144,94],[93,110],[77,63],[86,48],[58,24],[132,5],[189,76],[275,87],[211,-42],[223,-63],[110,51],[87,9],[74,23],[74,17],[53,45],[71,38],[54,55],[271,27],[284,36],[38,13],[37,-7],[98,10],[125,30],[172,10],[90,-3],[82,81],[164,17],[175,32],[73,24],[57,6],[1413,63],[61,31],[124,25],[47,61],[-190,25],[-58,26],[-65,7],[-38,-9],[-164,7],[-1303,94],[-27,8],[-45,57],[9,105],[-39,81],[-91,22],[-94,-2],[-119,-10],[-314,-44],[-125,-4],[-335,68],[-221,77],[-145,25],[-104,52],[-97,40],[-7,91],[23,85],[187,246],[117,118],[78,9],[71,53],[73,119],[59,56],[135,66],[59,17],[212,81],[58,2],[95,-13],[108,73],[329,156],[75,59],[91,35],[266,132],[238,64],[118,19],[144,39],[160,59],[139,57],[497,109],[298,29],[203,32],[144,-19],[143,6],[123,29],[57,23],[83,59],[276,-28],[178,40],[74,4],[78,18],[-31,21],[-28,3],[-28,28],[-37,58],[37,73],[28,36],[82,45],[43,64],[40,94],[135,185],[38,26],[86,8],[73,-5],[83,2],[210,-48],[39,19],[67,54],[56,68],[120,100],[23,30],[-10,49],[-180,-21],[-136,-33],[-131,18],[-17,28],[28,21],[49,8],[19,34],[-45,28],[-81,16],[-36,21],[3,51],[20,75],[44,21],[36,31],[96,105],[57,32],[164,29],[190,-44],[44,12],[46,59],[-47,90],[-36,34],[0,30],[100,-14],[93,-20],[109,4],[129,90],[181,75],[88,31],[78,18],[42,76],[62,144],[46,75],[-1,45],[-14,38],[-47,-11],[-43,-5],[-101,38],[-125,61],[-38,68],[-18,61],[39,33],[38,20],[41,5],[73,-25],[93,-62],[46,-24],[53,-46],[40,4],[47,64],[38,85],[32,26],[49,28],[54,41],[-24,40],[-58,21],[-8,24],[25,27],[47,6],[59,-59],[80,-39],[55,-13],[47,-32],[74,-108],[89,-179],[41,-2],[78,16],[84,7],[56,51],[12,128],[22,58],[-8,59],[-38,60],[-33,44],[6,33],[28,24],[37,8],[64,24],[99,-28],[54,-5],[81,16],[84,35],[86,25],[67,-19],[29,-64],[-33,-65],[-54,-48],[-49,-59],[-13,-64],[2,-35],[47,-9],[416,8],[55,-6],[72,0],[78,-21],[132,8],[118,23],[56,0],[97,-21],[69,-44],[143,13],[40,14],[39,59],[41,11],[48,-48],[15,-110],[22,-52],[61,-47],[60,40],[39,48],[94,93],[107,71],[82,42],[200,70],[99,44],[194,60],[250,32],[446,108],[147,12],[240,28],[123,30],[125,23],[77,80],[175,-61],[60,-7],[82,48],[90,119],[131,-49],[75,-77],[93,-60],[208,-104],[66,-24],[138,-21],[37,17],[65,69],[67,100],[42,42],[61,35],[69,55],[-18,30],[-39,10],[-36,16],[9,29],[122,7],[64,-101],[66,-33],[80,-33],[186,26],[159,2],[138,-20],[68,3],[61,76],[99,28],[56,-34],[35,-112],[127,-31],[266,-51],[30,13],[33,59],[23,72],[54,12],[69,39],[37,-6],[52,-47],[-18,-114],[-29,-105],[35,-85],[31,-47],[40,-8],[67,-2],[82,6],[51,-4],[261,42],[32,94],[42,107],[103,136],[40,-10],[31,-14],[70,-67],[42,-34],[9,-49],[-46,-47],[13,-31],[46,-25],[148,-41],[48,8],[71,43],[72,85],[39,98],[61,-5],[59,-20],[41,-51],[0,-97],[57,-66],[46,-42],[120,-45],[128,-11],[90,-27],[146,10],[71,30],[46,8],[80,24],[84,57],[52,23],[192,52],[145,57],[154,102],[150,61],[230,31],[64,13],[88,-1],[217,73],[82,42],[46,15],[52,52],[28,102],[22,63],[-4,61],[-20,80],[-46,71],[-47,104],[21,119],[37,49],[96,54],[95,11],[108,-7],[94,-11],[8,-51],[-41,-55],[-52,-54],[-31,-23],[11,-46],[68,-7],[149,10],[43,-42],[106,-184],[26,-87],[37,-25],[58,12],[125,-1],[87,13],[71,1],[37,-9],[38,-42],[72,-49],[72,36],[52,17],[63,-4],[99,-57],[99,-133],[107,-67],[7,43],[-14,53],[44,47],[53,79],[77,103],[61,105],[15,145],[29,119],[49,57],[48,37],[75,38],[92,8],[88,86],[62,35],[130,47],[163,47],[114,131],[39,16],[58,21],[107,8],[173,42],[54,6],[91,33],[80,78],[58,22],[104,-3],[88,44],[74,2],[68,22],[10,49],[-32,33],[-1,43],[38,56],[30,21],[90,-4],[75,-48],[55,-2],[14,-27],[-48,-34],[-32,-61],[55,-53],[49,-36],[59,7],[71,32],[70,-23],[31,-49],[0,-76],[15,-41],[49,36],[27,76],[-8,97],[3,60],[117,97],[46,73],[-82,15],[-58,-10],[-32,27],[-37,73],[101,61],[116,-2],[67,-52],[144,-83],[80,2],[72,-13],[15,26],[-27,122],[3,68],[-60,38],[-17,87],[25,91],[71,51],[97,24],[208,140],[55,30],[137,29],[160,14],[199,50],[355,-34],[95,-21],[59,-28],[57,-45],[74,-74],[107,-94],[139,-30],[39,-29],[51,-80],[-55,-52],[-45,-5],[-87,31],[-60,32],[-42,-13],[41,-55],[45,-34],[7,-46],[-24,-66],[-164,-130],[98,-37],[59,30],[54,55],[55,25],[37,10],[130,2],[74,22],[56,-16],[55,-35],[81,-35],[116,-38],[143,-147],[111,15],[60,32],[171,10],[147,-65],[83,-24],[240,-20],[143,-42],[91,50],[61,20],[128,10],[65,-10],[178,-54],[315,-55],[217,-29],[191,-1],[91,-24],[166,-26],[63,-20],[159,16],[74,21],[70,47],[39,-11],[27,-59],[-15,-101],[29,-69],[23,-69],[33,-57],[21,-49],[-15,-41],[-46,-37],[-64,-79],[4,-69],[27,-44],[-32,-53],[24,-74],[4,-45],[-22,-36],[-50,-22],[-85,-3],[-44,-21],[-7,-55],[22,-41],[49,-22],[14,-44],[-7,-66],[-22,-56],[-45,-26],[-49,-6],[-91,12],[-66,37],[-42,-33],[-31,-34],[-95,-77],[-44,-52],[-41,-55],[108,-31],[79,-55],[172,6],[55,24],[73,26],[39,-5],[24,-56],[-14,-89],[-3,-69],[-87,-190],[-29,-32],[-41,-52],[-48,-41],[-39,-20],[-75,-60],[-46,-109],[-50,-90],[-73,-154],[-42,-165],[-18,-99],[-28,-103],[-62,-177],[-40,-30],[-69,-72],[20,-48],[54,-5],[66,-11],[89,-37],[118,76],[62,48],[13,96],[-13,97],[38,57],[87,78],[205,56],[42,6],[68,19],[60,70],[53,70],[93,44],[77,72],[12,51],[32,11],[96,50],[25,37],[30,28],[21,63],[8,118],[24,89],[47,118],[38,86],[37,54],[99,29],[43,33],[57,73],[39,44],[-5,90],[22,83],[61,50],[78,92],[98,13],[74,48],[79,-33],[95,-46],[161,14],[76,-21],[59,25],[52,71],[19,87],[61,50],[69,-1],[114,87],[118,77],[96,18],[77,60],[55,102],[59,79],[73,75],[20,133],[46,67],[85,59],[71,32],[298,100],[229,66],[231,82],[71,-1],[93,45],[153,2],[40,4],[53,93],[114,86],[71,28],[90,74],[73,7],[103,-13],[87,-20],[78,-1],[113,62],[176,10],[54,30],[38,26],[249,87],[93,-17],[132,15],[80,-4],[76,-11],[96,-3],[166,31],[70,20],[132,76],[146,18],[64,20],[82,17],[67,-29],[48,-27],[29,-6],[39,-5],[95,30],[79,-8],[101,-33],[67,-27],[35,0],[62,24],[76,60],[71,24],[67,-15],[46,-25],[81,-34],[126,5],[120,13],[101,28],[87,30],[80,-46],[92,-17],[149,81],[57,-18],[39,-21],[32,-10],[39,-68],[142,13],[126,57],[108,43],[105,28],[83,39],[122,148],[-2,46],[17,28],[26,12],[194,-1],[60,12],[79,39],[137,-30],[131,-47],[34,5],[53,1],[93,-29],[105,-57],[93,-15],[385,-142],[218,-35],[110,-47],[28,-16],[32,-48],[58,-5],[46,19],[61,-73],[148,-55],[154,-27],[100,43],[170,123],[52,55],[-10,122],[89,136],[151,67],[188,35],[116,30],[154,28],[74,-29],[38,-21],[57,-25],[68,-76],[106,-172],[79,-62],[69,-5],[60,-10],[63,-39],[90,-121],[-54,-108],[-46,-40],[-196,-46],[-86,-37],[-75,-23],[-21,-90],[31,-42],[81,21],[95,10],[74,18],[68,28],[59,40],[140,21],[91,34],[82,20],[57,35],[58,-5],[58,-34],[46,3],[124,-11],[58,25],[51,2],[52,-19],[54,-26],[54,-7],[70,16],[98,42],[125,46],[117,15],[28,-1],[24,-9],[-117,-53],[-187,-72],[-100,-69],[59,-29],[352,77],[160,58],[142,26],[35,19],[116,90],[42,24],[125,32],[163,34],[124,39],[84,40],[63,4],[49,-29],[63,-33],[62,8],[76,31],[53,72],[31,53],[57,18],[73,16],[59,-18],[96,-38],[67,-20],[58,-151],[136,-133],[49,-35],[119,13],[128,-52],[55,7],[52,15],[47,-10],[70,32],[73,167],[67,163],[66,72],[40,30],[50,14],[77,34],[104,10],[77,-14],[167,-12],[136,41],[154,-7],[76,48],[82,7],[111,-41],[32,-29],[61,-42],[15,-41],[16,-74],[30,-2],[103,73],[56,13],[106,117],[56,-30],[127,-50],[51,-15],[100,-85],[51,18],[42,40],[124,-4],[116,-35],[48,-29],[59,-50],[37,-12],[29,14],[240,-19],[104,-37],[79,-45],[278,-21],[107,-46],[64,22],[127,-7],[52,-39],[46,-43],[101,-37],[55,7],[78,30],[78,41],[78,0],[37,-35],[13,-88],[58,2],[64,40],[56,-10],[20,-61],[-30,-81],[-71,-114],[-29,-95],[-59,-86],[10,-41],[59,-20],[59,61],[132,42],[69,55],[119,20],[117,-19],[83,-73],[154,-123],[6,-44],[13,-46],[-5,-41],[-23,-47],[82,-55],[73,-9],[59,5],[247,-53],[118,21],[106,0],[126,8],[97,-2],[77,-9],[91,19],[74,26],[36,-16],[15,-137],[5,-81],[42,-30],[44,30],[32,41],[195,-19],[78,-2],[74,-22],[75,-51],[72,22],[43,31],[58,20],[17,51],[7,85],[-2,83],[34,15],[35,-15],[46,-39],[105,-125],[80,-81],[34,-38],[49,-31],[99,-75],[136,-31],[133,-60],[155,4],[121,-77],[82,60],[43,14],[63,-16],[76,-52],[60,-12],[205,-86],[110,-30],[41,-63],[54,-60],[0,-61],[24,-77],[123,-61],[48,-59],[59,-78],[107,-293],[56,-52],[81,5],[76,-76],[24,11],[3,30],[-69,198],[-5,107],[54,61],[127,17],[98,-114],[90,-69],[60,-12],[120,3],[113,73],[86,-26],[138,-9],[179,-43],[77,8],[137,-18],[167,-62],[95,-23],[20,-25],[44,-41],[22,-50],[24,-46],[58,-52],[58,-9],[115,-44],[241,-136],[87,-40],[51,-29],[25,35],[7,72],[44,15],[47,-107],[49,-81],[22,-71],[-51,-58],[-74,12],[-52,0],[-53,-96],[-22,-166],[49,3],[36,15],[8,-61],[-22,-51],[-44,-20],[-76,39],[-93,27],[-102,10],[-99,49],[-39,3],[-41,-3],[53,-51],[55,-46],[125,-40],[156,-62],[4,-38],[-37,-47],[-46,-100],[-142,-86],[-83,62],[-98,15],[-49,-37],[-98,4],[-194,-14],[-76,79],[-119,43],[4,-36],[102,-130],[109,-30],[108,-35],[26,-33],[-49,-31],[-66,5],[-83,-61],[-158,10],[-75,-3],[-44,-25],[-39,-9],[31,-22],[38,-60],[-54,-51],[-50,-25],[-51,12],[-56,-20],[-27,56],[-2,122],[-32,109],[-34,4],[-54,-13],[-17,-93],[38,-161],[26,-50],[-21,-45],[-36,-14],[73,-136],[62,-93],[38,-31],[3,-46],[-30,-20],[-83,18],[-41,-9],[-46,6],[-77,20],[-66,6],[-66,-26],[-56,2],[-50,85],[-44,20],[-36,-26],[-28,-101],[-57,-31],[-58,-46],[-41,-50],[-20,-198],[-34,-41],[-51,2],[-39,-16],[-49,16],[-64,10],[-214,-68],[34,-35],[54,6],[188,-11],[80,-36],[13,-89],[32,-38],[63,-41],[48,-20],[18,-30],[-20,-61],[-27,-56],[-59,-61],[17,-31],[64,-10],[27,-137],[-42,-61],[20,-51],[5,-51],[-43,-47],[-33,-24],[-11,-50],[64,-29],[47,-10],[66,-5],[45,-54],[58,-82],[42,-68],[3,-113],[41,-67],[77,-43],[-2,-45],[54,-14],[53,-4],[19,-41],[-17,-50],[-89,-61],[-37,-44],[89,-7],[92,-46],[117,52],[62,56],[40,50],[30,-13],[3,-52],[36,-87],[151,-84],[84,-27],[81,-14],[71,2],[20,-50],[-22,-46],[-56,3],[-90,-8],[-66,38],[-47,33],[-412,-19],[-93,-15],[-111,-50],[-110,-24],[-169,-50],[-71,-30],[-185,117],[-60,86],[-25,5],[-44,-20],[-2,-61],[86,-133],[39,-35],[0,-35],[-25,-18],[-35,0],[-53,26],[-99,21],[-88,-41],[-108,-87],[23,-58],[29,-33],[-7,-39],[-121,-74],[-40,-3],[-25,-15],[30,-27],[66,-1],[7,-33],[-23,-26],[-109,-30],[7,-40],[59,-19],[77,7],[48,-29],[0,-46],[-49,-26],[-57,-19],[-392,-118],[-57,-32],[3,-43],[137,-11],[410,10],[27,-14],[-10,-34],[-23,-43],[23,-31],[61,-21],[2,-33],[-30,-13],[-61,-15],[-67,-4],[4,-35],[92,-31],[31,-4],[3,-118],[-3,-50],[-49,-24],[-18,-17],[-2,-40],[122,-29],[187,-127],[41,0],[74,-24],[119,-65],[42,-39],[68,-19],[9,-32],[42,-27],[166,-88],[22,-38],[-348,-73],[-350,-54],[32,-48],[378,5],[102,-30],[45,9],[26,32],[204,38],[207,25],[65,-18],[278,-141],[129,-53],[82,-20],[60,-5],[44,-21],[43,-45],[-10,-42],[18,-19],[29,-8],[55,-28],[63,10],[73,32],[51,-7],[92,-45],[-35,-35],[-20,-17],[-24,-32],[-23,-11],[-74,-7],[-41,0],[-42,6],[-4,-23],[51,-25],[74,-27],[480,-21],[137,-46],[135,25],[61,-8],[51,-15],[19,-46],[69,-15],[106,-36],[148,-18],[118,1],[145,-49],[73,-2],[45,-28],[330,-17],[49,-22],[38,-36],[78,-16],[85,-3],[464,-59],[174,-31],[40,2],[40,-6],[125,-26],[127,-14],[61,-36],[-99894,-48]],[[0,92737],[99966,-10],[-65,-44],[-137,-11],[-81,-31],[-19,-2],[-40,103],[-6,26],[15,34],[41,42],[17,30],[96,54],[86,71],[47,11],[47,33],[-99967,8]],[[64077,78881],[-27,-32],[-15,-6],[-16,6],[-14,-2],[-32,-49],[-57,-57],[-28,-35],[-31,-23],[-35,-14],[-36,-2],[-13,-13],[-41,-4],[-25,-11],[-1,-19],[5,-43],[-21,15],[-22,-30],[7,-28],[4,-26],[-34,-5],[-4,-31],[-8,-23],[-75,-51],[-19,0],[-16,-8],[1,-33],[4,-30],[13,-32],[-6,-14],[-11,-5],[-14,10],[-14,17],[-14,4],[-14,-4],[-64,-91],[-27,-23],[-30,-9],[-61,-34],[-19,2],[-17,12],[-15,-17],[-4,-42],[-17,29],[-18,23],[-8,7],[-4,-4],[17,-45],[1,-41],[-4,-23],[-7,-21],[-10,-12],[-11,-7],[-6,-73],[-12,-44],[-15,-40],[-21,-72],[-16,-31],[-13,-37],[-9,-51],[-12,12],[-10,22],[-6,-29],[-7,-25],[-32,-37],[-24,-36],[-11,-55],[-2,-33],[3,-30],[9,-17],[46,-20],[29,-25],[28,-47],[30,-40],[21,-51],[15,-64],[19,-123],[9,-129],[28,161],[24,29],[-6,-46],[-16,-69],[-17,-101],[-5,-74],[6,-64],[0,-30],[-13,-106],[7,-20],[11,-19],[29,-36],[21,-54],[5,-75],[12,-20],[14,-18],[72,-150],[41,-100],[21,-58],[22,-73],[12,-17],[14,-11],[27,-34],[25,-34],[45,-90],[63,-147],[15,-42],[10,-48],[9,-59],[14,-52],[64,-130],[28,-48],[45,-63],[16,-14],[21,-3],[39,-1],[35,-24],[18,-17],[18,-25],[16,-28],[17,-77],[-62,25],[-62,-4],[-36,-16],[-34,-22],[-32,-32],[-21,-62],[-17,-142],[-25,-134],[0,-61],[12,-59],[-2,-29],[-11,-12],[-15,-25],[-19,-122],[-10,-25],[-12,-15],[-3,15],[0,32],[-27,28],[-14,-32],[-10,-67],[-20,-71],[-1,-13],[5,-219],[1,-25],[8,-143],[7,-74],[9,-72],[16,-66],[18,-62],[25,-39],[56,-47],[27,-13],[71,-9],[71,-21],[41,-22],[13,-15],[11,-23],[34,-110],[54,-78],[110,-117],[53,-39],[179,-74],[119,4],[328,142],[110,36],[41,0],[-25,-28],[-41,-17],[25,-20],[38,-3],[18,3],[13,18],[2,30],[-2,30],[-18,132],[-10,93],[-5,40],[-14,148],[-7,148],[1,69],[8,138],[-1,69],[-3,63],[3,61],[6,69],[4,71],[-5,49],[-15,39],[-25,49],[-4,29],[-2,33],[-24,3],[-22,34],[-17,18],[-39,20],[-19,1],[-18,-14],[-13,-30],[-9,47],[0,49],[31,102],[19,-30],[24,-12],[30,-2],[29,8],[-6,35],[-13,20],[-17,15],[-6,46],[2,48],[8,45],[-9,18],[-14,11],[-32,-1],[-42,12],[-42,5],[-10,-53],[23,-70],[-19,34],[-19,46],[-26,81],[-16,96],[-3,103],[14,85],[18,80],[11,102],[15,101],[15,-45],[17,-40],[24,-38],[13,-9],[39,-15],[25,6],[27,22],[26,-7],[22,-42],[20,-46],[29,-10],[61,33],[29,8],[25,-15],[13,-3],[13,2],[-11,42],[-5,40],[15,21],[48,-23],[31,16],[8,8],[7,10],[3,35],[-1,36],[-4,33],[-9,29],[-22,42],[-86,98],[-28,39],[-24,50],[-16,72],[-12,74],[-11,55],[-30,129],[-12,15],[-14,7],[-36,4],[-36,-10],[-58,-22],[-34,7],[-15,-13],[-39,-55],[-18,-46],[-25,-106],[19,-34],[0,-22],[-15,-157],[9,-76],[-3,-6],[-7,18],[-22,78],[-38,94],[-32,145],[-7,60],[-3,94],[1,30],[15,79],[16,54],[13,56],[5,73],[-11,118],[-13,26],[-16,9],[-17,2],[-30,-5],[-14,-9],[-25,40],[-30,6],[-16,-11],[-16,-6],[-17,11],[-15,24],[-10,25],[-7,29],[-23,57],[-24,31],[-28,7],[-46,-1],[-15,3],[-1,33],[6,72],[0,38],[-3,35],[-8,29],[-10,25],[-27,42],[-21,58],[-35,120],[-30,135],[-13,21],[-27,21],[-60,17],[-39,18],[-15,17],[-7,29],[1,32],[3,38],[9,31],[31,25],[67,5],[58,-3],[53,-56],[17,-13],[18,-4],[37,18],[19,5],[46,-6],[-14,27],[-17,14],[-18,-1],[-16,11],[-25,52],[-45,59],[-10,24],[-3,39],[8,34],[32,34],[26,47],[13,63],[11,28],[23,45],[34,-8],[54,32],[87,-6],[105,9],[29,-3],[67,-32],[39,-14],[46,-7],[34,14],[-32,44],[-69,51],[-17,44],[31,119],[43,109],[26,129],[-7,128],[-13,35],[4,42],[15,35],[11,35],[-9,42],[-19,65],[-10,22],[-33,35],[-66,2],[-54,19],[-17,-16],[-10,-24],[-13,-15],[-42,-32],[-14,-6],[-14,6],[-21,36],[-18,-4],[-56,22],[-26,49],[-10,7],[-90,38],[-32,8],[-71,-40],[-52,-52],[-15,-7]],[[0,89324],[99951,-19],[-49,-66],[-56,-57],[-83,-23],[-126,-87],[-49,-16],[-65,40],[-149,26],[-47,35],[-68,88],[-23,13],[-21,35],[-82,39],[-72,-25],[-58,19],[-20,-14],[30,-12],[54,-11],[82,5],[27,-9],[24,-31],[28,-49],[-21,-32],[-22,-11],[-66,36],[-76,-5],[-36,9],[-102,60],[-78,-67],[-107,-35],[-83,-4],[-152,-53],[41,-2],[111,38],[65,0],[96,21],[51,24],[24,23],[31,23],[31,-11],[22,-24],[14,-35],[14,-45],[-18,-24],[-18,-12],[-22,-33],[102,56],[62,-33],[31,5],[58,49],[93,32],[11,-6],[11,-16],[-15,-94],[6,-74],[71,-81],[73,-47],[26,-2],[24,9],[9,43],[18,32],[23,-29],[19,-31],[27,-76],[-1,-23],[-6,-45],[23,-20],[32,-6],[12,-71],[11,-101],[-14,-9],[-16,0],[-51,-26],[7,-18],[52,-10],[15,-21],[-11,-47],[3,-21],[18,-5],[12,28],[-3,39],[5,17],[35,-81],[0,-31],[30,-36],[85,-54],[15,-24],[5,-40],[-21,-12],[-20,-28],[12,-40],[22,-32],[36,-12],[17,-52],[0,-49],[-26,-43],[-53,-59],[-31,-24],[-12,-42],[-3,-44],[-21,2],[-23,19],[-262,110],[-99,21],[-87,2],[-16,7],[1,26],[5,24],[13,29],[-6,26],[-11,2],[-11,-20],[-24,0],[-23,23],[-19,-7],[-9,-32],[-7,-17],[0,-20],[12,-18],[50,-20],[-8,-18],[-70,-14],[-57,-18],[-74,-54],[-30,-38],[-198,-93],[-48,-32],[-21,-4],[-27,-11],[-21,-39],[-110,-55],[-23,5],[-29,-46],[-27,-26],[-63,-3],[-41,-13],[-88,-67],[-55,21],[-65,-91],[-72,-87],[-21,0],[-55,36],[-14,-19],[9,-35],[19,-37],[-11,-10],[-22,10],[-16,2],[-12,-11],[2,-27],[-31,-33],[-24,-3],[-28,-11],[-10,-29],[9,-32],[-50,-36],[-41,-48],[-19,-8],[-22,-21],[-24,-16],[-28,3],[-67,-67],[-150,-117],[-42,-15],[-53,-36],[-5,-23],[0,-30],[-21,-48],[-25,-122],[-8,-22],[-12,-25],[-55,12],[-48,46],[-15,22],[-8,25],[-3,40],[-9,19],[-11,9],[-55,99],[-95,68],[-14,23],[-121,-18],[-33,-1],[-58,17],[-90,-11],[-109,-37],[-33,-23],[-111,-36],[-73,-57],[-142,-208],[-34,-43],[-16,-9],[-24,-4],[-10,42],[-4,33],[9,63],[17,52],[17,96],[5,39],[12,41],[-48,-3],[-66,-71],[-100,-69],[-46,-18],[-36,-41],[-26,-5],[-30,-15],[-3,-89],[-15,-48],[-18,-10],[-28,-2],[-21,19],[-30,71],[-40,37],[-24,7],[-18,-9],[-35,-48],[-38,-44],[6,50],[-33,19],[-29,11],[-36,2],[-11,-7],[-14,-29],[-33,-37],[-22,-15],[-23,-30],[-13,-31],[-12,-44],[-14,-107],[1,-125],[-53,-99],[-20,10],[-10,-6],[-10,-13],[18,-55],[-10,-19],[-9,-13],[-25,-14],[-56,-81],[-53,-52],[-87,-151],[-25,-100],[-25,-113],[12,-55],[10,-36],[16,-25],[28,-27],[59,-29],[-5,-19],[0,-16],[21,28],[15,79],[37,26],[18,-1],[118,-63],[23,-27],[-4,-60],[-7,-28],[-22,-42],[-42,-50],[-49,-69],[-5,-43],[0,-23],[13,-81],[1,-46],[-6,-85],[3,-37],[13,-31],[20,-20],[35,11],[33,-9],[25,-22],[-4,-71],[15,-67],[11,-124],[-21,-34],[-20,-21],[-39,-54],[-21,-6],[-37,18],[-58,96],[23,57],[50,40],[23,28],[17,42],[-26,-8],[-18,-18],[-57,8],[-23,-20],[-28,-32],[11,-80],[-19,-15],[-35,-27],[-52,-34],[-17,-23],[-45,-143],[-41,-107],[-15,-92],[2,-79],[15,-88],[11,-38],[48,-82],[23,-64],[7,-77],[-38,-37],[-67,-89],[-28,-10],[-92,2],[-46,45],[-54,-11],[-45,-22],[-71,-63],[-63,-82],[-60,-57],[-18,-34],[-24,-71],[-22,-129],[8,-64],[12,-30],[11,-39],[-16,-61],[0,-38],[29,-61],[6,-84],[-21,-2],[-49,60],[-52,4],[-124,-69],[-52,-40],[-57,-80],[-17,15],[-12,46],[-21,20],[-26,-10],[-11,-43],[36,-20],[13,-28],[-21,-107],[-15,-36],[6,-95],[-2,-45],[-8,-45],[-37,-123],[-63,-162],[-78,-118],[-54,-41],[-27,-31],[-12,-41],[-80,-113],[-98,-119],[-28,-21],[-6,45],[-3,44],[-12,59],[-36,49],[-6,40],[-6,54],[-3,252],[-31,262],[-3,82],[-38,67],[-21,70],[-12,68],[-3,81],[-41,425],[-13,106],[-55,342],[-24,198],[-16,192],[-2,86],[24,257],[21,160],[74,359],[11,33],[12,17],[128,138],[56,75],[33,80],[36,101],[-4,55],[-4,31],[-14,36],[-30,41],[11,18],[12,14],[31,15],[64,-31],[65,13],[60,127],[86,-19],[65,22],[18,-9],[13,43],[36,46],[66,68],[97,82],[48,55],[27,52],[40,50],[39,62],[71,186],[140,154],[55,88],[45,31],[40,15],[101,126],[64,105],[85,72],[25,46],[44,108],[18,26],[55,41],[124,71],[72,71],[106,10],[31,28],[33,16],[35,23],[-43,63],[10,33],[8,16],[76,74],[31,60],[-4,25],[-5,19],[-47,24],[9,55],[13,48],[38,40],[13,94],[2,99],[37,142],[22,32],[87,71],[20,2],[60,-24],[66,-12],[23,-22],[5,19],[-3,24],[18,9],[38,-10],[-5,27],[-98,14],[-70,31],[-63,60],[-41,17],[-45,-5],[-257,-84],[-12,-23],[-12,-32],[16,-47],[-13,-21],[-12,-14],[-14,-31],[-12,-61],[3,-59],[-31,-92],[-3,-57],[55,-32],[14,-21],[-16,-32],[-17,-19],[-14,-24],[-11,-9],[-15,-6],[-20,31],[-18,62],[-29,4],[-10,-10],[-5,-24],[-25,-2],[-28,12],[-32,-5],[-57,-70],[-319,-333],[-34,-40],[-42,-80],[-79,-8],[-31,-18],[-23,-24],[-31,-16],[1,30],[6,22],[7,59],[43,111],[-27,12],[-27,1],[-50,-23],[-34,-37],[-26,8],[13,33],[31,66],[-9,61],[-9,33],[13,18],[65,123],[23,64],[20,84],[1,26],[-4,32],[-19,5],[-16,0],[-128,-83],[-47,-23],[-15,36],[-21,15],[-35,61],[-30,9],[-31,-4],[-70,-41],[-77,-23],[-59,8],[-51,-35],[-23,-6],[-75,24],[-91,2],[-28,-30],[-79,-41],[-54,-64],[-28,-20],[-31,-28],[-14,-120],[-41,-39],[-38,-29],[-80,-92],[-56,-126],[-38,-54],[-81,-76],[-126,-100],[-110,-162],[-38,-122],[-14,-4],[-27,-25],[-7,-60],[1,-41],[-17,-33],[-17,-42],[18,-26],[16,-5],[24,4],[63,34],[108,-52],[54,-52],[-4,-52],[2,-46],[-40,3],[-53,-4],[-34,-27],[-68,43],[-23,-16],[-36,-46],[-65,-19],[-33,23],[-55,63],[-93,-6],[-24,-71],[-21,2],[-33,-7],[-55,-82],[-18,-8],[-67,16],[-48,42],[-23,2],[-43,-19],[-21,-50],[-107,-25],[-105,5],[-57,119],[107,47],[63,-10],[72,8],[75,37],[-26,31],[-18,7],[-45,-4],[-40,23],[-87,116],[-38,21],[-49,13],[-38,1],[-14,-8],[-20,-28],[-13,-27],[-12,-9],[-26,5],[-31,22],[-37,-7],[16,17],[35,18],[-58,20],[-37,28],[-34,7],[-156,69],[-60,-6],[-37,-19],[-63,-56],[17,-41],[14,-19],[8,-22],[-20,-4],[-58,-4],[-35,33],[-25,-48],[10,-43],[40,15],[21,-18],[-14,-49],[-52,-15],[-65,3],[-65,87],[-107,-15],[-51,-56],[-49,-13],[-131,56],[-66,5],[-74,48],[-26,-15],[-47,-121],[-63,-29],[-32,16],[-29,76],[-20,25],[-56,23],[-298,-22],[-100,19],[-70,2],[-96,-39],[-92,15],[-170,-75],[-70,-50],[-84,-88],[-76,-147],[-42,-55],[-71,-70],[-100,-64],[-54,-65],[-30,-53],[-52,-200],[-14,-30],[-123,-72],[-39,-80],[-17,-20],[-51,-34],[-31,-56],[-17,-16],[-73,-40],[-60,-100],[-85,-70],[-123,-194],[-11,-23],[-10,-52],[-19,-38],[-106,-169],[-33,-16],[-53,-79],[-54,-47],[-49,-56],[-61,-59],[-92,-67],[-31,-39],[-48,-90],[-118,-111],[-59,-27],[-77,-98],[-8,-23],[-6,-36],[13,-63],[19,-14],[31,-9],[115,-62],[107,17],[95,0],[37,6],[23,-2],[8,-34],[-1,-63],[-14,-57],[-11,-168],[-13,-75],[10,-73],[23,-13],[23,33],[37,5],[38,-15],[28,117],[-23,18],[-22,42],[13,31],[66,57],[41,5],[39,-4],[-43,-73],[-17,-15],[-13,-4],[-18,-14],[38,-42],[41,-32],[59,-14],[-14,-25],[-39,-22],[-36,-91],[-56,-44],[-26,-30],[9,-19],[21,-4],[114,12],[59,25],[84,71],[35,105],[32,29],[9,0],[11,-7],[1,-74],[-45,-83],[-32,-47],[-12,-40],[19,0],[37,8],[16,19],[42,101],[11,72],[6,100],[-5,60],[3,43],[-16,43],[11,13],[113,-59],[60,-14],[108,48],[24,-12],[18,-29],[89,-89],[17,-29],[29,-108],[95,-125],[88,-59],[3,-23],[56,-69],[44,-24],[7,-62],[-20,-50],[-41,-48],[-82,44],[-13,-2],[10,-28],[59,-81],[47,-34],[3,-108],[-6,-59],[-31,-66],[10,-38],[44,-56],[22,-22],[22,-32],[-28,-70],[-5,-78],[-30,-35],[-36,-76],[-55,-62],[-26,-119],[-42,-105],[-5,-104],[-7,-37],[-34,-108],[-13,-146],[17,-239],[8,-14],[16,-14],[-3,-17],[-8,-11],[-33,-71],[0,-49],[13,-37],[2,-95],[-24,-153],[-9,-24],[-10,-39],[-4,-36],[-7,-22],[-4,-39],[7,-34],[12,-17],[-43,-110],[-15,-144],[-16,-58],[-31,-57],[-66,-83],[-24,-52],[-43,-66],[-41,-51],[-57,-145],[-46,-145],[-116,-188],[-15,-46],[-9,-50],[-30,-84],[-15,-116],[-35,-46],[-29,-122],[-94,-186],[-23,-63],[-72,-103],[-77,-142],[-96,-128],[-18,-53],[-37,-58],[-40,-90],[-58,-90],[-12,-60],[-19,-42],[-43,-28],[-31,-39],[-95,-231],[-12,-42],[-2,-37],[-62,-86],[-35,-92],[-60,-57],[-62,-78],[-149,-144],[-41,-54],[-83,-68],[-34,-1],[-72,-37],[-47,-38],[-28,14],[-17,50],[-21,-2],[-16,-7],[-43,48],[-37,-3],[-26,22],[-50,-15],[9,205],[-7,43],[-21,-40],[-57,-72],[-23,-14],[-22,0],[9,44],[31,62],[-10,10],[-10,3],[-40,-27],[-20,-30],[-58,-119],[-34,-100],[-28,-29],[-13,-43],[-24,-41],[-37,11],[-22,-7],[-53,23],[-13,-10],[35,-77],[-29,-113],[-12,-14],[-14,-16],[-19,10],[-31,6],[-39,-51],[-22,-17],[-16,-50],[-31,-30],[-17,-31],[-22,-54],[-14,-53],[-33,-54],[-20,-67],[-1,-58],[21,-59],[2,-51],[-15,-104],[9,-110],[-10,-43],[-102,-76],[-26,-37],[-38,-98],[-46,-36],[-28,-40],[-39,-24],[-26,-69],[-27,-39],[-33,-24],[-25,-30],[-55,-2],[-39,-21],[-27,-58],[-83,-66],[-12,-49],[6,-77],[0,-58],[-7,-49],[-18,14],[-10,-16],[-11,-44],[4,-51],[28,-17],[23,-20],[33,-11],[24,-24],[52,-107],[42,-47],[11,-17],[24,-24],[22,-37],[13,-33],[68,-258],[64,-166],[56,-121],[79,-232],[23,-124],[2,-77],[13,-106],[-11,-60],[3,-96],[-5,-49],[-9,-36],[-1,-70],[3,-37],[1,-49],[6,-19],[9,-7],[14,18],[18,7],[-3,-59],[-22,-150],[-18,-109],[-25,-95],[-32,-87],[-38,-34],[-27,-13],[-51,-4],[-43,15],[-36,-11],[-15,-18],[-11,-31],[8,-48],[-1,-36],[-16,3],[-31,21],[-34,2],[-16,11],[-16,51],[-17,-2],[-29,-31],[-44,-6],[-15,-17],[-5,-21],[6,-26],[22,-35],[-7,-36],[-23,-18],[-19,44],[-12,43],[-13,2],[-20,-12],[-4,-46],[10,-32],[15,-36],[-22,-42],[-5,-30],[-16,-21],[-42,47],[6,34],[18,33],[3,34],[-6,20],[-61,-86],[-37,-96],[-19,7],[-9,25],[-11,10],[-40,-63],[-8,-49],[-14,-2],[-7,21],[0,45],[-7,37],[-41,56],[-19,48],[10,27],[34,-15],[28,2],[-6,23],[-9,11],[19,12],[15,27],[-13,7],[-19,-15],[-16,7],[-6,63],[-20,65],[-10,63],[19,36],[10,56],[18,81],[9,27],[25,19],[9,21],[-14,11],[-22,9],[1,24],[15,12],[16,26],[32,32],[10,59],[-9,15],[-20,14],[5,30],[8,23],[-3,14],[-24,38],[-16,36],[5,40],[-4,60],[2,51],[-1,28],[-11,62],[-5,63],[-16,-10],[-12,-15],[-44,22],[-14,1],[-5,47],[15,57],[38,50],[21,6],[16,22],[26,7],[30,-34],[27,-7],[15,-59],[9,-12],[2,22],[22,25],[5,19],[-4,11],[-25,10],[-23,73],[-3,32],[-9,20],[13,59],[-26,67],[-13,21],[2,59],[-14,39],[-8,21],[-4,36],[4,16],[12,6],[3,15],[-3,5],[-14,4],[-56,47],[-46,-29],[-12,-37],[-12,-12],[-19,73],[-30,2],[-48,65],[-21,-13],[-5,-26],[-26,-60],[-37,-48],[-12,-7],[-13,3],[2,14],[-15,55],[-58,22],[-21,23],[-11,6],[57,61],[15,11],[-11,14],[-12,7],[-47,-9],[-24,20],[-36,-7],[-24,16],[51,60],[2,36],[-1,27],[26,80],[26,44],[67,62],[30,9],[21,-3],[17,6],[-18,24],[-18,11],[-35,-2],[-36,36],[-3,38],[70,240],[1,22],[-11,58],[-3,57],[-51,33],[-22,4],[-64,64],[-26,33],[-10,-10],[-2,-51],[-9,-12],[-17,-10],[-9,59],[-14,42],[-42,44],[-16,23],[8,52],[-4,4],[-3,5],[-23,-51],[-45,-48],[-96,-10],[-30,34],[-11,-24],[-9,-31],[-25,-11],[-39,-2],[-22,-21],[-12,-23],[-54,-8],[-20,-31],[-34,-11],[-140,-135],[-30,-57],[-29,-66],[-21,-34],[-18,-23],[-16,-10],[-17,-23],[-16,-3],[-17,11],[-19,-4],[-12,-28],[10,-36],[-5,-16],[-37,-19],[-55,-13],[-23,-24],[-8,-14],[-12,-7],[-12,47],[-4,62],[23,15],[20,8],[116,86],[-14,64],[10,28],[26,45],[17,23],[-10,8],[-75,-15],[-44,1],[-22,5],[7,39],[-4,38],[-5,15],[38,44],[18,11],[13,-1],[-1,27],[-11,40],[12,52],[79,61],[19,55],[31,51],[58,128],[4,22],[16,60],[3,24],[-26,35],[-11,49],[-78,89],[-7,76],[-7,-3],[-12,-53],[-10,-18],[-36,-1],[-18,20],[-100,13],[-25,-34],[-23,-53],[-22,-38],[-23,-20],[-19,-35],[-81,-206],[-31,-16],[-144,-124],[-72,-49],[-56,-87],[-19,-52],[-17,-58],[-10,-88],[-51,-107],[-18,-23],[-18,-9],[-23,3],[-21,-7],[-35,10],[-43,-34],[-48,-29],[-42,73],[-30,19],[-48,-21],[-23,-33],[-47,-162],[-17,-93],[1,-38],[27,-116],[31,-64],[69,-74],[147,-51],[34,18],[37,0],[39,-48],[24,-80],[3,-55],[0,-19],[9,-16],[5,-27],[-15,-23],[-12,-12],[-10,-84],[0,-94],[12,-31],[32,-44],[49,-36],[45,-8],[86,17],[35,57],[-2,24],[1,32],[76,83],[43,74],[-7,19],[-8,13],[8,8],[23,5],[106,76],[83,-62],[47,-72],[47,-13],[33,-36],[37,-32],[49,-2],[41,-7],[13,30],[13,19],[14,-4],[17,-38],[47,-30],[43,2],[30,11],[18,-14],[-26,-49],[4,-79],[-20,-25],[-19,-40],[11,-26],[10,-12],[-1,-32],[-17,-18],[-32,-48],[-19,1],[-9,9],[-6,18],[-4,27],[-12,18],[-31,7],[-33,-6],[-73,-71],[-71,-57],[-75,-45],[-25,-28],[-18,-8],[-30,22],[-19,-2],[-4,-14],[24,-40],[6,-31],[-3,-23],[-13,-11],[-20,18],[-18,-25],[-8,-42],[0,-99],[-12,-22],[-33,-12],[-35,-32],[-13,15],[-5,17],[4,46],[-4,22],[-16,-1],[-25,-13],[-18,-31],[-6,-18],[24,-58],[23,-6],[6,-13],[-19,-29],[-45,-42],[-8,-36],[-13,-34],[-19,-27],[-13,-28],[-15,-15],[-25,-17],[-31,-68],[-23,-65],[-27,-32],[-21,-109],[-38,-58],[-14,-94],[10,-58],[41,1],[21,-21],[44,-76],[52,-49],[53,-28],[66,-71],[19,-29],[15,-61],[29,-174],[20,-86],[2,-46],[31,-85],[33,-146],[37,-127],[8,-99],[-13,-46],[1,-59],[37,-55],[85,-63],[13,-18],[17,-31],[0,-95],[13,-31],[12,-18],[51,-41],[21,-33],[23,-54],[6,-48],[3,-65],[-29,-2],[-23,7],[-91,84],[-24,3],[-33,-12],[-48,16],[-51,93],[-36,28],[-39,15],[-93,-81],[-24,6],[-7,-9],[-11,-14],[44,-17],[43,26],[42,39],[60,-21],[10,-35],[10,-59],[42,-40],[33,-18],[41,-52],[41,-83],[86,-95],[35,-90],[13,-59],[12,-83],[-30,-27],[-26,-4],[-41,-13],[-30,-29],[-31,-52],[-86,-82],[-17,-51],[-11,-44],[-21,-22],[-54,21],[-50,-2],[-56,-60],[-14,-24],[9,4],[9,8],[25,-9],[40,32],[38,-98],[76,16],[71,82],[27,1],[23,-13],[25,-32],[69,-142],[37,-16],[37,-33],[20,-4],[18,-10],[-49,-52],[-64,-113],[-28,-27],[-19,-30],[51,15],[37,54],[18,13],[15,-12],[7,-67],[-14,-205],[-18,-3],[-17,56],[-20,17],[-18,-11],[-33,0],[-13,-25],[-11,-36],[20,-7],[40,-62],[4,-33],[-11,-22],[-28,9],[34,-46],[-9,-48],[-11,-19],[-20,-12],[-12,-42],[18,-69],[18,-89],[2,-43],[-28,18],[-43,-54],[-23,-4],[-16,71],[-19,-11],[-13,-21],[-18,-77],[-21,-69],[-19,-19],[-22,5],[-18,-2],[5,-18],[19,-23],[0,-27],[-41,-84],[-7,-33],[1,-28],[-21,-34],[11,-57],[-6,-40],[-19,-54],[-19,-36],[-24,-58],[-29,-33],[-39,-122],[-11,-61],[-3,-63],[-13,-21],[-20,-28],[-24,14],[-1,42],[-10,4],[-6,27],[-2,35],[3,28],[-10,-8],[-6,-33],[-16,-27],[-16,11],[-18,22],[1,-32],[9,-31],[4,-32],[24,-6],[17,-37],[13,-55],[2,-21],[10,-25],[1,-21],[-23,-20],[-29,-36],[-35,-63],[-29,-42],[-26,0],[-15,5],[-23,24],[-26,10],[35,-85],[19,-15],[24,3],[23,32],[33,-3],[8,-49],[-9,-55],[-18,-72],[-3,-62],[22,-88],[1,-27],[-9,-13],[-26,23],[-21,29],[-22,-7],[-22,12],[-23,-10],[-10,-21],[7,-34],[20,-28],[12,-43],[-14,-15],[-58,10],[-14,-8],[-17,-47],[11,-71],[-13,-43],[-24,-11],[-32,-35],[-19,-8],[1,-15],[14,-16],[8,-21],[-18,-72],[-26,-23],[-42,12],[-32,-17],[-28,31],[-30,1],[-20,-39],[-2,-45],[-20,-4],[-11,3],[-15,-3],[2,-24],[8,-21],[41,-10],[7,-30],[2,-47],[-43,-80],[-18,-54],[-27,1],[-20,-43],[-11,-60],[-14,12],[-31,-9],[-10,-28],[8,-12],[1,-20],[-13,-67],[-14,-18],[-6,27],[-4,42],[-11,3],[-18,-39],[-22,-28],[-18,-11],[-14,26],[-34,13],[-13,-112],[-29,-40],[-13,-13],[-23,-4],[15,-15],[5,-29],[-9,-28],[-23,-6],[-13,-22],[-5,-100],[-14,-35],[-35,-2],[-26,23],[-8,-19],[-4,-17],[-14,-18],[-26,-5],[-59,-45],[-26,13],[-32,17],[-23,-17],[-7,-34],[-10,-26],[-32,0],[-26,32],[-26,24],[-29,-20],[-22,-42],[-27,-14],[-5,-26],[-12,-13],[-29,5],[-11,65],[-16,9],[-16,-32],[-6,-26],[-8,-19],[3,-53],[-16,-1],[-21,32],[-23,6],[-20,-30],[7,-24],[-2,-24],[11,-12],[3,-23],[-12,-13],[-1,-28],[-6,-17],[-36,30],[-29,16],[-27,-6],[-9,18],[-2,18],[31,32],[2,16],[-23,11],[-29,44],[-20,73],[-26,39],[-12,35],[-4,62],[-5,29],[2,33],[7,29],[-28,-15],[-20,-27],[4,-34],[-5,-32],[-31,-16],[2,-14],[2,-14],[24,-43],[5,-36],[10,-20],[19,-56],[-1,-110],[11,-31],[-4,-30],[-8,-43],[-13,-12],[-23,-14],[-14,-8],[-11,-11],[-17,-32],[-33,-8],[-16,76],[-23,-51],[-6,-104],[-9,-18],[-14,-15],[-26,37],[-23,-25],[-18,-25],[-8,-22],[-13,-25],[-25,24],[-21,36],[5,27],[-2,17],[-10,14],[-10,-2],[5,-35],[4,-67],[-10,-19],[-14,-15],[-31,12],[-21,25],[-26,21],[-22,4],[-5,-42],[-15,-35],[-13,-4],[-14,6],[-18,-37],[-8,-27],[-22,-29],[-58,-13],[-21,-29],[-27,5],[-21,-7],[-13,2],[-10,15],[-13,0],[-5,-47],[-33,-20],[-30,-5],[-33,-62],[-24,-37],[-17,-4],[-13,13],[-7,56],[-6,6],[-4,-52],[-6,-43],[-12,-24],[-38,-54],[-11,-54],[7,-49],[51,-12],[7,-27],[-5,-22],[-13,-19],[-3,-28],[55,-88],[2,-34],[-9,-19],[-10,-41],[-29,-35],[-62,-18],[-51,18],[-16,40],[1,28],[13,-8],[14,3],[-4,26],[-6,15],[-24,23],[-19,62],[4,51],[-11,40],[-11,34],[-12,20],[-6,25],[12,78],[-7,45],[22,56],[6,63],[39,22],[3,60],[-29,2],[-19,44],[-5,-18],[-15,-2],[-26,84],[-8,11],[-12,2],[6,-90],[-30,-33],[-25,-15],[-35,-6],[-20,-10],[-18,8],[4,27],[10,33],[-9,27],[-20,20],[-30,-1],[-21,6],[-20,-2],[-8,12],[-19,42],[-17,26],[-7,26],[7,31],[-6,18],[-32,2],[1,-43],[3,-52],[9,-39],[-6,-22],[-16,-15],[-17,42],[-8,10],[-9,-2],[-6,-41],[-15,-37],[-28,4],[-22,-23],[-26,-10],[-13,-5],[-33,-1],[-28,-53],[-20,-22],[-30,-18],[-33,-30],[-9,-52],[-1,-38],[-5,-42],[-53,-61],[-15,6],[-10,23],[-15,-5],[-11,-11],[-12,1],[-14,-13],[-18,4],[-17,19],[-10,5],[-12,1],[-2,-23],[17,-89],[5,-41],[-56,-120],[6,-78],[-15,-59],[-34,-48],[-64,-123],[-29,-3],[-22,-28],[-47,-202],[-1,-70],[-7,-50],[2,-49],[-21,-96],[-22,-41],[-4,-52],[30,-108],[4,-19],[17,-58],[9,-41],[14,-41],[49,-107],[22,-33],[26,-23],[48,-96],[24,-62],[-11,-41],[6,-89],[-35,26],[5,-11],[40,-48],[61,-170],[53,-84],[54,-96],[17,-91],[48,-60],[54,-87],[-2,-19],[14,-24],[37,-46],[22,-49],[8,-46],[13,-7],[16,11],[15,4],[10,-3],[17,-51],[22,-46],[11,-41],[9,5],[7,-6],[2,-35],[4,-23],[30,-67],[14,-63],[37,-103],[26,-58],[20,-33],[21,-28],[22,-114],[11,-103],[23,-114],[18,-50],[0,-95],[14,-97],[15,-65],[5,-67],[4,-33],[6,-25],[16,-114],[-4,-52],[-11,51],[1,-152],[10,-80],[-5,-99],[11,-35],[19,-111],[13,-40],[-1,-137],[7,-69],[-18,41],[-13,47],[-17,-25],[-15,-36],[24,-147],[-28,14],[3,-197],[11,-46],[1,-22],[-3,-27],[-8,29],[-1,30],[-5,-6],[1,-16],[-10,-35],[-2,-43],[9,-36],[2,-28],[-7,-35],[-11,-37],[-26,-5],[-6,-71],[-9,-76],[-46,-12],[-33,-67],[-42,-25],[-37,-67],[-40,-61],[-27,-8],[-22,-13],[-26,-102],[-44,-12],[-78,-83],[-26,-40],[-24,-16],[-34,-35],[-7,13],[-12,30],[-29,15],[-15,33],[-4,43],[-4,17],[-6,-24],[-5,-102],[-5,-23],[-13,-10],[-25,29],[-23,59],[-34,-41],[10,-5],[16,3],[12,-10],[10,-39],[-1,-22],[-5,-25],[-32,-4],[-42,9],[-7,-3],[38,-39],[35,-22],[16,-24],[0,-20],[-20,-32],[-15,-40],[-1,-25],[0,-27],[-17,-24],[-11,5],[-30,41],[-86,163],[13,-46],[90,-185],[15,-61],[3,-43],[-10,-21],[-15,-26],[-29,-2],[-49,69],[-77,165],[-26,22],[78,-188],[13,-46],[13,-53],[-4,-31],[-7,-30],[-185,-174],[-28,-76],[-22,-93],[-36,-51],[-21,-48],[-62,-26],[-34,8],[35,86],[-22,32],[-1,221],[9,242],[16,121],[23,30],[30,19],[0,25],[-3,30],[-15,41],[-18,19],[-25,8],[-20,51],[-15,-2],[-24,-17],[-14,22],[-5,34],[-22,42],[-24,41],[-46,75],[-90,26],[-10,33],[-9,6],[-8,-43],[-50,-41],[-21,25],[-15,30],[2,37],[15,30],[24,22],[12,76],[-19,97],[-16,28],[-18,23],[-18,-37],[-15,-61],[-16,-32],[-23,-7],[-33,2],[-13,93],[-4,79],[4,90],[5,53],[-32,74],[-2,70],[-15,37],[-4,-19],[0,-20],[-6,-2],[-8,40],[-26,67],[-8,71],[-30,79],[-16,31],[-6,-26],[-9,-28],[-30,40],[-25,43],[-23,81],[-3,-19],[-6,-17],[-26,64],[-28,51],[-25,19],[-15,17],[-15,27],[-31,28],[-78,-40],[-98,31],[-38,-30],[-16,19],[-9,35],[9,59],[2,125],[12,88],[-6,67],[6,31],[4,43],[-15,17],[-70,34],[-15,27],[-18,-31],[-84,-17],[-31,-26],[-29,-49],[-8,-64],[17,-41],[11,-73],[-30,-158],[-5,-46],[12,-194],[-5,-106],[-16,-71],[-26,-63],[-11,-109],[-20,-50],[-28,-114],[-18,-143],[-13,-66],[-8,-122],[-56,-184],[-13,-104],[-20,-40],[7,-31],[1,-52],[-7,-139],[-2,-115],[8,-62],[27,-122],[-6,-36],[-3,-50],[22,-23],[17,-7],[91,58],[31,-15],[12,-54],[8,-47],[15,-254],[8,-48],[19,-45],[20,-47],[7,8],[1,18],[1,20],[19,-48],[14,-90],[48,-476],[14,-61],[11,-63],[-29,31],[-8,105],[-8,45],[-11,6],[-16,0],[-1,18],[12,35],[-2,41],[-17,34],[-27,-27],[1,-74],[12,-57],[46,-127],[15,-53],[18,-15],[27,8],[32,-54],[25,-50],[63,-77],[38,8],[41,19],[27,-5],[27,-20],[32,-64],[52,-161],[84,-134],[48,-22],[18,-18],[54,-178],[71,-126],[30,-46],[23,-23],[32,-67],[28,-84],[61,-237],[10,-105],[5,-159],[-14,-240],[-16,-119],[3,-57],[22,-86],[-6,-82],[4,-68],[-2,-189],[13,-55],[15,-36],[76,-112],[6,-41],[37,-143],[70,-310],[19,-139],[-2,-38],[-8,-15],[-21,-14],[-17,27],[-6,20],[2,24],[-7,24],[-16,28],[-10,26],[3,-42],[0,-55],[-21,-5],[-28,17],[-34,-15],[-40,-68],[-19,-2],[-15,58],[-8,39],[-12,28],[-127,142],[-47,37],[-50,107],[-112,119],[-71,116],[-30,71],[-73,64],[-31,74],[-16,15],[-15,27],[16,72],[-7,76],[-8,64],[-51,126],[-25,88],[-49,87],[-19,51],[-18,58],[11,21],[11,12],[-10,43],[-27,74],[-13,85],[0,160],[-39,226],[-34,313],[6,110],[-9,119],[-22,114],[-29,82],[-11,67],[-69,178],[-48,73],[6,132],[-14,26],[-18,2],[-14,37],[12,79],[-19,-15],[-26,3],[-21,21],[-16,109],[-11,33],[-22,58],[-29,0],[-10,27],[2,70],[-21,43],[-28,36],[-23,20],[-24,114],[-19,28],[-16,22],[-22,-15],[-7,-41],[-15,-39],[-16,5],[-16,22],[-18,114],[-4,69],[5,129],[23,116],[13,185],[20,117],[13,39],[20,159],[39,204],[-13,-7],[-26,-83],[-12,42],[-7,43],[8,98],[-16,186],[10,25],[9,13],[18,71],[21,70],[2,85],[17,61],[-4,52],[1,61],[4,49],[-2,41],[14,42],[24,32],[-10,11],[-10,23],[-31,-35],[-16,11],[-3,37],[4,39],[2,23],[12,27],[-1,52],[-6,46],[9,57],[-18,0],[-9,11],[5,32],[17,28],[-15,53],[11,57],[0,71],[-8,62],[0,45],[-11,79],[-6,101],[-24,76],[-19,110],[-48,144],[0,61],[-2,54],[-11,27],[-14,-192],[-11,38],[-3,107],[-7,50],[7,101],[-28,100],[-6,73],[-19,110],[6,25],[25,-25],[-23,64],[-19,-14],[-16,69],[-3,188],[-16,70],[9,71],[-18,257],[-35,82],[7,72],[9,63],[-2,118],[8,36],[17,28],[-16,-10],[-13,-8],[-32,-7],[-36,-2],[-12,86],[-18,41],[-16,86],[-9,98],[6,19],[-27,40],[-8,24],[-29,64],[-33,48],[8,-34],[9,-21],[-17,-59],[16,-99],[-14,-63],[-13,-82],[-12,-40],[-40,-84],[-32,-29],[-21,-5],[-19,9],[-23,44],[-5,36],[-4,61],[-8,9],[-9,-7],[14,-79],[0,-37],[24,-71],[-9,-20],[-44,-38],[-15,6],[-10,-8],[-3,-32],[-6,-18],[-69,-48],[-14,-56],[-9,-55],[-35,-80],[-46,-66],[-11,3],[-13,16],[2,71],[15,61],[-5,64],[-3,-37],[-30,-90],[-14,-29],[-27,8],[-38,-12],[-14,92],[0,34],[-3,29],[5,30],[-2,25],[-9,-47],[-3,-40],[-14,-35],[-38,-39],[-1,49],[-2,44],[8,39],[-1,63],[12,90],[-1,31],[-3,34],[-7,-50],[-4,-51],[-8,-16],[-13,-11],[-26,-60],[-15,-52],[-40,-50],[-20,5],[-3,63],[16,225],[15,32],[8,39],[12,131],[15,50],[6,104],[6,18],[19,82],[7,150],[-8,75],[-18,72],[-18,217],[-46,176],[-4,59],[-22,71],[21,5],[-43,62],[-6,26],[-9,146],[2,81],[-6,-11],[-6,-50],[-17,-21],[7,-87],[-1,-21],[-9,-33],[-36,35],[-26,38],[-30,93],[-29,104],[10,16],[13,2],[42,-77],[27,-16],[17,19],[21,33],[10,64],[-11,24],[-20,13],[-13,17],[-20,43],[-2,23],[-6,28],[-20,20],[-16,25],[14,45],[13,34],[-35,-2],[-39,58],[-9,16],[-13,12],[-31,7],[-26,-17],[12,-82],[-2,-27],[-17,4],[-36,124],[11,32],[15,30],[-7,4],[-15,-2],[14,111],[-9,16],[-4,-34],[-8,-34],[-30,-78],[-15,15],[-10,19],[14,41],[8,11],[5,22],[-11,43],[-18,32],[-14,53],[-7,1],[6,-63],[-2,-91],[-32,100],[-64,143],[-15,42],[-5,0],[-16,53],[-15,58],[-39,110],[-12,197],[-1,97],[-26,114],[-18,158],[-7,41],[9,51],[2,19],[-5,-4],[-14,-26],[-17,63],[-11,56],[-46,117],[-13,52],[-1,50],[-19,-50],[-27,-36],[-27,-54],[-18,-16],[-57,-10],[-33,72],[-47,175],[-7,40],[6,103],[-11,97],[0,52],[-3,34],[-8,-8],[-4,-23],[2,-36],[-3,-31],[-41,6],[-39,14],[34,-51],[36,-12],[19,-46],[3,-36],[-1,-40],[-19,-29],[-17,-17],[3,-39],[21,-47],[-26,-14],[-6,-31],[-1,-43],[13,-39],[5,-29],[-3,-26],[12,-29],[18,-60],[5,-42],[-7,-60],[-10,-23],[-16,-23],[-39,-75],[-19,-86],[-16,-40],[-20,-7],[-7,18],[-17,22],[0,42],[5,33],[33,81],[-18,-11],[-21,-23],[-31,-43],[-11,53],[-6,50],[0,61],[25,91],[-29,-45],[-8,-57],[4,-67],[-4,-47],[-11,-62],[-15,-37],[-25,-24],[-11,-37],[-17,-27],[0,54],[-5,71],[-18,168],[-4,-36],[9,-104],[0,-68],[-14,-54],[-27,-57],[-21,-8],[-12,8],[-19,36],[-20,51],[-4,82],[-8,45],[-7,-90],[-22,1],[20,-60],[6,-44],[3,-60],[-24,-7],[-16,7],[-14,52],[-7,-48],[-24,-44],[-9,22],[-5,23],[-1,41],[13,157],[-2,17],[-7,12],[-13,6],[-5,32],[-21,-167],[9,-68],[-4,-32],[-38,-26],[-39,63],[-5,20],[-3,-35],[-7,-43],[-36,8],[-19,33],[12,58],[23,137],[4,62],[-30,45],[-26,27],[-15,63],[6,-69],[14,-24],[20,-17],[21,-35],[-15,-43],[-15,-27],[-29,-101],[-34,-57],[-41,-42],[-132,-63],[-28,-25],[-41,-78],[-26,-74],[-5,-75],[15,-81],[12,-127],[10,-26],[-14,-47],[-25,-49],[-20,-66],[2,-37],[-5,-24],[-70,-82],[-15,-47],[-19,-48],[-23,27],[-14,0],[19,-38],[-3,-25],[-6,-14],[-18,-14],[-101,-60],[-77,-57],[-22,3],[4,17],[14,15],[-1,66],[-15,12],[-12,4],[-59,-79],[-23,-79],[5,-15],[13,4],[39,44],[19,-12],[1,-18],[-60,-68],[-126,-220],[-6,-44],[-17,-49],[-22,-46],[-41,-112],[-78,-167],[-21,-62],[-125,-128],[-23,-39],[-51,-125],[-53,-102],[-62,-85],[-106,-108],[-65,-102],[-20,-68],[-2,-25],[7,-33],[12,-30],[3,-25],[-6,-44],[-3,-24],[-19,-60],[-33,-43],[-105,-90],[-14,3],[-86,18],[-32,-17],[-13,-42],[-30,-174],[-28,-46],[-11,-42],[-4,-29],[-17,1],[-14,13],[-11,-10],[-12,59],[-21,12],[-17,4],[-73,-59],[-25,-47],[-53,-223],[-14,-144],[13,-159],[18,-127],[4,-57],[-2,-75],[-10,-36],[-6,-43],[8,-88],[23,-116],[5,-48],[1,-51],[17,-115],[-12,20],[-9,49],[-21,62],[-26,-62],[14,-44],[49,-53],[15,-44],[-32,-386],[-24,-138],[-29,-90],[-16,-34],[-34,-142],[-24,-172],[-5,-67],[11,-74],[-12,-43],[-16,-34],[30,15],[10,-40],[3,-42],[1,-246],[-3,-257],[-23,-11],[-25,-2],[-22,7],[-16,10],[-39,-14],[-21,-28],[-17,-47],[1,-81],[-72,-203],[-16,-67],[-6,-65],[10,-34],[18,-35],[24,-14],[47,-14],[23,-19],[15,-34],[-55,36],[-65,8],[-155,-95],[-41,-66],[-23,-57],[-15,-131],[-3,-88],[-18,-73],[-81,-112],[-51,-34],[-19,-30],[-60,39],[-66,98],[-27,53],[-97,253],[-18,32],[-19,108],[-4,41],[-5,16],[-9,11],[-5,16],[-21,124],[-9,130],[-14,144],[11,-10],[17,-47],[8,-70],[1,-96],[12,-11],[11,9],[-31,222],[-28,55],[-7,4],[-7,36],[-1,44],[2,22],[-21,72],[-8,44],[-48,220],[-22,157],[-33,175],[-22,62],[-34,135],[-28,63],[-30,84],[-24,38],[-9,19],[-70,292],[-21,162],[-18,76],[-9,58],[-25,247],[0,44],[-3,49],[-17,105],[-31,113],[-9,70],[1,28],[-20,110],[-4,50],[-13,47],[-15,42],[-16,34],[-37,112],[-14,27],[-25,72],[-18,134],[-23,52],[36,0],[-22,49],[-11,32],[-12,20],[17,50],[-27,-1],[-15,30],[-20,93],[-37,105],[-6,57],[-32,177],[-27,426],[-26,189],[2,54],[-30,165],[-15,110],[-6,93],[-8,61],[-7,121],[-12,39],[-1,23],[8,55],[22,85],[8,54],[-10,77],[-20,-80],[-18,-23],[-9,60],[0,80],[-2,20],[5,27],[49,-13],[-56,49],[-6,29],[-3,22],[12,40],[-20,33],[-8,103],[-6,24],[-2,19],[11,142],[48,280],[4,63],[-5,90],[-10,71],[-5,76],[-3,19],[-17,7],[-16,28],[-19,112],[17,36],[13,21],[-18,-9],[-15,3],[29,52],[25,39],[59,46],[25,30],[-37,-27],[-38,-10],[-83,6],[14,104],[14,35],[16,19],[-23,-6],[-27,9],[9,106],[21,22],[22,5],[28,15],[-30,17],[-31,9],[-37,-18],[-34,13],[-42,0],[17,-14],[17,-33],[-8,-57],[-9,-36],[-23,-24],[-18,-38],[-6,-32],[-10,-24],[18,-16],[19,-12],[11,-26],[13,-39],[-1,-75],[-49,-177],[-17,-39],[-124,-107],[-48,-58],[-104,-75],[-40,-14],[-44,15],[-66,57],[-99,147],[-26,48],[-79,189],[-57,99],[-44,93],[-54,88],[-51,118],[-10,54],[3,54],[19,30],[22,-12],[18,-46],[12,-21],[11,-8],[76,71],[29,-3],[20,35],[25,-7],[52,55],[22,3],[26,11],[42,140],[31,89],[20,19],[-1,22],[-5,28],[-16,-7],[-10,-27],[-8,-33],[-8,-19],[-24,18],[-17,-3],[-20,-11],[-75,-52],[-31,-47],[-20,-9],[-119,51],[-117,118],[-49,79],[-31,100],[-31,120],[10,33],[48,72],[42,56],[-37,-25],[-41,-35],[-20,-24],[-22,-51],[-31,-12],[-11,76],[-8,74],[-4,-34],[-10,-26],[-13,38],[-9,17],[-9,-13],[-14,2],[-26,42],[-11,-43],[-42,-9],[-5,32],[-1,30],[-23,-22],[-17,34],[-7,45],[-6,12],[-8,15],[-17,15],[-16,48],[-1,51],[-4,60],[-33,224],[-20,21],[-110,39],[-6,40],[8,105],[-3,66],[-36,88],[-10,61],[-29,52],[-29,15],[-30,-7],[-15,-20],[-9,-35],[63,8],[14,-13],[17,-23],[-18,1],[-21,11],[-26,-1],[-98,-26],[-56,-37],[-76,11],[-96,-36],[-79,-2],[-33,-71],[-18,12],[-14,18],[-109,56],[-7,23],[-18,17],[-20,-30],[-15,-5],[-59,25],[-46,-19],[-17,-32],[-1,-50],[-57,10],[-32,15],[-43,-17],[-98,23],[-25,-6],[-36,-33],[-15,-26],[-21,-10],[-18,36],[-14,16],[-13,-10],[-18,-30],[-50,-14],[-46,4],[-58,33],[-12,-24],[-22,-30],[-47,23],[-37,24],[-124,57],[-13,28],[-8,48],[-21,13],[-31,-72],[-104,42],[-36,-13],[-21,22],[-57,2],[-44,45],[-64,-31],[-50,-6],[-69,79],[-74,22],[-60,-7],[-31,6],[-50,29],[-24,29],[-39,-22],[-18,41],[-110,38],[-21,74],[-15,68],[-1,70],[-27,123],[-9,177],[-10,70],[-15,60],[-20,51],[-27,55],[-24,22],[-103,42],[-20,-6],[-46,-27],[-49,-61],[-81,-34],[-17,-26],[-20,-59],[-26,-35],[-36,9],[-39,-35],[-72,-97],[-38,-29],[-32,2],[-34,46],[-76,62],[-49,20],[-69,-14],[-32,11],[-56,72],[-14,53],[-32,35],[-99,79],[-81,105],[-15,39],[-10,59],[-35,71],[-79,58],[-45,61],[-52,14],[-49,-2],[-21,11],[-20,27],[-67,127],[0,51],[-41,124],[-10,45],[-9,123],[-11,32],[-43,51],[-7,33],[10,44],[0,34],[-23,31],[-33,17],[-8,38],[6,73],[-5,47],[-30,73],[-43,76],[-44,111],[-17,28],[-11,73],[-16,87],[-24,6],[-119,-104],[-35,59],[-104,102],[-8,15],[-7,23],[13,14],[13,5],[26,-18],[16,21],[-6,35],[-26,21],[-36,-2],[10,-32],[-34,-30],[-7,-41],[5,-49],[3,-70],[-14,-33],[-10,-16],[-45,-4],[-21,-31],[-14,-7],[-25,-14],[-28,11],[-59,48],[-19,2],[-25,-19],[-1,-16],[-2,-21],[9,-64],[20,-69],[17,-56],[2,-27],[-15,4],[-12,11],[-22,11],[-42,-75],[-26,-40],[0,-14],[34,-16],[25,1],[17,11],[15,-18],[10,-46],[4,-37],[23,-133],[19,-45],[24,-80],[9,-41],[5,-35],[15,-51],[15,-54],[7,-54],[29,-128],[41,-100],[9,-36],[7,-55],[-7,-21],[-3,-23],[30,-55],[51,-46],[19,-12],[22,-21],[-17,-31],[30,-74],[34,-74],[37,-17],[50,-113],[74,-73],[46,-96],[-4,-2],[-14,10],[-16,13],[-5,-12],[0,-40],[5,-47],[23,-41],[21,-29],[8,-56],[-17,-120],[-5,1],[-11,10],[-12,2],[-6,-7],[14,-86],[13,-66],[17,-52],[14,-77],[11,-32],[49,-82],[14,-68],[14,-127],[30,-70],[17,-55],[22,-46],[8,35],[3,22],[-19,167],[-6,128],[2,26],[11,30],[19,66],[9,65],[28,148],[29,57],[43,42],[35,-82],[43,-63],[8,-70],[-13,-57],[-11,-90],[7,-42],[2,-36],[12,-61],[11,-78],[2,-55],[-6,-51],[-15,-42],[-29,-129],[-9,-13],[-36,-22],[20,-24],[20,3],[2,-23],[-13,-31],[-17,-78],[24,-13],[22,-6],[17,-13],[9,0],[10,30],[5,-21],[12,-29],[19,7],[9,-5],[7,-103],[14,-37],[18,-15],[59,-8],[36,14],[73,67],[38,25],[105,-5],[84,-28],[131,-16],[26,4],[70,54],[44,48],[26,14],[17,46],[11,60],[10,39],[13,19],[12,33],[9,55],[25,54],[97,133],[57,113],[5,36],[32,55],[24,59],[117,171],[23,70],[14,79],[1,6],[24,83],[9,13],[8,-6],[22,9],[11,45],[9,25],[10,-3],[4,-14],[-3,-69],[0,-57],[-12,-175],[-13,-30],[-6,-25],[-2,-34],[18,-46],[2,-318],[5,-22],[28,-152],[42,-142],[37,-78],[38,-106],[59,-98],[27,-33],[108,-69],[60,-25],[82,-25],[57,-53],[19,-3],[29,15],[22,-1],[54,-73],[16,-69],[23,-36],[20,-57],[13,-60],[45,-92],[33,-103],[33,-76],[29,-47],[44,-19],[36,-21],[4,-51],[-4,-67],[-7,-49],[-33,-96],[-8,-59],[-37,-97],[-41,-163],[-18,-37],[-66,-84],[-48,-102],[-57,-176],[-43,-174],[-17,-56],[-35,-12],[-23,5],[-15,17],[6,47],[4,54],[-21,-6],[-19,-11],[-43,-131],[-24,-57],[-5,-73],[-12,-94],[-16,-86],[-8,-73],[0,-41],[13,-101],[1,-103],[7,-62],[6,-74],[-20,-23],[-18,-11],[-68,-8],[-70,-24],[-61,-43],[-37,-43],[-47,-95],[-29,-243],[-47,-103],[-31,-21],[-76,-9],[-106,-28],[-38,-25],[-62,-148],[-5,-47],[12,-34],[4,-37],[-5,-35],[-29,-94],[-30,-68],[-81,-43],[-30,25],[-27,13],[-53,2],[-86,-17],[-31,-50],[-50,-36],[-46,-55],[-87,-21],[-59,-43],[-140,-103],[-37,-45],[-33,-57],[-25,-70],[-18,-124],[13,-113],[-1,-60],[-36,-40],[-34,-29],[-37,-44],[-23,-11],[-19,-35],[-21,-25],[-78,-63],[-86,-50],[-135,-59],[-53,-64],[-47,-44],[-73,-13],[-99,-61],[-55,-48],[-69,-80],[-15,-25],[-12,-58],[-21,-51],[-42,-83],[-31,-42],[-20,-2],[-41,-23],[-47,-5],[-80,29],[-21,-20],[-17,-33],[-61,-56],[-63,-114],[-46,-30],[-74,-36],[-52,-47],[-35,-19],[-44,-10],[-83,5],[-79,-17],[-73,-32],[-34,-60],[-39,-96],[-64,-40],[-15,-34],[-20,-71],[-41,-18],[-38,-12],[-38,31],[-72,-85],[-27,-15],[-41,-3],[-30,-18],[-21,5],[-26,34],[-56,40],[-41,-26],[-3,80],[-68,247],[14,215],[0,30],[-13,96],[-40,87],[1,111],[-14,80],[-10,81],[3,22],[1,20],[-21,125],[-7,26],[-2,26],[6,20],[0,24],[-11,38],[-11,74],[-55,57],[11,54],[11,-19],[14,-16],[3,35],[0,26],[-23,163],[34,218],[-11,195],[-3,46],[-16,68],[-1,49],[-8,48],[-14,37],[-26,38],[-3,53],[-19,52],[-25,42],[-15,77],[-10,103],[-67,135],[-84,124],[-26,71],[-42,143],[-21,113],[-56,130],[-2,50],[-9,61],[-13,68],[-7,54],[-57,235],[-18,37],[-16,53],[-4,40],[-5,22],[-39,39],[-38,99],[-111,157],[-55,15],[-43,56],[-32,74],[-34,126],[-60,136],[-50,194],[16,71],[-1,49],[-16,84],[-17,64],[-12,61],[10,88],[3,98],[10,52],[7,57],[-9,115],[-17,61],[2,41],[-19,20],[-16,45],[16,-1],[-29,62],[-11,34],[-11,84],[-14,64],[-45,146],[-22,89],[-49,114],[-53,85],[-33,38],[-16,35],[-28,2],[-30,50],[-21,1],[-26,8],[-31,97],[-26,90],[-44,118],[11,31],[13,50],[-6,65],[-7,44],[-19,81],[-64,202],[-17,29],[-27,34],[-16,88],[-8,78],[-44,38],[-74,282],[-44,99],[-17,66],[-50,109],[-24,109],[-51,100],[-44,173],[-67,174],[-29,30],[-69,12],[-30,13],[-27,-38],[-2,48],[19,67],[26,140],[6,123],[42,364],[9,76],[-3,40],[-19,-44],[-15,-26],[-32,-93],[-33,-296],[-47,-231],[-5,-144],[-8,-52],[-23,-73],[-27,-72],[-49,37],[-79,126],[-46,120],[-49,77],[-47,103],[-13,73],[1,48],[-21,115],[-15,55],[-57,123],[-16,65],[-13,29],[-12,41],[-21,160],[-23,101],[-25,-28],[4,-43],[-22,-59],[-14,-68],[11,-56],[46,-85],[10,-37],[11,-80],[-2,-110],[7,-37],[35,-81],[13,-48],[7,-42],[12,-38],[34,-71],[50,-134],[47,-91],[35,-44],[14,-44],[3,-113],[-2,-55],[30,-101],[11,-52],[29,-42],[13,-48],[12,-78],[18,-231],[26,-56],[77,-303],[66,-192],[32,-144],[48,-174],[95,-383],[56,-118],[22,-66],[41,-51],[44,-74],[-42,7],[-10,-5],[-15,-12],[-7,-45],[-3,-37],[5,-194],[11,-98],[37,-188],[28,-56],[14,-36],[18,-27],[88,-63],[52,-136],[115,-170],[11,-47],[0,-11],[4,-132],[12,-105],[43,-150],[36,-81],[13,-44],[1,-21],[-1,-19],[-11,22],[-19,15],[-3,-70],[5,-50],[4,-94],[15,-101],[-11,-93],[2,-158],[19,-190],[-4,-120],[32,-283],[30,-156],[17,-39],[19,-20],[36,-14],[53,-79],[43,-85],[15,-44],[20,-48],[14,9],[9,12],[13,-39],[67,-84],[10,-39],[84,-333],[34,-196],[30,-206],[23,-308],[21,-157],[34,-78],[23,-146],[21,-6],[14,-40],[25,-138],[18,-51],[9,44],[-1,25],[-7,43],[7,54],[14,33],[31,-44],[18,-34],[5,-68],[7,-37],[33,-80],[28,-23],[37,-6],[30,-17],[25,-29],[46,-81],[104,-71],[85,-216],[49,-151],[163,-227],[28,-110],[15,-106],[34,5],[59,-117],[17,-89],[48,-32],[9,52],[23,-43],[9,-67],[4,-27],[47,-114],[15,-56],[16,-102],[-9,-56],[-12,-37],[-18,-33],[-62,-81],[-69,-52],[-44,-103],[-33,7],[5,-39],[12,-5],[19,8],[38,30],[34,14],[37,1],[33,-13],[23,-38],[54,-88],[53,-180],[62,-144],[85,-135],[33,-45],[30,-24],[155,4],[109,122],[100,89],[33,18],[58,-24],[64,-7],[57,-27],[29,7],[114,103],[71,101],[48,42],[20,1],[66,-36],[85,15],[117,87],[37,18],[28,1],[64,-39],[9,2],[35,7],[90,41],[71,63],[130,45],[99,114],[17,55],[30,70],[43,23],[111,-82],[18,-6],[-7,-50],[-3,-50],[-23,-88],[-15,-98],[11,-149],[5,-242],[-3,-35],[-7,-34],[-3,-28],[-12,-9],[-5,-16],[9,-6],[34,26],[0,29],[2,14],[28,-32],[21,-13],[5,-31],[-1,-20],[-32,9],[-17,16],[-48,-26],[-29,-29],[-9,-47],[-7,-190],[-11,-123],[-3,-162],[-38,-108],[-14,-76],[-57,-152],[-31,-130],[-9,-64],[-51,-178],[-70,-137],[-25,-174],[-25,-110],[-28,-99],[-62,-177],[-31,-122],[-40,-213],[-12,-135],[-111,-391],[-115,-312],[-72,-263],[-129,-305],[-176,-393],[-230,-467],[-62,-95],[-252,-288],[-163,-241],[-83,-164],[-88,-143],[-69,-136],[-210,-460],[-22,-43],[-20,-41],[-27,-77],[-18,-31],[-50,-131],[-31,-69],[-36,-67],[-14,-47],[-11,-55],[-12,-31],[-31,-130],[-28,-86],[-28,-67],[-40,-99],[-33,-45],[-45,-21],[-13,4],[-18,14],[-7,-24],[-5,-37],[-10,8],[-7,11],[4,-66],[5,-32],[-7,-44],[-22,-38],[-2,-32],[-47,-85],[-66,-10],[-35,-42],[-16,-34],[-12,-75],[5,-116],[-19,-88],[-3,-45],[-35,-57],[-15,-53],[-11,-54],[-10,-24],[-12,-120],[-16,-73],[-4,-25],[-4,-22],[-12,-43],[-8,-29],[-6,-20],[-41,-187],[-32,-85],[-24,10],[-17,-33],[-2,-15],[-5,-49],[-22,-117],[-1,-49],[-9,-58],[-8,-38],[-22,-165],[-19,-62],[-25,-145],[-5,-111],[15,-78],[5,-72],[30,-72],[23,-25],[17,-33],[28,-74],[17,-75],[51,-37],[20,-83],[-7,-58],[-24,-48],[-22,-77],[-18,-102],[-1,-155],[13,23],[27,-38],[3,-114],[-28,-134],[-8,-62],[-2,-53],[21,-160],[30,-81],[-2,-26],[-8,-21],[53,-144],[-5,-125],[20,-97],[9,-84],[13,-65],[2,-44],[-16,-50],[39,-12],[22,-41],[11,-39],[28,2],[15,-26],[22,-22],[47,-65],[13,-33],[5,-19],[3,-12],[15,-60],[26,-54],[-15,-31],[-19,-28],[30,-38],[-22,-57],[-3,-40],[6,-15],[5,-24],[-15,-65],[-20,-50],[-5,-38],[18,-68],[-9,-119],[17,-108],[4,-55],[6,-37],[-8,-67],[2,-111],[4,-46],[-10,-57],[17,-20],[9,-63],[-3,-71],[-5,-38],[-29,-46],[-4,-18],[1,-27],[36,-1],[2,-42],[-3,-33],[2,-63],[-5,-40],[8,-46],[-10,-51],[4,-40],[0,-51],[9,-130],[1,-160],[2,-25],[13,-18],[18,-9],[0,-44],[-21,-58],[-1,-35],[3,-50],[22,68],[14,-1],[12,-26],[-2,-39],[4,-20],[-2,-38],[7,-48],[-3,-42],[-16,-29],[-21,-50],[-4,-48],[2,-30],[-14,-10],[-7,-19],[10,-45],[-1,-39],[-25,-123],[-68,-167],[-30,-59],[-27,-65],[0,-27],[-3,-23],[-32,-92],[-34,-15],[-20,-25],[15,-81],[-22,-19],[-39,-64],[-106,-122],[-17,-29],[-27,-75],[-35,-19],[-20,-21],[-36,-8],[-12,6],[-12,-3],[-10,-16],[-70,-53],[-66,-42],[-16,-19],[-11,-26],[-58,-41],[-91,-103],[-74,-97],[-54,-98],[-14,-15],[-17,-33],[-5,-50],[-6,-28],[-40,-103],[-60,-121],[-11,-34],[-24,-67],[-2,-44],[-22,-14],[-18,42],[-7,-81],[-15,-6],[-16,17],[-40,-41],[-35,-46],[-56,-98],[-80,-191],[-116,-183],[-16,-5],[-10,0],[-37,64],[-20,5],[18,-38],[12,-32],[-3,-61],[1,-93],[-14,-181],[2,-40],[16,-51],[31,-62],[30,-79],[37,-224],[3,-115],[39,-147],[1,-64],[16,-159],[-1,-128],[-3,-79],[19,-33],[7,30],[-2,50],[5,80],[10,35],[11,-5],[3,-38],[7,-33],[3,-31],[0,-43],[-14,-162],[4,-66],[19,-110],[-22,-128],[-33,-301],[-1,-52],[7,-23],[18,-7],[6,38],[11,0],[5,-23],[-14,-139],[-15,-61],[-51,-149],[-27,-64],[-46,-63],[-106,-98],[-215,-142],[-85,-70],[-50,-42],[-108,-132],[-47,-88],[-19,-102],[-19,-47],[-18,-59],[16,-50],[16,-39],[18,-25],[10,-22],[12,-16],[13,80],[6,25],[11,2],[-6,-98],[-13,-333],[-1,-11],[-10,-133],[-40,-208],[-13,-95],[-34,-341],[-44,-172],[-25,-71],[-72,-126],[-20,-25],[-18,-17],[-31,-14],[-123,-254],[-46,-123],[-41,-178],[-40,-98],[-60,-210],[-53,-161],[-51,-147],[-88,-203],[-39,-59],[-27,-26],[-70,-118],[-99,-189],[-75,-168],[-113,-190],[-65,-84],[-99,-164],[-27,-24],[-111,-152],[-79,-93],[-129,-107],[-51,-30],[-122,28],[-51,-15],[-43,-65],[-4,-93],[-18,-14],[-27,4],[-85,39],[-46,-7],[-27,-50],[-22,-63],[-64,-3],[-115,65],[-135,40],[-31,4],[-65,-48],[-23,-7],[-95,10],[-53,31],[-51,0],[-38,-26],[-47,-8],[-127,-175],[-66,0],[-56,-21],[-28,1],[-53,24],[-19,-1],[-30,-11],[-30,-31],[-68,-13],[-26,-27],[-115,-159],[-26,6],[-22,11],[-59,1],[-68,86],[-26,-6],[7,26],[2,45],[-14,32],[-10,14],[-26,-3],[-14,39],[-41,3],[-14,-9],[-20,-2],[-1,39],[1,24],[-1,38],[-5,46],[-16,15],[-12,6],[-28,-3],[-20,-5],[-10,-14],[-10,-33],[0,-103],[-15,29],[-16,62],[-5,66],[6,78],[31,29],[-3,53],[-6,45],[-35,117],[-13,54],[-29,36],[-23,87],[-23,32],[-9,61],[-22,49],[-8,77],[12,44],[20,24],[20,-38],[24,15],[35,56],[21,85],[1,135],[-5,85],[-28,219],[-13,50],[-63,157],[-72,210],[-92,330],[-44,199],[-66,401],[-59,227],[-72,212],[-9,14],[-31,47],[-91,175],[-32,46],[-48,107],[-105,334],[-15,64],[-20,161],[-23,120],[-3,69],[11,39],[-6,53],[-12,47],[-36,62],[-10,208],[-24,134],[5,110],[-11,101],[-1,65],[5,123],[-19,141],[-39,138],[-35,199],[-5,88],[3,235],[-6,95],[0,113],[-14,117],[-6,63],[10,51],[6,-16],[10,-8],[7,67],[1,59],[-17,146],[-39,149],[-97,244],[-24,92],[-13,77],[-108,321],[-46,226],[-33,196],[-35,90],[-162,634],[-36,101],[-65,121],[-15,41],[-25,115],[-48,155],[-12,144],[-4,164],[6,125],[11,218],[11,96],[0,116],[-7,298],[-7,41],[-5,48],[27,37],[14,27],[19,50],[13,69],[16,153],[58,352],[27,345],[35,163],[13,183],[96,236],[24,145],[50,72],[70,75],[51,135],[24,94],[28,179],[-1,187],[18,250],[-4,72],[-26,99],[-5,71],[-24,70],[-27,53],[-12,94],[-45,149],[-13,99],[-21,71],[-4,88],[-11,93],[-22,92],[-22,105],[0,32],[14,40],[12,13],[-4,-20],[-8,-23],[2,-19],[84,184],[6,36],[-3,41],[-1,49],[4,57],[-80,340],[-64,316],[-10,159],[-84,210],[-33,137],[-19,96],[-15,36],[6,18],[21,5],[49,22],[65,24],[61,56],[17,24],[-19,17],[-39,-11],[-19,-13],[-31,-48],[-46,-25],[-17,2],[-12,8],[-27,53],[-20,50],[-8,28],[-4,16],[-12,57],[7,54],[7,41],[-8,82],[-18,74],[-20,93],[-6,18],[-4,13],[-10,16],[-21,51],[-20,63],[-5,29],[-6,17],[-1,64],[-30,75],[-77,135],[-8,40],[-65,124],[-27,51],[-24,95],[-27,58],[-58,94],[-15,69],[-66,153],[-95,152],[-69,133],[-10,29],[12,-3],[66,-66],[9,7],[7,15],[-28,34],[-27,28],[-26,17],[-26,-2],[-14,28],[-9,43],[-5,36],[-11,38],[-37,79],[-9,30],[-19,41],[12,6],[39,-40],[3,16],[-3,23],[-39,38],[-22,2],[-5,27],[3,30],[-28,115],[-29,85],[-4,41],[78,-186],[11,-4],[13,2],[33,21],[-6,25],[-15,26],[-14,-12],[-19,-2],[-9,11],[-5,19],[19,90],[-8,-4],[-6,-16],[-10,-8],[-16,-5],[-39,49],[-34,130],[-9,27],[-9,46],[-9,18],[-39,186],[15,-14],[18,-53],[35,11],[13,31],[12,-1],[12,7],[15,29],[45,128],[12,169],[-4,100],[-7,100],[15,32],[6,-21],[3,-36],[7,-26],[16,-23],[29,-7],[46,-36],[16,-24],[4,47],[53,40],[-16,14],[-47,-15],[-64,59],[-21,38],[-20,72],[-20,38],[1,34],[46,31],[12,-4],[5,-37],[12,-15],[5,5],[2,31],[0,86],[-14,122],[5,23],[2,13],[-25,35],[-18,3],[-16,11],[13,90],[17,80],[25,61],[13,14],[4,30],[20,99],[25,80],[-8,81],[6,136],[6,135],[12,113],[5,105],[18,93],[-9,93],[-11,40],[-57,131],[26,50],[-34,-7],[-7,49],[-17,58],[10,10],[10,32],[31,-10],[-1,16],[-27,49],[3,25],[11,27],[-6,12],[-19,-29],[-14,1],[-10,19],[-8,3],[5,-38],[-11,-33],[-10,-12],[-18,2],[-14,8],[-4,19],[-13,15],[-38,24],[-31,30],[-7,80],[-12,34],[-6,39],[-3,44],[5,69],[-8,11],[-9,3],[-14,-3],[-13,4],[-15,38],[-13,14],[8,-69],[-9,-20],[-23,6],[-9,26],[-2,20],[10,84],[-4,2],[-3,1],[-8,-19],[-23,13],[-11,39],[-14,6],[-25,57],[-5,-9],[26,-145],[-10,-57],[-73,-1],[-64,-19],[-43,1],[-22,21],[-10,54],[-3,-5],[-3,-30],[-13,-22],[-49,-5],[-22,37],[-17,42],[-19,18],[3,-17],[22,-41],[-3,-58],[-39,-67],[-25,-4],[-16,29],[-8,47],[-4,70],[-10,46],[-6,0],[5,-42],[2,-34],[0,-71],[19,-55],[-29,-17],[-11,-1],[-23,-1],[-4,20],[-5,46],[-6,12],[-7,-78],[-15,-5],[-10,1],[-46,-17],[-10,3],[-2,14],[6,22],[-2,35],[-15,-27],[-3,-54],[-9,-8],[-27,7],[-29,28],[-18,28],[-30,39],[-58,111],[-10,49],[-17,61],[-12,62],[-18,105],[5,8],[14,-9],[7,15],[-25,12],[-5,12],[-1,37],[1,45],[19,16],[18,8],[8,27],[5,28],[-45,-42],[-43,47],[-9,29],[4,22],[21,3],[29,-1],[17,21],[-10,8],[-19,-1],[-7,14],[0,34],[-6,-7],[-8,-31],[-29,-22],[-16,22],[-2,50],[-4,23],[-14,17],[-50,132],[-63,110],[-57,76],[-84,36],[-178,-2],[-10,11],[11,17],[16,12],[57,61],[-10,8],[-59,-38],[-21,-4],[-26,-74],[-156,-12],[-19,-3],[-116,-24],[-130,-39],[-55,-25],[-86,-41],[-35,-33],[-22,-22],[-16,-33],[-12,-50],[-16,-55],[-55,-29],[-22,-1],[-114,-1],[-108,-109],[-61,-39],[-38,-61],[-51,-44],[-36,-53],[-74,-25],[-122,-83],[-38,-33],[-38,-58],[-63,-68],[-24,1],[-49,63],[-37,32],[-90,49],[-67,18],[-33,21],[-8,4],[-37,15],[8,19],[36,-11],[19,1],[-2,12],[-11,4],[-29,26],[5,83],[-13,4],[-11,-11],[-20,-101],[-10,-17],[-146,52],[-31,42],[-38,9],[-66,-5],[-54,-12],[-16,-25],[137,15],[15,-3],[7,-16],[-173,-33],[-67,-19],[-19,5],[-15,32],[-72,4],[-15,-11],[-8,-23],[28,5],[44,1],[12,-18],[-139,-24],[-97,-45],[-41,-33],[-135,-110],[-83,-52],[-22,-20],[-37,-53],[-48,-34],[-54,-64],[-33,-14],[-32,9],[-94,82],[-73,47],[-242,267],[-68,108],[-77,160],[-173,322],[-39,51],[-50,25],[-31,28],[-21,30],[-18,89],[-43,53],[-80,75],[-60,126],[-11,23],[-52,82],[-54,55],[-116,91],[-39,25],[2,33],[13,59],[-22,69],[9,51],[-9,0],[-16,-31],[-36,9],[-23,44],[-19,15],[-9,22],[-12,115],[-9,52],[-17,32],[-36,8],[-15,69],[-19,54],[3,34],[16,-2],[13,-24],[20,-10],[25,58],[23,32],[5,28],[-3,15],[-14,-24],[-37,6],[-9,-21],[-17,-7],[-13,69],[1,40],[5,45],[38,7],[3,14],[-26,10],[-33,52],[-6,35],[-3,17],[10,53],[-8,28],[-28,55],[-2,27],[-9,34],[-36,71],[-35,-4],[10,59],[-1,79],[-11,43],[3,44],[-7,-2],[-11,-31],[-18,10],[-38,47],[-18,46],[-3,38],[-4,15],[-11,-8],[-24,1],[-71,69],[-51,174],[-1,39],[7,67],[-1,19],[-23,-45],[-5,30],[-18,70],[-5,40],[-17,17],[-14,4],[-10,-14],[-14,-81],[-11,0],[-10,18],[2,61],[-14,40],[11,76],[-12,-1],[-23,-61],[-12,-2],[2,72],[-13,3],[-15,-5],[-21,37],[-2,28],[1,40],[13,25],[-2,10],[-12,3],[-14,-6],[-8,11],[14,51],[49,43],[24,5],[26,9],[-14,37],[-30,15],[-24,-10],[-12,-27],[-15,-5],[-25,63],[1,31],[9,38],[14,16],[57,0],[22,21],[9,4],[8,19],[-2,12],[-9,1],[-21,-25],[-69,10],[-22,-15],[-38,-58],[-47,-31],[-34,13],[11,77],[-5,10],[-10,13],[-50,-25],[-38,35],[-15,43],[3,53],[17,36],[3,18],[-19,3],[-34,-22],[-77,86],[-9,26],[-11,42],[7,31],[23,20],[34,26],[19,-14],[10,0],[2,16],[-3,9],[-26,22],[-14,30],[-11,-17],[-10,-37],[-8,-10],[-12,-11],[-6,25],[-3,24],[5,19],[-2,104],[3,55],[-2,49],[-2,49],[-15,111],[21,48],[22,29],[15,-23],[5,-45],[12,-31],[39,-20],[40,14],[24,-6],[-1,25],[8,33],[48,15],[50,9],[52,20],[41,-1],[12,6],[-3,8],[-36,10],[-78,-23],[-80,-7],[-60,-60],[-24,6],[-25,60],[-9,74],[-7,59],[-17,47],[-27,40],[-6,37],[9,33],[26,26],[6,19],[-13,-2],[-21,-18],[-14,0],[-1,51],[-23,66],[-26,112],[-30,46],[-24,91],[-26,35],[-24,16],[-20,-3],[-7,-42],[-25,60],[34,21],[73,75],[85,215],[76,253],[9,60],[0,258],[15,97],[5,85],[33,187],[38,153],[36,204],[14,197],[-5,193],[-11,172],[-18,113],[-17,164],[-26,87],[-47,76],[-11,44],[11,16],[29,12],[18,59],[-38,-23],[44,181],[14,123],[-2,81],[9,50],[-35,108],[-26,136],[-14,22],[-14,11],[-1,-32],[-8,-29],[-17,18],[-29,99],[-41,161],[-15,17],[-12,-23],[-7,-21],[-14,-134],[-14,29],[25,300],[22,301],[38,149],[30,66],[47,35],[43,150],[16,138],[28,64],[9,50],[-11,38],[27,75],[32,114],[15,73],[38,113],[5,25],[-4,29],[-15,-25],[-16,-41],[-19,-33],[8,40],[15,60],[34,62],[53,69],[110,234],[42,41],[37,98],[14,88],[4,200],[13,106],[24,83],[29,150],[22,68],[15,136],[16,53],[28,24],[40,69],[60,42],[71,89],[33,53],[23,79],[24,158],[42,166],[23,127],[37,66],[26,83],[43,37],[90,18],[134,69],[120,104],[34,42],[37,83],[60,108],[114,130],[52,72],[79,182],[53,150],[44,97],[30,86],[21,87],[12,140],[-8,55],[-33,89],[-23,24],[-6,42],[12,75],[0,128],[7,204],[37,165],[91,217],[17,88],[10,142],[1,50],[114,200],[67,154],[23,37],[59,70],[205,154],[116,109],[68,80],[40,94],[112,371],[110,521],[9,61],[49,17],[35,7],[28,19],[34,40],[33,-16],[-16,-27],[0,-64],[23,-75],[41,-85],[75,-107],[58,-43],[83,-26],[96,47],[54,1],[27,20],[28,-30],[55,-9],[52,16],[40,45],[25,51],[4,-25],[1,-28],[8,-16],[15,-66],[9,-25],[30,4],[26,-13],[59,6],[57,-11],[56,-11],[29,5],[67,51],[52,69],[41,36],[37,75],[32,48],[48,52],[136,111],[21,1],[45,-25],[39,8],[27,39],[29,93],[44,57],[57,58],[76,54],[50,51],[80,43],[199,28],[102,24],[70,-5],[70,80],[35,26],[152,6],[72,58],[272,0],[33,-19],[33,-32],[56,-75],[27,-17],[36,16],[84,72],[94,37],[51,42],[22,62],[44,23],[25,-47],[98,-48],[60,13],[26,15],[-9,71],[63,-19],[49,-34],[51,-69],[33,-14],[60,31],[125,16],[68,35],[66,91],[23,22],[152,84],[19,-6],[22,-12],[-6,-31],[-9,-25],[13,-44],[18,27],[-4,18],[-1,23],[31,2],[28,-3],[30,-26],[-2,-100],[40,-97],[-11,-48],[33,-29],[29,35],[15,51],[54,29],[52,74],[28,8],[6,-61],[14,-54],[-19,-18],[-25,-57],[-47,-144],[-43,-42],[-33,-56],[-10,-39],[-3,-46],[8,-82],[23,-84],[28,-51],[26,-15],[61,-80],[-1,-47],[9,-57],[3,-68],[21,-55],[-45,-119],[-25,-86],[-49,-118],[-43,-77],[-93,-115],[-23,-38],[-15,-39],[-7,-41],[3,-49],[30,-119],[41,-70],[41,-38],[72,16],[-2,-46],[5,-55],[29,3],[20,8],[16,54],[36,-37],[18,-111],[30,-35],[3,-13],[-10,-9],[-9,-13],[9,-9],[29,-14],[17,9],[29,-24],[43,-37],[43,-14],[130,-136],[40,-17],[91,-16],[107,56],[40,10],[71,-52],[31,-15],[52,-4],[89,-47],[22,-17],[52,-75],[25,-23],[184,-69],[25,-46],[26,-87],[1,-109],[14,-79],[23,-102],[28,-72],[30,-61],[35,-37],[81,-56],[91,-21],[92,-8],[158,-76],[133,-89],[33,-44],[67,-43],[134,-208],[74,-72],[52,-14],[46,13],[83,72],[34,43],[84,180],[27,94],[11,66],[-3,67],[-10,61],[-23,63],[-17,84],[-9,151],[13,104],[16,63],[25,64],[69,122],[70,86],[122,113],[71,1],[30,12],[58,80],[24,3],[33,-20],[97,6],[42,-22],[51,-50],[64,-31],[45,-30],[48,-40],[11,-98],[-5,-29],[-1,-38],[50,-68],[142,-32],[28,-18],[39,-52],[25,-16],[97,-7],[57,11],[54,-18],[20,-18],[21,-40],[25,-99],[10,-33],[21,-70],[43,-12],[142,62],[157,-62],[86,-24],[133,-54],[81,-95],[23,-12],[58,2],[38,-56],[152,-27],[81,-62],[46,-50],[28,-15],[24,2],[33,19],[42,35],[45,48],[94,125],[33,22],[22,-6],[27,2],[11,33],[14,23],[8,27],[15,31],[48,9],[98,54],[-11,-25],[-89,-61],[38,-8],[39,21],[45,13],[8,26],[6,49],[9,6],[30,-9],[92,-74],[23,-2],[65,41],[13,9],[21,-23],[48,-93],[-17,2],[-51,80],[-4,-40],[-29,-70],[36,-30],[30,-11],[16,-39],[10,-35],[29,15],[21,47],[-11,27],[-8,27],[10,1],[20,-23],[58,-89],[20,-19],[22,3],[48,26],[13,-4],[63,33],[8,-25],[10,-24],[51,27],[80,0],[66,29],[76,71],[6,11],[52,92],[25,59],[2,4],[54,175],[35,173],[33,241],[23,122],[20,81],[9,67],[13,44],[13,57],[13,77],[24,64],[49,217],[28,87],[10,125],[43,109],[33,32],[15,31],[0,47],[-22,129],[-3,55],[1,65],[15,94],[-7,43],[-1,30],[-4,40],[-38,87],[21,160],[15,39],[17,47],[-19,93],[-21,86],[20,56],[41,67],[44,79],[0,48],[-3,37],[-12,25],[-24,34],[-40,-36],[-29,-40],[-18,-8],[-21,-23],[-10,-41],[-24,-32],[-40,-13],[-60,35],[-65,52],[-37,42],[-30,10],[-28,-18],[-84,-104],[-77,-152],[-19,-26],[-72,-65],[-48,-22],[-22,5],[-95,-29],[-48,-4],[-37,-34],[-72,37],[-44,48],[-26,48],[-42,105],[-31,49],[-67,45],[-119,108],[-31,12],[-80,16],[-85,10],[-18,-40],[-6,-156],[-15,-43],[-6,-81],[-10,-24],[-17,-15],[-25,26],[-18,11],[-41,-33],[-82,-47],[-28,-7],[-94,59],[-35,38],[-22,42],[-8,71],[-14,40],[-2,28],[-5,31],[-19,13],[-21,-24],[-22,1],[-27,15],[-65,59],[-50,5],[-30,-73],[-24,-23],[-25,-7],[-2,21],[20,47],[-78,-9],[-41,-35],[-32,5],[-24,16],[3,20],[25,7],[21,16],[84,13],[20,13],[21,51],[40,44],[5,19],[-31,0],[-129,-13],[-89,7],[-10,-21],[-14,-4],[-3,60],[14,27],[19,-3],[46,24],[-4,49],[-33,34],[-7,19],[-24,5],[-20,23],[-4,59],[-15,65],[-23,31],[3,17],[41,22],[8,90],[-6,56],[-20,4],[-60,44],[-18,-4],[-20,48],[-35,34],[-17,-12],[-11,-16],[-16,7],[-26,30],[-27,17],[-12,20],[15,53],[20,-1],[4,42],[-16,70],[2,36],[17,9],[20,-6],[21,-42],[6,-41],[-4,-39],[13,-38],[9,-10],[6,41],[9,7],[12,-17],[25,-9],[66,24],[12,21],[-48,-2],[-17,19],[-20,44],[-11,40],[-3,19],[-6,29],[7,15],[33,23],[29,64],[-12,18],[-14,9],[-15,-6],[-14,22],[-2,30],[12,25],[1,34],[-38,83],[-10,18],[8,28],[29,45],[27,57],[-4,19],[-20,7],[-95,-24],[-37,-21],[-66,-10],[-5,31],[2,28],[15,50],[-2,125],[9,67],[37,20],[45,100],[73,117],[76,-3],[30,33],[45,2],[9,-24],[5,-22],[40,-33],[70,5],[17,13],[16,18],[-32,57],[10,17],[29,2],[32,-14],[2,-13],[-9,-18],[-10,-32],[10,-6],[90,19],[95,-15],[30,8],[75,0],[13,19],[-22,25],[-22,9],[-15,12],[-15,18],[47,55],[27,11],[126,34],[94,17],[1,13],[-14,0],[-121,28],[-29,22],[-40,52],[-9,15],[-10,25],[6,55],[7,43],[15,25],[48,4],[166,-44],[119,27],[129,-65],[123,13],[26,29],[31,93],[174,156],[61,80],[66,45],[112,49],[94,65],[27,7],[225,-31],[155,-4],[71,62],[42,-21],[-4,-22],[-8,-19],[3,-38],[24,-55],[24,-38],[73,-55],[100,46],[16,-5],[21,-13],[35,-147],[28,-52],[35,-36],[29,-7],[21,37],[17,15],[36,6],[60,-50],[21,-53],[101,-40],[93,-20],[40,-45],[131,-44],[49,7],[82,46],[159,51],[106,-71],[29,-9],[25,6],[35,-20],[38,11],[117,84],[37,48],[39,12],[34,29],[92,93],[27,54],[53,108],[16,65],[1,39],[0,49],[-27,102],[-24,144],[-25,151],[-19,45],[-81,52],[-19,59],[-62,77],[-87,33],[-17,14],[-76,96],[-59,62],[-29,31],[-99,146],[-52,98],[-170,225],[-22,17],[-90,33],[-37,26],[-91,161],[-41,-22],[-37,6],[-21,14],[-24,23],[-16,30],[-19,68],[-22,38],[-72,56],[-82,33],[-6,14],[-3,20],[71,38],[19,22],[-36,29],[-14,5],[-11,13],[20,22],[20,10],[31,-25],[35,-46],[31,-18],[14,22],[106,39],[7,30],[0,34],[-11,-2],[-6,8],[0,38],[16,51],[48,84],[25,116],[23,27],[16,-18],[-1,-27],[3,-20],[15,39],[14,53],[36,0],[24,-9],[26,6],[-49,88],[-66,87],[-28,-6],[-18,13],[-29,73],[-12,60],[28,-2],[28,-9],[53,42],[20,6],[31,-13],[44,-8],[-3,39],[-14,47],[53,34],[47,19],[91,68],[40,12],[5,15],[1,20],[-13,54],[-14,40],[-48,2],[-26,-55],[-72,-19],[-33,4],[26,36],[25,13],[8,15],[-52,-13],[-25,-37],[-76,-48],[-10,-6],[-97,9],[-79,-13],[-56,-91],[-34,1],[-48,-24],[-32,-29],[-38,-64],[-29,28],[-36,0],[-36,-18],[-42,-42],[-24,-8],[-47,12],[-55,-24],[-118,-140],[-40,-102],[-15,-20],[-20,-25],[-21,-13],[-11,1],[56,73],[17,27],[3,20],[1,33],[-17,40],[-47,-100],[-26,-14],[-33,-30],[-2,-67],[4,-50],[14,-63],[32,-102],[66,-146],[31,-54],[24,-22],[28,-3],[53,46],[23,7],[50,-18],[18,31],[26,16],[33,2],[38,-13],[41,-23],[-17,-52],[-17,-41],[-7,-45],[-9,-51],[-46,-23],[-48,3],[-52,-15],[-18,20],[-12,18],[-23,18],[-30,10],[-27,-12],[-32,-69],[-56,-47],[-19,-54],[-56,12],[-47,-10],[-69,-49],[-52,-106],[-57,-66],[-46,-21],[-43,7],[-28,20],[-57,69],[4,25],[8,13],[10,35],[23,131],[-3,43],[-13,66],[-45,52],[-36,-9],[-21,13],[-75,89],[-40,6],[-45,-18],[-16,13],[-13,31],[89,109],[88,90],[38,9],[52,42],[55,63],[-8,49],[-12,37],[-26,-10],[-20,-13],[-46,40],[-17,29],[-72,-30],[-40,4],[-89,-28],[-41,27],[-82,76],[-30,15],[-27,-3],[-14,24],[18,13],[20,1],[21,9],[6,13],[-1,25],[-43,19],[-39,5],[-25,22],[-19,26],[44,0],[45,-19],[71,-7],[64,-20],[16,25],[37,42],[7,14],[-62,-29],[-63,18],[-23,26],[-20,39],[-8,43],[5,41],[-6,73],[-21,65],[-8,36],[-22,32],[22,-73],[8,-48],[13,-44],[-3,-118],[-8,-41],[-26,-11],[-34,6],[-35,13],[9,65],[-18,-22],[-27,-64],[-23,-9],[-50,7],[-95,-42],[-7,-45],[-14,-62],[-14,-36],[-4,-21],[-40,-93],[-5,-9],[-76,-128],[-10,-10],[-49,-30],[-30,-26],[-22,-12],[-38,13],[-15,-19],[-8,-23],[0,-47],[19,-34],[16,-114],[-6,-48],[-5,-38],[-3,-24],[-12,-99],[-8,-37],[-13,-42],[-142,-49],[9,23],[-3,42],[-6,31],[13,29],[-31,10],[-14,-15],[-11,-28],[9,-62],[-15,-35],[-6,-19],[-1,-46],[-9,-20],[-2,-21],[23,5],[-10,-39],[-43,-76],[-15,-45],[4,-180],[-19,-107],[-1,-32],[-7,-139],[-27,-65],[-40,22],[-52,-18],[-27,-73],[-16,-22],[-14,-26],[-9,-95],[-2,-156],[-19,-19],[-18,-6],[-75,-137],[43,-39],[19,-29],[32,-82],[44,-93],[9,-45],[-7,-65],[17,-73],[41,-100],[41,-51],[167,-126],[31,-11],[-7,-51],[-10,-46],[-11,-30],[-49,-20],[-135,56],[-34,6],[-24,-12],[-45,-40],[-49,13],[-69,-23],[-19,-77],[-48,-88],[-79,-71],[-56,-38],[-84,-136],[-39,-80],[-16,-15],[-19,-13],[6,39],[10,35],[-2,26],[0,38],[28,44],[26,31],[76,58],[20,47],[-60,-1],[-60,-11],[-38,7],[-33,-4],[-11,42],[-8,25],[-7,24],[-43,43],[-100,25],[-48,32],[-21,-6],[-40,36],[-28,-16],[-59,-63],[-31,7],[-34,38],[-22,7],[-26,-20],[-42,-73],[-42,-36],[-38,14],[-51,0],[-5,-41],[10,-28],[27,-48],[-13,-37],[10,-36],[18,-7],[28,2],[50,-47],[22,-50],[14,-54],[-30,39],[-21,37],[-28,14],[-40,32],[-25,5],[-26,-22],[-3,-25],[29,-47],[26,-29],[14,-23],[9,-52],[-5,-17],[-10,-17],[-31,33],[-47,116],[-66,23],[-11,-24],[13,-61],[9,-24],[58,-67],[-5,-14],[-8,-6],[-65,38],[-19,58],[-4,73],[-59,50],[-56,55],[-13,53],[12,19],[8,38],[-31,-7],[-19,-24],[-32,-23],[-1,-39],[5,-36],[-10,-52],[-10,-90],[6,-48],[68,-136],[23,-99],[16,-37],[35,-42],[36,-76],[15,-41],[11,-65],[-30,-41],[-18,-2],[-9,19],[13,44],[-2,28],[-47,42],[-20,-15],[-22,-27],[13,-51],[14,-34],[8,-46],[28,4],[-38,-52],[-35,-27],[-35,-1],[-23,-5],[-7,-13],[18,-10],[15,-1],[24,-28],[68,-34],[33,-42],[32,-4],[32,-78],[56,-21],[31,-79],[43,-16],[36,-29],[11,-27],[5,-50],[2,-107],[8,-79],[0,-25],[-2,-37],[-9,-19],[-14,0],[-26,58],[-40,61],[-42,73],[-12,13],[-10,1],[-23,-25],[-63,-19],[-29,-26],[-11,-6],[-4,-14],[14,-15],[17,-33],[0,-45],[14,-56],[18,-14],[24,1],[13,-10],[4,-22],[14,-26],[9,-19],[-1,-13],[-66,-37],[-13,-16],[-12,-9],[-17,18],[-1,44],[-22,23],[-21,21],[-25,9],[-21,30],[-14,-25],[11,-85],[24,-60],[40,-158],[18,-93],[4,-46],[-9,-75],[19,-56],[14,-57],[-15,2],[-13,20],[-21,24],[-42,92],[-15,57],[-17,4],[-30,-8],[-34,-122],[1,-70],[-18,17],[-14,22],[1,76],[-1,32],[-40,104],[-19,12],[-8,35],[-15,38],[-19,-8],[-16,-15],[-4,-56],[-2,-51],[-11,-38],[-43,72],[-43,126],[-1,68],[31,63],[-4,45],[-30,89],[-43,57],[-24,17],[-11,60],[-23,31],[-19,15],[-4,22],[6,16],[45,62],[27,97],[13,5],[27,-23],[31,6],[25,57],[21,31],[36,-4],[80,-76],[87,-44],[43,-38],[25,-38],[13,-8],[20,-5],[-1,28],[-6,25],[17,14],[46,-1],[9,14],[8,21],[-9,24],[-16,12],[-16,3],[-11,8],[-17,-8],[-28,19],[-14,16],[-8,16],[-47,32],[-45,54],[-10,-31],[-19,-16],[-25,-3],[-73,35],[-45,-27],[-24,-6],[-19,-1],[-23,-12],[-26,-7],[-23,50],[-9,39],[-7,7],[-1,-37],[-7,-29],[-33,-16],[-20,23],[-15,68],[-18,87],[-33,70],[-27,18],[-3,39],[3,30],[32,8],[50,-32],[11,6],[11,15],[-2,33],[-7,29],[-14,2],[-10,-4],[-31,6],[-39,-16],[-19,15],[-6,19],[-33,46],[-29,62],[-46,41],[-31,126],[-25,55],[-28,40],[-1,52],[-9,41],[-31,99],[-102,96],[-24,43],[-11,36],[-10,35],[10,1],[10,-9],[13,-11],[5,18],[-6,37],[-26,87],[-2,24],[13,74],[21,82],[-1,99],[7,75],[-8,49],[-3,60],[15,79],[14,20],[8,25],[1,85],[-31,39],[-35,8],[-43,46],[-18,64],[-63,109],[-73,74],[-4,12],[4,14],[4,11],[-15,1],[-11,-9],[-10,3],[-51,54],[-48,61],[-93,94],[-67,23],[-91,76],[-59,27],[23,6],[26,0],[140,-101],[-16,27],[-23,24],[-13,13],[-58,88],[-55,56],[-63,104],[-84,41],[-58,46],[-34,-7],[-39,-14],[-23,-1],[-17,9],[-12,28],[2,22],[-2,28],[-34,46],[-46,44],[-43,56],[-87,151],[-18,49],[17,9],[13,0],[15,10],[24,0],[28,-10],[-25,32],[-31,32],[-80,127],[-24,59],[-3,65],[6,88],[-14,63],[-62,82],[-23,43],[-45,25],[-21,-2],[-12,-32],[-9,-71],[-40,-93],[-14,-41],[-21,-52],[-18,-4],[-11,5],[-33,88],[-32,68],[-4,31],[-3,40],[-24,144],[17,20],[17,11],[23,30],[17,23],[-43,82],[-19,0],[-26,-35],[-72,36],[-14,-15],[-10,-28],[-25,-35],[-35,-15],[-40,-38],[-41,-27],[-32,-21],[-18,4],[29,44],[-13,1],[-38,-31],[-22,-27],[-7,-44],[-7,-74],[17,-19],[30,-97],[36,-41],[-7,-40],[-9,-31],[-22,-27],[-19,20],[-11,0],[-8,-64],[16,-168],[25,-119],[25,-51],[57,-81],[60,-42],[108,-136],[59,-42],[15,-24],[36,-104],[31,-121],[33,-189],[24,-94],[48,-105],[100,-151],[90,-111],[84,-68],[66,-12],[155,15],[27,-6],[29,-19],[6,-47],[-10,-32],[-33,-33],[-33,-46],[-4,-63],[31,-44],[150,-117],[153,-98],[48,-50],[55,-78],[134,-107],[22,-52],[82,-111],[36,-87],[7,-67],[-17,-67],[-8,-48],[-14,-48],[-35,18],[-39,49],[-59,197],[-108,20],[-22,15],[-39,34],[-2,22],[-10,28],[-9,10],[-42,6],[-28,-32],[-34,-76],[-38,-109],[-39,-160],[-2,-64],[21,-63],[63,-35],[48,-56],[32,-58],[3,-140],[14,-80],[-21,-45],[-41,11],[-54,-29],[-39,-51],[-16,-49],[4,-128],[-8,-48],[-73,-92],[-38,-94],[-10,-39],[-14,-45],[-93,-1],[-21,55],[-1,81],[16,50],[34,24],[22,104],[-7,75],[14,33],[12,23],[26,14],[37,13],[3,105],[-28,48],[-10,66],[-14,124],[-47,157],[-25,140],[-19,69],[-30,37],[-54,-1],[-27,10],[-96,98],[-6,15],[0,25],[16,40],[-10,52],[-12,50],[-18,43],[-21,22],[-43,-14],[-15,-10],[-27,4],[-21,-19],[-12,-1],[33,75],[-9,17],[-33,31],[-45,5],[-12,4],[-8,-20],[-8,11],[1,33],[-53,150],[-35,61],[-17,11],[-32,-13],[-54,27],[-32,6],[-17,-7],[-27,-19],[-13,12],[-5,20],[-48,63],[-61,35],[-118,197],[-36,74],[-75,81],[-47,119],[-39,43],[-56,35],[-13,-4],[-17,-13],[-13,-2],[-10,15],[10,16],[12,7],[-4,45],[-64,118],[-38,37],[-10,24],[-8,32],[-8,20],[-18,13],[-15,-3],[-21,8],[1,57],[4,43],[-3,37],[-20,96],[-36,82],[-20,195],[-17,55],[-39,42],[-88,46],[-122,126],[-26,2],[-74,49],[-46,8],[-59,-43],[-72,-121],[-59,-125],[-21,-25],[-75,-43],[-67,-20],[-64,-41],[-23,-21],[-88,-127],[-41,-38],[-8,-22],[-8,-42],[-24,-36],[-22,-17],[-52,-18],[-53,-38],[-23,16],[-62,-1],[-38,46],[-74,29],[-24,67],[-33,4],[-22,-2],[-13,10],[-4,23],[0,22],[-23,-10],[-18,0],[-11,-9],[-8,-10],[-10,7],[-6,-3],[1,-13],[-22,-3],[-23,8],[-61,35],[-9,5],[-42,13],[-17,14],[-14,35],[-11,10],[-6,7],[-39,-17],[-14,-27],[-21,-32],[-146,-155],[-27,-64],[-31,-96],[-2,-44],[13,-142],[30,-75],[4,-18],[7,-36],[14,-14],[5,-31],[-24,-17],[-15,-2],[-4,-54],[6,-16],[14,-14],[4,-16],[3,-80],[-28,-48],[-40,-54],[-193,-173],[-46,-84],[-17,-19],[-143,-53],[-101,-57],[-48,-20],[-60,-98],[-28,-40],[23,-11],[26,-47],[-9,-21],[-38,-32],[-17,-10],[-9,5],[-9,-4],[-64,-170],[-58,-123],[-32,-53],[-32,-79],[-70,-206],[-1,-59],[35,-204],[19,-54],[28,-45],[53,-38],[12,-38],[-18,-36],[-52,-64],[-91,-86],[-39,-68],[-8,-66],[-27,-30],[-10,-92],[-16,-61],[-4,-20],[-17,-47],[-2,-33],[28,-47],[-14,-20],[-14,-9],[-32,-5],[-108,-6],[-87,-100],[-44,-89],[-39,-165],[-48,-98],[-21,-18],[-33,43],[-41,7],[-40,-15],[-20,-33],[-33,-19],[-32,16],[-68,9],[-31,-2],[-48,-27],[-41,18],[-69,9],[-150,-21],[-18,-11],[-19,-41],[-48,-70],[-72,-3],[-66,-45],[-16,-29],[-28,-79],[-9,-58],[-5,-1],[-7,14],[-11,-4],[-5,-45],[-25,-20],[-20,-7],[-51,36],[-42,54],[-22,3],[-36,84],[-16,54],[-11,57],[2,22],[-3,19],[-32,23],[-8,53],[24,68],[19,30],[12,8],[-29,-3],[-21,-44],[-27,71],[-109,138],[7,31],[-1,18],[-18,-37],[-13,-10],[-56,6],[-64,-17],[-24,-6],[-95,-94],[-29,0],[-55,41],[-96,14],[-32,12],[-39,-27],[-30,1],[-25,-35],[-17,10],[20,77],[31,152],[-1,93],[7,81],[-8,80],[-16,50],[21,130],[-2,67],[-19,84],[59,-13],[-19,34],[-18,20],[-17,-4],[-15,1],[-50,-33],[-25,-10],[-8,6],[3,52],[-13,68],[20,18],[24,5],[20,29],[12,33],[-7,57],[18,55],[40,46],[-21,-7],[-24,-29],[-38,-104],[-12,-53],[-33,-17],[-29,-9],[-14,6],[-18,13],[-2,39],[2,31],[12,62],[4,88],[18,78],[-2,21],[-5,31],[16,30],[19,20],[28,68],[40,160],[47,170],[-4,21],[-10,15],[4,46],[28,200],[11,26],[13,59],[3,94],[5,65],[-1,33],[-4,39],[-18,75],[-18,159],[-2,53],[15,26],[-25,4],[-11,35],[2,38],[28,63],[-20,-8],[-8,12],[-2,91],[32,60],[22,37],[-10,7],[-24,-1],[1,29],[12,13],[11,31],[-13,14],[-10,20],[0,53],[3,22],[-3,23],[-49,-32],[-13,5],[0,40],[27,60],[3,18],[-32,9],[-24,30],[-14,26],[-16,38],[0,34],[16,79],[23,24],[20,14],[42,55],[57,-10],[36,11],[32,28],[19,7],[29,24],[-1,33],[-10,25],[9,23],[33,29],[37,37],[42,7],[43,34],[29,-22],[25,7],[29,-25],[38,-58],[56,-24],[45,19],[78,3],[40,-7],[70,14],[40,-5],[64,29],[51,-36],[97,-17],[58,-30],[162,-49],[59,-1],[82,28],[35,21],[32,-13],[47,24],[23,-4],[29,-35],[104,-46],[27,39],[20,9],[74,-24],[75,-49],[39,-3],[57,13],[46,32],[9,4],[45,17],[41,73],[39,263],[28,311],[20,58],[26,17],[-21,42],[-13,-21],[-5,-23],[-7,-12],[15,285],[11,105],[19,109],[39,-43],[32,-44],[17,-39],[21,-127],[15,-27],[24,-26],[-9,29],[-17,22],[-25,170],[-16,48],[-25,40],[-80,85],[-8,17],[-4,32],[27,-1],[23,-16],[-3,18],[-7,19],[-10,69],[-9,161],[1,28],[-4,34],[-26,7],[-20,2],[-22,13],[-110,95],[-37,98],[-39,72],[-9,32],[1,32],[20,67],[-18,43],[-17,8],[-15,21],[14,35],[11,23],[22,6],[30,-8],[28,-20],[21,-5],[-64,54],[-105,-18],[-23,7],[-19,12],[-7,40],[15,18],[13,34],[-15,23],[-20,9],[-31,-1],[-29,-7],[-7,14],[17,37],[-15,14],[-20,-7],[-29,-7],[-28,11],[-26,42],[-17,0],[-12,-5],[-18,16],[-19,4],[-13,-5],[-18,24],[-109,49],[-47,6],[-43,-22],[-24,7],[-18,32],[-14,52],[-70,41],[14,27],[32,6],[37,19],[14,23],[-29,28],[-22,7],[-9,10],[-9,24],[13,12],[9,-6],[26,-4],[45,6],[-16,25],[-18,6],[-8,6],[-36,3],[-17,-9],[-37,4],[-9,27],[-3,23],[11,51],[53,46],[131,51],[56,-7],[40,9],[47,31],[20,28],[67,16],[63,-29],[59,-109],[28,-37],[68,64],[102,-2],[21,-36],[8,30],[19,36],[15,-16],[8,-22],[107,6],[17,6],[-29,26],[-23,62],[-5,229],[-30,64],[-34,102],[-16,60],[-1,21],[5,30],[42,-1],[32,-8],[62,23],[30,-16],[-2,-47],[9,-60],[11,-28],[15,-33],[50,3],[54,-19],[68,-3],[99,-34],[42,20],[41,41],[78,27],[7,14],[-45,-6],[-42,26],[-5,29],[5,25],[16,58],[120,92],[85,28],[89,50],[45,52],[30,68],[10,14],[12,13],[-12,24],[8,256],[9,46],[17,38],[27,29],[40,32],[148,44],[22,17],[121,97],[73,50],[35,15],[21,9],[46,4],[35,-18],[46,-8],[36,24],[28,-21],[31,15],[-24,9],[-37,24],[-51,-20],[-36,24],[-29,2],[-19,19],[-19,31],[14,21],[13,7],[54,4],[40,-13],[71,-68],[18,1],[19,8],[-10,19],[-18,9],[-26,18],[-21,26],[49,8],[-7,13],[-6,23],[-52,79],[9,22],[13,46],[16,38],[13,10],[22,27],[46,80],[30,65],[22,76],[32,212],[10,36],[15,40],[20,-8],[13,-11],[48,30],[83,78],[24,68],[24,31],[95,62],[52,18],[81,5],[59,11],[70,4],[27,-38],[15,-28],[25,-15],[39,-11],[-13,26],[-27,28],[6,59],[9,45],[27,57],[22,15],[96,9],[105,-4],[44,-84],[-16,-44],[25,-20],[13,7],[9,38],[6,42],[9,13],[33,-32],[12,-21],[0,-69],[12,93],[-9,66],[6,63],[14,34],[12,21],[77,-23],[86,12],[32,-25],[73,-123],[24,-20],[31,-6],[-42,26],[-89,149],[-26,19],[-41,5],[-26,15],[-16,23],[-4,20],[1,150],[-16,22],[-20,8],[-12,-10],[-25,-1],[-5,34],[6,26],[51,17],[33,23],[2,41],[-22,32],[-25,58],[-30,56],[-6,112],[-6,34],[-18,51],[27,12],[-5,100],[-10,52],[-75,53],[-60,51],[14,174],[6,46],[-23,91],[3,105],[9,164],[19,7],[14,-1],[53,-30],[22,-3],[15,-26],[18,-11],[13,28],[5,48],[42,62],[30,23],[20,11],[20,-25],[16,-28],[4,61],[12,117],[-40,19],[-33,-16],[-32,-74],[-29,-94],[-47,-8],[-37,-27],[-34,28],[-22,24],[0,35],[5,22],[39,76],[54,73],[53,-1],[39,23],[24,3],[72,-5],[38,16],[33,34],[73,141],[41,59],[82,21],[76,68],[22,1],[-36,-51],[-6,-19],[-4,-30],[25,-66],[-5,-40],[2,-78],[-24,-41],[-28,-87],[-12,-13],[-2,-101],[3,-25],[-4,-92],[28,-38],[29,-20],[99,1],[10,-16],[13,-29],[-9,-49],[-11,-36],[-28,-31],[-37,-23],[-23,-1],[-31,44],[-15,-14],[-15,-23],[-26,-119],[-12,-81],[-6,-7],[-15,12],[-25,1],[-31,-19],[16,-17],[17,-30],[-7,-15],[-28,-16],[-24,-32],[-11,-25],[-31,-29],[-19,-37],[9,-46],[4,-40],[9,-45],[-8,-35],[-38,-51],[-14,-45],[32,1],[21,-10],[12,-13],[12,-19],[-8,-23],[12,-69],[40,-16],[17,-24],[19,-37],[2,-54],[-24,-38],[-20,-24],[76,9],[8,-22],[11,-24],[41,17],[103,-70],[63,34],[16,2],[14,-57],[-16,-57],[-55,-61],[13,-38],[17,-8],[52,8],[82,-37],[17,11],[67,86],[26,18],[88,14],[16,33],[35,33],[23,36],[55,70],[56,-13],[33,-13],[37,-7],[33,-74],[83,-81],[77,7],[27,-77],[12,-96],[24,-30],[20,-19],[63,-21],[66,-34],[26,-19],[-3,21],[-5,18],[3,27],[-2,40],[-57,20],[-50,9],[-34,-6],[-34,9],[-7,34],[6,34],[-14,22],[-13,14],[-2,19],[2,20],[59,-54],[48,-48],[11,-11],[37,-4],[92,54],[159,70],[170,66],[40,7],[40,14],[14,24],[15,17],[23,43],[51,68],[91,24],[34,32],[70,45],[162,50],[67,11],[66,1],[59,-39],[62,-49],[12,-30],[-34,19],[-49,44],[-18,2],[42,-134],[22,-47],[47,-36],[39,-11],[119,21],[43,28],[12,14],[43,49],[28,52],[23,67],[3,46],[6,52],[37,21],[80,-3],[35,25],[44,62],[46,74],[15,32],[32,66],[12,43],[8,61],[8,20],[0,-28],[-3,-46],[-20,-80],[-48,-96],[-74,-116],[23,-15],[27,-5],[32,-22],[30,-3],[53,18],[10,100],[3,94],[-9,42],[10,64],[-19,93],[-30,113],[-2,121],[-2,27],[-9,109],[5,217],[11,108],[51,63],[26,49],[15,65],[5,61],[10,49],[75,144],[60,15],[80,40],[90,33],[17,-42],[9,-32],[108,-117],[27,-40],[42,-135],[100,-68],[79,22],[34,33],[63,61],[28,45],[6,43],[-11,184],[-17,80],[6,50],[2,23],[37,113],[7,89],[13,13],[4,12],[-6,29],[-38,18],[-15,-3],[-14,-30],[-14,-22],[-34,-14],[-29,23],[-67,32],[-18,41],[-4,42],[-35,40],[-15,48],[6,33],[32,22],[9,19],[-40,-3],[-9,5],[-2,17],[-18,58],[16,23],[7,22],[-13,19],[4,22],[10,22],[-6,50],[40,27],[40,19],[83,10],[-8,46],[34,2],[57,56],[56,-10],[82,38],[157,0],[22,22],[-4,22],[0,24],[30,-7],[49,4],[186,-46],[45,0],[63,-47],[34,-13],[101,0],[154,-21],[31,32],[3,9],[14,40],[-5,54],[-9,44],[12,33],[21,3],[22,-36],[34,-18],[25,24],[8,46],[18,20],[24,-18],[40,-7],[33,3],[22,10],[10,15],[9,27],[18,34],[19,23],[145,-26],[126,-47],[9,18],[5,30],[-32,26],[-23,14],[-29,54],[-42,43],[-42,4],[-55,-15],[-84,9],[-71,81],[-47,25],[-34,62],[-8,33],[36,-28],[5,29],[3,40],[-20,24],[-18,14],[-93,-61],[-106,-20],[-10,-2],[-26,-20],[-40,-5],[-17,-14],[-61,42],[-11,3],[-36,-11],[-34,-31],[-64,-9],[-32,-10],[-20,-14],[-4,33],[9,43],[14,29],[1,18],[-10,-1],[-21,-42],[-11,-49],[-21,-25],[-48,-10],[-47,39],[-23,0],[14,-28],[10,-31],[-1,-17],[-25,3],[-28,-19],[-25,-27],[-11,0],[-17,38],[-30,-18],[-26,-24],[-52,-7],[-31,-31],[-55,-22],[-30,1],[-69,-25],[-23,-40],[-20,-14],[-29,12],[-88,-19],[-84,-25],[-36,1],[-36,11],[-38,-35],[-40,-47],[-45,-16],[-16,6],[13,24],[29,25],[21,35],[2,28],[-13,12],[-19,3],[-24,30],[-23,64],[-13,3],[-6,-17],[-7,-49],[-7,-14],[-12,-11],[-15,-12],[-14,-5],[-51,1],[-7,24],[0,11],[9,32],[-7,6],[7,26],[12,-2],[14,4],[7,13],[0,16],[-20,4],[-1,11],[18,45],[2,12],[-7,3],[-11,-5],[-73,14],[-90,57],[-22,3],[-14,51],[-21,-6],[-32,-30],[-24,22],[-25,15],[-7,24],[0,34],[-2,41],[-7,47],[-5,68],[5,53],[20,39],[8,25],[9,64],[3,74],[-6,26],[2,17],[16,0],[-4,14],[-7,8],[-8,17],[7,9],[19,0],[2,6],[2,8],[-15,43],[-2,21],[-21,62],[-23,60],[-36,43],[13,71],[14,64],[-3,31],[-5,37],[-44,41],[-7,58],[-10,63],[4,38],[7,29],[14,29],[73,92],[4,48],[50,4],[-23,42],[-6,24],[-1,29],[71,19],[27,-16],[62,20],[55,38],[-1,20],[-8,18],[-12,35],[8,10],[21,-7],[-10,17],[2,18],[22,-7],[36,51],[1,39],[63,21],[71,79],[33,25],[32,18],[69,80],[29,3],[15,54],[58,72],[17,9],[27,64],[71,75],[45,95],[25,33],[8,36],[28,3],[25,27],[54,18],[53,-5],[22,-12],[21,4],[-2,32],[-15,20],[12,19],[28,14],[-2,32],[-7,20],[-23,25],[12,58],[2,63],[11,73],[-29,39],[-112,65],[-21,-2],[-24,8],[-26,50],[11,43],[2,16],[-11,-1],[-16,-21],[-36,-23],[-46,18],[-23,-4],[-73,-13],[-56,26],[-27,-13],[-48,-1],[-55,-10],[-19,-21],[-14,-8],[-51,29],[-48,49],[-35,-37],[-23,-7],[-20,33],[-18,6],[-10,-12],[-8,-29],[-14,-24],[-3,-14],[-2,-60],[-4,-14],[-46,8],[2,-16],[10,-8],[5,-10],[-17,-13],[-47,2],[-4,-14],[13,-22],[-10,-19],[-10,-8],[-55,-12],[-32,3],[-9,-12],[-3,-16],[6,-16],[14,-9],[5,-10],[-1,-21],[-12,-4],[-33,38],[-10,-2],[7,-20],[19,-22],[11,-22],[10,-26],[-2,-21],[-41,-65],[-37,-41],[-27,-37],[-16,-39],[19,-20],[20,-29],[15,-55],[17,-49],[35,-46],[-7,-27],[-8,-21],[-58,-47],[-66,-70],[-71,-178],[-24,-24],[-62,-30],[-23,-30],[-46,-35],[-81,-29],[-37,-42],[-16,-43],[-19,-3],[-18,17],[-24,12],[-3,-28],[1,-21],[-39,31],[-19,-28],[-14,-47],[-56,-63],[-61,11],[-6,-11],[16,-8],[2,-10],[-11,-5],[-17,0],[-25,-12],[-17,1],[-8,-30],[-13,-37],[-34,-15],[-18,-3],[-9,-20],[53,-5],[-4,-17],[-1,-17],[-6,-19],[-60,-27],[-9,-21],[-12,-13],[-27,0],[1,13],[4,13],[-39,-1],[-12,31],[-8,-8],[4,-25],[11,-25],[11,-38],[-9,-24],[-10,-11],[7,-11],[21,-8],[9,-15],[-25,-13],[-32,-44],[-32,-1],[-20,-28],[-21,0],[-17,18],[-27,15],[-9,-27],[-2,-20],[16,-53],[29,-41],[28,-18],[-20,-12],[-15,-26],[-17,-83],[-10,-33],[-10,-57],[6,-49],[6,-24],[13,-32],[-36,4],[-39,19],[6,-39],[-24,-47],[4,-40],[5,-27],[-7,-44],[11,-14],[6,-26],[-10,-20],[5,-17],[1,-59],[8,-92],[-3,-20],[21,-80],[-5,-29],[-3,-36],[31,-34],[27,0],[27,1],[10,-9],[11,-24],[8,-29],[23,2],[36,24],[23,6],[16,-46],[42,-59],[24,-27],[42,-14],[43,-48],[-6,-58],[18,-20],[52,-22],[18,-31],[9,-27],[14,-21],[16,-66],[-6,-41],[-21,-14],[-49,-44],[-22,-32],[-17,-20],[-49,-44],[-18,-8],[-17,-22],[-16,-10],[-15,6],[-55,-41],[4,-18],[42,-7],[22,9],[17,20],[18,5],[16,-4],[18,16],[14,7],[14,-8],[16,-39],[-33,-20],[-23,-1],[-12,-64],[-14,-27],[-10,-13],[-52,-27],[-35,-35],[-40,-27],[-18,6],[-26,-29],[-59,-33],[-31,-45],[-68,-40],[-34,-32],[-95,-2],[-89,7],[-29,-16],[29,-4],[20,-16],[25,7],[57,-8],[29,-8],[38,-54],[-28,-19],[-48,-14],[18,-76],[15,-51],[-20,-31],[-1,-140],[-27,-2],[-12,-58],[9,-30],[-1,-69],[6,-42],[13,-39],[-6,-41],[-43,-95],[1,-44],[8,-27],[6,-42],[-20,-81],[-14,-69],[-16,-57],[-37,-69],[-18,-51],[-43,-160],[-21,-32],[-26,-24],[-29,22],[-27,13],[-32,-2],[-51,-18],[-77,12],[-74,-6],[-19,-16],[11,-58],[-28,-8],[-26,17],[-24,-20],[-20,-22],[-39,-51],[-13,-32],[-3,-59],[20,-54],[18,-62],[-46,-76],[-26,-2],[-76,20],[-135,-47],[-121,38],[15,40],[0,30],[6,45],[4,47],[-1,32],[-9,33],[-29,44],[-68,147],[-19,62],[-14,26],[10,1],[55,-33],[13,4],[13,13],[-16,47],[-14,22],[-10,32],[33,9],[23,-2],[17,37],[-10,58],[-25,19],[-21,7],[-40,93],[-42,48],[-75,184],[-27,127],[-26,-12],[-12,55],[-9,53],[-2,38],[-40,22],[-1,27],[-8,120],[-42,16],[-28,68],[-5,128],[-28,23],[-23,-7],[1,32],[5,30],[-13,117],[-4,108],[-11,32],[-6,38],[5,33],[8,19],[28,5],[26,-29],[-1,17],[-5,22],[-65,22],[-12,-1],[-25,13],[-15,4],[-31,8],[-25,64],[-28,54],[-3,22],[0,101],[-8,44],[-2,49],[-17,-39],[9,-63],[-21,-26],[-26,-13],[2,-37],[11,-7],[3,-38],[-7,-56],[-52,-126],[-11,-13],[-7,-17],[-27,11],[-34,-35],[-32,-5],[-12,39],[-46,53],[-22,-3],[20,-26],[19,-34],[-11,-22],[-11,-14],[-18,-8],[-67,-44],[23,-29],[-20,-34],[-23,-5],[-13,-15],[-4,-21],[-69,-61],[-113,-155],[-59,-44],[-40,-46],[-36,2],[-45,-39],[-114,-34],[-75,15],[-53,-13],[-28,26],[-4,19],[2,10],[5,13],[-10,5],[-21,2],[-9,-13],[-1,-29],[-10,-8],[-39,17],[-10,15],[14,30],[25,28],[-5,5],[-5,17],[-11,2],[-35,-4],[-29,5],[-93,62],[-21,33],[-75,52],[-34,56],[-19,61],[2,56],[9,87],[15,22],[68,-31],[68,-51],[10,3],[22,40],[41,32],[-12,9],[-61,-37],[-23,21],[-36,42],[0,21],[17,22],[5,29],[-8,28],[4,37],[27,40],[41,40],[30,39],[31,24],[-4,8],[-34,-15],[-34,-26],[-39,-44],[-48,-35],[-35,-13],[-17,-12],[-26,-11],[-27,-50],[-29,-21],[-53,-3],[-11,37],[15,131],[16,64],[17,45],[27,7],[20,34],[16,0],[13,-16],[54,-15],[26,43],[35,6],[62,42],[-1,8],[-42,-9],[-26,-2],[-37,-10],[-20,7],[-9,32],[15,29],[59,68],[21,30],[11,28],[-2,19],[10,39],[58,69],[47,32],[15,-28],[-13,-84],[0,-35],[38,123],[16,30],[19,20],[45,14],[13,20],[-53,-7],[-127,-47],[-54,-42],[-15,-32],[-37,-49],[-17,-31],[-8,-47],[-21,-25],[-29,-9],[-39,-59],[-17,-48],[-39,-37],[-25,-29],[-8,-11],[-14,-28],[-11,-2],[-10,16],[-1,37],[3,59],[19,42],[9,42],[-12,38],[9,24],[16,0],[31,-11],[33,1],[54,31],[-9,18],[-23,2],[-44,-2],[-36,29],[-29,59],[-13,79],[9,23],[105,81],[28,36],[-16,4],[-39,-45],[-57,-27],[-35,38],[-19,41],[-11,87],[4,45],[-4,59],[24,19],[27,-10],[26,-4],[61,5],[133,35],[85,-21],[35,2],[54,31],[46,3],[35,-23],[19,-27],[3,-36],[16,-23],[11,7],[-9,29],[-2,43],[140,50],[17,19],[-56,7],[-16,45],[30,68],[-3,9],[-31,-36],[-15,-51],[6,-40],[-6,-19],[-29,-9],[-64,-3],[-41,17],[-38,10],[-13,13],[4,29],[-7,6],[-16,-26],[-14,-52],[-30,-12],[-84,19],[-121,-11],[-54,-26],[-35,3],[-61,46],[-24,36],[-8,73],[3,33],[47,13],[24,-1],[22,17],[-19,12],[-28,22],[-19,44],[-29,14],[-19,38],[-5,57],[6,40],[15,13],[37,-9],[97,6],[91,-40],[62,-23],[125,12],[73,36],[-13,10],[-80,-21],[-73,1],[-130,40],[-53,14],[-57,-6],[-30,12],[-18,40],[13,77],[27,17],[15,-20],[18,-2],[18,32],[17,19],[14,41],[51,39],[22,3],[31,18],[20,-5],[12,-18],[16,-15],[35,2],[103,31],[11,10],[20,25],[-65,-11],[-54,-18],[-35,-5],[-5,22],[13,21],[20,21],[10,37],[22,16],[24,-1],[50,7],[35,9],[60,-6],[90,-14],[58,-34],[21,3],[23,9],[11,12],[-46,14],[-2,21],[5,15],[74,28],[81,6],[-14,23],[-177,-34],[-46,23],[-36,0],[-24,-13],[-68,-16],[-13,11],[13,40],[41,65],[3,16],[19,16],[106,37],[51,44],[23,6],[22,-3],[35,5],[67,-13],[30,-55],[28,-17],[87,-69],[-4,20],[-75,93],[-29,23],[-21,46],[7,43],[24,29],[86,15],[15,17],[2,29],[-13,19],[-32,-1],[-26,12],[-7,31],[10,21],[50,38],[27,13],[47,13],[81,-30],[6,-16],[-22,-38],[2,-21],[20,-3],[46,64],[55,9],[23,14],[26,9],[38,-58],[16,-19],[12,-7],[12,-48],[12,-3],[17,24],[30,13],[42,8],[69,-12],[32,9],[15,-1],[-14,43],[-10,12],[15,39],[15,15],[48,27],[46,12],[30,26],[40,24],[-6,18],[-12,22],[-26,2],[-10,12],[33,28],[45,32],[-8,12],[-34,14],[-26,-10],[-38,-25],[-45,-39],[15,-11],[22,-32],[-31,-43],[-166,-115],[-78,-34],[-37,5],[-9,32],[-16,23],[-18,48],[-31,-1],[-17,-11],[-8,16],[13,51],[26,40],[44,31],[20,36],[20,59],[63,55],[91,138],[75,44],[27,48],[44,21],[38,37],[29,4],[54,34],[30,40],[-20,2],[-47,-26],[-27,-10],[2,43],[13,44],[39,40],[186,117],[19,-19],[22,-35],[56,8],[64,66],[49,72],[-26,-12],[-29,-30],[-57,-41],[-26,-6],[-15,5],[-8,28],[-20,8],[-18,-6],[-18,20],[-3,48],[23,71],[19,47],[20,36],[78,101],[17,56],[36,29],[46,-7],[14,9],[-16,36],[-50,29],[-3,18],[167,47],[80,-1],[24,23],[43,15],[33,29],[-17,13],[-81,-26],[-51,-13],[-23,0],[-18,-9],[-64,-3],[-14,115],[10,63],[24,-2],[5,60],[28,35],[39,8],[19,15],[28,31],[46,-7],[48,7],[-12,14],[-59,19],[-14,32],[20,17],[23,13],[20,3],[40,62],[24,27],[26,-5],[38,28],[37,-10],[35,18],[49,12],[178,5],[5,25],[-38,6],[-132,7],[-67,-1],[-29,-7],[-10,9],[2,16],[24,24],[12,26],[49,65],[58,44],[44,-11],[46,-42],[34,-5],[15,-13],[25,-57],[11,-2],[-5,55],[32,44],[-8,13],[-49,-16],[-37,16],[-29,34],[-8,31],[18,30],[17,15],[-11,18],[-74,-48],[-51,-11],[-21,7],[11,43],[-6,34],[70,85],[23,9],[39,-6],[35,-24],[30,4],[32,12],[-5,23],[-69,9],[-18,19],[7,19],[47,19],[48,36],[54,10],[43,27],[8,-6],[8,-11],[15,-99],[39,-81],[15,-3],[-15,69],[14,20],[17,15],[6,17],[-20,6],[-17,24],[-24,79],[9,21],[51,41],[64,10],[68,-29],[24,-1],[40,8],[67,24],[40,10],[20,0],[5,12],[-19,8],[-6,7],[-15,5],[-62,-13],[-172,4],[-16,14],[-3,24],[18,34],[20,20],[65,34],[68,5],[72,61],[28,45],[15,71],[44,57],[111,32],[4,14],[-12,30],[1,53],[31,63],[20,21],[9,3],[24,-21],[29,-43],[45,-24],[59,-5],[16,12],[-46,25],[-35,32],[-3,33],[17,17],[25,-2],[33,4],[30,21],[4,16],[1,20],[8,22],[44,50],[136,33],[10,-14],[-7,-97],[-16,-63],[0,-46],[27,46],[35,126],[27,59],[30,34],[22,8],[21,17],[28,11],[9,-14],[9,-31],[-16,-110],[2,-35],[-17,-46],[-65,-104],[3,-13],[15,5],[25,17],[80,98],[70,-12],[1,8],[-22,29],[-28,28],[-8,34],[4,91],[21,37],[60,-4],[37,5],[17,-17],[36,1],[25,66],[50,6],[44,-44],[52,-29],[43,-42],[12,12],[-23,98],[-25,35],[-54,19],[-58,44],[-15,19],[3,15],[50,14],[68,-16],[59,36],[17,-10],[46,19],[28,-25],[17,7],[11,35],[73,21],[46,-20],[25,-20],[12,-39],[17,-78],[36,-42],[23,-21],[27,-5],[12,21],[-24,25],[-7,24],[12,59],[14,23],[78,87],[66,46],[39,4],[68,102],[20,18],[18,5],[-5,24],[-37,16],[-2,31],[50,38],[60,63],[30,4],[18,-17],[59,-29],[35,-33],[26,-16],[17,3],[14,25],[17,11],[37,-6],[22,-16],[18,-2],[15,-9],[4,-21],[-32,-23],[-55,-61],[-54,-69],[-18,-36],[-17,-95],[-43,-61],[-3,-43],[17,-20],[47,16],[57,57],[15,60],[143,164],[68,91],[76,75],[43,15],[21,-49],[-17,-65],[-32,-41],[24,-19],[-5,-50],[-7,-27],[-5,-28],[0,-26],[23,7],[89,52],[23,56],[21,42],[10,36],[35,34],[66,0],[3,14],[-80,47],[-9,22],[27,28],[73,55],[38,-6],[23,-13],[91,-9],[69,-39],[-2,-61],[-16,-26],[-15,-15],[-89,-47],[-15,-22],[28,-8],[60,23],[16,-21],[-19,-53],[-4,-78],[-7,-46],[0,-42],[8,-23],[24,90],[8,22],[36,34],[13,68],[34,81],[39,47],[23,13],[75,-2],[33,-18],[28,-39],[21,-16],[67,-17],[24,-21],[4,-12],[16,-3],[45,30],[30,5],[48,-46],[-10,-35],[3,-11],[58,2],[48,-13],[92,-71],[10,-33],[-5,-40],[-132,-44],[-57,-42],[-94,-16],[-318,28],[7,-31],[221,-66],[13,-19],[-7,-40],[-1,-33],[5,-22],[16,-20],[27,-10],[55,5],[27,-11],[19,17],[7,55],[16,12],[31,-16],[13,-59],[9,-6],[15,42],[31,-3],[33,3],[43,-7],[50,-8],[112,-46],[26,5],[34,13],[34,55],[25,9],[33,-12],[9,14],[-17,46],[4,22],[113,-48],[48,-36],[105,-32],[18,-17],[2,-30],[-5,-25],[-23,-14],[-44,2],[-161,39],[-23,-24],[19,-20],[47,-25],[13,-43],[72,6],[69,-16],[32,5],[6,-14],[-22,-36],[10,-9],[77,34],[36,10],[19,-9],[3,-29],[-13,-36],[-1,-28],[-24,-66],[-36,-21],[-16,-27],[54,17],[28,18],[53,92],[16,12],[152,1],[34,-5],[142,-44],[40,-3],[46,5],[16,20],[16,6],[158,-48],[211,-109],[309,-179],[174,-160],[20,-34],[63,-20],[14,14],[35,-12],[205,-146],[70,-7],[-9,31],[-12,29],[18,-7],[24,-21],[38,-57],[48,-42],[48,-64],[41,-24],[36,-9],[30,-18],[56,-17],[26,-155],[20,-34],[0,-68],[36,-28],[27,-5],[-1,-51],[-22,-119],[-24,-51],[-186,-219],[-116,-84],[-226,-97],[-176,-36],[-72,-3],[-138,18],[-75,20],[-93,55],[-86,27],[-60,12],[-110,5],[-239,54],[-41,19],[-150,105],[-60,-30],[-35,-5],[-24,36],[10,10],[5,12],[-85,30],[-70,2],[-37,26],[-46,19],[-20,-12],[-11,0],[-92,46],[-41,37],[-43,65],[10,23],[13,15],[-148,38],[-140,5],[25,-18],[60,-10],[39,-26],[44,-37],[-10,-50],[62,-50],[47,-48],[2,-14],[18,-10],[70,-14],[12,-44],[-11,-17],[9,-25],[53,-27],[31,-7],[38,-17],[-17,-33],[-32,-22],[-33,-10],[16,-8],[41,3],[152,-55],[80,-56],[81,-102],[26,-50],[2,-28],[-4,-27],[-12,-30],[-5,-31],[-28,-88],[-20,-31],[-38,-35],[36,-68],[37,-63],[37,-105],[7,-42],[1,-65],[33,-26],[-13,-10],[-13,-18],[3,-84],[46,-69],[70,-45],[41,-9],[59,18],[43,-25],[96,-84],[43,-89],[18,-18],[97,-34],[72,-20],[111,-54],[19,-2],[54,47],[92,32],[29,44],[-3,37],[-23,67],[-7,65],[-31,27],[-28,18],[-86,-14],[-39,3],[-30,17],[-40,47],[-75,113],[-40,37],[-13,24],[-14,32],[2,53],[33,-2],[37,30],[27,106],[46,14],[25,-1],[108,-50],[134,-132],[29,-14],[31,-2],[51,4],[9,-18],[27,-20],[20,-3],[123,-42],[142,-82],[53,3],[21,46],[4,20],[59,46],[40,8],[57,-17],[10,13],[-19,68],[-26,59],[-39,37],[-68,111],[-28,54],[-13,57],[9,50],[10,36],[142,89],[51,53],[50,69],[23,14],[83,19],[111,59],[85,78],[84,119],[36,31],[28,-2],[38,-19],[42,-35],[57,-6],[55,5],[64,-3],[88,-54],[14,-17],[14,-23],[-28,-45],[-3,-29],[23,14],[32,6],[29,-9],[28,-25],[20,-28],[25,-24],[7,32],[4,28],[-13,70],[34,99],[26,43],[48,110],[-14,71],[-2,82],[-7,38],[-31,55],[-61,39],[-61,13],[-20,38],[4,43],[17,63],[50,133],[52,188],[2,43],[-5,24],[4,24],[-7,57],[-9,42],[-213,163],[-13,15],[-7,22],[23,5],[16,-1],[160,-76],[35,-4],[251,21],[123,-18],[103,-39],[74,-108],[76,-99],[70,-86],[2,-70],[-73,-14],[-70,-4],[-180,-35],[-43,-39],[-120,-122],[-11,-37],[11,-36],[55,-38],[118,-57],[52,-113],[37,-57],[28,-22],[27,-5],[60,-1],[42,-13],[12,-11],[17,11],[38,4],[224,60],[44,26],[15,40],[16,133],[20,46],[19,57],[-7,35],[-2,40],[112,38],[104,26],[50,-8],[13,28],[-32,55],[-19,28],[16,12],[24,-15],[32,-9],[56,9],[215,113],[84,63],[50,25],[80,57],[38,19],[67,7],[71,23],[78,42],[105,36],[17,2],[21,-5],[43,-42],[-16,-24],[-12,-25],[21,-14],[17,-6],[21,7],[22,17],[54,26],[15,33],[-21,13],[-27,49],[-32,11],[-26,-2],[95,71],[202,105],[108,48],[107,4],[85,-6],[-32,-16],[-140,-22],[-21,-11],[0,-13],[34,-8],[14,-16],[-11,-18],[-11,-6],[-16,-54],[-21,-43],[44,-56],[4,-58],[-28,-31],[-39,12],[-34,-20],[-62,-14],[-14,-18],[-9,-26],[40,-6],[31,2],[110,-17],[15,-2],[37,18],[37,4],[45,6],[23,11],[23,-13],[44,-51],[40,10],[17,99],[63,62],[74,50],[72,5],[69,35],[33,7],[64,-14],[96,-3],[81,-30],[60,-8],[88,51],[203,143],[17,-33],[33,48],[157,50],[38,2],[1,-20],[14,-44],[30,-27],[42,-64],[-20,-17],[-21,-10],[-31,-43],[-3,-99],[59,-25],[81,-29],[34,1],[28,16],[9,9],[10,15],[8,29],[5,22],[-21,55],[8,58],[74,-4],[91,17],[41,33],[49,63],[33,52],[-21,92],[-53,-20],[-91,199],[-47,77],[30,36],[78,23],[71,74],[27,15],[29,3],[210,-51],[239,-12],[203,-39],[230,-81],[112,-57],[93,-63],[-9,-45],[38,13],[82,-40],[56,-16],[57,-24],[22,-32],[75,-23],[92,-51],[95,-32],[68,-11],[41,-69],[136,-100],[25,-38],[119,-63],[59,-52],[37,20],[91,126],[54,144],[32,77],[-60,3],[-45,-22],[-29,5],[-32,23],[-52,58],[-66,97],[-13,106],[-18,35],[-64,28],[-42,32],[-156,63],[-28,-22],[-8,-34],[-10,-25],[-16,32],[-10,29],[0,46],[8,59],[26,99],[40,-5],[21,15],[26,44],[-12,37],[-14,28],[3,43],[25,118],[11,138],[-21,34],[-19,23],[-89,-24],[-33,13],[-8,26],[-2,21],[25,35],[25,59],[-43,-13],[-15,23],[36,34],[42,82],[99,38],[74,37],[116,78],[86,77],[56,98],[38,93],[62,218],[58,160],[98,165],[61,15],[23,-3],[4,-12],[-14,-14],[-4,-20],[26,-7],[42,-1],[79,10],[134,-6],[234,14],[33,-7],[87,-48],[47,6],[96,-23],[52,-26],[50,-31],[-7,-120],[-10,-80],[-35,-152],[-14,-39],[-56,-110],[-26,-72],[-42,-50],[-60,-35],[-8,-21],[-5,-31],[59,-87],[140,-90],[34,-108],[8,-81],[-9,-210],[-13,-31],[-26,-34],[-25,-40],[16,-59],[20,-219],[4,-178],[-16,-61],[-8,-129],[0,-43],[14,-64],[28,-54],[37,-34],[105,-63],[99,-76],[7,-24],[5,-29],[-35,-30],[-55,-78],[-35,-65],[-3,-53],[12,-67],[-6,-63],[-23,-56],[-33,-41],[-99,-63],[-207,-334],[-50,-39],[-84,13],[23,-48],[29,-68],[-4,-45],[-54,3],[-77,-48],[-35,-32],[-60,-17],[-45,17],[-50,31],[7,26],[10,12],[35,19],[34,25],[-17,5],[-14,0],[-38,-32],[-45,-7],[-52,40],[-41,43],[-19,9],[-38,-18],[-146,8],[-38,-7],[-18,-16],[10,-13],[11,-24],[15,-48],[14,-36],[60,-39],[81,-15],[78,-48],[99,-34],[224,14],[59,-4],[58,-15],[97,-50],[42,4],[71,45],[17,101],[9,31],[257,142],[48,31],[77,77],[25,52],[29,140],[25,50],[167,161],[26,41],[5,76],[-3,51],[-10,50],[-30,84],[-34,49],[-33,67],[24,138],[28,53],[151,63],[129,23],[144,43],[58,9],[40,-7],[41,-47],[36,-69],[104,-105],[35,-72],[7,-89],[-4,-216],[-20,-94],[41,-24],[20,-22],[51,-31],[27,-31],[27,-11],[59,-7],[168,11],[92,6],[-9,14],[-14,11],[-78,4],[-110,23],[-159,42],[-19,91],[4,56],[36,106],[25,18],[31,7],[36,15],[-11,67],[-14,61],[-34,85],[-37,157],[-51,1],[-39,31],[-189,92],[-179,68],[-123,9],[-39,-7],[-102,-71],[-66,-15],[-125,31],[-107,-17],[-40,17],[-16,31],[32,127],[-17,49],[-47,66],[-28,51],[5,56],[70,214],[29,56],[75,100],[38,76],[-9,44],[-161,239],[-43,85],[-19,27],[-39,32],[-60,38],[-18,34],[163,231],[74,40],[103,25],[50,22],[87,47],[52,39],[17,31],[11,37],[2,91],[-11,73],[-14,41],[-31,52],[-31,59],[22,15],[22,9],[58,-1],[60,-32],[30,-64],[35,-60],[0,-40],[-3,-31],[15,-44],[13,-18],[14,-31],[-13,-25],[-14,-12],[-27,-35],[-43,-108],[-33,-14],[-8,-84],[71,-92],[-9,-69],[-14,-23],[-39,-37],[5,-30],[10,-21],[111,-44],[105,-27],[176,-9],[51,-43],[19,30],[165,-7],[133,-105],[70,-32],[57,-11],[116,13],[20,9],[19,30],[-54,-2],[-24,-14],[-22,1],[-38,11],[-27,18],[-29,35],[-48,104],[-84,33],[-57,-14],[-62,7],[-102,56],[-68,21],[-121,61],[-34,25],[-27,51],[-31,84],[-20,47],[26,9],[83,46],[124,15],[53,-16],[136,-94],[63,-3],[114,41],[13,26],[-26,53],[-34,27],[-66,13],[-80,-24],[-23,20],[8,28],[9,21],[43,5],[30,16],[65,58],[72,28],[71,10],[261,-8],[148,-91],[144,-41],[63,-31],[17,-5],[15,-21],[11,-48],[182,-129],[42,-17],[116,-6],[130,30],[59,3],[63,-9],[33,-16],[36,-30],[-19,-38],[-17,-23],[-36,-64],[-16,-18],[-118,-73],[-47,-19],[-13,-96],[-6,-21],[-5,-34],[22,-68],[5,-42],[-18,-58],[-30,-62],[6,-50],[10,-67],[5,20],[-2,30],[8,35],[54,85],[39,115],[40,30],[36,7],[40,-34],[11,-46],[2,-70],[-8,-65],[-30,-100],[-50,-70],[-16,-39],[23,-37],[25,-29],[29,-9],[33,3],[8,9],[6,28],[-10,36],[-6,33],[61,25],[57,14],[45,42],[11,28],[10,46],[-23,72],[-20,54],[-68,129],[-51,66],[32,99],[53,110],[20,27],[6,17],[6,30],[-5,31],[-6,20],[-54,83],[-39,27],[-123,16],[-31,13],[-90,85],[-11,19],[-20,61],[-7,15],[-25,16],[-83,35],[-58,15],[-84,4],[-51,18],[-76,56],[-8,19],[-22,73],[-17,37],[5,28],[27,58],[19,51],[-23,44],[-33,14],[-36,21],[-15,40],[-9,43],[-1,34],[-6,39],[17,33],[38,34],[-9,24],[5,31],[247,41],[96,11],[480,4],[34,12],[209,20],[89,24],[94,-25],[34,1],[69,7],[45,51],[102,20],[170,21],[84,-4],[19,-15],[19,-21],[-92,-62],[-92,-56],[-76,-24],[-74,-49],[-7,-19],[-2,-12],[2,-39],[5,-25],[77,-32],[59,-44],[57,-32],[45,-19],[11,11],[-165,104],[-42,23],[-17,25],[8,38],[17,17],[26,19],[17,9],[62,20],[206,27],[49,51],[21,30],[56,31],[-19,13],[-46,8],[-36,18],[-142,183],[-35,28],[-109,20],[-49,21],[50,62],[59,16],[40,-4],[35,-17],[65,-51],[92,22],[-35,23],[-58,26],[-54,42],[-77,37],[-86,24],[-90,10],[25,55],[50,-7],[16,17],[23,33],[125,-77],[59,21],[50,35],[104,93],[14,42],[-50,23],[-41,11],[-56,-2],[-5,25],[24,33],[45,13],[139,-36],[232,93],[63,45],[161,58],[79,-7],[164,77],[227,33],[132,1],[102,42],[156,15],[54,17],[263,43],[146,34],[23,27],[-131,-22],[-31,20],[-27,-13],[-20,-19],[-63,34],[-17,-9],[-13,-18],[-23,-6],[-27,4],[-9,41],[32,55],[37,-29],[43,42],[27,1],[81,-26],[54,27],[72,13],[79,-12],[33,3],[19,25],[129,-22],[89,15],[61,-2],[95,-13],[43,-18],[-25,-42],[-92,-68],[25,-11],[53,31],[159,46],[26,-9],[-18,-40],[-11,-17],[106,23],[91,50],[40,9],[41,-31],[39,28],[9,28],[69,6],[28,26],[49,19],[40,8],[89,36],[31,-11],[59,-9],[56,-17],[105,-40],[14,-15],[13,-3],[30,-28],[-22,-42],[-24,-60],[-45,-28],[27,-3],[19,8],[36,40],[32,28],[-8,119],[-57,60],[-44,20],[-102,63],[-34,27],[-46,28],[18,17],[196,-22],[100,11],[108,-7],[144,27],[61,-28],[69,1],[80,-23],[24,27],[-131,29],[-58,-3],[-21,15],[22,34],[25,51],[-25,44],[-24,24],[-4,45],[23,52],[54,22],[30,42],[63,55],[303,179],[145,68],[55,9],[64,-6],[126,57],[47,0],[175,-45],[42,-33],[96,-26],[111,-14],[51,-21],[25,-24],[21,-33],[-90,-22],[-97,-66],[-132,-36],[-163,-24],[-34,-18],[311,-5],[90,4],[19,-57],[30,-2],[90,27],[54,2],[102,-20],[21,11],[44,1],[94,-25],[42,-37],[-67,-60],[-69,-53],[-84,-90],[-26,7],[-44,2],[8,-45],[74,2],[40,-20],[92,25],[130,-8],[27,7],[50,28],[13,52],[22,33],[43,11],[47,-10],[80,0],[203,17],[170,-22],[136,27],[178,-20],[78,-21],[57,-37],[52,-11],[42,-29],[43,-42],[-21,-34],[-21,-23],[56,25],[43,6],[32,-15],[57,-15],[18,-95],[17,-18],[15,-33],[-21,-30],[-18,-14],[45,3],[63,32],[13,11],[16,24],[-24,23],[-21,14],[27,11],[52,-4],[26,-42],[17,-38],[38,-127],[81,17],[4,-38],[-34,-87],[-36,-64],[-14,-14],[-23,-3],[9,34],[-14,20],[-21,12],[-74,12],[-138,79],[-37,8],[-8,-4],[-4,-7],[77,-54],[63,-95],[57,28],[23,-5],[31,-45],[56,-18],[47,-30],[-31,-91],[-192,-160],[-203,-93],[-90,-65],[-158,-47],[-113,-64],[-144,-47],[-42,-51],[-107,-32],[8,-17],[12,-18],[-13,-30],[-15,-23],[-83,-47],[-121,-32],[-243,-195],[-121,-40],[-137,-2],[-29,-18],[-104,-123],[-32,-26],[-136,-13],[-142,-201],[-79,-68],[-69,-37],[72,7],[85,27],[99,65],[26,30],[14,34],[29,27],[45,19],[176,21],[72,-8],[106,6],[70,36],[41,13],[37,4],[19,26],[62,5],[143,34],[21,12],[46,51],[85,-19],[61,10],[159,91],[96,34],[26,24],[-19,17],[-22,12],[-92,-32],[-83,-10],[-94,8],[-13,13],[-11,32],[30,47],[26,28],[60,37],[49,13],[183,-40],[38,-5],[21,66],[58,-3],[58,-11],[-25,-14],[-64,-21],[20,-48],[28,-33],[112,-47],[95,-21],[70,1],[110,20],[17,14],[23,38],[-28,72],[27,-9],[27,-18],[42,-44],[40,-75],[25,-35],[-15,-37],[-57,-71],[33,-39],[59,-26],[0,-116],[-4,-56],[-29,-61],[-34,-26],[-33,-38],[8,-36],[8,-22],[35,-42],[98,-13],[13,11],[-23,13],[-66,20],[-26,16],[-23,38],[27,42],[29,31],[35,71],[11,50],[-7,52],[23,24],[35,25],[17,5],[16,11],[-25,13],[-23,6],[-48,32],[-8,41],[96,17],[57,29],[210,13],[144,55],[322,-15],[226,-45],[317,-5],[117,-30],[11,-11],[7,-22],[-50,-9],[-83,0],[-22,-56],[14,-70],[148,-74],[129,-31],[90,-49],[48,-4],[188,5],[110,-25],[100,19],[109,0],[38,-5],[40,-37],[64,-10],[77,-1],[43,7],[17,9],[-6,15],[-64,22],[7,27],[25,6],[107,-36],[44,-6],[39,27],[29,49],[16,33],[17,17],[14,2],[14,10],[-34,39],[-33,49],[-7,32],[-10,16],[-4,59],[30,60],[21,17],[85,-23],[38,36],[24,14],[102,24],[43,-2],[71,-23],[228,-110],[-5,-42],[54,12],[26,17],[61,11],[41,18],[11,-7],[14,-17],[-10,-25],[-14,-25],[9,-15],[12,-3],[61,-31],[79,57],[32,55],[22,11],[197,-38],[59,-21],[12,-12],[8,-20],[32,-22],[39,-12],[-5,-18],[-2,-19],[92,-3],[40,-16],[44,-25],[-5,-29],[11,-17],[41,-2],[11,3],[-13,-39],[-55,-42],[-33,-16],[-38,-28],[21,-5],[95,-8],[59,-56],[6,-41],[-37,-16],[-84,-52],[-50,-21],[-35,-2],[-25,-7],[36,-22],[158,-6],[46,-28],[36,-70],[0,-86],[-36,-43],[-97,-7],[-127,96],[-78,37],[-109,71],[-21,-12],[32,-60],[51,-34],[92,-93],[154,-192],[36,16],[21,24],[10,31],[-9,43],[25,-21],[23,-38],[46,-64],[-62,3],[-80,-21],[-29,-26],[22,-35],[59,-5],[25,-49],[46,-60],[103,-164],[73,-31],[71,-68],[71,-32],[37,-2],[25,42],[20,-15],[19,-76],[34,-33],[38,-2],[31,13],[45,36],[36,42],[58,116],[38,58],[36,24],[-13,28],[4,33],[26,77],[36,91],[27,49],[66,97],[25,18],[18,-32],[14,-42],[10,-18],[10,-7],[81,-85],[82,-67],[73,-33],[115,-32],[167,5],[30,42],[58,32],[94,16],[55,39],[91,11],[57,-6],[88,-28],[197,-89],[55,-33],[29,-35],[64,-52],[41,-25],[40,-18],[14,5],[-5,15],[-20,15],[-16,19],[47,19],[5,15],[17,12],[62,11],[-61,19],[-20,3],[-29,11],[2,27],[19,19],[15,36],[19,23],[32,18],[24,3],[57,-23],[41,42],[30,-3],[63,-43],[56,-64],[31,0],[87,26],[98,1],[-13,38],[-68,83],[8,106],[-47,24],[-54,14],[78,27],[58,87],[46,8],[48,16],[-15,11],[-143,9],[-31,-10],[-21,-26],[-71,0],[-8,59],[-2,37],[93,79],[35,17],[236,-2],[71,15],[104,39],[-27,25],[-3,50],[-89,73],[7,16],[9,11],[27,0],[140,-19],[58,-39],[151,-40],[404,-13],[45,-14],[174,-17],[73,-19],[175,-23],[80,-17],[63,-25],[103,-15],[47,-17],[-5,-53],[-213,7],[-71,17],[-88,2],[-33,-8],[-53,-44],[-63,-23],[-53,-4],[35,-38],[49,-10],[158,49],[432,24],[66,-4],[-7,-34],[-58,-65],[-55,-50],[-80,-52],[-30,0],[63,110],[-26,6],[-24,-3],[-70,46],[-11,2],[-14,-11],[0,-16],[-13,-64],[26,-27],[0,-46],[-97,-29],[-38,3],[-40,18],[-17,0],[-5,-15],[8,-27],[-1,-13],[-15,-22],[-8,-23],[24,-26],[31,-7],[171,29],[75,36],[82,65],[146,159],[65,54],[37,21],[48,8],[269,-17],[156,-34],[149,-51],[74,-42],[54,-57],[10,-24],[5,-32],[-37,-30],[-167,-10],[-64,-17],[-24,-19],[-3,-11],[-8,-17],[12,-14],[75,-2],[72,-13],[100,-36],[15,-12],[32,-35],[10,-6],[149,6],[10,-12],[9,-26],[-39,-40],[-39,-27],[-80,-64],[40,23],[161,55],[41,10],[49,-4],[121,-50],[50,-39],[92,-112],[-26,-12],[-66,-12],[208,-85],[80,1],[184,24],[93,1],[172,54],[171,35],[157,2],[83,33],[220,-1],[211,-11],[164,-20],[185,-60],[180,-83],[105,-82],[21,-25],[30,-57],[13,-48],[13,-65],[-6,-51],[-26,-36],[-16,-45],[2,-53],[-31,-69],[29,-49],[80,-32],[172,-42],[47,-29],[6,-85],[14,-71],[15,-136],[29,-35],[47,-32],[9,-45],[-59,-144],[-37,-27],[-39,-40],[69,14],[35,53],[38,97],[36,16],[19,31],[0,92],[-23,79],[0,57],[15,46],[114,95],[61,38],[58,22],[158,19],[72,19],[82,-13],[58,5],[67,20],[59,-10],[98,-63],[347,-14],[61,-22],[233,-27],[18,0],[52,31],[154,108],[64,-7],[26,-17],[27,-43],[28,-27],[23,-75],[20,-102],[33,-18],[46,-6],[100,-38],[101,-48],[29,-92],[54,-77],[126,7],[132,16],[127,126],[0,52],[-31,74],[-47,72],[-37,112],[-117,25],[11,33],[44,39],[40,61],[6,46],[-11,98],[106,-7],[106,-11],[201,-44],[163,-18],[86,-28],[52,-32],[62,-23],[21,57],[23,14],[82,-33],[60,-9],[103,4],[130,-15],[141,3],[127,25],[47,-5],[52,-20],[84,-53],[143,-71],[130,-20],[150,-66],[141,-25],[113,-38],[16,-14],[5,-21],[8,-18],[89,-20],[165,-143],[-99962,-16]],[[90522,76877],[4,-3],[5,0],[5,1],[2,-6],[1,-11],[-3,-1],[-7,-2],[-4,-1],[-2,8],[-1,6],[-4,4],[0,4],[4,1]],[[90654,76972],[-7,-3],[-12,3],[-4,3],[2,5],[8,8],[6,-3],[5,-2],[2,-11]],[[90567,76848],[-3,-1],[-2,7],[6,8],[11,9],[4,-5],[-4,-7],[-5,-4],[-7,-7]],[[5628,39602],[-9,0],[-12,4],[-7,3],[-1,5],[3,16],[6,9],[12,-2],[8,-11],[1,-19],[-1,-5]],[[2089,46900],[-1,-1],[-1,6],[-2,7],[-1,7],[0,1],[3,-6],[2,-7],[0,-7]],[[2448,46454],[0,-2],[-2,3],[-2,5],[-1,6],[1,1],[2,-4],[1,-4],[1,-5]],[[2163,49244],[1,-4],[4,1],[4,1],[-2,-4],[-8,-2],[-3,10],[4,8],[4,1],[1,-2],[-1,-2],[-1,0],[-3,-2],[0,-5]],[[2306,50249],[9,-11],[7,-15],[4,-20],[-1,-5],[-5,0],[-6,6],[-5,9],[-2,2],[-1,2],[6,-1],[6,-9],[5,-4],[-1,10],[-5,18],[-4,6],[-4,5],[-5,3],[-4,-3],[-1,-2],[-1,5],[1,3],[1,4],[6,-3]],[[2476,50037],[-1,-5],[-2,4],[1,6],[2,6],[1,-3],[-1,-8]],[[2435,49272],[-3,-3],[-3,1],[-2,4],[0,6],[3,4],[3,-1],[3,-6],[-1,-5]],[[1524,49150],[3,-8],[0,-4],[-1,1],[-5,2],[-1,5],[3,-3],[2,1],[-4,6],[-2,5],[-3,2],[0,3],[3,-1],[5,-9]],[[6957,49488],[-1,-4],[-4,5],[-6,9],[-6,9],[0,4],[8,5],[10,5],[2,-6],[-2,-9],[-1,-18]],[[7838,45252],[-2,-9],[-5,3],[-2,12],[-1,12],[2,11],[2,-1],[4,-12],[2,-16]],[[6704,48601],[-6,-2],[-8,0],[-3,7],[-1,6],[3,1],[2,-2],[11,-1],[3,-4],[-1,-5]],[[407,40802],[-3,-5],[-8,6],[-6,8],[-1,8],[3,10],[6,6],[3,-2],[-2,-3],[-3,-4],[0,-11],[5,-6],[4,-1],[2,-6]],[[56,40932],[0,-17],[-4,1],[-5,8],[-2,-4],[-2,-5],[-1,-12],[-1,-7],[-4,3],[0,11],[1,9],[2,12],[7,11],[9,-10]],[[358,39937],[0,-1],[-1,0],[-2,2],[-2,4],[0,4],[0,4],[1,0],[2,-4],[1,-4],[1,-5]],[[28110,32461],[-50,-12],[-2,3],[3,10],[11,18],[14,21],[3,1],[5,-2],[6,-4],[15,-14],[4,-10],[-1,-8],[-8,-3]],[[46009,47249],[-9,-1],[-3,5],[-2,14],[5,22],[4,13],[7,-2],[8,-15],[8,-13],[-4,-12],[-14,-11]],[[70216,58296],[-2,-4],[0,10],[2,17],[3,11],[1,-1],[0,-11],[-2,-15],[-2,-7]],[[70296,56606],[-4,-7],[-4,-3],[-3,1],[-1,7],[0,6],[4,-7],[5,6],[5,18],[1,6],[1,-3],[-1,-10],[-3,-14]],[[70393,53704],[-6,-1],[-4,10],[1,14],[5,10],[7,1],[4,-9],[-2,-14],[-5,-11]],[[70419,54242],[-4,-6],[-5,2],[-2,7],[3,10],[3,13],[3,14],[4,7],[3,-2],[0,-8],[-2,-11],[-1,-14],[-2,-12]],[[86436,53586],[-6,-3],[-4,2],[0,8],[4,9],[6,4],[4,-3],[0,-8],[-4,-9]],[[92123,56074],[-2,-7],[-17,3],[-2,4],[1,3],[8,4],[1,10],[-4,2],[4,6],[6,1],[4,-7],[2,-9],[-1,-10]],[[92188,56124],[-4,-3],[-3,3],[1,14],[2,5],[4,1],[8,-4],[1,-4],[-9,-12]],[[96357,58267],[-7,-4],[-5,4],[4,8],[8,1],[3,-2],[-3,-7]],[[99199,44639],[-10,-6],[-18,5],[-4,9],[6,2],[11,6],[14,-3],[3,-6],[-2,-7]],[[98507,39346],[-2,-7],[-8,2],[-2,13],[5,7],[7,-4],[0,-11]],[[99781,46932],[-4,-6],[-1,0],[1,13],[-1,14],[0,11],[2,2],[2,-13],[1,-15],[0,-6]],[[99636,47532],[0,-7],[-2,1],[-3,8],[-2,13],[2,-3],[4,-7],[1,-5]],[[99552,47208],[-4,-13],[-2,4],[3,8],[2,9],[1,-8]],[[97097,51339],[-3,-1],[-5,6],[0,7],[4,4],[5,-6],[-1,-10]],[[14364,37789],[-3,-9],[-6,8],[-6,16],[-2,18],[6,10],[7,-6],[4,-18],[0,-19]],[[3858,89992],[-10,-3],[0,9],[32,23],[58,29],[-2,-6],[-31,-23],[-47,-29]],[[25913,64077],[4,-28],[-4,4],[-7,21],[-4,26],[4,1],[3,-9],[4,-15]],[[65129,65923],[-3,-12],[-8,1],[-19,11],[-7,16],[13,19],[5,1],[8,-20],[11,-16]],[[27282,65981],[-7,-1],[-1,9],[12,11],[9,-1],[-1,-12],[-12,-6]],[[84650,73721],[3,-6],[0,-9],[-4,-4],[-6,-9],[-6,-7],[-11,3],[-9,11],[3,21],[7,-4],[16,9],[7,-5]]],\"bbox\":[-180,-89.999,180,83.599609375],\"transform\":{\"scale\":[0.0036000360003600037,0.001736003453784538],\"translate\":[-180,-89.999]}}\n","import React from \"react\";\nimport { useFetch } from \"./hooks/useFetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { extent, max, min, bin } from \"d3-array\";\nimport { scale } from \"vega\";\nimport * as topojson from \"topojson-client\";\nimport world from \"../land-50m\";\n// import world from \"../states-10m.json\";\n\n\nconst App = () => {\n    const [data, loading] = useFetch(\n        \"https://raw.githubusercontent.com/AkolyVongdala/A2-Exploratory-Data-Analysis/main/data/weather.csv\"\n    );\n\n    const dataSmallSample = data.slice(0, 5000);\n    const TMAXextent = extent(dataSmallSample, (d) => {\n        return +d.TMAX;\n    });\n\n    const TMINextent = extent(dataSmallSample, (d) => {\n        return +d.TMIN;\n    });\n\n    const PRCPextent = extent(dataSmallSample, (d) => {\n        return +d.PRCP;\n    });\n\n    const land = topojson.feature(world, world.objects.land);\n    const projection = d3.geoNaturalEarth1();\n    const path = d3.geoPath(projection);\n    const mapPathString = path(land);\n\n    const chartSize = 500;\n    const margin = 20;\n    const axisTextAlignmentFactor = 3;\n    const yScale = scaleLinear()\n    .domain(TMAXextent) // unit: km\n    .range([chartSize - margin, chartSize - 350]); // unit: pixels\n\n    const xScale = scaleLinear()\n    .domain(TMINextent) // unit: km\n    .range([chartSize - margin, chartSize - 350]); // unit: pixels\n\n    const pScale = scaleLinear()\n    .domain(PRCPextent) // unit: km\n    .range([chartSize - margin, chartSize - 350]); // unit: pixels\n\n    // bin is a function \n    _bins = bin().thresholds(35);\n    tmaxBins = _bins(\n        dataSmallSample.map((d) => {\n            return +d.TMAX;\n        })\n    );\n\n    const histogramLeftPadding = 20;\n\n    console.log(\"from hook\", loading, data);\n    return (\n        <div>\n            <p>{loading && \"Loading data!\"}</p>\n            \n            {/* Introduction */}\n            <h2>Dataset: Daily Weather in the U.S., 2017</h2>\n            <p>This dataset contains daily weather measurements from weather stations across the US in 2017, provided by the <a target=\"_black\" href=\"https://www.ncdc.noaa.gov/data-access/land-based-station-data/land-based-datasets/global-historical-climatology-network-ghcn\">NOAA Daily Global Historical Climatology Network.</a> This data has been transformed and there are a total of 1,000 weather measurements: some weather stations with only sparse measurements have been filtered out. </p>\n            <p>Column description:</p>\n            <p>\n            PRCP = Precipitation (inch),\n            SNOW = Snowfall (inch),\n            SNWD = Snow depth (inch),\n            TMAX = Maximum temperature (F),\n            TMIN = Minimum temperature (F),\n            TAVG = Average temperature (F),\n            AWND = Average daily wind speed (miles / hour),\n            WSF5 = Fastest 5-second wind speed (miles / hour),\n            WDF5 = Direction of fastest 5-second wind (degrees)\n            </p>\n\n            <hr />\n            {/* Analysis questions*/}\n            <h2>Analysis Questions</h2>\n            <p>Does Washington State have a unique climate compared to other U.S. States? </p>\n\n            <h4>Specific Questions:</h4>\n            <p>1. Compared to other states, is Washington state average temperature normal?</p>\n            <p>2. Is Washington one of the states with the highest recorded temperature?</p>\n            <p>3. Is Washington one of the states with the lowest recorded temperature?</p>\n            <p>4. What is the average snowfall per state recorded in 2017?</p>\n\n            <hr />\n            {/* SVG Work */}\n            <p>Sanity check to see if all data points are from the U.S. States. Noticed there are small amount of data points from U.S. territories like Guam, \n                Puerto Rico, and U.S. Virgin Islands. Based on this observation, the data will be transformed to include only U.S. state data.</p>\n            <svg width={1000} height={600} style={{ border: \"1px solid black\" }}>\n                <path d={mapPathString} fill=\"rgb(200, 200, 200)\" />\n                {dataSmallSample.map((measurement) => {\n                return (\n                    <circle\n                    transform={`translate(\n                        ${projection([measurement.longitude, measurement.latitude])})`}\n                    r=\".7\"\n                    stroke = {\"steelblue\"}\n                    strokeOpacity = \"0.2\"\n                    />\n                );\n                })}\n            </svg>\n\n\n            <h3>Distribution of average temperature</h3>\n            <p>Comparing Washington state daily average tempereature (red) to the rest of the country's (blue) daily average temperature. Despite some salient differences for lower average temperature, \n                Washington state and other U.S. State average temperature have a high level of association.</p>\n            <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.state == \"WA\";\n                  return <circle \n                            key={index} \n                            cx={highlight ? chartSize/2 : chartSize / 2 + 20} \n                            cy={chartSize - margin - measurement.TAVG} \n                            fill = \"none\"\n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = \"0.2\"\n                            r=\"3\" />\n                })}\n            </svg>\n\n            <h3>Distribution of max temperature</h3>\n            <p>Examining Washington state highest/max temperatures compared to the rest of the states. \n                In comparison to other U.S. states, Washington State (red) max temperature stays consistent from 70 - 85 F as indicated \n                by the opacity of the red.</p>\n            <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                <text \n                    x={chartSize/2 - 12} \n                    textAnchor=\"end\"\n                    y={yScale(0) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    0\n                </text>\n                <text \n                    x={chartSize/2 - 15} \n                    textAnchor=\"end\"\n                    y={yScale(100) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    100\n                </text>\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={yScale(100)} \n                    x2={chartSize / 2 - 5} \n                    y2={yScale(100)}\n                    stroke = {\"black\"}                \n                />\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={yScale(0)} \n                    x2={chartSize / 2 - 5} \n                    y2={yScale(0)}\n                    stroke = {\"black\"}                \n                />\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.state == \"WA\";\n                  return <line \n                            key={index}\n                            x1={highlight ? chartSize/2 : chartSize/2 + 20} \n                            y1={yScale(measurement.TMAX)}\n                            x2={highlight ? chartSize / 2 + 20 : chartSize/2 + 40} \n                            y2={yScale(measurement.TMAX)} \n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = {.5}\n                        />\n                })}\n            </svg>\n\n            <h3>Vs. Distribution of max temperature of all U.S. States</h3>\n            <p>Similar to Washington, the U.S. sttate average high temperature range from 70 - 90 F</p>\n            <svg width={chartSize} height={chartSize} style={{ border: \"1px solid black\" }}>\n                {tmaxBins.map((bin, i) => {\n                return (\n                    <rect\n                        y={chartSize - 10 - bin.length}\n                        width=\"10\"\n                        height={bin.length}\n                        x={histogramLeftPadding + i * 11}\n                        fill = \"steelblue\"\n                    />\n                );\n                })}\n            </svg>\n            \n            <h3>Distribution of min temperature</h3>\n            <p>Examining Washington state lowest/min temperatures compared to the rest of the states. \n                In comparison to other states, Washington State (red) min temperature stays consistent from 50 - 65 F as indicated \n                by the opacity of the red. Though there is a great distribution is lower areas like 30 - 40 F with a small dip below 0 F.</p>\n            <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                <text \n                    x={chartSize/2 - 12} \n                    textAnchor=\"end\"\n                    y={xScale(0) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    0\n                </text>\n                <text \n                    x={chartSize/2 - 15} \n                    textAnchor=\"end\"\n                    y={xScale(100) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    100\n                </text>\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={xScale(100)} \n                    x2={chartSize / 2 - 5} \n                    y2={xScale(100)}\n                    stroke = {\"black\"}                \n                />\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={xScale(0)} \n                    x2={chartSize / 2 - 5} \n                    y2={xScale(0)}\n                    stroke = {\"black\"}                \n                />\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.state == \"WA\";\n                  return <line \n                            key={index}\n                            x1={highlight ? chartSize/2 : chartSize/2 + 20} \n                            y1={xScale(measurement.TMIN)}\n                            x2={highlight ? chartSize / 2 + 20 : chartSize/2 + 40} \n                            y2={xScale(measurement.TMIN)} \n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = {.5}\n                        />\n                })}\n            </svg>\n            \n            <h3>Distribution of snow fall</h3>\n            <p>Comparing Washington state daily snow fall (red) to the rest of the country's (blue) daily snow fall. There is a big differences in that Washington State has\n                way less snow fall daily compared to other U.S. States. But Washington state and other U.S. State average snowfall fall still have a similar pattern.</p>\n                <svg width={chartSize} height={chartSize} style={{ border: \"1px solid black\" }}>\n                    {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.state === \"WA\";\n                    return (\n                        <circle\n                        key={index}\n                        cx={highlight ? 100 - measurement.SNOW : 200 - measurement.SNOW}\n                        cy={chartSize - margin - measurement.SNWD}\n                        r=\"3\"\n                        fill=\"none\"\n                        stroke={highlight ? \"red\" : \"steelblue\"}\n                        strokeOpacity=\"0.2\"\n                        />\n                    );\n                    })}\n                </svg>\n\n            <h3>Distribution of precipitation (inch)</h3>\n            <p>Examining Washington state daily precipiation compared to the rest of the U.S. states. \n                In comparison to other states, Washington State (red) precipiation stays consistent at the lower range \n                by the opacity of the red. Which is surprsing since WA is known for its rainy wheather.</p>\n            <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                <text \n                    x={chartSize/2 - 12} \n                    textAnchor=\"end\"\n                    y={pScale(0) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    0\n                </text>\n                <text \n                    x={chartSize/2 - 12} \n                    textAnchor=\"end\"\n                    y={pScale(6) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    6\n                </text>\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={pScale(6)} \n                    x2={chartSize / 2 - 5} \n                    y2={pScale(6)}\n                    stroke = {\"black\"}                \n                />\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={pScale(0)} \n                    x2={chartSize / 2 - 5} \n                    y2={pScale(0)}\n                    stroke = {\"black\"}                \n                />\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.state == \"WA\";\n                  return <line \n                            key={index}\n                            x1={highlight ? chartSize/2 : chartSize/2 + 20} \n                            y1={pScale(measurement.PRCP)}\n                            x2={highlight ? chartSize / 2 + 20 : chartSize/2 + 40} \n                            y2={pScale(measurement.PRCP)} \n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = {.5}\n                        />\n                })}\n            </svg>\n\n\n            {/* below */}\n            {/* <h3> Working with geo data </h3>\n            <svg width={1000} height={600} style={{ border: \"1px solid black\" }}>\n                <path d={mapPathString} fill=\"rgb(200, 200, 200)\" />\n                {dataSmallSample.map((measurement) => {\n                return (\n                    <circle\n                    transform={`translate(\n                        ${projection([measurement.longitude, measurement.latitude])})`}\n                    r=\"1.5\"\n                    />\n                );\n                })}\n            </svg> */}\n            \n            {/* <h3>Binning</h3>\n            <svg width={chartSize} height={chartSize} style={{ border: \"1px solid black\" }}>\n            {tmaxBins.map((bin, i) => {\n            return (\n                <rect\n                    y={chartSize - 10 - bin.length}\n                    width=\"10\"\n                    height={bin.length}\n                    x={histogramLeftPadding + i * 11}\n                    fill = \"steelblue\"\n                />\n            );\n            })}\n        </svg> */}\n\n\n\n            {/* <h3> Scales in D3 - temperature</h3>\n            <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                <text \n                    x={chartSize/2 - 12} \n                    textAnchor=\"end\"\n                    y={yScale(0) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    0\n                </text>\n                <text \n                    x={chartSize/2 - 15} \n                    textAnchor=\"end\"\n                    y={yScale(100) + axisTextAlignmentFactor} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    100\n                </text> */}\n                {/* <line \n                    x1={chartSize/2 - 10} \n                    y1={yScale(100)} \n                    x2={chartSize / 2 - 5} \n                    y2={yScale(100)}\n                    stroke = {\"black\"}                \n                />\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={yScale(0)} \n                    x2={chartSize / 2 - 5} \n                    y2={yScale(0)}\n                    stroke = {\"black\"}                \n                /> */}\n                {/* {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.station == \"KALISPELL GLACIER AP\";\n                  return <line \n                            key={index}\n                            x1={chartSize/2} \n                            y1={yScale(measurement.TMAX)}\n                            x2={chartSize / 2 + 20} \n                            y2={yScale(measurement.TMAX)} \n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = {highlight ? 1 : 0.1 }\n                        />\n                })}\n            </svg> */}\n\n\n        {/* <h3>Scatterplot</h3>\n        <svg width={chartSize} height={chartSize} style={{ border: \"1px solid black\" }}>\n        {dataSmallSample.map((measurement, index) => {\n          const highlight = measurement.station === \"KALISPELL GLACIER AP\";\n          return (\n            <circle\n              key={index}\n              cx={100 - measurement.TMIN}\n              cy={chartSize - margin - measurement.TMAX}\n              r=\"3\"\n              fill=\"none\"\n              stroke={highlight ? \"red\" : \"steelblue\"}\n              strokeOpacity=\"0.2\"\n            />\n          );\n        })}\n      </svg> */}\n            \n            {/* <p> Barcode plot TMAX at Kalispell Glacier (sounds cold, expect it to be\n        lower than average)</p> */}\n            {/* <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                <text \n                    x={chartSize/2 - 15} \n                    textAnchor=\"end\"\n                    y={chartSize - margin + 3} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    0\n                </text>\n                <text \n                    x={chartSize/2 - 15} \n                    textAnchor=\"end\"\n                    y={chartSize - margin - 100} \n                    style={{ fontSize: 10 , fontFamily: \"Gill San, sans serif\"}}\n                >\n                    100\n                </text>\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={chartSize - margin - 100} \n                    x2={chartSize / 2 - 5} \n                    y2={chartSize - margin - 100}\n                    stroke = {\"black\"}                \n                />\n                <line \n                    x1={chartSize/2 - 10} \n                    y1={chartSize - margin} \n                    x2={chartSize / 2 - 5} \n                    y2={chartSize - margin}\n                    stroke = {\"black\"}                \n                />\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.station == \"KALISPELL GLACIER AP\";\n                  return <line \n                            key={index}\n                            x1={chartSize/2} \n                            y1={chartSize - margin - measurement.TMAX}\n                            x2={chartSize / 2 + 20} \n                            y2={chartSize - margin - measurement.TMAX} \n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = {highlight ? 1 : 0.1 }\n                        />\n                })}\n            </svg> */}\n\n            {/* <p> Display the distribution of max temperature</p> */}\n            {/* <svg width={chartSize} height={chartSize} style={{border : \"1px solid black\"}}>\n                {dataSmallSample.map((measurement, index) => {\n                    const highlight = measurement.station == \"KALISPELL GLACIER AP\";\n                  return <circle \n                            key={index} \n                            cx={highlight ? chartSize/2 : chartSize / 2 - 20} \n                            cy={chartSize - margin - measurement.TMAX} \n                            fill = \"none\"\n                            stroke = {highlight ? \"red\" : \"steelblue\"}\n                            strokeOpacity = \"0.2\"\n                            r=\"3\" />\n                })}\n            </svg> */}\n        </div>\n    );\n    \n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$33c555fd43372c8e4d907f249ce62e9d$var$getOwnPropertySymbols","$33c555fd43372c8e4d907f249ce62e9d$var$hasOwnProperty","$33c555fd43372c8e4d907f249ce62e9d$var$propIsEnumerable","$33c555fd43372c8e4d907f249ce62e9d$var$toObject","val","TypeError","getOwnPropertySymbols","prototype","hasOwnProperty","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","join","test3","split","forEach","letter","keys","err","$33c555fd43372c8e4d907f249ce62e9d$var$shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","$5411c4d2c67718c28883908477018b85$var$l","$5411c4d2c67718c28883908477018b85$var$n","$5411c4d2c67718c28883908477018b85$var$p","$5411c4d2c67718c28883908477018b85$var$q","$5411c4d2c67718c28883908477018b85$var$r","$5411c4d2c67718c28883908477018b85$var$t","$5411c4d2c67718c28883908477018b85$var$u","$5411c4d2c67718c28883908477018b85$var$v","$5411c4d2c67718c28883908477018b85$var$w","$5411c4d2c67718c28883908477018b85$var$x","$5411c4d2c67718c28883908477018b85$var$A","$5411c4d2c67718c28883908477018b85$var$B","$5411c4d2c67718c28883908477018b85$var$F","$5411c4d2c67718c28883908477018b85$var$G","$5411c4d2c67718c28883908477018b85$var$H","$5411c4d2c67718c28883908477018b85$var$I","$5411c4d2c67718c28883908477018b85$var$M","$5411c4d2c67718c28883908477018b85$var$R","$5411c4d2c67718c28883908477018b85$var$T","$5411c4d2c67718c28883908477018b85$var$z","b","c","encodeURIComponent","$5411c4d2c67718c28883908477018b85$var$C","this","props","context","refs","updater","$5411c4d2c67718c28883908477018b85$var$D","$5411c4d2c67718c28883908477018b85$var$E","$5411c4d2c67718c28883908477018b85$var$J","d","k","h","ref","g","children","f","Array","m","defaultProps","$$typeof","type","_owner","current","$5411c4d2c67718c28883908477018b85$var$L","$5411c4d2c67718c28883908477018b85$var$N","=",":","replace","$5411c4d2c67718c28883908477018b85$var$escape","toString","$5411c4d2c67718c28883908477018b85$var$O","isArray","$5411c4d2c67718c28883908477018b85$var$K","push","$5411c4d2c67718c28883908477018b85$var$y","next","done","value","Error","$5411c4d2c67718c28883908477018b85$var$P","$5411c4d2c67718c28883908477018b85$var$Q","_status","_result","then","$5411c4d2c67718c28883908477018b85$var$S","Fragment","StrictMode","Profiler","Suspense","Symbol","for","iterator","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","constructor","isPureReactComponent","__self","__source","ReactCurrentDispatcher","ReactCurrentBatchConfig","transition","ReactCurrentOwner","IsSomeRendererActing","apply","count","toArray","only","Children","Component","PureComponent","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createContext","createElement","bind","createFactory","createRef","render","forwardRef","isValidElement","_payload","_init","lazy","compare","memo","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","$e730a2c7f90895c79caf1eca9a24fce3$var$f","$e730a2c7f90895c79caf1eca9a24fce3$var$g","$e730a2c7f90895c79caf1eca9a24fce3$var$h","$e730a2c7f90895c79caf1eca9a24fce3$var$k","$e730a2c7f90895c79caf1eca9a24fce3$var$l","$e730a2c7f90895c79caf1eca9a24fce3$var$p","$e730a2c7f90895c79caf1eca9a24fce3$var$q","$e730a2c7f90895c79caf1eca9a24fce3$var$t","$e730a2c7f90895c79caf1eca9a24fce3$var$u","$e730a2c7f90895c79caf1eca9a24fce3$var$w","$e730a2c7f90895c79caf1eca9a24fce3$var$x","$e730a2c7f90895c79caf1eca9a24fce3$var$y","$e730a2c7f90895c79caf1eca9a24fce3$var$z","$e730a2c7f90895c79caf1eca9a24fce3$var$A","$e730a2c7f90895c79caf1eca9a24fce3$var$B","$e730a2c7f90895c79caf1eca9a24fce3$var$C","$e730a2c7f90895c79caf1eca9a24fce3$var$D","$e730a2c7f90895c79caf1eca9a24fce3$var$E","$e730a2c7f90895c79caf1eca9a24fce3$var$F","$e730a2c7f90895c79caf1eca9a24fce3$var$G","$e730a2c7f90895c79caf1eca9a24fce3$var$L","$e730a2c7f90895c79caf1eca9a24fce3$var$M","$e730a2c7f90895c79caf1eca9a24fce3$var$N","$e730a2c7f90895c79caf1eca9a24fce3$var$O","$e730a2c7f90895c79caf1eca9a24fce3$var$P","$e730a2c7f90895c79caf1eca9a24fce3$var$Q","$e730a2c7f90895c79caf1eca9a24fce3$var$R","$e730a2c7f90895c79caf1eca9a24fce3$var$S","$e730a2c7f90895c79caf1eca9a24fce3$var$W","$e730a2c7f90895c79caf1eca9a24fce3$var$H","$e730a2c7f90895c79caf1eca9a24fce3$var$I","$e730a2c7f90895c79caf1eca9a24fce3$var$J","$e730a2c7f90895c79caf1eca9a24fce3$var$K","pop","r","sortIndex","id","$e730a2c7f90895c79caf1eca9a24fce3$var$T","callback","startTime","expirationTime","$e730a2c7f90895c79caf1eca9a24fce3$var$U","$e730a2c7f90895c79caf1eca9a24fce3$var$V","priorityLevel","performance","now","unstable_now","Date","window","MessageChannel","setTimeout","clearTimeout","unstable_shouldYield","$e730a2c7f90895c79caf1eca9a24fce3$exports","unstable_forceFrameRate","console","cancelAnimationFrame","requestAnimationFrame","error","Math","floor","port2","port1","onmessage","postMessage","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_Profiling","unstable_UserBlockingPriority","unstable_cancelCallback","unstable_continueExecution","unstable_getCurrentPriorityLevel","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_requestPaint","unstable_runWithPriority","delay","unstable_scheduleCallback","unstable_wrapCallback","$9f6b70400d7e7eba9b88f67f4c53795f$var$aa","$9f6b70400d7e7eba9b88f67f4c53795f$var$m","$9f6b70400d7e7eba9b88f67f4c53795f$var$ba","$9f6b70400d7e7eba9b88f67f4c53795f$var$ca","$9f6b70400d7e7eba9b88f67f4c53795f$var$fa","$9f6b70400d7e7eba9b88f67f4c53795f$var$ha","$9f6b70400d7e7eba9b88f67f4c53795f$var$ia","$9f6b70400d7e7eba9b88f67f4c53795f$var$ja","$9f6b70400d7e7eba9b88f67f4c53795f$var$ka","$9f6b70400d7e7eba9b88f67f4c53795f$var$D","$9f6b70400d7e7eba9b88f67f4c53795f$var$oa","$9f6b70400d7e7eba9b88f67f4c53795f$var$ra","$9f6b70400d7e7eba9b88f67f4c53795f$var$sa","$9f6b70400d7e7eba9b88f67f4c53795f$var$ta","$9f6b70400d7e7eba9b88f67f4c53795f$var$ua","$9f6b70400d7e7eba9b88f67f4c53795f$var$wa","$9f6b70400d7e7eba9b88f67f4c53795f$var$xa","$9f6b70400d7e7eba9b88f67f4c53795f$var$ya","$9f6b70400d7e7eba9b88f67f4c53795f$var$za","$9f6b70400d7e7eba9b88f67f4c53795f$var$Aa","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ba","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ca","$9f6b70400d7e7eba9b88f67f4c53795f$var$Da","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ea","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fa","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ga","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ha","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ia","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ja","$9f6b70400d7e7eba9b88f67f4c53795f$var$E","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ka","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ma","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oa","$9f6b70400d7e7eba9b88f67f4c53795f$var$kb","$9f6b70400d7e7eba9b88f67f4c53795f$var$nb","$9f6b70400d7e7eba9b88f67f4c53795f$var$ob","$9f6b70400d7e7eba9b88f67f4c53795f$var$qb","$9f6b70400d7e7eba9b88f67f4c53795f$var$rb","$9f6b70400d7e7eba9b88f67f4c53795f$var$ub","$9f6b70400d7e7eba9b88f67f4c53795f$var$yb","$9f6b70400d7e7eba9b88f67f4c53795f$var$zb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ab","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Tb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ub","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wb","$9f6b70400d7e7eba9b88f67f4c53795f$var$ec","$9f6b70400d7e7eba9b88f67f4c53795f$var$fc","$9f6b70400d7e7eba9b88f67f4c53795f$var$gc","$9f6b70400d7e7eba9b88f67f4c53795f$var$hc","$9f6b70400d7e7eba9b88f67f4c53795f$var$ic","$9f6b70400d7e7eba9b88f67f4c53795f$var$jc","$9f6b70400d7e7eba9b88f67f4c53795f$var$kc","$9f6b70400d7e7eba9b88f67f4c53795f$var$lc","$9f6b70400d7e7eba9b88f67f4c53795f$var$mc","$9f6b70400d7e7eba9b88f67f4c53795f$var$nc","$9f6b70400d7e7eba9b88f67f4c53795f$var$oc","$9f6b70400d7e7eba9b88f67f4c53795f$var$pc","$9f6b70400d7e7eba9b88f67f4c53795f$var$qc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ec","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ic","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oc","$9f6b70400d7e7eba9b88f67f4c53795f$var$F","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vc","$9f6b70400d7e7eba9b88f67f4c53795f$var$bd","$9f6b70400d7e7eba9b88f67f4c53795f$var$cd","$9f6b70400d7e7eba9b88f67f4c53795f$var$dd","$9f6b70400d7e7eba9b88f67f4c53795f$var$ed","$9f6b70400d7e7eba9b88f67f4c53795f$var$fd","$9f6b70400d7e7eba9b88f67f4c53795f$var$kd","$9f6b70400d7e7eba9b88f67f4c53795f$var$ld","$9f6b70400d7e7eba9b88f67f4c53795f$var$md","$9f6b70400d7e7eba9b88f67f4c53795f$var$sd","$9f6b70400d7e7eba9b88f67f4c53795f$var$td","$9f6b70400d7e7eba9b88f67f4c53795f$var$ud","$9f6b70400d7e7eba9b88f67f4c53795f$var$vd","$9f6b70400d7e7eba9b88f67f4c53795f$var$wd","$9f6b70400d7e7eba9b88f67f4c53795f$var$xd","$9f6b70400d7e7eba9b88f67f4c53795f$var$yd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ad","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Dd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ed","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Id","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ld","$9f6b70400d7e7eba9b88f67f4c53795f$var$Md","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Od","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Td","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ud","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yd","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zd","$9f6b70400d7e7eba9b88f67f4c53795f$var$$d","$9f6b70400d7e7eba9b88f67f4c53795f$var$ae","$9f6b70400d7e7eba9b88f67f4c53795f$var$be","$9f6b70400d7e7eba9b88f67f4c53795f$var$ce","$9f6b70400d7e7eba9b88f67f4c53795f$var$de","$9f6b70400d7e7eba9b88f67f4c53795f$var$ee","$9f6b70400d7e7eba9b88f67f4c53795f$var$fe","$9f6b70400d7e7eba9b88f67f4c53795f$var$ie","$9f6b70400d7e7eba9b88f67f4c53795f$var$le","$9f6b70400d7e7eba9b88f67f4c53795f$var$pe","$9f6b70400d7e7eba9b88f67f4c53795f$var$qe","$9f6b70400d7e7eba9b88f67f4c53795f$var$we","$9f6b70400d7e7eba9b88f67f4c53795f$var$xe","$9f6b70400d7e7eba9b88f67f4c53795f$var$ye","$9f6b70400d7e7eba9b88f67f4c53795f$var$ze","$9f6b70400d7e7eba9b88f67f4c53795f$var$He","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ie","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pe","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qe","$9f6b70400d7e7eba9b88f67f4c53795f$var$Re","$9f6b70400d7e7eba9b88f67f4c53795f$var$Se","$9f6b70400d7e7eba9b88f67f4c53795f$var$Te","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ve","$9f6b70400d7e7eba9b88f67f4c53795f$var$We","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xe","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ye","$9f6b70400d7e7eba9b88f67f4c53795f$var$bf","$9f6b70400d7e7eba9b88f67f4c53795f$var$kf","$9f6b70400d7e7eba9b88f67f4c53795f$var$lf","$9f6b70400d7e7eba9b88f67f4c53795f$var$of","$9f6b70400d7e7eba9b88f67f4c53795f$var$pf","$9f6b70400d7e7eba9b88f67f4c53795f$var$tf","$9f6b70400d7e7eba9b88f67f4c53795f$var$vf","$9f6b70400d7e7eba9b88f67f4c53795f$var$wf","$9f6b70400d7e7eba9b88f67f4c53795f$var$xf","$9f6b70400d7e7eba9b88f67f4c53795f$var$ff","$9f6b70400d7e7eba9b88f67f4c53795f$var$yf","$9f6b70400d7e7eba9b88f67f4c53795f$var$zf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Af","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cf","$9f6b70400d7e7eba9b88f67f4c53795f$var$M","$9f6b70400d7e7eba9b88f67f4c53795f$var$N","$9f6b70400d7e7eba9b88f67f4c53795f$var$Df","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Of","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Tf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Uf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zf","$9f6b70400d7e7eba9b88f67f4c53795f$var$$f","$9f6b70400d7e7eba9b88f67f4c53795f$var$ag","$9f6b70400d7e7eba9b88f67f4c53795f$var$bg","$9f6b70400d7e7eba9b88f67f4c53795f$var$cg","$9f6b70400d7e7eba9b88f67f4c53795f$var$dg","$9f6b70400d7e7eba9b88f67f4c53795f$var$O","$9f6b70400d7e7eba9b88f67f4c53795f$var$kg","$9f6b70400d7e7eba9b88f67f4c53795f$var$mg","$9f6b70400d7e7eba9b88f67f4c53795f$var$ng","$9f6b70400d7e7eba9b88f67f4c53795f$var$og","$9f6b70400d7e7eba9b88f67f4c53795f$var$pg","$9f6b70400d7e7eba9b88f67f4c53795f$var$wg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zg","$9f6b70400d7e7eba9b88f67f4c53795f$var$$g","$9f6b70400d7e7eba9b88f67f4c53795f$var$ah","$9f6b70400d7e7eba9b88f67f4c53795f$var$bh","$9f6b70400d7e7eba9b88f67f4c53795f$var$ch","$9f6b70400d7e7eba9b88f67f4c53795f$var$P","$9f6b70400d7e7eba9b88f67f4c53795f$var$jh","$9f6b70400d7e7eba9b88f67f4c53795f$var$kh","$9f6b70400d7e7eba9b88f67f4c53795f$var$lh","$9f6b70400d7e7eba9b88f67f4c53795f$var$th","$9f6b70400d7e7eba9b88f67f4c53795f$var$vh","$9f6b70400d7e7eba9b88f67f4c53795f$var$wh","$9f6b70400d7e7eba9b88f67f4c53795f$var$xh","$9f6b70400d7e7eba9b88f67f4c53795f$var$R","$9f6b70400d7e7eba9b88f67f4c53795f$var$S","$9f6b70400d7e7eba9b88f67f4c53795f$var$T","$9f6b70400d7e7eba9b88f67f4c53795f$var$yh","$9f6b70400d7e7eba9b88f67f4c53795f$var$zh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Dh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Eh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fh","$9f6b70400d7e7eba9b88f67f4c53795f$var$ei","$9f6b70400d7e7eba9b88f67f4c53795f$var$ug","$9f6b70400d7e7eba9b88f67f4c53795f$var$si","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ci","$9f6b70400d7e7eba9b88f67f4c53795f$var$Di","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ei","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ui","$9f6b70400d7e7eba9b88f67f4c53795f$var$nj","$9f6b70400d7e7eba9b88f67f4c53795f$var$oj","$9f6b70400d7e7eba9b88f67f4c53795f$var$pj","$9f6b70400d7e7eba9b88f67f4c53795f$var$X","$9f6b70400d7e7eba9b88f67f4c53795f$var$U","$9f6b70400d7e7eba9b88f67f4c53795f$var$Y","$9f6b70400d7e7eba9b88f67f4c53795f$var$W","$9f6b70400d7e7eba9b88f67f4c53795f$var$qj","$9f6b70400d7e7eba9b88f67f4c53795f$var$rj","$9f6b70400d7e7eba9b88f67f4c53795f$var$V","$9f6b70400d7e7eba9b88f67f4c53795f$var$sj","$9f6b70400d7e7eba9b88f67f4c53795f$var$tj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Dg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hi","$9f6b70400d7e7eba9b88f67f4c53795f$var$uj","$9f6b70400d7e7eba9b88f67f4c53795f$var$vj","$9f6b70400d7e7eba9b88f67f4c53795f$var$jj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ji","$9f6b70400d7e7eba9b88f67f4c53795f$var$Z","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ri","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ti","$9f6b70400d7e7eba9b88f67f4c53795f$var$xj","$9f6b70400d7e7eba9b88f67f4c53795f$var$yj","$9f6b70400d7e7eba9b88f67f4c53795f$var$zj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Aj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Dj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ej","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ij","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jj","$9f6b70400d7e7eba9b88f67f4c53795f$var$ck","$9f6b70400d7e7eba9b88f67f4c53795f$var$vk","$9f6b70400d7e7eba9b88f67f4c53795f$var$wk","$9f6b70400d7e7eba9b88f67f4c53795f$var$xk","$9f6b70400d7e7eba9b88f67f4c53795f$var$yk","$9f6b70400d7e7eba9b88f67f4c53795f$var$y","$9f6b70400d7e7eba9b88f67f4c53795f$var$da","$9f6b70400d7e7eba9b88f67f4c53795f$var$ea","add","$9f6b70400d7e7eba9b88f67f4c53795f$var$B","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","$9f6b70400d7e7eba9b88f67f4c53795f$var$pa","toUpperCase","$9f6b70400d7e7eba9b88f67f4c53795f$var$qa","toLowerCase","slice","$9f6b70400d7e7eba9b88f67f4c53795f$var$ma","isNaN","$9f6b70400d7e7eba9b88f67f4c53795f$var$na","test","$9f6b70400d7e7eba9b88f67f4c53795f$var$la","removeAttribute","setAttribute","setAttributeNS","$9f6b70400d7e7eba9b88f67f4c53795f$var$La","$9f6b70400d7e7eba9b88f67f4c53795f$var$Na","stack","trim","match","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pa","prepareStackTrace","set","Reflect","construct","displayName","name","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qa","tag","_render","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ra","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sa","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ta","nodeName","$9f6b70400d7e7eba9b88f67f4c53795f$var$Va","_valueTracker","getOwnPropertyDescriptor","configurable","getValue","setValue","stopTracking","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ua","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wa","checked","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xa","document","activeElement","body","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","$9f6b70400d7e7eba9b88f67f4c53795f$var$Za","initialValue","controlled","$9f6b70400d7e7eba9b88f67f4c53795f$var$$a","$9f6b70400d7e7eba9b88f67f4c53795f$var$ab","$9f6b70400d7e7eba9b88f67f4c53795f$var$bb","$9f6b70400d7e7eba9b88f67f4c53795f$var$cb","ownerDocument","$9f6b70400d7e7eba9b88f67f4c53795f$var$eb","$9f6b70400d7e7eba9b88f67f4c53795f$var$db","$9f6b70400d7e7eba9b88f67f4c53795f$var$fb","options","selected","defaultSelected","disabled","$9f6b70400d7e7eba9b88f67f4c53795f$var$gb","dangerouslySetInnerHTML","$9f6b70400d7e7eba9b88f67f4c53795f$var$hb","$9f6b70400d7e7eba9b88f67f4c53795f$var$ib","$9f6b70400d7e7eba9b88f67f4c53795f$var$jb","textContent","$9f6b70400d7e7eba9b88f67f4c53795f$var$lb","$9f6b70400d7e7eba9b88f67f4c53795f$var$mb","$9f6b70400d7e7eba9b88f67f4c53795f$var$pb","firstChild","lastChild","nodeType","nodeValue","$9f6b70400d7e7eba9b88f67f4c53795f$var$sb","$9f6b70400d7e7eba9b88f67f4c53795f$var$tb","style","indexOf","setProperty","$9f6b70400d7e7eba9b88f67f4c53795f$var$vb","$9f6b70400d7e7eba9b88f67f4c53795f$var$wb","is","$9f6b70400d7e7eba9b88f67f4c53795f$var$xb","srcElement","correspondingUseElement","parentNode","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cb","stateNode","$9f6b70400d7e7eba9b88f67f4c53795f$var$Db","$9f6b70400d7e7eba9b88f67f4c53795f$var$Eb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ib","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ob","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rb","l","onError","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xb","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zb","alternate","return","flags","$9f6b70400d7e7eba9b88f67f4c53795f$var$$b","memoizedState","dehydrated","$9f6b70400d7e7eba9b88f67f4c53795f$var$ac","$9f6b70400d7e7eba9b88f67f4c53795f$var$cc","child","sibling","$9f6b70400d7e7eba9b88f67f4c53795f$var$bc","$9f6b70400d7e7eba9b88f67f4c53795f$var$dc","$9f6b70400d7e7eba9b88f67f4c53795f$var$rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","$9f6b70400d7e7eba9b88f67f4c53795f$var$sc","delete","pointerId","$9f6b70400d7e7eba9b88f67f4c53795f$var$tc","$9f6b70400d7e7eba9b88f67f4c53795f$var$vc","$9f6b70400d7e7eba9b88f67f4c53795f$var$wc","lanePriority","priority","hydrate","containerInfo","$9f6b70400d7e7eba9b88f67f4c53795f$var$xc","$9f6b70400d7e7eba9b88f67f4c53795f$var$yc","shift","$9f6b70400d7e7eba9b88f67f4c53795f$var$zc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ac","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bc","$45fbac2cac0f6661dcebd50fbd415655$init","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Dc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zc","$9f6b70400d7e7eba9b88f67f4c53795f$var$$c","eventTimes","$9f6b70400d7e7eba9b88f67f4c53795f$var$ad","$9f6b70400d7e7eba9b88f67f4c53795f$var$gd","$9f6b70400d7e7eba9b88f67f4c53795f$var$hd","$9f6b70400d7e7eba9b88f67f4c53795f$var$id","$9f6b70400d7e7eba9b88f67f4c53795f$var$uc","$9f6b70400d7e7eba9b88f67f4c53795f$var$jd","$9f6b70400d7e7eba9b88f67f4c53795f$var$nd","$9f6b70400d7e7eba9b88f67f4c53795f$var$od","keyCode","charCode","$9f6b70400d7e7eba9b88f67f4c53795f$var$pd","$9f6b70400d7e7eba9b88f67f4c53795f$var$qd","$9f6b70400d7e7eba9b88f67f4c53795f$var$rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pd","getModifierState","$9f6b70400d7e7eba9b88f67f4c53795f$var$zd","$9f6b70400d7e7eba9b88f67f4c53795f$var$ge","$9f6b70400d7e7eba9b88f67f4c53795f$var$he","detail","data","$9f6b70400d7e7eba9b88f67f4c53795f$var$me","$9f6b70400d7e7eba9b88f67f4c53795f$var$ne","$9f6b70400d7e7eba9b88f67f4c53795f$var$oe","event","listeners","$9f6b70400d7e7eba9b88f67f4c53795f$var$re","$9f6b70400d7e7eba9b88f67f4c53795f$var$se","$9f6b70400d7e7eba9b88f67f4c53795f$var$te","$9f6b70400d7e7eba9b88f67f4c53795f$var$ue","$9f6b70400d7e7eba9b88f67f4c53795f$var$ve","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ae","detachEvent","$9f6b70400d7e7eba9b88f67f4c53795f$var$Be","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ce","attachEvent","$9f6b70400d7e7eba9b88f67f4c53795f$var$De","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ee","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fe","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ge","$9f6b70400d7e7eba9b88f67f4c53795f$var$Je","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ke","$9f6b70400d7e7eba9b88f67f4c53795f$var$Le","node","offset","nextSibling","$9f6b70400d7e7eba9b88f67f4c53795f$var$Me","contains","compareDocumentPosition","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ne","HTMLIFrameElement","contentWindow","location","href","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oe","contentEditable","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ue","start","selectionStart","end","selectionEnd","anchorNode","defaultView","getSelection","anchorOffset","focusNode","focusOffset","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ze","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yb","instance","listener","$9f6b70400d7e7eba9b88f67f4c53795f$var$G","$9f6b70400d7e7eba9b88f67f4c53795f$var$$e","has","$9f6b70400d7e7eba9b88f67f4c53795f$var$af","$9f6b70400d7e7eba9b88f67f4c53795f$var$cf","$9f6b70400d7e7eba9b88f67f4c53795f$var$df","addEventListener","capture","passive","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nb","x","button","w","z","u","q","t","$9f6b70400d7e7eba9b88f67f4c53795f$var$ef","relatedTarget","fromElement","parentWindow","toElement","$9f6b70400d7e7eba9b88f67f4c53795f$var$gf","$9f6b70400d7e7eba9b88f67f4c53795f$var$hf","J","K","Q","L","locale","which","$9f6b70400d7e7eba9b88f67f4c53795f$var$je","ctrlKey","altKey","metaKey","char","$9f6b70400d7e7eba9b88f67f4c53795f$var$ke","unshift","$9f6b70400d7e7eba9b88f67f4c53795f$var$jf","$9f6b70400d7e7eba9b88f67f4c53795f$var$mf","autoFocus","$9f6b70400d7e7eba9b88f67f4c53795f$var$nf","__html","$9f6b70400d7e7eba9b88f67f4c53795f$var$qf","$9f6b70400d7e7eba9b88f67f4c53795f$var$rf","$9f6b70400d7e7eba9b88f67f4c53795f$var$sf","previousSibling","Set","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bf","$9f6b70400d7e7eba9b88f67f4c53795f$var$H","$9f6b70400d7e7eba9b88f67f4c53795f$var$I","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ef","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ff","childContextTypes","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gf","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hf","$9f6b70400d7e7eba9b88f67f4c53795f$var$If","getChildContext","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jf","__reactInternalMemoizedMergedChildContext","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kf","$9f6b70400d7e7eba9b88f67f4c53795f$var$eg","$9f6b70400d7e7eba9b88f67f4c53795f$var$fg","$9f6b70400d7e7eba9b88f67f4c53795f$var$gg","$9f6b70400d7e7eba9b88f67f4c53795f$var$hg","$9f6b70400d7e7eba9b88f67f4c53795f$var$ig","$9f6b70400d7e7eba9b88f67f4c53795f$var$jg","$9f6b70400d7e7eba9b88f67f4c53795f$var$lg","$9f6b70400d7e7eba9b88f67f4c53795f$var$qg","$9f6b70400d7e7eba9b88f67f4c53795f$var$rg","$9f6b70400d7e7eba9b88f67f4c53795f$var$sg","childLanes","$9f6b70400d7e7eba9b88f67f4c53795f$var$tg","dependencies","firstContext","lanes","$9f6b70400d7e7eba9b88f67f4c53795f$var$vg","observedBits","responders","$9f6b70400d7e7eba9b88f67f4c53795f$var$xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","$9f6b70400d7e7eba9b88f67f4c53795f$var$yg","$9f6b70400d7e7eba9b88f67f4c53795f$var$zg","eventTime","lane","payload","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ag","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Cg","A","p","C","$9f6b70400d7e7eba9b88f67f4c53795f$var$Eg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lg","shouldComponentUpdate","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mg","contextType","state","_reactInternals","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","$9f6b70400d7e7eba9b88f67f4c53795f$var$Og","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qg","_stringRef","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sg","lastEffect","nextEffect","firstEffect","Map","index","$9f6b70400d7e7eba9b88f67f4c53795f$var$Tg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ug","mode","elementType","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vg","implementation","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xg","$9f6b70400d7e7eba9b88f67f4c53795f$var$dh","$9f6b70400d7e7eba9b88f67f4c53795f$var$eh","documentElement","namespaceURI","tagName","$9f6b70400d7e7eba9b88f67f4c53795f$var$fh","$9f6b70400d7e7eba9b88f67f4c53795f$var$gh","$9f6b70400d7e7eba9b88f67f4c53795f$var$hh","$9f6b70400d7e7eba9b88f67f4c53795f$var$ih","memoizedProps","revealOrder","$9f6b70400d7e7eba9b88f67f4c53795f$var$mh","$9f6b70400d7e7eba9b88f67f4c53795f$var$nh","$9f6b70400d7e7eba9b88f67f4c53795f$var$oh","pendingProps","$9f6b70400d7e7eba9b88f67f4c53795f$var$ph","$9f6b70400d7e7eba9b88f67f4c53795f$var$qh","$9f6b70400d7e7eba9b88f67f4c53795f$var$rh","$9f6b70400d7e7eba9b88f67f4c53795f$var$sh","$9f6b70400d7e7eba9b88f67f4c53795f$var$uh","_workInProgressVersionPrimary","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ah","$9f6b70400d7e7eba9b88f67f4c53795f$var$Bh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ch","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hh","baseQueue","queue","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ih","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mh","_getVersion","_source","mutableReadLanes","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nh","getSnapshot","subscribe","setSnapshot","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ig","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ph","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rh","create","destroy","deps","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Th","$9f6b70400d7e7eba9b88f67f4c53795f$var$Uh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yh","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zh","$9f6b70400d7e7eba9b88f67f4c53795f$var$$h","concat","$9f6b70400d7e7eba9b88f67f4c53795f$var$ai","$9f6b70400d7e7eba9b88f67f4c53795f$var$bi","$9f6b70400d7e7eba9b88f67f4c53795f$var$ci","$9f6b70400d7e7eba9b88f67f4c53795f$var$di","$9f6b70400d7e7eba9b88f67f4c53795f$var$Hg","$9f6b70400d7e7eba9b88f67f4c53795f$var$Jg","$9f6b70400d7e7eba9b88f67f4c53795f$var$fi","$9f6b70400d7e7eba9b88f67f4c53795f$var$gi","$9f6b70400d7e7eba9b88f67f4c53795f$var$hi","$9f6b70400d7e7eba9b88f67f4c53795f$var$ii","$9f6b70400d7e7eba9b88f67f4c53795f$var$ji","$9f6b70400d7e7eba9b88f67f4c53795f$var$ki","$9f6b70400d7e7eba9b88f67f4c53795f$var$li","$9f6b70400d7e7eba9b88f67f4c53795f$var$mi","baseLanes","$9f6b70400d7e7eba9b88f67f4c53795f$var$ni","$9f6b70400d7e7eba9b88f67f4c53795f$var$oi","$9f6b70400d7e7eba9b88f67f4c53795f$var$pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","$9f6b70400d7e7eba9b88f67f4c53795f$var$qi","getDerivedStateFromError","$9f6b70400d7e7eba9b88f67f4c53795f$var$ri","pendingContext","$9f6b70400d7e7eba9b88f67f4c53795f$var$ti","fallback","unstable_avoidThisFallback","$9f6b70400d7e7eba9b88f67f4c53795f$var$ui","unstable_expectedLoadTime","$9f6b70400d7e7eba9b88f67f4c53795f$var$vi","$9f6b70400d7e7eba9b88f67f4c53795f$var$wi","$9f6b70400d7e7eba9b88f67f4c53795f$var$xi","$9f6b70400d7e7eba9b88f67f4c53795f$var$yi","$9f6b70400d7e7eba9b88f67f4c53795f$var$zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ai","$9f6b70400d7e7eba9b88f67f4c53795f$var$Fi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Gi","wasMultiple","multiple","onClick","onclick","html","innerHTML","removeChild","size","createElementNS","createTextNode","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ii","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ki","$9f6b70400d7e7eba9b88f67f4c53795f$var$Li","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mi","message","$9f6b70400d7e7eba9b88f67f4c53795f$var$Ni","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pi","element","$9f6b70400d7e7eba9b88f67f4c53795f$var$Si","componentDidCatch","componentStack","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xi","__reactInternalSnapshotBeforeUpdate","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yi","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zi","$9f6b70400d7e7eba9b88f67f4c53795f$var$$i","focus","$9f6b70400d7e7eba9b88f67f4c53795f$var$aj","display","$9f6b70400d7e7eba9b88f67f4c53795f$var$bj","onCommitFiberUnmount","componentWillUnmount","$9f6b70400d7e7eba9b88f67f4c53795f$var$cj","$9f6b70400d7e7eba9b88f67f4c53795f$var$dj","$9f6b70400d7e7eba9b88f67f4c53795f$var$ej","$9f6b70400d7e7eba9b88f67f4c53795f$var$fj","$9f6b70400d7e7eba9b88f67f4c53795f$var$gj","$9f6b70400d7e7eba9b88f67f4c53795f$var$hj","insertBefore","appendChild","_reactRootContainer","$9f6b70400d7e7eba9b88f67f4c53795f$var$ij","$9f6b70400d7e7eba9b88f67f4c53795f$var$kj","$9f6b70400d7e7eba9b88f67f4c53795f$var$lj","$9f6b70400d7e7eba9b88f67f4c53795f$var$mj","$9f6b70400d7e7eba9b88f67f4c53795f$var$wj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Kj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Lj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Mj","callbackNode","expirationTimes","callbackPriority","$9f6b70400d7e7eba9b88f67f4c53795f$var$Tc","$9f6b70400d7e7eba9b88f67f4c53795f$var$Nj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Oj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Pj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Rj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Sj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Tj","finishedWork","finishedLanes","$9f6b70400d7e7eba9b88f67f4c53795f$var$Uj","timeoutHandle","$9f6b70400d7e7eba9b88f67f4c53795f$var$Wj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Xj","pingCache","$9f6b70400d7e7eba9b88f67f4c53795f$var$Yj","$9f6b70400d7e7eba9b88f67f4c53795f$var$Zj","va","$9f6b70400d7e7eba9b88f67f4c53795f$var$ak","$9f6b70400d7e7eba9b88f67f4c53795f$var$bk","$9f6b70400d7e7eba9b88f67f4c53795f$var$dk","rangeCount","focusedElem","selectionRange","$9f6b70400d7e7eba9b88f67f4c53795f$var$ek","min","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","onCommitFiberRoot","$9f6b70400d7e7eba9b88f67f4c53795f$var$fk","$9f6b70400d7e7eba9b88f67f4c53795f$var$gk","$9f6b70400d7e7eba9b88f67f4c53795f$var$ik","pendingChildren","$9f6b70400d7e7eba9b88f67f4c53795f$var$jk","mutableSourceEagerHydrationData","$9f6b70400d7e7eba9b88f67f4c53795f$var$kk","$9f6b70400d7e7eba9b88f67f4c53795f$var$lk","$9f6b70400d7e7eba9b88f67f4c53795f$var$mk","$9f6b70400d7e7eba9b88f67f4c53795f$var$nk","retryLane","$9f6b70400d7e7eba9b88f67f4c53795f$var$ok","$9f6b70400d7e7eba9b88f67f4c53795f$var$pk","$9f6b70400d7e7eba9b88f67f4c53795f$var$qk","hydrationOptions","mutableSources","_internalRoot","$9f6b70400d7e7eba9b88f67f4c53795f$var$rk","$9f6b70400d7e7eba9b88f67f4c53795f$var$tk","hasAttribute","$9f6b70400d7e7eba9b88f67f4c53795f$var$sk","$9f6b70400d7e7eba9b88f67f4c53795f$var$uk","xlinkHref","mathml","svg","valueOf","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","charAt","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","removeEventListener","animationend","animationiteration","animationstart","transitionend","animation","$9f6b70400d7e7eba9b88f67f4c53795f$var$Qc","clz32","log","LN2","eventPhase","bubbles","cancelable","timeStamp","isTrusted","view","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","movementX","movementY","dataTransfer","animationName","elapsedTime","pseudoElement","clipboardData","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Alt","Control","Meta","Shift","code","repeat","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","documentMode","color","date","datetime","datetime-local","email","month","number","password","range","search","tel","text","time","url","week","oninput","random","readContext","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","$9f6b70400d7e7eba9b88f67f4c53795f$var$uf","WeakMap","WeakSet","ceil","Infinity","$9f6b70400d7e7eba9b88f67f4c53795f$var$hk","unstable_observedBits","unmount","querySelectorAll","JSON","stringify","form","$9f6b70400d7e7eba9b88f67f4c53795f$var$Vj","Events","bundleType","findFiberByHostInstance","rendererPackageName","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","createPortal","findDOMNode","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","$754c4f72a851537241b3501cf0ac9aaf$var$checkDCE","checkDCE","$d95a537853174c19a74ac160cebe5c9c$var$EOL","$d95a537853174c19a74ac160cebe5c9c$var$EOF","$d95a537853174c19a74ac160cebe5c9c$var$objectConverter","Function","$d95a537853174c19a74ac160cebe5c9c$var$inferColumns","rows","columnSet","row","column","$d95a537853174c19a74ac160cebe5c9c$var$pad","$d95a537853174c19a74ac160cebe5c9c$var$formatDate","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","RegExp","DELIMITER","charCodeAt","parseRows","N","I","eof","eol","token","j","$d95a537853174c19a74ac160cebe5c9c$var$QUOTE","preformatBody","formatValue","formatRow","parse","convert","object","$d95a537853174c19a74ac160cebe5c9c$var$customConverter","format","formatBody","formatRows","$1444a3de7d0324c78fc32da91ad7bc51$var$csv","$1444a3de7d0324c78fc32da91ad7bc51$export$csvParse","$68dd283379bd719feeba266cb12cfe49$var$tsv","$68dd283379bd719feeba266cb12cfe49$export$tsvParse","$4e249071d14a80df074a9753f7a69bc8$var$responseText","response","ok","status","statusText","init","fetch","$b6b451c429cd3ac1cb6b99154a3b4b83$var$dsvParse","undefined","$b6b451c429cd3ac1cb6b99154a3b4b83$export$csv","$f5fccbb0101790ed542b6e638c613119$export$useFetch","setData","loading","setLoading","async","fetchUrl","NaN","delta","lo","hi","mid","$84b994f30d1f1f4024e71e245e769df9$var$ascendingComparator","center","right","$01d78c3d2ae6fb4b029116fe621bf209$var$ascendingBisect","$01d78c3d2ae6fb4b029116fe621bf209$export$bisectRight","$01d78c3d2ae6fb4b029116fe621bf209$export$bisectLeft","$01d78c3d2ae6fb4b029116fe621bf209$export$bisectCenter","values","valueof","max","$aecc06b8dfeabc16660024fb920bd86f$export$Adder","_partials","Float64Array","_n","y","abs","$cfc3da9374467f6753856b05f0c63fed$var$array","$cfc3da9374467f6753856b05f0c63fed$export$slice","$a2942dec731095d7f46128705285ce75$var$e10","sqrt","$a2942dec731095d7f46128705285ce75$var$e5","$a2942dec731095d7f46128705285ce75$var$e2","stop","reverse","ticks","step","$a2942dec731095d7f46128705285ce75$export$tickIncrement","isFinite","r0","round","r1","power","LN10","pow","$a2942dec731095d7f46128705285ce75$export$tickStep","step0","step1","domain","threshold","histogram","xz","x0","x1","tz","tn","prestep","bin","bins","_","thresholds","$a3dccf7c0e58d0505cb06a366829cc0b$export$default","$d200a7a8141ddf550d3352501fa52a26$export$default","$4da3175aee64800ea5b4022ca9fa939f$export$default","array","exp","sd","$4da3175aee64800ea5b4022ca9fa939f$var$swap","$4115477f96e42bd4ae0f7222ece58864$export$default","i0","value0","subarray","value1","$4115477f96e42bd4ae0f7222ece58864$export$quantileSorted","$f5c4b11a9122dd3339f315c79ec5ddc1$export$default","arrays","$f5c4b11a9122dd3339f315c79ec5ddc1$var$flatten","$253d4d8fe9a26b632e9490a5ffd1bb88$export$default","sum","factory","$d62aa320cc500c815d2fd0c000e80e4d$export$extend","parent","definition","$af4ad10b60118211d1082e6b107c9493$export$Color","$af4ad10b60118211d1082e6b107c9493$export$darker","$af4ad10b60118211d1082e6b107c9493$export$brighter","$af4ad10b60118211d1082e6b107c9493$var$reI","$af4ad10b60118211d1082e6b107c9493$var$reN","$af4ad10b60118211d1082e6b107c9493$var$reP","$af4ad10b60118211d1082e6b107c9493$var$reHex","$af4ad10b60118211d1082e6b107c9493$var$reRgbInteger","$af4ad10b60118211d1082e6b107c9493$var$reRgbPercent","$af4ad10b60118211d1082e6b107c9493$var$reRgbaInteger","$af4ad10b60118211d1082e6b107c9493$var$reRgbaPercent","$af4ad10b60118211d1082e6b107c9493$var$reHslPercent","$af4ad10b60118211d1082e6b107c9493$var$reHslaPercent","$af4ad10b60118211d1082e6b107c9493$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$af4ad10b60118211d1082e6b107c9493$var$color_formatHex","rgb","formatHex","$af4ad10b60118211d1082e6b107c9493$var$color_formatRgb","formatRgb","$af4ad10b60118211d1082e6b107c9493$export$default","exec","parseInt","$af4ad10b60118211d1082e6b107c9493$var$rgbn","$af4ad10b60118211d1082e6b107c9493$export$Rgb","$af4ad10b60118211d1082e6b107c9493$var$rgba","$af4ad10b60118211d1082e6b107c9493$var$hsla","$af4ad10b60118211d1082e6b107c9493$export$rgbConvert","o","$af4ad10b60118211d1082e6b107c9493$export$rgb","$af4ad10b60118211d1082e6b107c9493$var$rgb_formatHex","$af4ad10b60118211d1082e6b107c9493$var$hex","$af4ad10b60118211d1082e6b107c9493$var$rgb_formatRgb","$af4ad10b60118211d1082e6b107c9493$var$Hsl","$af4ad10b60118211d1082e6b107c9493$export$hslConvert","$af4ad10b60118211d1082e6b107c9493$export$hsl","$af4ad10b60118211d1082e6b107c9493$var$hsl2rgb","m1","m2","copy","channels","displayable","hex","formatHsl","brighter","darker","$c178fae7767ea8147bbb573141e780e5$export$radians","PI","$c178fae7767ea8147bbb573141e780e5$export$degrees","$150f86a80df4deab43b0167756465d67$var$Xn","$150f86a80df4deab43b0167756465d67$var$Zn","$150f86a80df4deab43b0167756465d67$var$t0","$150f86a80df4deab43b0167756465d67$var$t1","$150f86a80df4deab43b0167756465d67$var$t2","$150f86a80df4deab43b0167756465d67$var$labConvert","$150f86a80df4deab43b0167756465d67$export$Lab","$150f86a80df4deab43b0167756465d67$export$Hcl","$150f86a80df4deab43b0167756465d67$var$hcl2lab","$150f86a80df4deab43b0167756465d67$var$rgb2lrgb","$150f86a80df4deab43b0167756465d67$var$xyz2lab","$150f86a80df4deab43b0167756465d67$export$default","$150f86a80df4deab43b0167756465d67$var$lab2xyz","$150f86a80df4deab43b0167756465d67$var$lrgb2rgb","$150f86a80df4deab43b0167756465d67$var$hclConvert","atan2","$150f86a80df4deab43b0167756465d67$export$hcl","cos","sin","$79f190ed402495135fad2dd69bf11529$var$A","$79f190ed402495135fad2dd69bf11529$var$B","$79f190ed402495135fad2dd69bf11529$var$C","$79f190ed402495135fad2dd69bf11529$var$D","$79f190ed402495135fad2dd69bf11529$var$E","$79f190ed402495135fad2dd69bf11529$var$ED","$79f190ed402495135fad2dd69bf11529$var$EB","$79f190ed402495135fad2dd69bf11529$var$BC_DA","$79f190ed402495135fad2dd69bf11529$var$cubehelixConvert","$79f190ed402495135fad2dd69bf11529$export$Cubehelix","bl","$79f190ed402495135fad2dd69bf11529$export$default","$f9591b106da887661cc44cc0a5ae2a1a$export$basis","t1","v0","v1","v2","v3","t2","t3","cosh","sinh","$690f07296691540b7407e39c387448a2$var$linear","$690f07296691540b7407e39c387448a2$export$hue","$690f07296691540b7407e39c387448a2$export$gamma","$690f07296691540b7407e39c387448a2$export$default","$690f07296691540b7407e39c387448a2$var$exponential","rgbGamma","gamma","$cf864b88de64295889b88aa5915dc775$var$rgbSpline","spline","colors","$cf864b88de64295889b88aa5915dc775$export$rgbBasis","$cf864b88de64295889b88aa5915dc775$export$rgbBasisClosed","$4eb57a226ff73ba7ad7df17f9a1069cc$export$isNumberArray","ArrayBuffer","isView","DataView","$077e40548c47aa08bb4d1a2b6f4e97fa$export$genericArray","nb","na","setTime","$6e39d5a83de6f05d7571262877f64e52$var$reA","$6e39d5a83de6f05d7571262877f64e52$var$reB","$93d6b1f160a369608942a811f689c7eb$var$svgNode","am","bm","bs","bi","lastIndex","$6e39d5a83de6f05d7571262877f64e52$var$one","$6e39d5a83de6f05d7571262877f64e52$var$zero","$822350c66aa52351ed6d23d455194cda$export$default","$c58e2f0267c4d7309a6e02f1a0dff958$export$default","$3bf80cefb35945f85b138a49212174ac$var$degrees","$3bf80cefb35945f85b138a49212174ac$export$identity","translateX","translateY","rotate","skewX","scaleX","scaleY","atan","$75437d5e897ba20260fd50963af69d1e$var$interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","scale","$75437d5e897ba20260fd50963af69d1e$export$interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","$75437d5e897ba20260fd50963af69d1e$export$interpolateTransformSvg","transform","baseVal","consolidate","matrix","$2f6b0944e3f4121dd954185d833a7996$var$cosh","zoomRho","rho","rho2","rho4","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dx","dy","d2","d1","b0","b1","coshr0","$2f6b0944e3f4121dd954185d833a7996$var$sinh","duration","SQRT2","_1","_2","$6fb84cd0750248b4354beae3a3782a56$var$hsl","hue","$6fb84cd0750248b4354beae3a3782a56$export$hslLong","$f914802054ac7c20cf7cb9b298454742$export$default","$82ed9eb77c3090051ff846c5084ea3f0$var$hcl","$82ed9eb77c3090051ff846c5084ea3f0$export$hclLong","$06b2e865abde473f08f928d765f38ff7$var$cubehelix","cubehelixGamma","cubehelix","$06b2e865abde473f08f928d765f38ff7$export$cubehelixLong","$711509cafbeb550cb7eb9d4616b620e1$export$default","interpolate","interpolator","samples","$3128a411ea54a5b48d7c28c5ac66acb5$export$default","$e57d821abcff74b4635d6b1beb855a2e$var$unit","$e57d821abcff74b4635d6b1beb855a2e$export$identity","$e57d821abcff74b4635d6b1beb855a2e$var$normalize","$e57d821abcff74b4635d6b1beb855a2e$var$bimap","d0","$e57d821abcff74b4635d6b1beb855a2e$var$polymap","$e57d821abcff74b4635d6b1beb855a2e$export$copy","clamp","unknown","$e57d821abcff74b4635d6b1beb855a2e$export$transformer","untransform","piecewise","output","rescale","invert","rangeRound","$e57d821abcff74b4635d6b1beb855a2e$export$default","$5d58990c16c72a5fd4e19d2c9c781c04$export$initRange","$5d58990c16c72a5fd4e19d2c9c781c04$export$initInterpolator","$4d9f046a4b550b4140c040e477bb012c$export$formatDecimalParts","toExponential","coefficient","$a8405862f1d5b262cdb2954a0f30f9f1$var$re","$a8405862f1d5b262cdb2954a0f30f9f1$export$default","specifier","$a8405862f1d5b262cdb2954a0f30f9f1$export$FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","$4f54a6fcbd12acee736587c0a0c51098$export$prefixExponent","$c8cf865515e7e5d7357b07df1e313b78$var$locale","$c8cf865515e7e5d7357b07df1e313b78$export$format","$c8cf865515e7e5d7357b07df1e313b78$export$formatPrefix","exponent","%","toFixed","toLocaleString","toPrecision","$db37bf71996eec9b1e508e4772d6a00a$export$default","X","$b3ada3f96306fbdafba4b22584a4e750$var$map","$b3ada3f96306fbdafba4b22584a4e750$var$prefixes","grouping","thousands","group","Number","currencyPrefix","currency","currencySuffix","decimal","numerals","percent","minus","nan","newFormat","prefix","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","i1","padding","formatPrefix","$c8cf865515e7e5d7357b07df1e313b78$export$default","$cb7dec64aa301d089468cdbaade2d4dc$export$default","$57c3cf5d999c41e7d1e1b65c49143058$export$default","$58645d8f0414d4e672ef41e54377799e$export$linearish","tickFormat","nice","maxIter","$58645d8f0414d4e672ef41e54377799e$export$default","$2aff46b38163f203d145c5eef871befb$export$default","interval","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$transformLog","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$transformExp","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$transformLogn","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$transformExpn","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$pow10","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$reflect","$93e0c77beeeafa21a81b4d2f5f2b27e8$export$loggish","logs","pows","E","log10","log2","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$logp","$93e0c77beeeafa21a81b4d2f5f2b27e8$var$powp","$fe7fb97975e06cdfc91d70274e12d81a$var$transformSymlog","log1p","$fe7fb97975e06cdfc91d70274e12d81a$var$transformSymexp","expm1","$fe7fb97975e06cdfc91d70274e12d81a$export$symlogish","constant","$40655c39bc878f4caa08ed7058485d14$export$implicit","$40655c39bc878f4caa08ed7058485d14$export$default","$699bbc6f0d4c85c41d82bd06ab895299$var$transformPow","$699bbc6f0d4c85c41d82bd06ab895299$var$transformSqrt","$699bbc6f0d4c85c41d82bd06ab895299$var$transformSquare","$699bbc6f0d4c85c41d82bd06ab895299$export$powish","$699bbc6f0d4c85c41d82bd06ab895299$export$default","$aed463696572098b6dbb46b14e880028$var$t0","$aed463696572098b6dbb46b14e880028$var$t1","$aed463696572098b6dbb46b14e880028$export$default","floori","offseti","field","previous","filter","every","$207c71aa0edc2d40377d3c4e0a1afc75$export$default","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationSecond","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationMinute","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationHour","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationDay","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationWeek","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationMonth","$4f9525b3e4d379af0d3ed5b3fed16af1$export$durationYear","$6bb685d15c7fc83740e6d540545c5b4f$export$default","getMilliseconds","$be182da5869952f94b0c04429d7ef21d$export$default","getSeconds","getMinutes","$778dc96977adc87974efcca9286cefba$export$default","getHours","$3097b8bfe12b9e0e9dc28709805e47b4$export$default","setHours","setDate","getDate","getTimezoneOffset","$c3a3198c4a643bce3232c559abfa5130$var$weekday","getDay","$c3a3198c4a643bce3232c559abfa5130$export$sunday","$c3a3198c4a643bce3232c559abfa5130$export$monday","$c3a3198c4a643bce3232c559abfa5130$export$tuesday","$c3a3198c4a643bce3232c559abfa5130$export$wednesday","$c3a3198c4a643bce3232c559abfa5130$export$thursday","$c3a3198c4a643bce3232c559abfa5130$export$friday","$c3a3198c4a643bce3232c559abfa5130$export$saturday","$40fec35f87c2ccd6770361ae79cc5fe8$export$default","setMonth","getMonth","getFullYear","$ca9a6811b4460d1d61dc858d6ca656a4$export$default","setFullYear","$f79ac4f75a0d69dd7f32b498c435fcb9$export$default","setUTCSeconds","$109cad2aabd24b42069a27456ab4c79d$export$default","setUTCMinutes","$3657fa0509afa4e0adfdd936dfaf0c52$export$default","setUTCHours","setUTCDate","$92588a67f74d598cb142175a73f6802e$var$utcWeekday","getUTCDay","$92588a67f74d598cb142175a73f6802e$export$utcSunday","$92588a67f74d598cb142175a73f6802e$export$utcMonday","$92588a67f74d598cb142175a73f6802e$export$utcTuesday","$92588a67f74d598cb142175a73f6802e$export$utcWednesday","$92588a67f74d598cb142175a73f6802e$export$utcThursday","$92588a67f74d598cb142175a73f6802e$export$utcFriday","$92588a67f74d598cb142175a73f6802e$export$utcSaturday","$8f561cd87d19032a53ed9c8a67687eee$export$default","setUTCMonth","$dcac6990336adc0f1c5f5f64cc2bb823$export$default","setUTCFullYear","$6d332bb6d576cd6759e1cdea3ef4c2dd$var$ticker","day","hour","minute","tickIntervals","tickInterval","$6d332bb6d576cd6759e1cdea3ef4c2dd$export$utcTicks","$6d332bb6d576cd6759e1cdea3ef4c2dd$export$utcTickInterval","$6d332bb6d576cd6759e1cdea3ef4c2dd$export$timeTicks","$6d332bb6d576cd6759e1cdea3ef4c2dd$export$timeTickInterval","$a03fc160753171344a4277164c6624e1$var$localDate","H","M","$a03fc160753171344a4277164c6624e1$var$utcDate","UTC","$a03fc160753171344a4277164c6624e1$var$newDate","$a03fc160753171344a4277164c6624e1$export$default","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","days","locale_shortWeekdays","shortDays","locale_months","months","locale_shortMonths","shortMonths","periodRe","$a03fc160753171344a4277164c6624e1$var$formatRe","periodLookup","$a03fc160753171344a4277164c6624e1$var$formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","B","$a03fc160753171344a4277164c6624e1$var$formatDayOfMonth","$a03fc160753171344a4277164c6624e1$var$formatMicroseconds","$a03fc160753171344a4277164c6624e1$var$formatYearISO","G","$a03fc160753171344a4277164c6624e1$var$formatFullYearISO","$a03fc160753171344a4277164c6624e1$var$formatHour24","$a03fc160753171344a4277164c6624e1$var$formatHour12","$a03fc160753171344a4277164c6624e1$var$formatDayOfYear","$a03fc160753171344a4277164c6624e1$var$formatMilliseconds","$a03fc160753171344a4277164c6624e1$var$formatMonthNumber","$a03fc160753171344a4277164c6624e1$var$formatMinutes","$a03fc160753171344a4277164c6624e1$var$formatUnixTimestamp","$a03fc160753171344a4277164c6624e1$var$formatUnixTimestampSeconds","$a03fc160753171344a4277164c6624e1$var$formatSeconds","$a03fc160753171344a4277164c6624e1$var$formatWeekdayNumberMonday","U","$a03fc160753171344a4277164c6624e1$var$formatWeekNumberSunday","V","$a03fc160753171344a4277164c6624e1$var$formatWeekNumberISO","$a03fc160753171344a4277164c6624e1$var$formatWeekdayNumberSunday","W","$a03fc160753171344a4277164c6624e1$var$formatWeekNumberMonday","$a03fc160753171344a4277164c6624e1$var$formatYear","Y","$a03fc160753171344a4277164c6624e1$var$formatFullYear","Z","$a03fc160753171344a4277164c6624e1$var$formatZone","$a03fc160753171344a4277164c6624e1$var$formatLiteralPercent","utcFormats","$a03fc160753171344a4277164c6624e1$var$formatUTCDayOfMonth","$a03fc160753171344a4277164c6624e1$var$formatUTCMicroseconds","$a03fc160753171344a4277164c6624e1$var$formatUTCYearISO","$a03fc160753171344a4277164c6624e1$var$formatUTCFullYearISO","$a03fc160753171344a4277164c6624e1$var$formatUTCHour24","$a03fc160753171344a4277164c6624e1$var$formatUTCHour12","$a03fc160753171344a4277164c6624e1$var$formatUTCDayOfYear","$a03fc160753171344a4277164c6624e1$var$formatUTCMilliseconds","$a03fc160753171344a4277164c6624e1$var$formatUTCMonthNumber","$a03fc160753171344a4277164c6624e1$var$formatUTCMinutes","$a03fc160753171344a4277164c6624e1$var$formatUTCSeconds","$a03fc160753171344a4277164c6624e1$var$formatUTCWeekdayNumberMonday","$a03fc160753171344a4277164c6624e1$var$formatUTCWeekNumberSunday","$a03fc160753171344a4277164c6624e1$var$formatUTCWeekNumberISO","$a03fc160753171344a4277164c6624e1$var$formatUTCWeekdayNumberSunday","$a03fc160753171344a4277164c6624e1$var$formatUTCWeekNumberMonday","$a03fc160753171344a4277164c6624e1$var$formatUTCYear","$a03fc160753171344a4277164c6624e1$var$formatUTCFullYear","$a03fc160753171344a4277164c6624e1$var$formatUTCZone","parses","string","parseSpecifier","$a03fc160753171344a4277164c6624e1$var$parseDayOfMonth","$a03fc160753171344a4277164c6624e1$var$parseMicroseconds","$a03fc160753171344a4277164c6624e1$var$parseYear","$a03fc160753171344a4277164c6624e1$var$parseFullYear","$a03fc160753171344a4277164c6624e1$var$parseHour24","$a03fc160753171344a4277164c6624e1$var$parseDayOfYear","$a03fc160753171344a4277164c6624e1$var$parseMilliseconds","$a03fc160753171344a4277164c6624e1$var$parseMonthNumber","$a03fc160753171344a4277164c6624e1$var$parseMinutes","$a03fc160753171344a4277164c6624e1$var$parseQuarter","$a03fc160753171344a4277164c6624e1$var$parseUnixTimestamp","$a03fc160753171344a4277164c6624e1$var$parseUnixTimestampSeconds","$a03fc160753171344a4277164c6624e1$var$parseSeconds","$a03fc160753171344a4277164c6624e1$var$parseWeekdayNumberMonday","$a03fc160753171344a4277164c6624e1$var$parseWeekNumberSunday","$a03fc160753171344a4277164c6624e1$var$parseWeekNumberISO","$a03fc160753171344a4277164c6624e1$var$parseWeekdayNumberSunday","$a03fc160753171344a4277164c6624e1$var$parseWeekNumberMonday","$a03fc160753171344a4277164c6624e1$var$parseZone","$a03fc160753171344a4277164c6624e1$var$parseLiteralPercent","pad","$a03fc160753171344a4277164c6624e1$var$pads","newParse","utcFormat","utcParse","$fbcf30ad2bc03dc49a2be0406f1a7a8e$var$locale","$fbcf30ad2bc03dc49a2be0406f1a7a8e$export$timeFormat","$fbcf30ad2bc03dc49a2be0406f1a7a8e$export$timeParse","$fbcf30ad2bc03dc49a2be0406f1a7a8e$export$utcFormat","$fbcf30ad2bc03dc49a2be0406f1a7a8e$export$utcParse","-","0","$a03fc160753171344a4277164c6624e1$var$numberRe","$a03fc160753171344a4277164c6624e1$var$percentRe","$a03fc160753171344a4277164c6624e1$var$requoteRe","$a03fc160753171344a4277164c6624e1$var$pad","$a03fc160753171344a4277164c6624e1$var$requote","names","$a03fc160753171344a4277164c6624e1$var$dISO","dow","$a03fc160753171344a4277164c6624e1$var$UTCdISO","$4b5101765c8cec5b08e7560a47637670$var$date","$4b5101765c8cec5b08e7560a47637670$var$number","$4b5101765c8cec5b08e7560a47637670$export$calendar","second","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","$353038f4dba0ded0635b47ff29a8fa99$var$transformer","t0","k10","$353038f4dba0ded0635b47ff29a8fa99$export$copy","$353038f4dba0ded0635b47ff29a8fa99$export$default","$353038f4dba0ded0635b47ff29a8fa99$export$sequentialPow","$c2af7f7c8bf7c57ca1c61fd8d9aaed87$var$transformer","k21","x2","r2","$c2af7f7c8bf7c57ca1c61fd8d9aaed87$export$divergingPow","$5f5637ed47339f394a02c72e902678a4$export$accessor","fn","fields","fname","$5f5637ed47339f394a02c72e902678a4$export$accessorName","$5f5637ed47339f394a02c72e902678a4$export$accessorFields","$5f5637ed47339f394a02c72e902678a4$var$getter","path","$5f5637ed47339f394a02c72e902678a4$var$get1","$5f5637ed47339f394a02c72e902678a4$var$getN","$fbcf30ad2bc03dc49a2be0406f1a7a8e$export$default","obj","len","$5f5637ed47339f394a02c72e902678a4$export$error","$5f5637ed47339f394a02c72e902678a4$export$splitAccessPath","$5f5637ed47339f394a02c72e902678a4$export$field","opt","$5f5637ed47339f394a02c72e902678a4$export$id","$5f5637ed47339f394a02c72e902678a4$export$identity","$5f5637ed47339f394a02c72e902678a4$export$zero","$5f5637ed47339f394a02c72e902678a4$export$one","$5f5637ed47339f394a02c72e902678a4$export$truthy","$5f5637ed47339f394a02c72e902678a4$export$falsy","$5f5637ed47339f394a02c72e902678a4$var$log$1","method","level","args","$5f5637ed47339f394a02c72e902678a4$export$isArray","$5f5637ed47339f394a02c72e902678a4$export$isObject","$5f5637ed47339f394a02c72e902678a4$export$peek","$5f5637ed47339f394a02c72e902678a4$export$toNumber","$5f5637ed47339f394a02c72e902678a4$var$exp","$5f5637ed47339f394a02c72e902678a4$var$log","$5f5637ed47339f394a02c72e902678a4$var$symlog","$5f5637ed47339f394a02c72e902678a4$var$symexp","$5f5637ed47339f394a02c72e902678a4$var$pow","$5f5637ed47339f394a02c72e902678a4$var$pan","lift","ground","dd","$5f5637ed47339f394a02c72e902678a4$var$zoom","anchor","da","$5f5637ed47339f394a02c72e902678a4$export$zoomLinear","$5f5637ed47339f394a02c72e902678a4$export$zoomLog","$5f5637ed47339f394a02c72e902678a4$export$zoomPow","$5f5637ed47339f394a02c72e902678a4$export$zoomSymlog","$5f5637ed47339f394a02c72e902678a4$export$array","$5f5637ed47339f394a02c72e902678a4$export$isFunction","$5f5637ed47339f394a02c72e902678a4$export$compare","orders","ord","fmap","gen","comparator","$5f5637ed47339f394a02c72e902678a4$var$comparator","$5f5637ed47339f394a02c72e902678a4$export$ascending","$5f5637ed47339f394a02c72e902678a4$var$compare1","$5f5637ed47339f394a02c72e902678a4$var$compareN","$5f5637ed47339f394a02c72e902678a4$export$constant","$5f5637ed47339f394a02c72e902678a4$export$debounce","handler","tid","$5f5637ed47339f394a02c72e902678a4$export$extend","$5f5637ed47339f394a02c72e902678a4$export$extent","$5f5637ed47339f394a02c72e902678a4$var$hop","$5f5637ed47339f394a02c72e902678a4$export$hasOwnProperty","property","$5f5637ed47339f394a02c72e902678a4$var$NULL","$5f5637ed47339f394a02c72e902678a4$export$fastmap","has$1","empty","clear","clean","$5f5637ed47339f394a02c72e902678a4$export$inherits","members","proto","writable","$5f5637ed47339f394a02c72e902678a4$export$inrange","$5f5637ed47339f394a02c72e902678a4$export$isDate","$5f5637ed47339f394a02c72e902678a4$export$isNumber","$5f5637ed47339f394a02c72e902678a4$export$isString","$5f5637ed47339f394a02c72e902678a4$export$key","flat","$5f5637ed47339f394a02c72e902678a4$export$repeat","str","reps","$5f5637ed47339f394a02c72e902678a4$export$span","$5f5637ed47339f394a02c72e902678a4$export$stringValue","$5f5637ed47339f394a02c72e902678a4$export$toBoolean","$5f5637ed47339f394a02c72e902678a4$var$defaultParser","$5f5637ed47339f394a02c72e902678a4$export$toDate","parser","$5f5637ed47339f394a02c72e902678a4$export$toString","$5f5637ed47339f394a02c72e902678a4$export$toSet","$5f5637ed47339f394a02c72e902678a4$export$visitArray","visitor","$e81fbc67620ade4d5391f238b2b12d7b$var$protocol_re","$e81fbc67620ade4d5391f238b2b12d7b$var$allowed_re","$e81fbc67620ade4d5391f238b2b12d7b$var$whitespace_re","$e81fbc67620ade4d5391f238b2b12d7b$var$fileProtocol","$e81fbc67620ade4d5391f238b2b12d7b$var$load","uri","sanitize","localFile","file","http","$e81fbc67620ade4d5391f238b2b12d7b$var$sanitize","fileAccess","result","isFile","loadFile","isAllowed","hasProtocol","baseURL","startsWith","defaultProtocol","rel","crossOrigin","$e81fbc67620ade4d5391f238b2b12d7b$var$fileLoader","fs","filename","Promise","accept","reject","readFile","$e81fbc67620ade4d5391f238b2b12d7b$var$fileReject","$e81fbc67620ade4d5391f238b2b12d7b$var$httpLoader","$e81fbc67620ade4d5391f238b2b12d7b$var$httpReject","$71649ad1afb5f8cb0fca7c83c720b4bd$var$isNumber","$71649ad1afb5f8cb0fca7c83c720b4bd$export$typeParsers","boolean","integer","$71649ad1afb5f8cb0fca7c83c720b4bd$var$typeTests","isInteger","$71649ad1afb5f8cb0fca7c83c720b4bd$var$typeList","$71649ad1afb5f8cb0fca7c83c720b4bd$export$inferTypes","reduce","types","$71649ad1afb5f8cb0fca7c83c720b4bd$export$inferType","$fe447c9206bbafd4c4cc9b01ccbef101$export$delimitedFormat","delim","$fe447c9206bbafd4c4cc9b01ccbef101$export$default","responseType","header","b64","tmp","lens","$85dec55e285048dad15d196cf8c6124b$var$getLens","validLen","placeHoldersLen","arr","$85dec55e285048dad15d196cf8c6124b$var$Arr","$85dec55e285048dad15d196cf8c6124b$var$_byteLength","curByte","$85dec55e285048dad15d196cf8c6124b$var$revLookup","uint8","extraBytes","parts","maxChunkLength","len2","$85dec55e285048dad15d196cf8c6124b$var$encodeChunk","$85dec55e285048dad15d196cf8c6124b$var$lookup","Uint8Array","$85dec55e285048dad15d196cf8c6124b$var$code","$85dec55e285048dad15d196cf8c6124b$var$i","$85dec55e285048dad15d196cf8c6124b$var$len","num","buffer","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","$23576705ead00e0ea0e01617916685f6$var$customInspectSymbol","$23576705ead00e0ea0e01617916685f6$var$Buffer","$23576705ead00e0ea0e01617916685f6$var$K_MAX_LENGTH","$23576705ead00e0ea0e01617916685f6$var$createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","$23576705ead00e0ea0e01617916685f6$var$allocUnsafe","$23576705ead00e0ea0e01617916685f6$var$from","encoding","isEncoding","$23576705ead00e0ea0e01617916685f6$var$byteLength","actual","write","$23576705ead00e0ea0e01617916685f6$var$fromString","arrayView","$23576705ead00e0ea0e01617916685f6$var$isInstance","$23576705ead00e0ea0e01617916685f6$var$fromArrayBuffer","byteOffset","byteLength","$23576705ead00e0ea0e01617916685f6$var$fromArrayLike","$23576705ead00e0ea0e01617916685f6$var$fromArrayView","SharedArrayBuffer","isBuffer","$23576705ead00e0ea0e01617916685f6$var$checked","$23576705ead00e0ea0e01617916685f6$var$numberIsNaN","$23576705ead00e0ea0e01617916685f6$var$fromObject","toPrimitive","$23576705ead00e0ea0e01617916685f6$var$assertSize","mustMatch","loweredCase","$23576705ead00e0ea0e01617916685f6$var$utf8ToBytes","$23576705ead00e0ea0e01617916685f6$var$base64ToBytes","$23576705ead00e0ea0e01617916685f6$var$slowToString","$23576705ead00e0ea0e01617916685f6$var$hexSlice","$23576705ead00e0ea0e01617916685f6$var$utf8Slice","$23576705ead00e0ea0e01617916685f6$var$asciiSlice","$23576705ead00e0ea0e01617916685f6$var$latin1Slice","$23576705ead00e0ea0e01617916685f6$var$base64Slice","$23576705ead00e0ea0e01617916685f6$var$utf16leSlice","$23576705ead00e0ea0e01617916685f6$var$swap","$23576705ead00e0ea0e01617916685f6$var$bidirectionalIndexOf","dir","$23576705ead00e0ea0e01617916685f6$var$arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","$23576705ead00e0ea0e01617916685f6$var$hexWrite","remaining","strLen","parsed","substr","$23576705ead00e0ea0e01617916685f6$var$utf8Write","$23576705ead00e0ea0e01617916685f6$var$blitBuffer","$23576705ead00e0ea0e01617916685f6$var$asciiWrite","byteArray","$23576705ead00e0ea0e01617916685f6$var$asciiToBytes","$23576705ead00e0ea0e01617916685f6$var$base64Write","$23576705ead00e0ea0e01617916685f6$var$ucs2Write","units","$23576705ead00e0ea0e01617916685f6$var$utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","$23576705ead00e0ea0e01617916685f6$var$MAX_ARGUMENTS_LENGTH","$23576705ead00e0ea0e01617916685f6$var$decodeCodePointsArray","TYPED_ARRAY_SUPPORT","foo","$23576705ead00e0ea0e01617916685f6$var$typedArraySupport","poolSize","alloc","$23576705ead00e0ea0e01617916685f6$var$alloc","allocUnsafe","allocUnsafeSlow","_isBuffer","list","pos","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","toJSON","_arr","ret","$23576705ead00e0ea0e01617916685f6$var$hexSliceLookupTable","bytes","$23576705ead00e0ea0e01617916685f6$var$checkOffset","ext","$23576705ead00e0ea0e01617916685f6$var$checkInt","$23576705ead00e0ea0e01617916685f6$var$checkIEEE754","$23576705ead00e0ea0e01617916685f6$var$writeFloat","littleEndian","noAssert","$23576705ead00e0ea0e01617916685f6$var$writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","$23576705ead00e0ea0e01617916685f6$var$INVALID_BASE64_RE","leadSurrogate","$23576705ead00e0ea0e01617916685f6$var$base64clean","src","dst","alphabet","table","i16","$4dd8c6d094ec43ab9bbe09a25229d7fa$export$default","prop","$4dd8c6d094ec43ab9bbe09a25229d7fa$var$Buffer","$4dd8c6d094ec43ab9bbe09a25229d7fa$var$parseJSON","$90a4ee86e4033881d97a3b65e10fe18f$export$default","y0","kx","ky","topology","objects","features","geometries","$20df8bbb0bb60a952a7becfa0a7eca70$var$feature","bbox","properties","geometry","$20df8bbb0bb60a952a7becfa0a7eca70$export$object","transformPoint","arcs","arc","points","$6f49e2705d472195b13cb30b02d31e7b$export$default","point","line","ring","polygon","coordinates","stitchedArcs","fragmentByStart","fragmentByEnd","fragments","emptyIndex","flush","dp","ends","fg","gf","$9e28af563ca07ceebdc8dfa4f72afd7d$export$meshArcs","$9e28af563ca07ceebdc8dfa4f72afd7d$var$extractArcs","geom","geomsByArc","extract0","extract1","extract2","extract3","geoms","$198865210d4b9f4503dfcc34eda13e85$var$filters","interior","exterior","$198865210d4b9f4503dfcc34eda13e85$export$default","feature","mesh","$258f05b263a066067f77b039d0b3ec86$export$format","dsv","csv","tsv","json","topojson","$258f05b263a066067f77b039d0b3ec86$export$formats","reader","$258f05b263a066067f77b039d0b3ec86$export$responseType","$3d2f5d28af2d6b78fd90e348b4cd47be$export$YEAR","$3d2f5d28af2d6b78fd90e348b4cd47be$export$QUARTER","$3d2f5d28af2d6b78fd90e348b4cd47be$export$MONTH","$3d2f5d28af2d6b78fd90e348b4cd47be$export$WEEK","$3d2f5d28af2d6b78fd90e348b4cd47be$export$DATE","$3d2f5d28af2d6b78fd90e348b4cd47be$export$DAY","$3d2f5d28af2d6b78fd90e348b4cd47be$export$DAYOFYEAR","$3d2f5d28af2d6b78fd90e348b4cd47be$export$HOURS","$3d2f5d28af2d6b78fd90e348b4cd47be$export$MINUTES","$3d2f5d28af2d6b78fd90e348b4cd47be$export$SECONDS","$3d2f5d28af2d6b78fd90e348b4cd47be$export$MILLISECONDS","$3d2f5d28af2d6b78fd90e348b4cd47be$export$TIME_UNITS","$3d2f5d28af2d6b78fd90e348b4cd47be$var$UNITS","$3d2f5d28af2d6b78fd90e348b4cd47be$export$timeUnits","unit","sort","$3d2f5d28af2d6b78fd90e348b4cd47be$var$defaultSpecifiers","$3d2f5d28af2d6b78fd90e348b4cd47be$var$t0","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localYear","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localDayOfYear","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localWeekNum","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localFirst","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localDate","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcDayOfYear","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcWeekNum","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcFirst","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcDate","$3d2f5d28af2d6b78fd90e348b4cd47be$var$floor","inv","newDate","phase","$3d2f5d28af2d6b78fd90e348b4cd47be$var$getUnit","$3d2f5d28af2d6b78fd90e348b4cd47be$var$weekday","firstDay","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localGet","$3d2f5d28af2d6b78fd90e348b4cd47be$var$localInv","$3d2f5d28af2d6b78fd90e348b4cd47be$export$timeFloor","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcGet","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcInv","$3d2f5d28af2d6b78fd90e348b4cd47be$export$utcFloor","$3d2f5d28af2d6b78fd90e348b4cd47be$var$timeIntervals","$3d2f5d28af2d6b78fd90e348b4cd47be$var$utcIntervals","$3d2f5d28af2d6b78fd90e348b4cd47be$export$timeInterval","$3d2f5d28af2d6b78fd90e348b4cd47be$export$utcInterval","$3d2f5d28af2d6b78fd90e348b4cd47be$var$offset","ival","$3d2f5d28af2d6b78fd90e348b4cd47be$var$sequence","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationSecond","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationMinute","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationHour","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationDay","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationMonth","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationYear","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Milli","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Seconds","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Minutes","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Hours","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Day","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Month","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Year","$3d2f5d28af2d6b78fd90e348b4cd47be$var$intervals","$3d2f5d28af2d6b78fd90e348b4cd47be$var$Week","$3d2f5d28af2d6b78fd90e348b4cd47be$var$durationWeek","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$memoize","cache","spec","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$numberLocale","formatFloat","numberFormat","decimalChar","dec","idx","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$rightmostDigit","formatSpan","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$defaultNumberLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$defaultTimeLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$resetNumberFormatDefaultLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$numberFormatLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$numberFormatDefaultLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$timeMultiFormat","quarter","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$timeLocale","timeFormat","timeParse","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$resetTimeFormatDefaultLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$timeFormatLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$timeFormatDefaultLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$var$createLocale","$3ee45de5bc1730b6e7bcf7b9a1fc26cf$export$defaultLocale","numberSpec","timeSpec","schema","timeParser","utcParser","datum","parsers","pattern","$a374e67689600c343827f77aaccc5037$var$parse","$bcf48fbedb7122d070ed98334b6728e3$export$loader","load","$aff3c48e9065454a7b846d1fdc2ae12c$export$UniqueList","idFunc","$","ids","remove","splice","$aff3c48e9065454a7b846d1fdc2ae12c$export$asyncCallback","df","$aff3c48e9065454a7b846d1fdc2ae12c$var$TUPLE_ID_KEY","$aff3c48e9065454a7b846d1fdc2ae12c$var$TUPLE_ID","$aff3c48e9065454a7b846d1fdc2ae12c$export$isTuple","$aff3c48e9065454a7b846d1fdc2ae12c$export$tupleid","$aff3c48e9065454a7b846d1fdc2ae12c$var$setid","$aff3c48e9065454a7b846d1fdc2ae12c$export$ingest","$aff3c48e9065454a7b846d1fdc2ae12c$export$derive","$aff3c48e9065454a7b846d1fdc2ae12c$export$rederive","$aff3c48e9065454a7b846d1fdc2ae12c$export$replace","$aff3c48e9065454a7b846d1fdc2ae12c$export$stableCompare","cmp","$aff3c48e9065454a7b846d1fdc2ae12c$export$isChangeSet","$aff3c48e9065454a7b846d1fdc2ae12c$export$changeset","rem","mod","remp","modp","reflow","insert","modify","tuple","encode","pulse","tuples","cur","modifies","$aff3c48e9065454a7b846d1fdc2ae12c$var$CACHE","$aff3c48e9065454a7b846d1fdc2ae12c$export$Parameters","force","modified","$aff3c48e9065454a7b846d1fdc2ae12c$var$OP_ID","$aff3c48e9065454a7b846d1fdc2ae12c$var$NO_PARAMS","$aff3c48e9065454a7b846d1fdc2ae12c$export$Operator","update","params","react","stamp","rank","qrank","_update","parameters","$aff3c48e9065454a7b846d1fdc2ae12c$var$flag","bit","targets","_targets","skip","initonly","argval","_argval","argops","_argops","op","marshall","item","detach","evaluate","StopPropagation","run","rv","$aff3c48e9065454a7b846d1fdc2ae12c$var$STREAM_ID","$aff3c48e9065454a7b846d1fdc2ae12c$export$EventStream","receive","_filter","_apply","$aff3c48e9065454a7b846d1fdc2ae12c$var$stream","consume","_consume","evt","trg","merge","throttle","pause","debounce","dataflow","between","active","$aff3c48e9065454a7b846d1fdc2ae12c$var$SKIP","$aff3c48e9065454a7b846d1fdc2ae12c$var$onStream","stream","func","touch","$aff3c48e9065454a7b846d1fdc2ae12c$var$onOperator","$aff3c48e9065454a7b846d1fdc2ae12c$var$updater","connect","$aff3c48e9065454a7b846d1fdc2ae12c$var$StopPropagation","$aff3c48e9065454a7b846d1fdc2ae12c$export$Pulse","$aff3c48e9065454a7b846d1fdc2ae12c$var$materialize","$aff3c48e9065454a7b846d1fdc2ae12c$var$filter","visit","$aff3c48e9065454a7b846d1fdc2ae12c$var$addFilter","$aff3c48e9065454a7b846d1fdc2ae12c$export$MultiPulse","pulses","hash","changed","ADD","REM","MOD","changes","$aff3c48e9065454a7b846d1fdc2ae12c$var$reentrant","ADD_REM","$aff3c48e9065454a7b846d1fdc2ae12c$var$ADD","ADD_MOD","ALL","REFLOW","SOURCE","NO_SOURCE","NO_FIELDS","fork","clone","materialize","$aff3c48e9065454a7b846d1fdc2ae12c$var$ALL","addAll","addF","remF","modF","srcF","cleans","runAfter","nomod","some","$aff3c48e9065454a7b846d1fdc2ae12c$var$REM","$aff3c48e9065454a7b846d1fdc2ae12c$var$MOD","$aff3c48e9065454a7b846d1fdc2ae12c$var$NO_OPT","$aff3c48e9065454a7b846d1fdc2ae12c$var$Heap","nodes","peek","$aff3c48e9065454a7b846d1fdc2ae12c$var$siftdown","ridx","cidx","$aff3c48e9065454a7b846d1fdc2ae12c$var$siftup","pidx","$aff3c48e9065454a7b846d1fdc2ae12c$export$Dataflow","logger","warn","info","debug","logLevel","_clock","_rank","_locale","_loader","_touched","_input","_pulse","_heap","_postrun","$aff3c48e9065454a7b846d1fdc2ae12c$var$logMethod","_log","$aff3c48e9065454a7b846d1fdc2ae12c$export$Transform","loader","cleanThreshold","sources","targetRank","rerank","changeset","_enqueue","ingest","preload","_pending","requests","$aff3c48e9065454a7b846d1fdc2ae12c$var$loadPending","request","events","send","on","prerun","postrun","_getPulse","pr","all","cb","runAsync","_running","enqueue","$aff3c48e9065454a7b846d1fdc2ae12c$var$singlePulse","$aff3c48e9065454a7b846d1fdc2ae12c$export$transforms","$aff3c48e9065454a7b846d1fdc2ae12c$export$definition","$aff3c48e9065454a7b846d1fdc2ae12c$export$transform","Definition","$0c80be4584256ba564ee0c4ecbbd25f3$var$numbers","$0c80be4584256ba564ee0c4ecbbd25f3$export$quantiles","$0c80be4584256ba564ee0c4ecbbd25f3$export$quartiles","$0c80be4584256ba564ee0c4ecbbd25f3$export$bandwidthNRD","mean","$0c80be4584256ba564ee0c4ecbbd25f3$export$random","$0c80be4584256ba564ee0c4ecbbd25f3$export$dotbin","smooth","thresh","$0c80be4584256ba564ee0c4ecbbd25f3$var$smoothing","$0c80be4584256ba564ee0c4ecbbd25f3$var$SQRT2PI","$0c80be4584256ba564ee0c4ecbbd25f3$var$SQRT2","$0c80be4584256ba564ee0c4ecbbd25f3$var$nextSample","$0c80be4584256ba564ee0c4ecbbd25f3$export$sampleNormal","stdev","rds","$0c80be4584256ba564ee0c4ecbbd25f3$export$densityNormal","$0c80be4584256ba564ee0c4ecbbd25f3$export$cumulativeNormal","cd","$0c80be4584256ba564ee0c4ecbbd25f3$export$quantileNormal","$0c80be4584256ba564ee0c4ecbbd25f3$var$erfinv","$0c80be4584256ba564ee0c4ecbbd25f3$export$randomNormal","mu","sigma","dist","sample","pdf","cdf","icdf","$0c80be4584256ba564ee0c4ecbbd25f3$export$randomKDE","support","bandwidth","kernel","$0c80be4584256ba564ee0c4ecbbd25f3$export$sampleLogNormal","$0c80be4584256ba564ee0c4ecbbd25f3$export$densityLogNormal","$0c80be4584256ba564ee0c4ecbbd25f3$export$cumulativeLogNormal","$0c80be4584256ba564ee0c4ecbbd25f3$export$quantileLogNormal","$0c80be4584256ba564ee0c4ecbbd25f3$export$sampleUniform","$0c80be4584256ba564ee0c4ecbbd25f3$export$densityUniform","$0c80be4584256ba564ee0c4ecbbd25f3$export$cumulativeUniform","$0c80be4584256ba564ee0c4ecbbd25f3$export$quantileUniform","$0c80be4584256ba564ee0c4ecbbd25f3$var$ols","uX","uY","uXY","uX2","slope","$0c80be4584256ba564ee0c4ecbbd25f3$var$points","xv","yv","ux","uy","$0c80be4584256ba564ee0c4ecbbd25f3$var$visitPoints","$0c80be4584256ba564ee0c4ecbbd25f3$var$rSquared","predict","SSE","SST","sse","sst","$0c80be4584256ba564ee0c4ecbbd25f3$export$regressionLinear","XY","X2","coef","rSquared","$0c80be4584256ba564ee0c4ecbbd25f3$export$regressionQuad","X3","X4","X2Y","X2X2","$0c80be4584256ba564ee0c4ecbbd25f3$var$uncenter","$0c80be4584256ba564ee0c4ecbbd25f3$var$tricube","$0c80be4584256ba564ee0c4ecbbd25f3$var$updateInterval","$0c80be4584256ba564ee0c4ecbbd25f3$var$MIN_RADIANS","$0c80be4584256ba564ee0c4ecbbd25f3$export$sampleCurve","extent","minSteps","maxSteps","minX","maxX","span","prev","pm","$0c80be4584256ba564ee0c4ecbbd25f3$var$angleDelta","a0","a1","$e8a43c455e2bdace3bdb3d82ab03e431$var$groupkey","$e8a43c455e2bdace3bdb3d82ab03e431$var$measureName","as","$e8a43c455e2bdace3bdb3d82ab03e431$var$noop","$e8a43c455e2bdace3bdb3d82ab03e431$var$base_op","$e8a43c455e2bdace3bdb3d82ab03e431$var$AggregateOps","cell","store","__count__","missing","valid","product","mean_d","average","req","variance","dev","variancep","stdevp","stderr","distinct","ci0","ci1","median","q2","q1","q3","argmin","argmax","$e8a43c455e2bdace3bdb3d82ab03e431$var$ValidAggregateOps","$e8a43c455e2bdace3bdb3d82ab03e431$var$createMeasure","$e8a43c455e2bdace3bdb3d82ab03e431$var$compareIndex","$e8a43c455e2bdace3bdb3d82ab03e431$var$init","_ops","$e8a43c455e2bdace3bdb3d82ab03e431$var$add","$e8a43c455e2bdace3bdb3d82ab03e431$var$rem","$e8a43c455e2bdace3bdb3d82ab03e431$var$set","_out","$e8a43c455e2bdace3bdb3d82ab03e431$var$compileMeasures","agg","ops","getreqs","$e8a43c455e2bdace3bdb3d82ab03e431$var$resolve","ctr","$e8a43c455e2bdace3bdb3d82ab03e431$var$TupleStore","_key","reset","$e8a43c455e2bdace3bdb3d82ab03e431$var$measure","$e8a43c455e2bdace3bdb3d82ab03e431$var$prototype$1","$e8a43c455e2bdace3bdb3d82ab03e431$export$aggregate","_adds","_mods","_alen","_mlen","_drop","_cross","_dims","_dnames","_measures","_countOnly","_counts","_prev","_inputs","_outputs","_add","_rem","_ext","_get","_q","quartile","ci","_ci","alpha","metadata","generates","null","aggr","drop","cross","curr","dims","vals","collect","cells","generate","inputs","outputs","inputMap","inputVisit","groupby","dname","cellkey","mname","outname","newcell","newtuple","measures","celltuple","counts","adds","mods","$e8a43c455e2bdace3bdb3d82ab03e431$export$bin","$e8a43c455e2bdace3bdb3d82ab03e431$var$SortedList","cnt","resort","array0","array1","n0","n1","merged","$e8a43c455e2bdace3bdb3d82ab03e431$export$collect","$e8a43c455e2bdace3bdb3d82ab03e431$export$compare","$e8a43c455e2bdace3bdb3d82ab03e431$var$update$5","$e8a43c455e2bdace3bdb3d82ab03e431$export$countpattern","$e8a43c455e2bdace3bdb3d82ab03e431$export$cross","required","band","_bins","flag","maxb","maxbins","logb","div","divide","minstep","steps","eps","root","process","tokens","tcase","$e8a43c455e2bdace3bdb3d82ab03e431$var$tokenize","case","_parameterCheck","_match","_stop","_finish","stopwords","_tuples","$e8a43c455e2bdace3bdb3d82ab03e431$var$cross","$e8a43c455e2bdace3bdb3d82ab03e431$var$Distributions","kde","mixture","dists","weights","normalize","distributions","normal","lognormal","uniform","$e8a43c455e2bdace3bdb3d82ab03e431$var$FUNCTION","$e8a43c455e2bdace3bdb3d82ab03e431$var$parse","def","$e8a43c455e2bdace3bdb3d82ab03e431$export$density","$e8a43c455e2bdace3bdb3d82ab03e431$var$distributions","function","$e8a43c455e2bdace3bdb3d82ab03e431$var$mixture","$e8a43c455e2bdace3bdb3d82ab03e431$var$fieldNames","$e8a43c455e2bdace3bdb3d82ab03e431$var$partition$1","groups","distribution","$e8a43c455e2bdace3bdb3d82ab03e431$var$source","minsteps","maxsteps","$e8a43c455e2bdace3bdb3d82ab03e431$export$dotbin","$e8a43c455e2bdace3bdb3d82ab03e431$export$expression","$e8a43c455e2bdace3bdb3d82ab03e431$var$update$4","expr","$e8a43c455e2bdace3bdb3d82ab03e431$export$extent","$e8a43c455e2bdace3bdb3d82ab03e431$export$subflow","$e8a43c455e2bdace3bdb3d82ab03e431$export$facet","_keys","$e8a43c455e2bdace3bdb3d82ab03e431$export$field","$e8a43c455e2bdace3bdb3d82ab03e431$var$update$3","$e8a43c455e2bdace3bdb3d82ab03e431$export$filter","$e8a43c455e2bdace3bdb3d82ab03e431$export$flatten","$e8a43c455e2bdace3bdb3d82ab03e431$export$fold","$e8a43c455e2bdace3bdb3d82ab03e431$export$formula","$e8a43c455e2bdace3bdb3d82ab03e431$export$generate","$e8a43c455e2bdace3bdb3d82ab03e431$var$autostep","detachSubflow","activate","flow","subflow","flows","sf","_group","detached","initTargets","act","rekey","k0","k1","isMod","revisit","maxlen","fnames","generator","$e8a43c455e2bdace3bdb3d82ab03e431$var$Methods","$e8a43c455e2bdace3bdb3d82ab03e431$var$Empty","$e8a43c455e2bdace3bdb3d82ab03e431$export$impute","$e8a43c455e2bdace3bdb3d82ab03e431$export$joinaggregate","$e8a43c455e2bdace3bdb3d82ab03e431$export$kde","$e8a43c455e2bdace3bdb3d82ab03e431$export$key","$e8a43c455e2bdace3bdb3d82ab03e431$var$update$2","$e8a43c455e2bdace3bdb3d82ab03e431$export$load","$e8a43c455e2bdace3bdb3d82ab03e431$var$output","$e8a43c455e2bdace3bdb3d82ab03e431$export$lookup","$e8a43c455e2bdace3bdb3d82ab03e431$export$multiextent","$e8a43c455e2bdace3bdb3d82ab03e431$var$update$1","extents","$e8a43c455e2bdace3bdb3d82ab03e431$export$multivalues","$e8a43c455e2bdace3bdb3d82ab03e431$var$update","$e8a43c455e2bdace3bdb3d82ab03e431$export$params","$e8a43c455e2bdace3bdb3d82ab03e431$export$pivot","$e8a43c455e2bdace3bdb3d82ab03e431$export$prefacet","$e8a43c455e2bdace3bdb3d82ab03e431$export$project","$e8a43c455e2bdace3bdb3d82ab03e431$export$proxy","$e8a43c455e2bdace3bdb3d82ab03e431$export$quantile","gVals","kVal","impute","$e8a43c455e2bdace3bdb3d82ab03e431$var$getValue","$e8a43c455e2bdace3bdb3d82ab03e431$var$getField","fName","kName","gNames","keyvals","gKey","kMap","gMap","$e8a43c455e2bdace3bdb3d82ab03e431$var$partition","_impute","cumulative","resolve","density","$e8a43c455e2bdace3bdb3d82ab03e431$var$stop","_transform","$e8a43c455e2bdace3bdb3d82ab03e431$var$pivotKeys","$e8a43c455e2bdace3bdb3d82ab03e431$var$get","$e8a43c455e2bdace3bdb3d82ab03e431$var$aggregateParams","derive","$e8a43c455e2bdace3bdb3d82ab03e431$var$project","lut","dt","$e8a43c455e2bdace3bdb3d82ab03e431$export$relay","$e8a43c455e2bdace3bdb3d82ab03e431$export$sample","$e8a43c455e2bdace3bdb3d82ab03e431$export$sequence","$e8a43c455e2bdace3bdb3d82ab03e431$export$sieve","$e8a43c455e2bdace3bdb3d82ab03e431$export$timeunit","probs","cap","$e8a43c455e2bdace3bdb3d82ab03e431$var$OUTPUT","$e8a43c455e2bdace3bdb3d82ab03e431$export$tupleindex","$e8a43c455e2bdace3bdb3d82ab03e431$export$values","utc","timezone","_floor","u0","u1","tunits","$e8a43c455e2bdace3bdb3d82ab03e431$var$WindowOps","row_number","dense_rank","drank","percent_rank","cume_dist","cume","ntile","lag","lead","first_value","last_value","nth_value","nth","prev_value","next_value","$e8a43c455e2bdace3bdb3d82ab03e431$var$find","$e8a43c455e2bdace3bdb3d82ab03e431$var$ValidWindowOps","$e8a43c455e2bdace3bdb3d82ab03e431$var$WindowState","windows","countOnly","visitInputs","$e8a43c455e2bdace3bdb3d82ab03e431$var$WindowOp","$e8a43c455e2bdace3bdb3d82ab03e431$var$cell","$e8a43c455e2bdace3bdb3d82ab03e431$var$prototype","$e8a43c455e2bdace3bdb3d82ab03e431$export$window","$e8a43c455e2bdace3bdb3d82ab03e431$var$processPartition","ignorePeers","frame","$e8a43c455e2bdace3bdb3d82ab03e431$var$setWindow","$e8a43c455e2bdace3bdb3d82ab03e431$var$adjustRange","bisect","wind","$0a5ea8b8e8b44211f12d193ab0d551e5$var$pi","$0a5ea8b8e8b44211f12d193ab0d551e5$var$tau","$0a5ea8b8e8b44211f12d193ab0d551e5$var$epsilon","$0a5ea8b8e8b44211f12d193ab0d551e5$var$tauEpsilon","$0a5ea8b8e8b44211f12d193ab0d551e5$var$Path","_x0","_y0","_x1","_y1","$0a5ea8b8e8b44211f12d193ab0d551e5$export$default","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","y2","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","ccw","cw","rect","$528393b87677f04bbf1774c6c367e030$export$abs","$528393b87677f04bbf1774c6c367e030$export$atan2","$528393b87677f04bbf1774c6c367e030$export$cos","$528393b87677f04bbf1774c6c367e030$export$max","$528393b87677f04bbf1774c6c367e030$export$min","$528393b87677f04bbf1774c6c367e030$export$sin","$528393b87677f04bbf1774c6c367e030$export$sqrt","$528393b87677f04bbf1774c6c367e030$export$epsilon","$528393b87677f04bbf1774c6c367e030$export$pi","$528393b87677f04bbf1774c6c367e030$export$halfPi","$528393b87677f04bbf1774c6c367e030$export$tau","$528393b87677f04bbf1774c6c367e030$export$acos","$528393b87677f04bbf1774c6c367e030$export$asin","asin","$61fb972e3f956af495811767508bd644$var$arcInnerRadius","innerRadius","$61fb972e3f956af495811767508bd644$var$arcOuterRadius","outerRadius","$61fb972e3f956af495811767508bd644$var$arcStartAngle","startAngle","$61fb972e3f956af495811767508bd644$var$arcEndAngle","endAngle","$61fb972e3f956af495811767508bd644$var$arcPadAngle","padAngle","$61fb972e3f956af495811767508bd644$var$intersect","x3","y3","x10","y10","x32","y32","$61fb972e3f956af495811767508bd644$var$cornerTangents","rc","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","$a3771d6faf3a34bc02fb4400ddce7219$var$Linear","areaStart","_line","areaEnd","lineStart","_point","lineEnd","$2b793a5125c5db438edad9fc54018b0f$export$x","$2b793a5125c5db438edad9fc54018b0f$export$y","defined","curve","defined0","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","draw","$b247c6dc3884b1eff8b34a0a79fca447$var$kr","$0f1dcfc7cabe8e3d5ef03e7580b411cd$export$point","that","$0f1dcfc7cabe8e3d5ef03e7580b411cd$export$Basis","$bd817a89891e402b72a17d4eab3db74d$var$BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","$ec1f21869a6a03efa7de82868e1766e3$var$BasisOpen","$91f8f92a4319042a004eb1f90b6c6042$var$Bundle","beta","_basis","_beta","_x","_y","custom","bundle","$aef526922a709f953997d770c452bcbe$export$point","_k","$aef526922a709f953997d770c452bcbe$export$Cardinal","tension","cardinal","$98e1445834933c75da00ad848f909e89$export$CardinalClosed","_x5","_y5","$e8ca2bc23fe0ac1fa3a034c92e8ee60c$export$CardinalOpen","$31fcdd049f021a3b328a552d3088e817$export$point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","$31fcdd049f021a3b328a552d3088e817$var$CatmullRom","_alpha","x23","y23","catmullRom","$49d5442c5ee40beb0873a07b3267401e$var$CatmullRomClosed","$76f6814205ce12a6355d118d6a59426c$var$CatmullRomOpen","$bc8d57b317c04ceb1f64ee331c56bfe6$var$LinearClosed","$b7a500aa0cff257c34689b00cfc0f931$var$sign","$b7a500aa0cff257c34689b00cfc0f931$var$slope3","h0","h1","s0","s1","$b7a500aa0cff257c34689b00cfc0f931$var$slope2","$b7a500aa0cff257c34689b00cfc0f931$var$point","$b7a500aa0cff257c34689b00cfc0f931$var$MonotoneX","$b7a500aa0cff257c34689b00cfc0f931$var$MonotoneY","$b7a500aa0cff257c34689b00cfc0f931$var$ReflectContext","$f08d08891bb45cab9346c64fbe1c549c$var$Natural","$f08d08891bb45cab9346c64fbe1c549c$var$controlPoints","_t0","px","py","$e87a61fa0fbe2c5618cc063a64294a6b$var$Step","_t","$cb134e7a6f2fe2bb7540cfa5f96938b8$export$domCanvas","getContext","$cb134e7a6f2fe2bb7540cfa5f96938b8$export$domImage","Image","$73f9facf953b5a0d0007291c14294dd1$export$bandSpace","paddingInner","paddingOuter","space","$73f9facf953b5a0d0007291c14294dd1$export$Linear","$73f9facf953b5a0d0007291c14294dd1$export$Log","$73f9facf953b5a0d0007291c14294dd1$export$Pow","$73f9facf953b5a0d0007291c14294dd1$export$Sqrt","$73f9facf953b5a0d0007291c14294dd1$export$Symlog","$73f9facf953b5a0d0007291c14294dd1$export$Time","$73f9facf953b5a0d0007291c14294dd1$export$UTC","$73f9facf953b5a0d0007291c14294dd1$export$Sequential","$73f9facf953b5a0d0007291c14294dd1$export$Diverging","$73f9facf953b5a0d0007291c14294dd1$export$Quantile","$73f9facf953b5a0d0007291c14294dd1$export$Quantize","$73f9facf953b5a0d0007291c14294dd1$export$Threshold","$73f9facf953b5a0d0007291c14294dd1$export$Ordinal","$73f9facf953b5a0d0007291c14294dd1$export$Point","$73f9facf953b5a0d0007291c14294dd1$export$Band","$73f9facf953b5a0d0007291c14294dd1$export$BinOrdinal","$73f9facf953b5a0d0007291c14294dd1$var$Continuous","$73f9facf953b5a0d0007291c14294dd1$var$Discrete","$73f9facf953b5a0d0007291c14294dd1$var$Discretizing","$73f9facf953b5a0d0007291c14294dd1$var$Interpolating","$73f9facf953b5a0d0007291c14294dd1$var$Temporal","$73f9facf953b5a0d0007291c14294dd1$var$band","ordinalRange","range$1","invertRange","$73f9facf953b5a0d0007291c14294dd1$var$pointish","$73f9facf953b5a0d0007291c14294dd1$var$map","$73f9facf953b5a0d0007291c14294dd1$var$numbers","$73f9facf953b5a0d0007291c14294dd1$var$slice","$73f9facf953b5a0d0007291c14294dd1$var$scales","$73f9facf953b5a0d0007291c14294dd1$var$create","$73f9facf953b5a0d0007291c14294dd1$var$invertRange","invertExtent","$73f9facf953b5a0d0007291c14294dd1$var$invertRangeExtent","$73f9facf953b5a0d0007291c14294dd1$export$scale","$73f9facf953b5a0d0007291c14294dd1$export$isValidScaleType","$73f9facf953b5a0d0007291c14294dd1$var$hasType","$73f9facf953b5a0d0007291c14294dd1$export$isContinuous","$73f9facf953b5a0d0007291c14294dd1$export$isDiscrete","$73f9facf953b5a0d0007291c14294dd1$export$isDiscretizing","$73f9facf953b5a0d0007291c14294dd1$export$isLogarithmic","$73f9facf953b5a0d0007291c14294dd1$export$isInterpolating","$73f9facf953b5a0d0007291c14294dd1$export$isQuantile","$ff6435e647fa477a075b058e510f7798$export$default","$93e0c77beeeafa21a81b4d2f5f2b27e8$export$default","$fe7fb97975e06cdfc91d70274e12d81a$export$default","$353038f4dba0ded0635b47ff29a8fa99$export$sequentialLog","$353038f4dba0ded0635b47ff29a8fa99$export$sequentialSymlog","$c2af7f7c8bf7c57ca1c61fd8d9aaed87$export$default","$c2af7f7c8bf7c57ca1c61fd8d9aaed87$export$divergingLog","$c2af7f7c8bf7c57ca1c61fd8d9aaed87$export$divergingSymlog","$6a4d346e0966866d12da21d9c9886903$export$default","quantiles","$191f55170015ae83d9daefbd3b7a2768$export$default","$09f14e9eaf76310f3b4279979e95ba07$export$default","$73f9facf953b5a0d0007291c14294dd1$var$scaleBinOrdinal","$73f9facf953b5a0d0007291c14294dd1$var$scaleProps","$73f9facf953b5a0d0007291c14294dd1$export$interpolateColors","$73f9facf953b5a0d0007291c14294dd1$export$interpolate","$73f9facf953b5a0d0007291c14294dd1$export$scaleFraction","scale$1","interp","$73f9facf953b5a0d0007291c14294dd1$var$method","$73f9facf953b5a0d0007291c14294dd1$var$colors","palette","$73f9facf953b5a0d0007291c14294dd1$var$apply","$73f9facf953b5a0d0007291c14294dd1$export$scheme","$73f9facf953b5a0d0007291c14294dd1$var$schemes","scheme","$73f9facf953b5a0d0007291c14294dd1$var$discrete","category10","category20","category20b","category20c","tableau10","tableau20","accent","dark2","paired","pastel1","pastel2","set1","set2","set3","$73f9facf953b5a0d0007291c14294dd1$var$continuous","blues","greens","greys","oranges","purples","reds","blueGreen","bluePurple","greenBlue","orangeRed","purpleBlue","purpleBlueGreen","purpleRed","redPurple","yellowGreen","yellowOrangeBrown","yellowOrangeRed","blueOrange","brownBlueGreen","purpleGreen","purpleOrange","redBlue","redGrey","yellowGreenBlue","redYellowBlue","redYellowGreen","pinkYellowGreen","spectral","viridis","magma","inferno","plasma","cividis","rainbow","sinebow","turbo","browns","tealBlues","teals","warmGreys","goldGreen","goldOrange","goldRed","lightGreyRed","lightGreyTeal","lightMulti","lightOrange","lightTealBlue","darkBlue","darkGold","darkGreen","darkMulti","darkRed","$73f9facf953b5a0d0007291c14294dd1$export$SymbolLegend","$73f9facf953b5a0d0007291c14294dd1$var$defaultFormatter","$73f9facf953b5a0d0007291c14294dd1$var$ascending","$73f9facf953b5a0d0007291c14294dd1$var$descending","$73f9facf953b5a0d0007291c14294dd1$export$tickCount","minStep","$73f9facf953b5a0d0007291c14294dd1$export$validTicks","endpoints","$73f9facf953b5a0d0007291c14294dd1$export$tickValues","$73f9facf953b5a0d0007291c14294dd1$export$tickFormat","noSkip","varfmt","$73f9facf953b5a0d0007291c14294dd1$var$tickLog","$73f9facf953b5a0d0007291c14294dd1$var$symbols","$73f9facf953b5a0d0007291c14294dd1$var$formats","$73f9facf953b5a0d0007291c14294dd1$export$labelValues","$73f9facf953b5a0d0007291c14294dd1$var$binValues","$73f9facf953b5a0d0007291c14294dd1$var$thresholdValues","$73f9facf953b5a0d0007291c14294dd1$export$labelFormat","$73f9facf953b5a0d0007291c14294dd1$var$thresholdFormat","$73f9facf953b5a0d0007291c14294dd1$var$isDiscreteRange","$73f9facf953b5a0d0007291c14294dd1$var$formatRange","$73f9facf953b5a0d0007291c14294dd1$var$formatDiscrete","$73f9facf953b5a0d0007291c14294dd1$var$formatPoint","$73f9facf953b5a0d0007291c14294dd1$var$get","$73f9facf953b5a0d0007291c14294dd1$var$formatValue","dflt","$73f9facf953b5a0d0007291c14294dd1$var$format","$73f9facf953b5a0d0007291c14294dd1$export$domainCaption","fmt","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$gradient_id","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$patternPrefix","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$isGradient","gradient","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$gradientRef","defs","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$get","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$lookup","basis","basis-closed","basis-open","cardinal-open","cardinal-closed","catmull-rom","catmull-rom-closed","catmull-rom-open","linear","linear-closed","monotone","horizontal","vertical","natural","step-after","step-before","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathCurves","orientation","entry","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$cmdlen","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$regexp","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathParse","pathstr","chunks","cmd","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$DegToRad","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$HalfPi","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$Tau","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$HalfSqrt3","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$segmentCache","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bezierCache","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$join","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bezier","th0","th1","rx","ry","sin_th","cos_th","a00","a01","a10","a11","cos_th0","sin_th0","cos_th1","sin_th1","th_half","sin_th_h2","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$temp","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$scale$1","sX","sY","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathRender","tempX","tempY","tempControlX","tempControlY","controlX","controlY","beginPath","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$drawArc","coords","seg","large","sweep","rotateX","th","pl","sfactor_sq","sfactor","xc","yc","th_arc","segs","th2","th3","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$segments","bez","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$Tan30","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$builtins","circle","diamond","square","arrow","wedge","triangle","triangle-up","triangle-down","triangle-right","triangle-left","stroke","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathSymbols","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$custom","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$customSymbol","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$C","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectangleX","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectangleY","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectangleWidth","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectangleHeight","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$number","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clamp","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$value$1","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$x","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$y","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$def","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$arcShape","cornerRadius","padRadius","da0","da1","ap","rp","rc0","rc1","oc","ax","ay","bx","by","kc","lc","centroid","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$areavShape","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$areahShape","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$lineShape","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectShape","crTL","crTR","crBL","crBR","rectangle","tl","tr","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathRectangle","cornerRadiusTopLeft","cornerRadiusTopRight","cornerRadiusBottomRight","cornerRadiusBottomLeft","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$symbolShape","shape","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$trailShape","ready","w2","ud","trail","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$pathTrail","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$hasCornerRadius","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectangle","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clip_id","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clip$1","renderer","clip","_defs","clip_id","clipping","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Bounds","union","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Item","mark","bounds","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$GroupItem","items","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$ResourceLoader","customLoader","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$increment","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$decrement","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$boundStroke","miter","sw","expand","strokeJoin","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$miterAdjustment","MAX_VALUE","angle","rotatedPoints","intersect","encloses","alignsWith","intersects","catch","loadImage","cors","onload","onerror","complete","poll","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$circleThreshold","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bounds","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$lx","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ly","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rot","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ma","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$mb","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$mc","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$md","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$add","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addL","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addX","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addY","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$px","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$py","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addp","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addpL","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$boundContext","deg","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$context$1","px1","py1","px2","py2","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$quadExtrema","px3","py3","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$cubicExtrema","sa","ea","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$cubic","s2","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$context","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$b","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$intersectPath","brush","isPointInPath","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$intersectPoint","box","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$intersectRect","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$intersectBoxLine","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$blend","globalCompositeOperation","blend","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$value","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addStops","stops","addColorStop","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$color","createRadialGradient","image","ictx","fillStyle","createLinearGradient","fillRect","createPattern","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$gradient","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$fill","globalAlpha","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$Empty","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$stroke","lw","strokeStyle","lineWidth","lineCap","strokeCap","lineJoin","miterLimit","strokeMiterLimit","setLineDash","strokeDash","lineDashOffset","strokeDashOffset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$compare","zindex","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$sceneZOrder","scene","zdirty","zitems","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$sceneVisit","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$scenePickVisit","hit","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$drawAll","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$drawPath","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$pick$1","gx","gy","pixelRatio","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$hitPath","filled","isPointInStroke","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$pickPath","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$translate","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rotate","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$translateItem","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$markItemPath","isect","nested","attr","emit","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rotateItem","bound","pick","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$arc","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$markMultiItemPath","tip","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$area","orient","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clipGroup","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$offset$1","strokeOffset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$emitRectangle","off","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rectanglePath","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$hitBackground","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$hitForeground","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$hitCorner","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$group","noBound","fore","strokeForeground","save","restore","dw","dh","ix","interactive","marktype","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$pickMark","content","background","foreground","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$metadata","xmlns","xmlns:xlink","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$getImage","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$imageWidth","aspect","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$imageHeight","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$imageXOffset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$imageYOffset","baseline","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$image","toDataURL","ar0","ar1","imageSmoothingEnabled","drawImage","xOffset","yOffset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$line","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$path$1","sx","sy","pathCache","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$path$2","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$transformItem","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$draw$2","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rect","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$path","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rule","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$shape","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$symbol","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$widthCache","maxsize","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$textMetrics","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$fontSize","measureWidth","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$measureWidth","estimateWidth","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$estimateWidth","canvas","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$useCanvas","use","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$_estimateWidth","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$textValue","currentFontHeight","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$_measureWidth","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$font","currentFont","font","measureText","fontSize","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$lineHeight","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$textLines","lineBreak","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$multiLineOffset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$widthGetter","ellipsis","rtl","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$truncate","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$fontFamily","quote","fontStyle","fontVariant","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$offset","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$textAlign","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$tempBounds","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$anchorPoint","radius","theta","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bound","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Marks","rule","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$text","lh","textAlign","fillText","strokeText","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$boundItem","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$DUMMY","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$keys","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$sceneFromJSON","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$initialize","hasItems","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$boundMark","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Scenegraph","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$createMark","role","aria","description","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$domCreate","doc","ns","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$domFind","el","childNodes","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$domChild","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$domClear","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$cssClass","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$point","getBoundingClientRect","clientLeft","clientTop","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Handler","customTooltip","_active","_handlers","_tooltip","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$defaultTooltip","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$Renderer","_el","_bgcolor","indent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$sceneToJSON","markdef","initialize","origin","_obj","_origin","_scene","_handlerIndex","handlers","eventName","handleHref","MouseEvent","dispatchEvent","handleTooltip","show","tooltip","mdef","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$resolveItem","getItemBoundingClientRect","bottom","scaleFactor","resize","bgcolor","_width","_height","_scale","dirty","_call","renderAsync","_ready","_load","redraw","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$DragEnterEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$DragLeaveEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$DragOverEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$MouseDownEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$MouseMoveEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$MouseOutEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$MouseOverEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ClickEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$MouseWheelEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$TouchStartEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$TouchMoveEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$TouchEndEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$TooltipShowEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$TooltipHideEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$HrefEvent","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$CanvasHandler","_down","_touch","_first","_events","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$eventListenerCheck","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$eventBundle","fire","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$addEventListener","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$move","moveEvent","overEvent","outEvent","pickEvent","exit","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$inactive","_canvas","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$Events","DOMMouseScroll","mousemove","dragover","mouseout","dragleave","mousedown","click","touchstart","touchmove","touchend","vegaType","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$pixelRatio","devicePixelRatio","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$CanvasRenderer","_options","_redraw","_dirty","_tempb","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$base$1","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$SVGHandler","_hrefHandler","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$listener","_tooltipHandler","externalContext","inDOM","HTMLElement","ratio","setTransform","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$resize","ctx","db","vb","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clipToBounds","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clip","clearRect","__data__","_svg","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ARIA_HIDDEN","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ARIA_LABEL","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ARIA_ROLE","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ARIA_ROLEDESCRIPTION","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$GRAPHICS_OBJECT","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$GRAPHICS_SYMBOL","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bundle","roledesc","label","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$AriaIgnore","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$AriaGuides","axis","desc","caption","title","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$extractTitle","scales","legend","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$channelCaption","title-text","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$titleCaption","title-subtitle","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$AriaEncode","ariaRole","ariaRoleDescription","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ariaItemAttributes","hide","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ariaMarkAttributes","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ariaGuide","recurse","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$ariaMark","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$innerText","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$markup","outer","inner","open","attrs","close","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$serializeXML","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$_serialize","hasAttributes","attributes","hasChildNodes","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$styles","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$rootAttributes","stroke-miterlimit","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$xmlns","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$svgns","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$SVGRenderer","_dirtyID","_root","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$base","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$dirtyParents","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$updateGradient","grad","pt","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$setAttributes","viewBox","preserveAspectRatio","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$href","fx","fy","fr","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$updateClipping","mask","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$bind","__values__","bg","cg","ownerSVGElement","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$siblingCheck","_clearDefs","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$RootIndex","_dirtyCheck","_dirtyAll","isDirty","isGroup","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$setAttribute","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$recurse","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$element","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$values","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$emit","extra","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$mark_extras","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$setStyle","ts","removeAttributeNS","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$setAttributeNS","removeProperty","loc","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$SVGStringRenderer","_text","class","attrList","clip-path","pointer-events","_hrefs","prefixed","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$style","stop-color","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$Canvas","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$RenderType","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$modules","$2dc7bdc7f1450ee9aeb0586c3612f0ab$export$renderModule","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$intersectMark","hits","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$visitMark","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$intersectGroup","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$intersectItem","marks","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$PNG","headless","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$SVG","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$None","$2dc7bdc7f1450ee9aeb0586c3612f0ab$var$clipBounds","$0f00e06ef4eb14cde73b3511eab44350$var$Top","$0f00e06ef4eb14cde73b3511eab44350$var$Left","$0f00e06ef4eb14cde73b3511eab44350$var$Right","$0f00e06ef4eb14cde73b3511eab44350$var$Bottom","$0f00e06ef4eb14cde73b3511eab44350$var$Start","$0f00e06ef4eb14cde73b3511eab44350$var$Middle","$0f00e06ef4eb14cde73b3511eab44350$var$End","$0f00e06ef4eb14cde73b3511eab44350$var$Group","$0f00e06ef4eb14cde73b3511eab44350$var$AxisRole","$0f00e06ef4eb14cde73b3511eab44350$var$TitleRole","$0f00e06ef4eb14cde73b3511eab44350$var$FrameRole","$0f00e06ef4eb14cde73b3511eab44350$var$ScopeRole","$0f00e06ef4eb14cde73b3511eab44350$var$LegendRole","$0f00e06ef4eb14cde73b3511eab44350$var$RowHeader","$0f00e06ef4eb14cde73b3511eab44350$var$RowFooter","$0f00e06ef4eb14cde73b3511eab44350$var$RowTitle","$0f00e06ef4eb14cde73b3511eab44350$var$ColHeader","$0f00e06ef4eb14cde73b3511eab44350$var$ColFooter","$0f00e06ef4eb14cde73b3511eab44350$var$ColTitle","$0f00e06ef4eb14cde73b3511eab44350$var$Padding","$0f00e06ef4eb14cde73b3511eab44350$var$Fit","$0f00e06ef4eb14cde73b3511eab44350$var$FitX","$0f00e06ef4eb14cde73b3511eab44350$var$FitY","$0f00e06ef4eb14cde73b3511eab44350$var$None","$0f00e06ef4eb14cde73b3511eab44350$var$All","$0f00e06ef4eb14cde73b3511eab44350$var$Each","$0f00e06ef4eb14cde73b3511eab44350$var$Flush","$0f00e06ef4eb14cde73b3511eab44350$var$Column","$0f00e06ef4eb14cde73b3511eab44350$var$Row","$0f00e06ef4eb14cde73b3511eab44350$export$bound","$0f00e06ef4eb14cde73b3511eab44350$var$boundItem","rebound","markBounds","$0f00e06ef4eb14cde73b3511eab44350$export$identifier","$0f00e06ef4eb14cde73b3511eab44350$export$mark","$0f00e06ef4eb14cde73b3511eab44350$export$overlap","counter","_signals","$0f00e06ef4eb14cde73b3511eab44350$var$COUNTER_NAME","scenegraph","lookup","$0f00e06ef4eb14cde73b3511eab44350$var$lookup","Init","$0f00e06ef4eb14cde73b3511eab44350$var$methods","parity","greedy","sep","$0f00e06ef4eb14cde73b3511eab44350$var$intersect","$0f00e06ef4eb14cde73b3511eab44350$var$hasOverlap","$0f00e06ef4eb14cde73b3511eab44350$var$hasBounds","$0f00e06ef4eb14cde73b3511eab44350$var$reset","$0f00e06ef4eb14cde73b3511eab44350$var$reflow","$0f00e06ef4eb14cde73b3511eab44350$export$render","separation","tolerance","boundScale","boundTolerance","boundOrient","$0f00e06ef4eb14cde73b3511eab44350$var$tempBounds","$0f00e06ef4eb14cde73b3511eab44350$var$set","$0f00e06ef4eb14cde73b3511eab44350$var$isYAxis","$0f00e06ef4eb14cde73b3511eab44350$var$axisLayout","indices","grid","labels","$0f00e06ef4eb14cde73b3511eab44350$var$axisIndices","position","minExtent","maxExtent","titlePadding","dl","$0f00e06ef4eb14cde73b3511eab44350$var$axisTitleLayout","isYAxis","auto","$0f00e06ef4eb14cde73b3511eab44350$var$min","$0f00e06ef4eb14cde73b3511eab44350$var$max","$0f00e06ef4eb14cde73b3511eab44350$var$bboxFlush","$0f00e06ef4eb14cde73b3511eab44350$var$bboxFull","$0f00e06ef4eb14cde73b3511eab44350$var$get","$0f00e06ef4eb14cde73b3511eab44350$var$offsetValue","$0f00e06ef4eb14cde73b3511eab44350$var$gridLayout","nodirty","alignCol","alignRow","padCol","padRow","ncols","nrows","xExtent","xMax","yExtent","yMax","boxes","$0f00e06ef4eb14cde73b3511eab44350$var$trellisLayout","views","rowheaders","rowfooters","colheaders","colfooters","rowtitle","coltitle","$0f00e06ef4eb14cde73b3511eab44350$var$gridLayoutGroups","$0f00e06ef4eb14cde73b3511eab44350$var$boundFlush","$0f00e06ef4eb14cde73b3511eab44350$var$boundFull","headerBand","$0f00e06ef4eb14cde73b3511eab44350$var$layoutHeaders","footerBand","titleAnchor","titleBand","$0f00e06ef4eb14cde73b3511eab44350$var$layoutTitle","headers","isX","bf","stride","back","edge","$0f00e06ef4eb14cde73b3511eab44350$var$legendParams","config","$0f00e06ef4eb14cde73b3511eab44350$var$lookup$1","legends","$0f00e06ef4eb14cde73b3511eab44350$var$offsets","mult","$0f00e06ef4eb14cde73b3511eab44350$var$legendLayout","_bounds","ex","ey","tpad","tx","ty","$0f00e06ef4eb14cde73b3511eab44350$var$translate","$0f00e06ef4eb14cde73b3511eab44350$var$legendTitleOffset","$0f00e06ef4eb14cde73b3511eab44350$var$legendGroupLayout","$0f00e06ef4eb14cde73b3511eab44350$var$legendBounds","entries","widths","$0f00e06ef4eb14cde73b3511eab44350$var$legendEntryLayout","lr","noBar","vgrad","$0f00e06ef4eb14cde73b3511eab44350$export$viewlayout","layout","viewBounds","xBounds","yBounds","autosize","subtitle","$0f00e06ef4eb14cde73b3511eab44350$var$titleLayout","_autosize","viewWidth","viewHeight","_resizeView","$0f00e06ef4eb14cde73b3511eab44350$var$viewSizeLayout","$0f00e06ef4eb14cde73b3511eab44350$var$layoutGroup","$395ce749cc3b2a13a82bcf8efcfa642e$export$axisticks","$395ce749cc3b2a13a82bcf8efcfa642e$export$datajoin","$395ce749cc3b2a13a82bcf8efcfa642e$var$defaultItemCreate","$395ce749cc3b2a13a82bcf8efcfa642e$export$encode","$395ce749cc3b2a13a82bcf8efcfa642e$export$legendentries","formatSpecifier","$395ce749cc3b2a13a82bcf8efcfa642e$var$newMap","fmod","encoders","reenter","enter","fraction","lskip","perc","adjust","perc2","$395ce749cc3b2a13a82bcf8efcfa642e$var$sourceX","$395ce749cc3b2a13a82bcf8efcfa642e$var$sourceY","$395ce749cc3b2a13a82bcf8efcfa642e$var$targetX","$395ce749cc3b2a13a82bcf8efcfa642e$var$targetY","$395ce749cc3b2a13a82bcf8efcfa642e$export$linkpath","sourceX","sourceY","targetX","targetY","$395ce749cc3b2a13a82bcf8efcfa642e$var$Paths","$395ce749cc3b2a13a82bcf8efcfa642e$var$line","$395ce749cc3b2a13a82bcf8efcfa642e$var$arc","rr","$395ce749cc3b2a13a82bcf8efcfa642e$var$curve","iy","line-radial","sr","ta","arc-radial","curve-radial","orthogonal-horizontal","orthogonal-vertical","orthogonal-radial","sc","ss","tc","diagonal-horizontal","diagonal-vertical","diagonal-radial","mr","$395ce749cc3b2a13a82bcf8efcfa642e$export$pie","$395ce749cc3b2a13a82bcf8efcfa642e$var$includePad","$395ce749cc3b2a13a82bcf8efcfa642e$var$SKIP","$395ce749cc3b2a13a82bcf8efcfa642e$export$scale","$395ce749cc3b2a13a82bcf8efcfa642e$var$domainCheck","$395ce749cc3b2a13a82bcf8efcfa642e$var$adjustScheme","$395ce749cc3b2a13a82bcf8efcfa642e$var$flip","$395ce749cc3b2a13a82bcf8efcfa642e$export$sortitems","$395ce749cc3b2a13a82bcf8efcfa642e$var$isContinuousColor","rawDomain","domainMid","$395ce749cc3b2a13a82bcf8efcfa642e$var$scaleKey","rangeStep","$395ce749cc3b2a13a82bcf8efcfa642e$var$configureRangeStep","scheme$1","schemeExtent","interpolateGamma","schemeCount","$395ce749cc3b2a13a82bcf8efcfa642e$var$configureScheme","$395ce749cc3b2a13a82bcf8efcfa642e$var$configureRange","domainRaw","$395ce749cc3b2a13a82bcf8efcfa642e$var$configureBins","raw","$395ce749cc3b2a13a82bcf8efcfa642e$var$rawDomain","$395ce749cc3b2a13a82bcf8efcfa642e$var$includeZero","frac","$395ce749cc3b2a13a82bcf8efcfa642e$var$padDomain","domainMin","domainMax","domainImplicit","$395ce749cc3b2a13a82bcf8efcfa642e$var$configureDomain","$395ce749cc3b2a13a82bcf8efcfa642e$var$Zero","$395ce749cc3b2a13a82bcf8efcfa642e$var$Center","$395ce749cc3b2a13a82bcf8efcfa642e$var$Normalize","$395ce749cc3b2a13a82bcf8efcfa642e$var$DefOutput","$395ce749cc3b2a13a82bcf8efcfa642e$export$stack","$395ce749cc3b2a13a82bcf8efcfa642e$var$stackCenter","$395ce749cc3b2a13a82bcf8efcfa642e$var$stackNormalize","$395ce749cc3b2a13a82bcf8efcfa642e$var$stackZero","lastPos","lastNeg","$395ce749cc3b2a13a82bcf8efcfa642e$var$partition","$732c53b105f74b4a7c8af1e30bb1d221$export$epsilon","$732c53b105f74b4a7c8af1e30bb1d221$export$epsilon2","$732c53b105f74b4a7c8af1e30bb1d221$export$pi","$732c53b105f74b4a7c8af1e30bb1d221$export$halfPi","$732c53b105f74b4a7c8af1e30bb1d221$export$quarterPi","$732c53b105f74b4a7c8af1e30bb1d221$export$tau","$732c53b105f74b4a7c8af1e30bb1d221$export$degrees","$732c53b105f74b4a7c8af1e30bb1d221$export$radians","$732c53b105f74b4a7c8af1e30bb1d221$export$abs","$732c53b105f74b4a7c8af1e30bb1d221$export$atan","$732c53b105f74b4a7c8af1e30bb1d221$export$atan2","$732c53b105f74b4a7c8af1e30bb1d221$export$cos","$732c53b105f74b4a7c8af1e30bb1d221$export$ceil","$732c53b105f74b4a7c8af1e30bb1d221$export$exp","$732c53b105f74b4a7c8af1e30bb1d221$export$hypot","hypot","$732c53b105f74b4a7c8af1e30bb1d221$export$log","$732c53b105f74b4a7c8af1e30bb1d221$export$pow","$732c53b105f74b4a7c8af1e30bb1d221$export$sin","$732c53b105f74b4a7c8af1e30bb1d221$export$sign","$732c53b105f74b4a7c8af1e30bb1d221$export$sqrt","$732c53b105f74b4a7c8af1e30bb1d221$export$tan","$732c53b105f74b4a7c8af1e30bb1d221$export$acos","$732c53b105f74b4a7c8af1e30bb1d221$export$asin","$c397fbf61a9da21bb2f99f9524336ab4$export$default","$2cd21e0ad4ac025bbbc7b2555aec0949$var$streamGeometry","$2cd21e0ad4ac025bbbc7b2555aec0949$var$streamGeometryType","$2cd21e0ad4ac025bbbc7b2555aec0949$var$streamObjectType","Feature","FeatureCollection","Sphere","sphere","Point","MultiPoint","LineString","$2cd21e0ad4ac025bbbc7b2555aec0949$var$streamLine","MultiLineString","Polygon","$2cd21e0ad4ac025bbbc7b2555aec0949$var$streamPolygon","MultiPolygon","GeometryCollection","closed","coordinate","polygonStart","polygonEnd","$f70c5c268bd64bf177f33d0d860618b8$var$lambda00","$f70c5c268bd64bf177f33d0d860618b8$var$phi00","$f70c5c268bd64bf177f33d0d860618b8$var$lambda0","$f70c5c268bd64bf177f33d0d860618b8$var$cosPhi0","$f70c5c268bd64bf177f33d0d860618b8$var$sinPhi0","$f70c5c268bd64bf177f33d0d860618b8$export$areaRingSum","$f70c5c268bd64bf177f33d0d860618b8$var$areaSum","$f70c5c268bd64bf177f33d0d860618b8$export$areaStream","$f70c5c268bd64bf177f33d0d860618b8$var$areaRingStart","$f70c5c268bd64bf177f33d0d860618b8$var$areaRingEnd","areaRing","$f70c5c268bd64bf177f33d0d860618b8$var$areaPointFirst","$f70c5c268bd64bf177f33d0d860618b8$var$areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","$a276a4842e18945e86a46469d9c9c8db$var$lambda0","$a276a4842e18945e86a46469d9c9c8db$var$phi0","$a276a4842e18945e86a46469d9c9c8db$var$lambda1","$a276a4842e18945e86a46469d9c9c8db$var$phi1","$a276a4842e18945e86a46469d9c9c8db$var$lambda2","$a276a4842e18945e86a46469d9c9c8db$var$lambda00","$a276a4842e18945e86a46469d9c9c8db$var$phi00","$a276a4842e18945e86a46469d9c9c8db$var$p0","$a276a4842e18945e86a46469d9c9c8db$var$deltaSum","$a276a4842e18945e86a46469d9c9c8db$var$ranges","$a276a4842e18945e86a46469d9c9c8db$var$range","$93ba4b9c5495a9834c330345b809b318$export$spherical","cartesian","$93ba4b9c5495a9834c330345b809b318$export$cartesian","spherical","$93ba4b9c5495a9834c330345b809b318$export$cartesianDot","$93ba4b9c5495a9834c330345b809b318$export$cartesianCross","$93ba4b9c5495a9834c330345b809b318$export$cartesianAddInPlace","$93ba4b9c5495a9834c330345b809b318$export$cartesianScale","vector","$93ba4b9c5495a9834c330345b809b318$export$cartesianNormalizeInPlace","$a276a4842e18945e86a46469d9c9c8db$var$boundsStream","$a276a4842e18945e86a46469d9c9c8db$var$boundsPoint","$a276a4842e18945e86a46469d9c9c8db$var$boundsLineStart","$a276a4842e18945e86a46469d9c9c8db$var$boundsLineEnd","$a276a4842e18945e86a46469d9c9c8db$var$boundsRingPoint","$a276a4842e18945e86a46469d9c9c8db$var$boundsRingStart","$a276a4842e18945e86a46469d9c9c8db$var$boundsRingEnd","$a276a4842e18945e86a46469d9c9c8db$var$linePoint","inflection","equatorial","phii","lambdai","antimeridian","$a276a4842e18945e86a46469d9c9c8db$var$angle","lambda0","lambda1","$a276a4842e18945e86a46469d9c9c8db$var$rangeCompare","$a276a4842e18945e86a46469d9c9c8db$var$rangeContains","$1261d18832d32d2165b9c19d45e0df2f$var$W0","$1261d18832d32d2165b9c19d45e0df2f$var$W1","$1261d18832d32d2165b9c19d45e0df2f$var$X0","$1261d18832d32d2165b9c19d45e0df2f$var$Y0","$1261d18832d32d2165b9c19d45e0df2f$var$Z0","$1261d18832d32d2165b9c19d45e0df2f$var$X1","$1261d18832d32d2165b9c19d45e0df2f$var$Y1","$1261d18832d32d2165b9c19d45e0df2f$var$Z1","$1261d18832d32d2165b9c19d45e0df2f$var$X2","$1261d18832d32d2165b9c19d45e0df2f$var$Y2","$1261d18832d32d2165b9c19d45e0df2f$var$Z2","$1261d18832d32d2165b9c19d45e0df2f$var$lambda00","$1261d18832d32d2165b9c19d45e0df2f$var$phi00","$1261d18832d32d2165b9c19d45e0df2f$var$x0","$1261d18832d32d2165b9c19d45e0df2f$var$y0","$1261d18832d32d2165b9c19d45e0df2f$var$z0","$1261d18832d32d2165b9c19d45e0df2f$var$centroidStream","$1261d18832d32d2165b9c19d45e0df2f$var$centroidPoint","$1261d18832d32d2165b9c19d45e0df2f$var$centroidLineStart","$1261d18832d32d2165b9c19d45e0df2f$var$centroidLineEnd","$1261d18832d32d2165b9c19d45e0df2f$var$centroidRingStart","$1261d18832d32d2165b9c19d45e0df2f$var$centroidRingEnd","$1261d18832d32d2165b9c19d45e0df2f$var$centroidPointCartesian","$1261d18832d32d2165b9c19d45e0df2f$var$centroidLinePointFirst","$1261d18832d32d2165b9c19d45e0df2f$var$centroidLinePoint","$1261d18832d32d2165b9c19d45e0df2f$var$centroidRingPointFirst","$1261d18832d32d2165b9c19d45e0df2f$var$centroidRingPoint","cz","$571c0939f7ae7bf8aa7fe5572bbf4a32$var$graticuleX","$571c0939f7ae7bf8aa7fe5572bbf4a32$var$graticuleY","$cf43be982c794719c258336f27d511af$var$x00","$cf43be982c794719c258336f27d511af$var$y00","$cf43be982c794719c258336f27d511af$var$x0","$cf43be982c794719c258336f27d511af$var$y0","$cf43be982c794719c258336f27d511af$var$areaSum","$cf43be982c794719c258336f27d511af$var$areaRingSum","$cf43be982c794719c258336f27d511af$export$default","$cf43be982c794719c258336f27d511af$var$areaRingStart","$cf43be982c794719c258336f27d511af$var$areaRingEnd","$cf43be982c794719c258336f27d511af$var$areaPointFirst","$cf43be982c794719c258336f27d511af$var$areaPoint","$2a8a350832f9ebb19cb9789aa55af4f1$var$x0","$2a8a350832f9ebb19cb9789aa55af4f1$var$y0","$2a8a350832f9ebb19cb9789aa55af4f1$var$x1","$2a8a350832f9ebb19cb9789aa55af4f1$var$y1","$2a8a350832f9ebb19cb9789aa55af4f1$export$default","$59cf97c6547d922bec0f2944c17e2364$var$x00","$59cf97c6547d922bec0f2944c17e2364$var$y00","$59cf97c6547d922bec0f2944c17e2364$var$x0","$59cf97c6547d922bec0f2944c17e2364$var$y0","$59cf97c6547d922bec0f2944c17e2364$var$X0","$59cf97c6547d922bec0f2944c17e2364$var$Y0","$59cf97c6547d922bec0f2944c17e2364$var$Z0","$59cf97c6547d922bec0f2944c17e2364$var$X1","$59cf97c6547d922bec0f2944c17e2364$var$Y1","$59cf97c6547d922bec0f2944c17e2364$var$Z1","$59cf97c6547d922bec0f2944c17e2364$var$X2","$59cf97c6547d922bec0f2944c17e2364$var$Y2","$59cf97c6547d922bec0f2944c17e2364$var$Z2","$59cf97c6547d922bec0f2944c17e2364$export$default","$59cf97c6547d922bec0f2944c17e2364$var$centroidPoint","$59cf97c6547d922bec0f2944c17e2364$var$centroidLineStart","$59cf97c6547d922bec0f2944c17e2364$var$centroidLineEnd","$59cf97c6547d922bec0f2944c17e2364$var$centroidRingStart","$59cf97c6547d922bec0f2944c17e2364$var$centroidRingEnd","$59cf97c6547d922bec0f2944c17e2364$var$centroidPointFirstLine","$59cf97c6547d922bec0f2944c17e2364$var$centroidPointLine","$59cf97c6547d922bec0f2944c17e2364$var$centroidPointFirstRing","$59cf97c6547d922bec0f2944c17e2364$var$centroidPointRing","$e2b58577f7ecf9ca9b04097e20426122$export$default","_radius","pointRadius","$f7e7f619a9b60c589633495a8f01f250$var$lengthRing","$f7e7f619a9b60c589633495a8f01f250$var$x00","$f7e7f619a9b60c589633495a8f01f250$var$y00","$f7e7f619a9b60c589633495a8f01f250$var$x0","$f7e7f619a9b60c589633495a8f01f250$var$y0","$f7e7f619a9b60c589633495a8f01f250$var$lengthSum","$f7e7f619a9b60c589633495a8f01f250$export$default","$f7e7f619a9b60c589633495a8f01f250$var$lengthPointFirst","$f7e7f619a9b60c589633495a8f01f250$var$lengthPoint","$28c51be7c302e48d320974e29f53c5b5$export$default","_string","$28c51be7c302e48d320974e29f53c5b5$var$circle","_circle","projection","projectionStream","contextStream","measure","$b2bc82659d6fbb0af972f27d5c1101d4$export$default","lines","rejoin","$5a32e4e5d73c417ec8946c8d7a7a9e60$var$Intersection","other","segments","compareIntersection","startInside","subject","segment","$5a32e4e5d73c417ec8946c8d7a7a9e60$var$link","isSubject","$6b4a3d299c739347b256ebd1441adebb$var$longitude","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","winding","point0","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","point1","phi1","absDelta","intersection","phiArc","$0574f1906c7f9ff90f5aa63f69bb3b0f$var$compareIntersection","pointLine","ringSegments","$0574f1906c7f9ff90f5aa63f69bb3b0f$var$validSegment","sign0","sign1","sinLambda0Lambda1","$fd3be7aac6ac4501b299d31cd319f8a0$var$clipAntimeridianIntersect","direction","$fd3be7aac6ac4501b299d31cd319f8a0$var$clipAntimeridianInterpolate","compose","$126861e078cb98b36b2e0555849f2c33$var$rotationIdentity","$126861e078cb98b36b2e0555849f2c33$export$rotateRadians","deltaLambda","deltaPhi","deltaGamma","$126861e078cb98b36b2e0555849f2c33$var$rotationLambda","$126861e078cb98b36b2e0555849f2c33$var$rotationPhiGamma","$126861e078cb98b36b2e0555849f2c33$var$forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","$f13318b38a5482862e072d4f872156ad$var$circleRadius","cosRadius","cr","smallRadius","notHemisphere","visible","two","n2","pa","pb","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","c0","v00","point2","sinRadius","$2649671c2ae93c5cc02e95ad7f190876$var$clipMax","$2649671c2ae93c5cc02e95ad7f190876$var$clipMin","$2649671c2ae93c5cc02e95ad7f190876$export$default","corner","comparePoint","ca","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","$343b104d8816473a102c2a74bf287b8d$export$transformer","methods","$343b104d8816473a102c2a74bf287b8d$var$TransformStream","$9cdd5bee3b29f540410a07f8f303b83c$var$fit","fitBounds","clipExtent","$9cdd5bee3b29f540410a07f8f303b83c$export$fitExtent","$9cdd5bee3b29f540410a07f8f303b83c$export$fitSize","$9cdd5bee3b29f540410a07f8f303b83c$export$fitWidth","$9cdd5bee3b29f540410a07f8f303b83c$export$fitHeight","$2ba847e9eb1eab6d259759f2d3d16476$var$cosMinDistance","project","delta2","resampleLineTo","depth","phi2","lambda2","dx2","dy2","dz","lambda00","b00","c00","resampleStream","ringPoint","$2ba847e9eb1eab6d259759f2d3d16476$var$resample","$2ba847e9eb1eab6d259759f2d3d16476$var$resampleNone","$1f68932d64cd458d2117d358453666dd$var$transformRadians","$1f68932d64cd458d2117d358453666dd$var$scaleTranslateRotate","$1f68932d64cd458d2117d358453666dd$var$scaleTranslate","cosAlpha","sinAlpha","ai","fi","$1f68932d64cd458d2117d358453666dd$export$default","$1f68932d64cd458d2117d358453666dd$export$projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cacheStream","preclip","postclip","recenter","$1f68932d64cd458d2117d358453666dd$var$transformRotate","clipAngle","$fd3be7aac6ac4501b299d31cd319f8a0$export$default","reflectX","reflectY","fitExtent","fitSize","fitWidth","fitHeight","$d7798acf0152e9f449500e5b2276c21f$export$conicProjection","parallels","$340415af05a537def66230ed4b4eba68$export$conicEqualAreaRaw","sy0","forward","r0y","$5d19a2bd98a65e1720338007c907121d$export$azimuthalRaw","$5d19a2bd98a65e1720338007c907121d$export$azimuthalInvert","cc","$8fe5ce7a857a818054a98c4871b061da$export$azimuthalEqualAreaRaw","cxcy","$f7af44c92f68cdd63c1444ccc3d17eed$export$azimuthalEquidistantRaw","$c42a3ea46a2fbac0d0bdc6ea422cba11$export$mercatorRaw","$c42a3ea46a2fbac0d0bdc6ea422cba11$export$mercatorProjection","reclip","$7acf612118c8cdd0a70756dc5b0faada$var$tany","$7acf612118c8cdd0a70756dc5b0faada$export$conicConformalRaw","$528574aa5b0f9b76ff3b957c578ef925$export$equirectangularRaw","$510c58ced9b1b06863826324429bfa1a$export$conicEquidistantRaw","nx","$87ca9ba65a501da0a067208a5de0a887$var$A1","$87ca9ba65a501da0a067208a5de0a887$var$A2","$87ca9ba65a501da0a067208a5de0a887$var$A3","$87ca9ba65a501da0a067208a5de0a887$var$A4","$87ca9ba65a501da0a067208a5de0a887$var$M","$87ca9ba65a501da0a067208a5de0a887$export$equalEarthRaw","l2","l6","$609c8132488d4c0e91abe6f49994e06f$export$gnomonicRaw","$40dd6abe9c21f53d7831c93f6f58b461$export$naturalEarth1Raw","phi4","$8542f9eb59812174aed09e09050ca236$export$orthographicRaw","$3e4382833dbdd15194c20674dcb4b9cb$export$stereographicRaw","$2b2aba17f282032e1e53a14db1f22789$export$transverseMercatorRaw","$5d350ca4f0a41d4553871d93dc197de2$export$abs","$5d350ca4f0a41d4553871d93dc197de2$export$cos","$5d350ca4f0a41d4553871d93dc197de2$export$sin","$5d350ca4f0a41d4553871d93dc197de2$export$pi","$5d350ca4f0a41d4553871d93dc197de2$export$halfPi","$5d350ca4f0a41d4553871d93dc197de2$export$sqrt2","SQRT1_2","$5d350ca4f0a41d4553871d93dc197de2$export$sqrt","$5d350ca4f0a41d4553871d93dc197de2$export$asin","$d50f300a7f1495941c933207a258d541$export$mollweideBromleyTheta","cp","cpsinPhi","$d50f300a7f1495941c933207a258d541$export$mollweideRaw","$d50f300a7f1495941c933207a258d541$export$mollweideBromleyRaw","$7d5be018dcd76f56cfe83eadc2b53ca2$var$defaultPath","$7d5be018dcd76f56cfe83eadc2b53ca2$export$projectionProperties","$7d5be018dcd76f56cfe83eadc2b53ca2$var$create","$7d5be018dcd76f56cfe83eadc2b53ca2$export$projection","proj","$7d5be018dcd76f56cfe83eadc2b53ca2$var$projections","$7d5be018dcd76f56cfe83eadc2b53ca2$export$getProjectionPath","albers","albersusa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","$852f50479ccef5ee645e1951549e5e96$var$multiplex","azimuthalequalarea","azimuthalequidistant","conicconformal","conicequalarea","conicequidistant","equalEarth","equirectangular","gnomonic","identity","mercator","mollweide","naturalEarth1","orthographic","stereographic","transversemercator","$3c934719a3779ebb2f71a0cd4b77ea54$var$noop","$3c934719a3779ebb2f71a0cd4b77ea54$var$cases","$3c934719a3779ebb2f71a0cd4b77ea54$var$contours","smoothLinear","contours","contour","polygons","holes","stitch","startIndex","endIndex","isorings","$3c934719a3779ebb2f71a0cd4b77ea54$var$area","hole","$3c934719a3779ebb2f71a0cd4b77ea54$var$contains","xt","yt","_0","$3c934719a3779ebb2f71a0cd4b77ea54$var$ringContains","pi","xi","yi","pj","xj","yj","$3c934719a3779ebb2f71a0cd4b77ea54$var$segmentContains","$3c934719a3779ebb2f71a0cd4b77ea54$var$collinear","$3c934719a3779ebb2f71a0cd4b77ea54$var$quantize","$3c934719a3779ebb2f71a0cd4b77ea54$export$isocontour","$3c934719a3779ebb2f71a0cd4b77ea54$var$transform","flip","transformPolygon","transformRing","$3c934719a3779ebb2f71a0cd4b77ea54$var$radius","bw","$3c934719a3779ebb2f71a0cd4b77ea54$var$number","$3c934719a3779ebb2f71a0cd4b77ea54$var$density2D","weight","values0","Float32Array","values1","$3c934719a3779ebb2f71a0cd4b77ea54$var$blurX","$3c934719a3779ebb2f71a0cd4b77ea54$var$blurY","sz","cellSize","$3c934719a3779ebb2f71a0cd4b77ea54$export$kde2d","levels","$3c934719a3779ebb2f71a0cd4b77ea54$var$levels","paths","$3c934719a3779ebb2f71a0cd4b77ea54$var$transformPaths","$3c934719a3779ebb2f71a0cd4b77ea54$var$PARAMS","$3c934719a3779ebb2f71a0cd4b77ea54$var$params","$3c934719a3779ebb2f71a0cd4b77ea54$export$contour","$3c934719a3779ebb2f71a0cd4b77ea54$var$partition","post","$3c934719a3779ebb2f71a0cd4b77ea54$var$Feature","$3c934719a3779ebb2f71a0cd4b77ea54$var$FeatureCollection","$3c934719a3779ebb2f71a0cd4b77ea54$export$geojson","$3c934719a3779ebb2f71a0cd4b77ea54$export$geopath","$3c934719a3779ebb2f71a0cd4b77ea54$export$geopoint","$3c934719a3779ebb2f71a0cd4b77ea54$export$geoshape","$3c934719a3779ebb2f71a0cd4b77ea54$export$graticule","X1","X0","Y1","Y0","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","$3c934719a3779ebb2f71a0cd4b77ea54$export$heatmap","$3c934719a3779ebb2f71a0cd4b77ea54$var$dependency","$x","$y","$value","$max","$3c934719a3779ebb2f71a0cd4b77ea54$export$projection","$3c934719a3779ebb2f71a0cd4b77ea54$var$set","_features","_points","lon","lat","geojson","$3c934719a3779ebb2f71a0cd4b77ea54$var$initPath","xy","$3c934719a3779ebb2f71a0cd4b77ea54$var$shapeGenerator","dep","$3c934719a3779ebb2f71a0cd4b77ea54$var$opacity_","$3c934719a3779ebb2f71a0cd4b77ea54$var$color_","can","getImageData","pix","putImageData","$3c934719a3779ebb2f71a0cd4b77ea54$var$toCanvas","$3c934719a3779ebb2f71a0cd4b77ea54$var$create","fit","$3c934719a3779ebb2f71a0cd4b77ea54$var$featurize","$3c934719a3779ebb2f71a0cd4b77ea54$var$collectGeoJSON","$3c934719a3779ebb2f71a0cd4b77ea54$var$fit","$da07e71b61d21d5c9bfe83923b2606c2$var$add","tree","xm","ym","xp","yp","leaf","$392179fb2eb514b833ecc03d96fe1266$export$defaultX","$fe54d6eabf60f95a59cffe81389cb377$export$defaultY","$c5f29abf0ec0ba92a3ace6d4b52f964b$export$default","$c5f29abf0ec0ba92a3ace6d4b52f964b$var$Quadtree","$c5f29abf0ec0ba92a3ace6d4b52f964b$var$leaf_copy","$c5f29abf0ec0ba92a3ace6d4b52f964b$var$treeProto","cover","yz","find","quads","retainer","removeAll","visitAfter","$c50c6067310e9e7185c1d8f7533169f2$var$x","vx","$c50c6067310e9e7185c1d8f7533169f2$var$y","vy","$f6ef9f7669370f97a766f0f2b159a3a8$var$index","$f6ef9f7669370f97a766f0f2b159a3a8$var$find","nodeById","nodeId","$0a3cf126295c9be11964f0e9d0a61055$var$noop","$0a3cf126295c9be11964f0e9d0a61055$export$default","$0a3cf126295c9be11964f0e9d0a61055$var$Dispatch","$0a3cf126295c9be11964f0e9d0a61055$var$parseTypenames","typenames","$0a3cf126295c9be11964f0e9d0a61055$var$get","$0a3cf126295c9be11964f0e9d0a61055$var$set","typename","T","$fdd72b4939ab5154371ba9928bcd03d6$var$taskHead","$fdd72b4939ab5154371ba9928bcd03d6$var$taskTail","$fdd72b4939ab5154371ba9928bcd03d6$var$frame","$fdd72b4939ab5154371ba9928bcd03d6$var$timeout","$fdd72b4939ab5154371ba9928bcd03d6$var$interval","$fdd72b4939ab5154371ba9928bcd03d6$var$clockLast","$fdd72b4939ab5154371ba9928bcd03d6$var$clockNow","$fdd72b4939ab5154371ba9928bcd03d6$var$clockSkew","$fdd72b4939ab5154371ba9928bcd03d6$var$clock","$fdd72b4939ab5154371ba9928bcd03d6$var$setFrame","$fdd72b4939ab5154371ba9928bcd03d6$export$now","$fdd72b4939ab5154371ba9928bcd03d6$var$clearNow","$fdd72b4939ab5154371ba9928bcd03d6$export$Timer","_time","_next","$fdd72b4939ab5154371ba9928bcd03d6$export$timer","restart","$fdd72b4939ab5154371ba9928bcd03d6$var$wake","$fdd72b4939ab5154371ba9928bcd03d6$export$timerFlush","$fdd72b4939ab5154371ba9928bcd03d6$var$sleep","$fdd72b4939ab5154371ba9928bcd03d6$var$nap","$fdd72b4939ab5154371ba9928bcd03d6$var$poke","clearInterval","setInterval","$d7aa03729dde221f1228c89eee3bf6cd$var$m","$e455d5d2e347202a6570e44075e49873$export$x","$e455d5d2e347202a6570e44075e49873$export$y","$e455d5d2e347202a6570e44075e49873$var$initialAngle","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","tick","iterations","initializeNodes","initializeForce","randomSource","closest","$961d2315b9c6f25eaec5ca0e099196fc$var$ForceMap","strength","collide","radii","ri","ri2","prepare","quad","rj","_nodes","_random","nbody","strengths","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","links","distances","bias","distance","initializeStrength","initializeDistance","$961d2315b9c6f25eaec5ca0e099196fc$var$Forces","$961d2315b9c6f25eaec5ca0e099196fc$var$ForceParams","$961d2315b9c6f25eaec5ca0e099196fc$var$ForceConfig","$961d2315b9c6f25eaec5ca0e099196fc$var$ForceOutput","$961d2315b9c6f25eaec5ca0e099196fc$export$force","$961d2315b9c6f25eaec5ca0e099196fc$var$setup","sim","$961d2315b9c6f25eaec5ca0e099196fc$var$getForce","$961d2315b9c6f25eaec5ca0e099196fc$var$modified","numForces","$961d2315b9c6f25eaec5ca0e099196fc$var$setForceParam","change","iters","stopped","$961d2315b9c6f25eaec5ca0e099196fc$var$simulation","static","finish","$273f035812eae165bfcf0a2c49aa38a7$var$defaultSeparation","$273f035812eae165bfcf0a2c49aa38a7$var$meanXReduce","$273f035812eae165bfcf0a2c49aa38a7$var$maxYReduce","$410cc333f511d241a1d1b0fe01e31120$var$count","$596446fe199ea0da350f927eb40329f4$export$default","$596446fe199ea0da350f927eb40329f4$var$mapChildren","$596446fe199ea0da350f927eb40329f4$var$objectChildren","childs","$596446fe199ea0da350f927eb40329f4$export$Node","eachBefore","$596446fe199ea0da350f927eb40329f4$export$computeHeight","$596446fe199ea0da350f927eb40329f4$var$copyData","eachAfter","each","ancestor","aNodes","ancestors","bNodes","$d250144c825d15a9c398dfba46060c5c$var$leastCommonAncestor","descendants","leaves","circles","$6dee1548ec8b0a6e98b10ceb9b90f516$var$enclosesWeak","$6dee1548ec8b0a6e98b10ceb9b90f516$var$encloseBasis","$6dee1548ec8b0a6e98b10ceb9b90f516$var$extendBasis","$6dee1548ec8b0a6e98b10ceb9b90f516$var$enclosesWeakAll","$6dee1548ec8b0a6e98b10ceb9b90f516$var$enclosesNot","$6dee1548ec8b0a6e98b10ceb9b90f516$var$encloseBasis2","$6dee1548ec8b0a6e98b10ceb9b90f516$var$encloseBasis3","dr","r21","r3","a2","a3","b2","b3","c3","d3","ab","$744108ac5681ca899f863f25dc417635$var$place","$744108ac5681ca899f863f25dc417635$var$intersects","$744108ac5681ca899f863f25dc417635$var$score","$744108ac5681ca899f863f25dc417635$var$Node","$744108ac5681ca899f863f25dc417635$export$packEnclose","aa","sj","sk","pack","$3a671a952db64a50a73308fc3f230c99$export$optional","$3a671a952db64a50a73308fc3f230c99$export$required","$8c40aaaf6343dfbc751d823a21be38b7$export$constantZero","$21ed4a591717e4f8f1a0b6e8eb473ba6$var$defaultRadius","$21ed4a591717e4f8f1a0b6e8eb473ba6$var$radiusLeaf","$21ed4a591717e4f8f1a0b6e8eb473ba6$var$packChildren","$21ed4a591717e4f8f1a0b6e8eb473ba6$var$translateChild","$61a3ffa533537a6ffcbc893c4887bff8$var$preroot","$61a3ffa533537a6ffcbc893c4887bff8$var$ambiguous","$61a3ffa533537a6ffcbc893c4887bff8$var$defaultId","$61a3ffa533537a6ffcbc893c4887bff8$var$defaultParentId","parentId","stratify","nodeKey","nodeByKey","$555f9f9397aa7c284d7abf516cf66305$var$defaultSeparation","$555f9f9397aa7c284d7abf516cf66305$var$nextLeft","$555f9f9397aa7c284d7abf516cf66305$var$nextRight","$555f9f9397aa7c284d7abf516cf66305$var$moveSubtree","wm","wp","$555f9f9397aa7c284d7abf516cf66305$var$nextAncestor","vim","$555f9f9397aa7c284d7abf516cf66305$var$TreeNode","$677756922481f922a17f68c0c37e9715$export$phi","$677756922481f922a17f68c0c37e9715$export$squarifyRatio","sumValue","minValue","maxValue","newRatio","minRatio","dice","squarify","resquarify","_squarify","$fd13e752e640f7792448978cb6e56e36$var$lookup","$fd13e752e640f7792448978cb6e56e36$export$nest","treesource","$fd13e752e640f7792448978cb6e56e36$var$children","$fd13e752e640f7792448978cb6e56e36$var$nest","nest","valuesByKey","keyValue","$fd13e752e640f7792448978cb6e56e36$var$HierarchyLayout","$fd13e752e640f7792448978cb6e56e36$var$defaultSeparation","$fd13e752e640f7792448978cb6e56e36$var$setParams","$fd13e752e640f7792448978cb6e56e36$var$setFields","$fd13e752e640f7792448978cb6e56e36$var$Output","$fd13e752e640f7792448978cb6e56e36$export$pack","$fd13e752e640f7792448978cb6e56e36$var$Output$1","$fd13e752e640f7792448978cb6e56e36$export$partition","$fd13e752e640f7792448978cb6e56e36$export$stratify","partition","positionNode","parentKey","$fd13e752e640f7792448978cb6e56e36$var$Layouts","tidy","nodeSize","$555f9f9397aa7c284d7abf516cf66305$var$treeRoot","firstWalk","secondWalk","sizeNode","siblings","$555f9f9397aa7c284d7abf516cf66305$var$executeShifts","midpoint","vip","vop","vom","sip","sop","som","apportion","cluster","previousNode","$273f035812eae165bfcf0a2c49aa38a7$var$meanX","$273f035812eae165bfcf0a2c49aa38a7$var$maxY","$273f035812eae165bfcf0a2c49aa38a7$var$leafLeft","$273f035812eae165bfcf0a2c49aa38a7$var$leafRight","$fd13e752e640f7792448978cb6e56e36$var$Output$2","$fd13e752e640f7792448978cb6e56e36$export$tree","$fd13e752e640f7792448978cb6e56e36$export$treelinks","$fd13e752e640f7792448978cb6e56e36$var$Tiles","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","slicedice","$5bb7ff82659f57cdf77b78a48b751bc9$export$default","$08e1028932d2e407bd5ca758447f4ad8$export$default","$fd13e752e640f7792448978cb6e56e36$var$Output$3","$fd13e752e640f7792448978cb6e56e36$export$treemap","tile","paddingStack","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$markBitmaps","avoidMarks","labelInside","isGroupArea","border","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$draw","Uint32Array","layer1","bitmap","layer2","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$prepare","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$MOD","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$RIGHT0","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$SIZE","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$RIGHT1","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$scaler","_set","_clear","getRange","indexStart","indexEnd","setRange","clearRange","outOfBounds","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Bitmap","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$outOfBounds","textWidth","textHeight","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$collision","bm0","bm1","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$X_DIR","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Y_DIR","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Aligns","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Baselines","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$test","boundary","isInside","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$isInMarkBound","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$anchorCode","top-left","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$TOP","top-right","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$MIDDLE","middle","bottom-left","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$BOTTOM","bottom-right","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$placeAreaLabel","naive","bitmaps","avoidBaseMark","markIndex","areaWidth","maxAreaWidth","reduced-search","tryLabel","maxSize","_xMid","_yMid","swapTmp","labelPlaced","labelPlaced2","floodfill","bm2","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$labelLayout","texts","lineAnchor","positions","offsets","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$getOffsets","anchors","Int8Array","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$getAnchors","grouptype","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$markBoundary","isNaiveGroupArea","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$baseBitmaps","place","sizeFactor","insideFactor","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$placeMarkLabel","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Output","$d986c3ac3d3409c7d7c6afc2dfaf85b5$var$Anchors","$d986c3ac3d3409c7d7c6afc2dfaf85b5$export$label","$e27d99305237898cbbe4a56555ee8118$var$partition","$e27d99305237898cbbe4a56555ee8118$export$loess","yhat","residuals","robustWeights","iter","$0c80be4584256ba564ee0c4ecbbd25f3$var$maxiters","denom","xkw","medianResidual","$0c80be4584256ba564ee0c4ecbbd25f3$var$epsilon","$0c80be4584256ba564ee0c4ecbbd25f3$var$output","$e27d99305237898cbbe4a56555ee8118$var$Methods","ly","YL","XYL","YS","lx","poly","lhs","rhs","$0c80be4584256ba564ee0c4ecbbd25f3$var$gaussianElimination","$e27d99305237898cbbe4a56555ee8118$export$regression","dof","$e27d99305237898cbbe4a56555ee8118$var$degreesOfFreedom","model","dom","$644d3391b19aaef4b73a143a6bc978dd$var$EPSILON","$644d3391b19aaef4b73a143a6bc978dd$var$EDGE_STACK","$644d3391b19aaef4b73a143a6bc978dd$export$default","getX","$644d3391b19aaef4b73a143a6bc978dd$var$defaultGetX","getY","$644d3391b19aaef4b73a143a6bc978dd$var$defaultGetY","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","hullPrev","hullNext","hullTri","hullHash","minY","maxY","i2","minDist","$644d3391b19aaef4b73a143a6bc978dd$var$dist","i0x","i0y","i1x","i1y","minRadius","$644d3391b19aaef4b73a143a6bc978dd$var$circumradius","i2x","i2y","$644d3391b19aaef4b73a143a6bc978dd$var$quicksort","hull","triangles","halfedges","$644d3391b19aaef4b73a143a6bc978dd$var$orient","cl","$644d3391b19aaef4b73a143a6bc978dd$var$circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","_legalize","$644d3391b19aaef4b73a143a6bc978dd$var$pseudoAngle","ar","al","$644d3391b19aaef4b73a143a6bc978dd$var$inCircle","illegal","hbl","_link","$644d3391b19aaef4b73a143a6bc978dd$var$orientIfSure","qx","qy","bp","temp","tempDist","$644d3391b19aaef4b73a143a6bc978dd$var$swap","$60c03ef51eb50d2e187477780e8a991c$var$epsilon","$60c03ef51eb50d2e187477780e8a991c$export$default","$62e871b091ca7320507cf49156adf3e1$export$default","$07ccce648c5d6c9920b684b516f842c6$export$default","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","circumcenters","inedges","ti","tj","_renderSegment","_project","renderBounds","renderCell","_clip","cellPolygon","_regioncode","_clipSegment","_step","neighbors","cj","loop","li","aj","lj","_cell","e0","_clipInfinite","_clipFinite","e1","P","sx0","sx1","sy1","_edgecode","_edge","vx0","vy0","vxn","vyn","$9bbc088b09af34b6ba4a2f4335dbb67d$var$tau","$9bbc088b09af34b6ba4a2f4335dbb67d$var$pow","$9bbc088b09af34b6ba4a2f4335dbb67d$var$pointX","$9bbc088b09af34b6ba4a2f4335dbb67d$var$pointY","$9bbc088b09af34b6ba4a2f4335dbb67d$var$jitter","$9bbc088b09af34b6ba4a2f4335dbb67d$export$default","$9bbc088b09af34b6ba4a2f4335dbb67d$var$flatArray","$9bbc088b09af34b6ba4a2f4335dbb67d$var$flatIterable","_delaunator","_hullIndex","$9bbc088b09af34b6ba4a2f4335dbb67d$var$collinear","collinear","hullIndex","voronoi","dc","renderHull","renderPoints","hullPolygon","renderTriangle","trianglePolygon","$b0dbd63ee65c9c7f0f664f340dc8c80c$export$voronoi","$b0dbd63ee65c9c7f0f664f340dc8c80c$var$defaultExtent","$b0dbd63ee65c9c7f0f664f340dc8c80c$var$toPathString","$ab6683154a1405b4e04be0fc88b6746d$var$cloudRadians","$ab6683154a1405b4e04be0fc88b6746d$var$ch","$ab6683154a1405b4e04be0fc88b6746d$var$cloud","spiral","$ab6683154a1405b4e04be0fc88b6746d$var$archimedeanSpiral","words","cloud","board","dxdy","startX","startY","maxDelta","$ab6683154a1405b4e04be0fc88b6746d$var$cloudCollide","sprite","msx","contextAndRatio","$ab6683154a1405b4e04be0fc88b6746d$var$zeroArray","tags","xoff","yoff","hasText","$ab6683154a1405b4e04be0fc88b6746d$var$cloudSprite","$ab6683154a1405b4e04be0fc88b6746d$var$cloudBounds","$ab6683154a1405b4e04be0fc88b6746d$var$functor","$ab6683154a1405b4e04be0fc88b6746d$var$spirals","di","w32","maxh","wcr","wsr","hcr","hsr","$ab6683154a1405b4e04be0fc88b6746d$var$cw","pixels","seen","seenRow","archimedean","rectangular","$ab6683154a1405b4e04be0fc88b6746d$var$Output","$ab6683154a1405b4e04be0fc88b6746d$var$Params","$ab6683154a1405b4e04be0fc88b6746d$export$wordcloud","fontSizeRange","fsize","sizeScale","$16bd1d6bb1ea9b436fce673855466b8e$var$array8","$16bd1d6bb1ea9b436fce673855466b8e$var$array16","Uint16Array","$16bd1d6bb1ea9b436fce673855466b8e$var$array32","$16bd1d6bb1ea9b436fce673855466b8e$var$array","$16bd1d6bb1ea9b436fce673855466b8e$var$Dimension","query","one","onAdd","added","dim","$16bd1d6bb1ea9b436fce673855466b8e$var$SortedIndex","addi","oldv","oldi","addv","$16bd1d6bb1ea9b436fce673855466b8e$var$sort","index0","index1","$16bd1d6bb1ea9b436fce673855466b8e$var$merge","reindex","$16bd1d6bb1ea9b436fce673855466b8e$export$crossfilter","_index","$16bd1d6bb1ea9b436fce673855466b8e$var$Bitmaps","_indices","$16bd1d6bb1ea9b436fce673855466b8e$export$resolvefilter","reinit","eval","bits","remMap","modMap","indexMap","filters","incrementOne","incrementAll","old","lo1","hi1","lo0","hi0","ignore","pass","$a1831e04698330eea0fd1059fd52a267$export$RawCode","$a1831e04698330eea0fd1059fd52a267$export$Literal","$a1831e04698330eea0fd1059fd52a267$export$Property","$a1831e04698330eea0fd1059fd52a267$export$Identifier","$a1831e04698330eea0fd1059fd52a267$export$ArrayExpression","$a1831e04698330eea0fd1059fd52a267$export$BinaryExpression","$a1831e04698330eea0fd1059fd52a267$export$CallExpression","$a1831e04698330eea0fd1059fd52a267$export$ConditionalExpression","$a1831e04698330eea0fd1059fd52a267$export$LogicalExpression","$a1831e04698330eea0fd1059fd52a267$export$MemberExpression","$a1831e04698330eea0fd1059fd52a267$export$ObjectExpression","$a1831e04698330eea0fd1059fd52a267$export$UnaryExpression","$a1831e04698330eea0fd1059fd52a267$export$ASTNode","$a1831e04698330eea0fd1059fd52a267$var$TokenName","$a1831e04698330eea0fd1059fd52a267$var$source","$a1831e04698330eea0fd1059fd52a267$var$index","$a1831e04698330eea0fd1059fd52a267$var$length","$a1831e04698330eea0fd1059fd52a267$var$lookahead","elements","callee","consequent","argument","$a1831e04698330eea0fd1059fd52a267$var$children","$a1831e04698330eea0fd1059fd52a267$var$SyntaxIdentifier","$a1831e04698330eea0fd1059fd52a267$var$MessageUnexpectedToken","$a1831e04698330eea0fd1059fd52a267$var$MessageInvalidRegExp","$a1831e04698330eea0fd1059fd52a267$var$MessageUnterminatedRegExp","$a1831e04698330eea0fd1059fd52a267$var$MessageStrictOctalLiteral","$a1831e04698330eea0fd1059fd52a267$var$ILLEGAL","$a1831e04698330eea0fd1059fd52a267$var$DISABLED","$a1831e04698330eea0fd1059fd52a267$var$RegexNonAsciiIdentifierStart","$a1831e04698330eea0fd1059fd52a267$var$RegexNonAsciiIdentifierPart","$a1831e04698330eea0fd1059fd52a267$var$assert","condition","$a1831e04698330eea0fd1059fd52a267$var$isDecimalDigit","ch","$a1831e04698330eea0fd1059fd52a267$var$isHexDigit","$a1831e04698330eea0fd1059fd52a267$var$isOctalDigit","$a1831e04698330eea0fd1059fd52a267$var$isWhiteSpace","$a1831e04698330eea0fd1059fd52a267$var$isLineTerminator","$a1831e04698330eea0fd1059fd52a267$var$isIdentifierStart","$a1831e04698330eea0fd1059fd52a267$var$isIdentifierPart","$a1831e04698330eea0fd1059fd52a267$var$keywords","if","in","do","var","new","try","let","else","void","with","enum","while","break","throw","const","yield","super","typeof","switch","export","import","public","finally","extends","package","private","continue","debugger","interface","protected","instanceof","implements","$a1831e04698330eea0fd1059fd52a267$var$skipComment","$a1831e04698330eea0fd1059fd52a267$var$scanHexEscape","$a1831e04698330eea0fd1059fd52a267$var$throwError","$a1831e04698330eea0fd1059fd52a267$var$scanUnicodeCodePointEscape","cu1","cu2","$a1831e04698330eea0fd1059fd52a267$var$getEscapedIdentifier","$a1831e04698330eea0fd1059fd52a267$var$scanIdentifier","$a1831e04698330eea0fd1059fd52a267$var$getIdentifier","$a1831e04698330eea0fd1059fd52a267$var$scanPunctuator","code2","ch2","ch3","ch4","ch1","$a1831e04698330eea0fd1059fd52a267$var$scanNumericLiteral","$a1831e04698330eea0fd1059fd52a267$var$scanHexLiteral","octal","$a1831e04698330eea0fd1059fd52a267$var$scanOctalLiteral","parseFloat","$a1831e04698330eea0fd1059fd52a267$var$scanRegExp","classMarker","terminated","literal","$a1831e04698330eea0fd1059fd52a267$var$scanRegExpBody","$a1831e04698330eea0fd1059fd52a267$var$scanRegExpFlags","$0","$1","exception","$a1831e04698330eea0fd1059fd52a267$var$testRegExp","regex","$a1831e04698330eea0fd1059fd52a267$var$advance","$a1831e04698330eea0fd1059fd52a267$var$scanStringLiteral","$a1831e04698330eea0fd1059fd52a267$var$lex","$a1831e04698330eea0fd1059fd52a267$var$peek","$a1831e04698330eea0fd1059fd52a267$var$finishBinaryExpression","operator","$a1831e04698330eea0fd1059fd52a267$var$finishCallExpression","$a1831e04698330eea0fd1059fd52a267$var$finishIdentifier","$a1831e04698330eea0fd1059fd52a267$var$finishLiteral","$a1831e04698330eea0fd1059fd52a267$var$finishMemberExpression","accessor","computed","member","$a1831e04698330eea0fd1059fd52a267$var$finishProperty","kind","messageFormat","msg","whole","$a1831e04698330eea0fd1059fd52a267$var$throwUnexpected","$a1831e04698330eea0fd1059fd52a267$var$expect","$a1831e04698330eea0fd1059fd52a267$var$match","$a1831e04698330eea0fd1059fd52a267$var$matchKeyword","keyword","$a1831e04698330eea0fd1059fd52a267$var$parseArrayInitialiser","$a1831e04698330eea0fd1059fd52a267$var$parseConditionalExpression","$a1831e04698330eea0fd1059fd52a267$var$finishArrayExpression","$a1831e04698330eea0fd1059fd52a267$var$parseObjectPropertyKey","$a1831e04698330eea0fd1059fd52a267$var$parseObjectProperty","$a1831e04698330eea0fd1059fd52a267$var$parseObjectInitialiser","$a1831e04698330eea0fd1059fd52a267$var$finishObjectExpression","$a1831e04698330eea0fd1059fd52a267$var$legalKeywords","$a1831e04698330eea0fd1059fd52a267$var$parsePrimaryExpression","$a1831e04698330eea0fd1059fd52a267$var$parseExpression","$a1831e04698330eea0fd1059fd52a267$var$parseGroupExpression","$a1831e04698330eea0fd1059fd52a267$var$parseArguments","$a1831e04698330eea0fd1059fd52a267$var$parseNonComputedMember","$a1831e04698330eea0fd1059fd52a267$var$isIdentifierName","$a1831e04698330eea0fd1059fd52a267$var$parseNonComputedProperty","$a1831e04698330eea0fd1059fd52a267$var$parseComputedMember","$a1831e04698330eea0fd1059fd52a267$var$parsePostfixExpression","$a1831e04698330eea0fd1059fd52a267$var$parseLeftHandSideExpressionAllowCall","$a1831e04698330eea0fd1059fd52a267$var$parseUnaryExpression","$a1831e04698330eea0fd1059fd52a267$var$finishUnaryExpression","$a1831e04698330eea0fd1059fd52a267$var$binaryPrecedence","prec","marker","markers","$a1831e04698330eea0fd1059fd52a267$var$parseBinaryExpression","$a1831e04698330eea0fd1059fd52a267$var$finishConditionalExpression","$a1831e04698330eea0fd1059fd52a267$export$constants","LOG2E","LOG10E","MIN_VALUE","$a1831e04698330eea0fd1059fd52a267$export$functions","codegen","cast","fncall","DATE","STRING","REGEXP","timezoneoffset","utcdate","utcday","utcyear","utcmonth","utchours","utcminutes","utcseconds","utcmilliseconds","upper","lower","regexp","$72a83801204fd15412388c796f5e26ea$var$Intersect","$72a83801204fd15412388c796f5e26ea$var$Union","$72a83801204fd15412388c796f5e26ea$var$testPoint","dval","getter","$72a83801204fd15412388c796f5e26ea$var$selectionId","$72a83801204fd15412388c796f5e26ea$var$bisect","$72a83801204fd15412388c796f5e26ea$var$ascending","$72a83801204fd15412388c796f5e26ea$var$ascendingComparator","$72a83801204fd15412388c796f5e26ea$var$bisector","$72a83801204fd15412388c796f5e26ea$var$bisectLeft","$72a83801204fd15412388c796f5e26ea$var$bisectRight","$72a83801204fd15412388c796f5e26ea$var$ops","E_union","E_intersect","R_union","R_intersect","$72a83801204fd15412388c796f5e26ea$export$selectionVisitor","scope","indexName","$72a83801204fd15412388c796f5e26ea$var$IndexPrefix","dataName","getData","indataRef","tuplesRef","$fc506986dfb267240fa928953d273d35$export$data","$fc506986dfb267240fa928953d273d35$var$wrap","$fc506986dfb267240fa928953d273d35$export$format","$fc506986dfb267240fa928953d273d35$export$timeFormat","$fc506986dfb267240fa928953d273d35$export$utcFormat","$fc506986dfb267240fa928953d273d35$export$timeParse","$fc506986dfb267240fa928953d273d35$export$utcParse","$fc506986dfb267240fa928953d273d35$var$dateObj","$fc506986dfb267240fa928953d273d35$var$time","setYear","$fc506986dfb267240fa928953d273d35$export$dataVisitor","$fc506986dfb267240fa928953d273d35$export$scaleVisitor","$fc506986dfb267240fa928953d273d35$var$addScaleDependency","scaleName","scaleRef","$fc506986dfb267240fa928953d273d35$var$getScale","$fc506986dfb267240fa928953d273d35$var$internalScaleFunctions","fnctx","visitors","__bandwidth","_bandwidth","_range","$fc506986dfb267240fa928953d273d35$var$geoMethod","methodName","globalMethod","$fc506986dfb267240fa928953d273d35$export$geoArea","$fc506986dfb267240fa928953d273d35$export$geoBounds","deltaMax","$fc506986dfb267240fa928953d273d35$export$geoCentroid","$fc506986dfb267240fa928953d273d35$var$log","$fc506986dfb267240fa928953d273d35$var$channel_luminance_value","channelValue","$fc506986dfb267240fa928953d273d35$export$luminance","$fc506986dfb267240fa928953d273d35$var$equal","$fc506986dfb267240fa928953d273d35$var$equalArray","$fc506986dfb267240fa928953d273d35$var$equalObject","$fc506986dfb267240fa928953d273d35$var$removePredicate","$fc506986dfb267240fa928953d273d35$var$accessors","$fc506986dfb267240fa928953d273d35$var$array","seq","$fc506986dfb267240fa928953d273d35$var$sequence","$fc506986dfb267240fa928953d273d35$var$datum","$fc506986dfb267240fa928953d273d35$var$treeNodes","$fc506986dfb267240fa928953d273d35$var$_window","$fc506986dfb267240fa928953d273d35$export$functionContext","cumulativeNormal","cumulativeLogNormal","cumulativeUniform","densityNormal","densityLogNormal","densityUniform","quantileNormal","quantileLogNormal","quantileUniform","sampleNormal","sampleLogNormal","sampleUniform","isBoolean","isDate","isDefined","isNumber","isObject","isRegExp","isString","isTuple","isValid","toBoolean","toDate","toNumber","indexof","lastindexof","repl","lerp","padchar","pluck","inrange","truncate","lab","hcl","hsl","luminance","contrast","color1","color2","lum1","lum2","sequence","utcOffset","utcSequence","timeOffset","timeSequence","timeUnitSpecifier","specifiers","monthFormat","monthAbbrevFormat","dayFormat","dayAbbrevFormat","utcquarter","utcweek","dayofyear","utcdayofyear","inScope","markname","$fc506986dfb267240fa928953d273d35$var$filter","clampRange","pinchDistance","pinchAngle","screen","containerSize","container","clientWidth","clientHeight","windowSize","innerWidth","innerHeight","bandspace","setdata","pathShape","panLinear","panLog","panPow","panSymlog","zoomLinear","zoomLog","zoomPow","zoomSymlog","retval","toggle","predicate","_trigger","$fc506986dfb267240fa928953d273d35$var$eventFunctions","$fc506986dfb267240fa928953d273d35$var$thisPrefix","$fc506986dfb267240fa928953d273d35$var$astVisitors","$fc506986dfb267240fa928953d273d35$export$codegenParams","forbidden","allowed","fieldvar","globalvar","functions","constants","$fc506986dfb267240fa928953d273d35$export$codeGenerator","outputGlobal","globals","memberDepth","ast","Generators","Literal","Identifier","MemberExpression","$a1831e04698330eea0fd1059fd52a267$var$stripQuotes","CallExpression","ArrayExpression","BinaryExpression","UnaryExpression","ConditionalExpression","LogicalExpression","ObjectExpression","Property","$fc506986dfb267240fa928953d273d35$export$expressionFunction","$fc506986dfb267240fa928953d273d35$export$parseExpression","signalName","getSignal","signalRef","$expr","$fields","$params","miss","unitIdx","$72a83801204fd15412388c796f5e26ea$var$UNIT_INDEX","isMulti","vl5","resUnit","resolved","multiRes","acc","$ceebc6599b2f703ba162babb74b04469$var$Skip","$ceebc6599b2f703ba162babb74b04469$var$Swap","$ceebc6599b2f703ba162babb74b04469$var$canonicalType","$ceebc6599b2f703ba162babb74b04469$var$expression","$ceebc6599b2f703ba162babb74b04469$var$expressionCodegen","parameter","$ceebc6599b2f703ba162babb74b04469$var$adjustSpatial","lt","gt","$ceebc6599b2f703ba162babb74b04469$var$_compare","$ceebc6599b2f703ba162babb74b04469$var$parseParameter","$ceebc6599b2f703ba162babb74b04469$var$PARSERS","$ref","$key","$flat","parseParameters","$name","parameterExpression","$field","$encode","enc","encodeExpression","$output","$compare","$order","$tupleid","$subflow","subctx","operators","signals","$ceebc6599b2f703ba162babb74b04469$var$SKIP","$ceebc6599b2f703ba162babb74b04469$var$Context","transforms","$ceebc6599b2f703ba162babb74b04469$var$Subcontext","$72491954418c2c33bca3f1405c55e57b$var$ariaLabel","subcontext","$ingest","$format","$request","unresolved","signal","operatorExpression","eventExpression","handlerExpression","eventConfig","parseOperator","parseOperatorParameters","parseStream","updates","parseUpdate","srcid","getState","dataset","substate","$72491954418c2c33bca3f1405c55e57b$var$Default","$72491954418c2c33bca3f1405c55e57b$var$setCursor","cursor","globalCursor","$72491954418c2c33bca3f1405c55e57b$var$dataref","_runtime","$72491954418c2c33bca3f1405c55e57b$var$change","$72491954418c2c33bca3f1405c55e57b$var$width","_viewWidth","$72491954418c2c33bca3f1405c55e57b$var$height","_viewHeight","$72491954418c2c33bca3f1405c55e57b$var$offset","$72491954418c2c33bca3f1405c55e57b$var$eventExtend","_renderer","vega","itemGroup","$72491954418c2c33bca3f1405c55e57b$var$extension","$72491954418c2c33bca3f1405c55e57b$var$VIEW","$72491954418c2c33bca3f1405c55e57b$var$NO_TRAP","trap","$72491954418c2c33bca3f1405c55e57b$var$trackEventListener","_eventListeners","$72491954418c2c33bca3f1405c55e57b$var$permit","_eventConfig","$72491954418c2c33bca3f1405c55e57b$var$itemFilter","$72491954418c2c33bca3f1405c55e57b$var$markTarget","$72491954418c2c33bca3f1405c55e57b$var$invoke","$72491954418c2c33bca3f1405c55e57b$var$element","$72491954418c2c33bca3f1405c55e57b$var$target","Event","$72491954418c2c33bca3f1405c55e57b$var$event","$72491954418c2c33bca3f1405c55e57b$var$generate","wrapper","$72491954418c2c33bca3f1405c55e57b$var$form","$72491954418c2c33bca3f1405c55e57b$var$checkbox","$72491954418c2c33bca3f1405c55e57b$var$select","$72491954418c2c33bca3f1405c55e57b$var$radio","$72491954418c2c33bca3f1405c55e57b$var$range","option","$72491954418c2c33bca3f1405c55e57b$var$valuesEqual","selectedIndex","prepend","$72491954418c2c33bca3f1405c55e57b$var$initializeRenderer","$72491954418c2c33bca3f1405c55e57b$var$trap","$72491954418c2c33bca3f1405c55e57b$var$lookup","querySelector","$72491954418c2c33bca3f1405c55e57b$var$number","$72491954418c2c33bca3f1405c55e57b$var$padding","$72491954418c2c33bca3f1405c55e57b$var$paddingObject","$72491954418c2c33bca3f1405c55e57b$var$renderHeadless","module","_scenegraph","$72491954418c2c33bca3f1405c55e57b$var$runtime","$72491954418c2c33bca3f1405c55e57b$var$Width","$72491954418c2c33bca3f1405c55e57b$var$Height","$72491954418c2c33bca3f1405c55e57b$var$Padding","$72491954418c2c33bca3f1405c55e57b$var$Skip","$72491954418c2c33bca3f1405c55e57b$var$viewWidth","$72491954418c2c33bca3f1405c55e57b$var$viewHeight","$72491954418c2c33bca3f1405c55e57b$var$dataTest","$72491954418c2c33bca3f1405c55e57b$var$signalTest","proxy","$72491954418c2c33bca3f1405c55e57b$var$defaultTooltip","$72491954418c2c33bca3f1405c55e57b$var$formatArray","$72491954418c2c33bca3f1405c55e57b$var$formatValue","$72491954418c2c33bca3f1405c55e57b$var$formatTooltip","$72491954418c2c33bca3f1405c55e57b$var$lookupSignal","$72491954418c2c33bca3f1405c55e57b$var$findOperatorHandler","$72491954418c2c33bca3f1405c55e57b$var$addOperatorListener","$72491954418c2c33bca3f1405c55e57b$var$removeOperatorListener","_elBind","_renderType","_handler","_globalCursor","_preventDefault","_timers","_resizeListeners","defaults","unpack","$72491954418c2c33bca3f1405c55e57b$var$initializeEventConfig","_bind","bindings","_resize","resetSize","_resizeWidth","_resizeHeight","resizePadding","$72491954418c2c33bca3f1405c55e57b$var$initializeResize","_background","$72491954418c2c33bca3f1405c55e57b$var$background","user","$72491954418c2c33bca3f1405c55e57b$var$cursor","hover","$72491954418c2c33bca3f1405c55e57b$export$View","_desc","_resetRenderer","rerun","addResizeListener","removeResizeListener","addSignalListener","removeSignalListener","addDataListener","removeDataListener","timer","total","_restart","elapsed","timestamp","prevent","allow","$72491954418c2c33bca3f1405c55e57b$var$prevent","finalize","timers","hoverSet","leaveSet","elBind","$72491954418c2c33bca3f1405c55e57b$var$initializeAria","Handler","Renderer","prevHandler","$72491954418c2c33bca3f1405c55e57b$var$initializeHandler","binding","$72491954418c2c33bca3f1405c55e57b$var$bind","toImageURL","mime","blob","Blob","URL","createObjectURL","$72491954418c2c33bca3f1405c55e57b$var$toBlobURL","toCanvas","toSVG","$d12797768cf82f675d1c7d775d293877$var$LBRACK","$d12797768cf82f675d1c7d775d293877$var$RBRACK","$d12797768cf82f675d1c7d775d293877$var$ILLEGAL","$d12797768cf82f675d1c7d775d293877$var$DEFAULT_MARKS","*","$d12797768cf82f675d1c7d775d293877$var$DEFAULT_SOURCE","$d12797768cf82f675d1c7d775d293877$var$MARKS","$d12797768cf82f675d1c7d775d293877$var$find","endChar","pushChar","popChar","$d12797768cf82f675d1c7d775d293877$var$parseMerge","$d12797768cf82f675d1c7d775d293877$var$parseSelector","$d12797768cf82f675d1c7d775d293877$var$parseBetween","$d12797768cf82f675d1c7d775d293877$var$RBRACE","$d12797768cf82f675d1c7d775d293877$var$parseThrottle","$d12797768cf82f675d1c7d775d293877$var$parseStream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$encoder","$b666d13ad4cf6dfebf76dd2e79ddea42$var$addEncode","isEncoder","$b666d13ad4cf6dfebf76dd2e79ddea42$var$addEncoders","$b666d13ad4cf6dfebf76dd2e79ddea42$var$extendEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$has","$b666d13ad4cf6dfebf76dd2e79ddea42$export$MarkRole","$b666d13ad4cf6dfebf76dd2e79ddea42$export$FrameRole","$b666d13ad4cf6dfebf76dd2e79ddea42$export$ScopeRole","$b666d13ad4cf6dfebf76dd2e79ddea42$export$LegendLabelRole","$b666d13ad4cf6dfebf76dd2e79ddea42$var$TitleTextRole","$b666d13ad4cf6dfebf76dd2e79ddea42$var$TitleSubtitleRole","$b666d13ad4cf6dfebf76dd2e79ddea42$var$applyDefault","$b666d13ad4cf6dfebf76dd2e79ddea42$var$scaleRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$field","$b666d13ad4cf6dfebf76dd2e79ddea42$var$entry","$b666d13ad4cf6dfebf76dd2e79ddea42$var$gradient","$b666d13ad4cf6dfebf76dd2e79ddea42$var$_color","$b666d13ad4cf6dfebf76dd2e79ddea42$var$color","$b666d13ad4cf6dfebf76dd2e79ddea42$var$property","$b666d13ad4cf6dfebf76dd2e79ddea42$var$scale","$b666d13ad4cf6dfebf76dd2e79ddea42$var$resolveField","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$applyDefaults","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseBlock","block","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parse","$b666d13ad4cf6dfebf76dd2e79ddea42$var$rule","$b666d13ad4cf6dfebf76dd2e79ddea42$var$OUTER_INVALID","$b666d13ad4cf6dfebf76dd2e79ddea42$var$outerError","$b666d13ad4cf6dfebf76dd2e79ddea42$export$signal","addSignal","addBinding","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Entry","$b666d13ad4cf6dfebf76dd2e79ddea42$var$entry$1","$b666d13ad4cf6dfebf76dd2e79ddea42$var$operator","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ref","$b666d13ad4cf6dfebf76dd2e79ddea42$var$fieldRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$keyFieldRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$compareRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$aggrField","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Scope","$b666d13ad4cf6dfebf76dd2e79ddea42$var$View","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isSignal","$b666d13ad4cf6dfebf76dd2e79ddea42$var$hasSignal","$b666d13ad4cf6dfebf76dd2e79ddea42$var$value","specValue","$b666d13ad4cf6dfebf76dd2e79ddea42$var$deref","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Timer","$b666d13ad4cf6dfebf76dd2e79ddea42$export$stream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$mergeStream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$nestedStream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$eventStream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$streamParameters","addStream","markrole","$b666d13ad4cf6dfebf76dd2e79ddea42$var$filterMark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$OP_VALUE_EXPR","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseUpdate","selector","isSubscope","$b666d13ad4cf6dfebf76dd2e79ddea42$var$mergeSources","addUpdate","$b666d13ad4cf6dfebf76dd2e79ddea42$var$streamSource","$b666d13ad4cf6dfebf76dd2e79ddea42$var$transform","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Aggregate","$b666d13ad4cf6dfebf76dd2e79ddea42$var$AxisTicks","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Bound","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Collect","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Compare","$b666d13ad4cf6dfebf76dd2e79ddea42$var$DataJoin","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Encode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Expression","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Facet","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Field","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Key","$b666d13ad4cf6dfebf76dd2e79ddea42$var$LegendEntries","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Load","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Mark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$MultiExtent","$b666d13ad4cf6dfebf76dd2e79ddea42$var$MultiValues","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Overlap","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Params","$b666d13ad4cf6dfebf76dd2e79ddea42$var$PreFacet","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Projection","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Proxy","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Relay","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Render","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Scale","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Sieve","$b666d13ad4cf6dfebf76dd2e79ddea42$var$SortItems","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ViewLayout","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Values","$b666d13ad4cf6dfebf76dd2e79ddea42$var$FIELD_REF_ID","$b666d13ad4cf6dfebf76dd2e79ddea42$var$MULTIDOMAIN_SORT_OPS","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScale","getScale","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScaleDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScaleRange","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseLiteral","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScaleInterpolate","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseArray","objectProperty","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScaleBins","$b666d13ad4cf6dfebf76dd2e79ddea42$var$dataLookupError","$b666d13ad4cf6dfebf76dd2e79ddea42$var$explicitDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$multipleDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$singularDomain","valuesRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseSort","domainRef","extentRef","coll","addDataPipeline","$b666d13ad4cf6dfebf76dd2e79ddea42$var$fieldRef$1","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ordinalMultipleDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$quantileMultipleDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$numericMultipleDomain","countsRef","fieldRef","sortRef","multidomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseParameter","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Top","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Left","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Right","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Bottom","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Center","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Index","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Label","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Perc","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Value","$b666d13ad4cf6dfebf76dd2e79ddea42$var$GuideLabelStyle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$GuideTitleStyle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$GroupTitleStyle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$GroupSubtitleStyle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Symbols","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Gradient","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Discrete","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Size","$b666d13ad4cf6dfebf76dd2e79ddea42$var$LegendScales","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Skip","$b666d13ad4cf6dfebf76dd2e79ddea42$var$zero","$b666d13ad4cf6dfebf76dd2e79ddea42$var$one","$b666d13ad4cf6dfebf76dd2e79ddea42$var$GroupMark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$RectMark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$RuleMark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$TextMark","$b666d13ad4cf6dfebf76dd2e79ddea42$var$guideGroup","$b666d13ad4cf6dfebf76dd2e79ddea42$var$lookup","isVertical","symbolDirection","gradientDirection","gradientLength","gradientWidth","gradientThickness","gradientHeight","entryColumns","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getEncoding","$b666d13ad4cf6dfebf76dd2e79ddea42$var$anchorExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$alignExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$extendOffset","$b666d13ad4cf6dfebf76dd2e79ddea42$var$guideMark","extras","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendGradient","userEncode","thickness","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendGradientDiscrete","dataRef","vv","$b666d13ad4cf6dfebf76dd2e79ddea42$var$alignExpr$1","$b666d13ad4cf6dfebf76dd2e79ddea42$var$baselineExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendGradientLabels","overlap","labelLimit","gradientLabelLimit","labelOffset","gradientLabelOffset","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendSymbolGroups","symbolOffset","valueRef","xSignal","yEncode","baseFill","baseStroke","symbolBaseFillColor","symbolBaseStrokeColor","facet","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isL","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isR","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isLR","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isVG","$b666d13ad4cf6dfebf76dd2e79ddea42$var$baseline","$b666d13ad4cf6dfebf76dd2e79ddea42$var$alignFlip","$b666d13ad4cf6dfebf76dd2e79ddea42$var$exprAlign","$b666d13ad4cf6dfebf76dd2e79ddea42$var$exprAnchor","$b666d13ad4cf6dfebf76dd2e79ddea42$var$exprAngle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$exprBaseline","$b666d13ad4cf6dfebf76dd2e79ddea42$var$clip","$b666d13ad4cf6dfebf76dd2e79ddea42$var$param","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getRole","$b666d13ad4cf6dfebf76dd2e79ddea42$var$definition","$b666d13ad4cf6dfebf76dd2e79ddea42$var$interactive","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseTransform","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseParameters","pdef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseParameter$1","lookupRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseIndexParameter","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseSubParameter","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseSubParameters","projectionRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parameterValue","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isExpr$1","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isField","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isCompare","compareRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$outerExpr","exprRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$outerField","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isData","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getDataRef","$b666d13ad4cf6dfebf76dd2e79ddea42$export$DataScope","aggregate","$b666d13ad4cf6dfebf76dd2e79ddea42$var$fieldKey","$b666d13ad4cf6dfebf76dd2e79ddea42$var$addSortField","$b666d13ad4cf6dfebf76dd2e79ddea42$var$cache","ds","optype","$b666d13ad4cf6dfebf76dd2e79ddea42$var$sortKey","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseTrigger","trigger","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseMark","layoutRef","boundRef","keyRef","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseData","joinRef","$context","markpath","markRef","md","encodeRef","pushState","subscope","addData","toRuntime","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseFacet","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseSubflow","popState","tol","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseOverlap","sieve","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseLegend","legendEncode","entryLayout","scaleType","$b666d13ad4cf6dfebf76dd2e79ddea42$var$scaleCount","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendType","entryRef","tickMinStep","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendSymbolLayout","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getChannel","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getStyle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getFontSize","$b666d13ad4cf6dfebf76dd2e79ddea42$var$sizeExpression","entryEncode","_anchor","$b666d13ad4cf6dfebf76dd2e79ddea42$var$legendTitle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$buildLegendEncode","fromEntries","$b666d13ad4cf6dfebf76dd2e79ddea42$var$angleExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseTitle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$buildTitle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$titleEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$buildSubTitle","$b666d13ad4cf6dfebf76dd2e79ddea42$var$groupEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseData$1","upstream","$b666d13ad4cf6dfebf76dd2e79ddea42$var$load","$b666d13ad4cf6dfebf76dd2e79ddea42$var$collect","$b666d13ad4cf6dfebf76dd2e79ddea42$var$analyze","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isX","$b666d13ad4cf6dfebf76dd2e79ddea42$var$getSign","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifLeftTopExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifX","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifXEnc","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifY","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifYEnc","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifTop","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifTopExpr","$orient","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifEnc","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifRightExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isSimple","$b666d13ad4cf6dfebf76dd2e79ddea42$var$toExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$patch","endsWith","$b666d13ad4cf6dfebf76dd2e79ddea42$var$fallback","axisConfig","styleProp","$b666d13ad4cf6dfebf76dd2e79ddea42$var$keys","$b666d13ad4cf6dfebf76dd2e79ddea42$var$position","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisGrid","vscale","gridScale","$b666d13ad4cf6dfebf76dd2e79ddea42$var$offsetValue","tickPos","gridStart","gridEnd","$b666d13ad4cf6dfebf76dd2e79ddea42$var$flushExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisLabels","flushOffset","labelAlign","labelBaseline","flushOn","tickSize","$b666d13ad4cf6dfebf76dd2e79ddea42$var$ifRight","offsetExpr","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisTitle","titlePos","$b666d13ad4cf6dfebf76dd2e79ddea42$var$mult","autoY","autoX","$b666d13ad4cf6dfebf76dd2e79ddea42$var$autoLayout","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseAxis","or","axisBand","xyKeys","axisX","axisY","orientKeys","axisTop","axisBottom","axisLeft","axisRight","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisConfig","axisEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$tickBand","ticksRef","tickCount","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisTicks","pos0","pos1","$b666d13ad4cf6dfebf76dd2e79ddea42$var$axisDomain","$b666d13ad4cf6dfebf76dd2e79ddea42$var$buildAxisEncode","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseScope","preprocessed","projections","addProjection","$b666d13ad4cf6dfebf76dd2e79ddea42$var$parseProjection","addScale","$b666d13ad4cf6dfebf76dd2e79ddea42$var$initScale","$b666d13ad4cf6dfebf76dd2e79ddea42$export$signalUpdates","axes","parseLambdas","$b666d13ad4cf6dfebf76dd2e79ddea42$export$Scope","lambdas","_id","_subid","_nextsub","_parent","_encode","_lookup","_markpath","$b666d13ad4cf6dfebf76dd2e79ddea42$var$Subscope","$b666d13ad4cf6dfebf76dd2e79ddea42$var$propertyLambda","$b666d13ad4cf6dfebf76dd2e79ddea42$var$arrayLambda","$b666d13ad4cf6dfebf76dd2e79ddea42$var$objectLambda","vref","annotate","check","$b666d13ad4cf6dfebf76dd2e79ddea42$var$isExpr","sig","$b666d13ad4cf6dfebf76dd2e79ddea42$var$keyRef","hasOwnSignal","addScaleProj","projectionType","dataScope","$23e99f38dc5714380a1274b512e8573d$export$default","dataSmallSample","TMAXextent","TMAX","TMINextent","TMIN","PRCPextent","PRCP","land","geoNaturalEarth1","mapPathString","geoPath","chartSize","yScale","xScale","pScale","tmaxBins","$e27141a609723822c2cf22e5cc952c40$$interop$default","measurement","longitude","latitude","highlight","TAVG","textAnchor","fontFamily","SNOW","SNWD"],"version":3,"file":"index.7aa783b3.js.map"}